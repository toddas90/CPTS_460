
;; Function get_block (get_block, funcdef_no=0, decl_uid=4481, cgraph_uid=1, symbol_order=4)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 10.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r113,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:10000

   Insn 15(l0): point = 0
   Insn 12(l0): point = 2
   Insn 17(l0): point = 4
   Insn 14(l0): point = 6
   Insn 13(l0): point = 8
   Insn 10(l0): point = 10
   Insn 9(l0): point = 12
   Insn 8(l0): point = 14
   Insn 4(l0): point = 16
   Insn 3(l0): point = 18
   Insn 2(l0): point = 20
 a0(r113): [3..6]
Compressing live ranges: from 23 to 2 - 8%
Ranges after the compression:
 a0(r113): [0..1]
  regions=1, blocks=3, points=2
    allocnos=1 (big 0), copies=0, conflicts=0, ranges=1
Disposition:
    0:r113 l0     3
+++Costs: overall 2000, reg 2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


get_block

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 102 [sfp] 103 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;;  ref usage 	r0={5d,4u} r1={3d,2u} r2={2d,1u} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d,7u} r103={1d,1u} r104={1d} r105={1d} r106={1d} r113={1d,1u} 
;;    total ref usage 132{111d,21u,0e} in 11{10 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 113
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [4 dev+0 S4 A32])
        (reg:SI 0 r0 [ dev ])) "disk.c":45:1 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ dev ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [4 blk+0 S4 A32])
        (reg:SI 1 r1 [ blk ])) "disk.c":45:1 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 1 r1 [ blk ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [1 buf+0 S4 A32])
        (reg:SI 2 r2 [ buf ])) "disk.c":45:1 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 2 r2 [ buf ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:SI 1 r1)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [1 buf+0 S4 A32])) "disk.c":46:4 253 {*arm_movsi_insn}
     (nil))
(insn 9 8 10 2 (set (reg:SI 0 r0)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [4 blk+0 S4 A32])) "disk.c":46:4 253 {*arm_movsi_insn}
     (nil))
(call_insn 10 9 13 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("getblock") [flags 0x41]  <function_decl 0x7f1b8dc71900 getblock>) [0 getblock S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "disk.c":46:4 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 13 10 14 2 (clobber (reg/i:SI 0 r0)) "disk.c":47:1 -1
     (expr_list:REG_UNUSED (reg/i:SI 0 r0)
        (nil)))
(insn 14 13 17 2 (clobber (reg:SI 113 [ <retval> ])) "disk.c":47:1 -1
     (nil))
(insn 17 14 12 2 (const_int 0 [0]) "disk.c":47:1 311 {nop}
     (nil))
(insn 12 17 15 2 (set (reg/i:SI 0 r0)
        (reg:SI 113 [ <retval> ])) "disk.c":47:1 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 113 [ <retval> ])
        (nil)))
(insn 15 12 0 2 (use (reg/i:SI 0 r0)) "disk.c":47:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp] 103 [afp]


;; Function put_block (put_block, funcdef_no=1, decl_uid=4488, cgraph_uid=2, symbol_order=5)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 10.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r113,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:10000

   Insn 15(l0): point = 0
   Insn 12(l0): point = 2
   Insn 17(l0): point = 4
   Insn 14(l0): point = 6
   Insn 13(l0): point = 8
   Insn 10(l0): point = 10
   Insn 9(l0): point = 12
   Insn 8(l0): point = 14
   Insn 4(l0): point = 16
   Insn 3(l0): point = 18
   Insn 2(l0): point = 20
 a0(r113): [3..6]
Compressing live ranges: from 23 to 2 - 8%
Ranges after the compression:
 a0(r113): [0..1]
  regions=1, blocks=3, points=2
    allocnos=1 (big 0), copies=0, conflicts=0, ranges=1
Disposition:
    0:r113 l0     3
+++Costs: overall 2000, reg 2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


put_block

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 102 [sfp] 103 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;;  ref usage 	r0={5d,4u} r1={3d,2u} r2={2d,1u} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d,7u} r103={1d,1u} r104={1d} r105={1d} r106={1d} r113={1d,1u} 
;;    total ref usage 132{111d,21u,0e} in 11{10 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 113
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [4 dev+0 S4 A32])
        (reg:SI 0 r0 [ dev ])) "disk.c":49:1 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ dev ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [4 blk+0 S4 A32])
        (reg:SI 1 r1 [ blk ])) "disk.c":49:1 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 1 r1 [ blk ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [1 buf+0 S4 A32])
        (reg:SI 2 r2 [ buf ])) "disk.c":49:1 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 2 r2 [ buf ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:SI 1 r1)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [1 buf+0 S4 A32])) "disk.c":50:4 253 {*arm_movsi_insn}
     (nil))
(insn 9 8 10 2 (set (reg:SI 0 r0)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [4 blk+0 S4 A32])) "disk.c":50:4 253 {*arm_movsi_insn}
     (nil))
(call_insn 10 9 13 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("putblock") [flags 0x41]  <function_decl 0x7f1b8dc71d00 putblock>) [0 putblock S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "disk.c":50:4 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 13 10 14 2 (clobber (reg/i:SI 0 r0)) "disk.c":51:1 -1
     (expr_list:REG_UNUSED (reg/i:SI 0 r0)
        (nil)))
(insn 14 13 17 2 (clobber (reg:SI 113 [ <retval> ])) "disk.c":51:1 -1
     (nil))
(insn 17 14 12 2 (const_int 0 [0]) "disk.c":51:1 311 {nop}
     (nil))
(insn 12 17 15 2 (set (reg/i:SI 0 r0)
        (reg:SI 113 [ <retval> ])) "disk.c":51:1 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 113 [ <retval> ])
        (nil)))
(insn 15 12 0 2 (use (reg/i:SI 0 r0)) "disk.c":51:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp] 103 [afp]


;; Function getblk (getblk, funcdef_no=2, decl_uid=4494, cgraph_uid=3, symbol_order=6)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r114,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:11000
  a1(r113,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a2(r120,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a3(r121,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a4(r118,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a5(r119,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a6(r116,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a7(r117,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a8(r115,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000

   Insn 26(l0): point = 0
   Insn 25(l0): point = 2
   Insn 21(l0): point = 4
   Insn 18(l0): point = 6
   Insn 17(l0): point = 8
   Insn 16(l0): point = 10
   Insn 15(l0): point = 12
   Insn 14(l0): point = 14
   Insn 13(l0): point = 16
   Insn 12(l0): point = 18
   Insn 11(l0): point = 20
   Insn 10(l0): point = 22
   Insn 9(l0): point = 24
   Insn 8(l0): point = 26
   Insn 7(l0): point = 28
   Insn 3(l0): point = 30
   Insn 2(l0): point = 32
 a0(r114): [3..4]
 a1(r113): [5..6]
 a2(r120): [9..12]
 a3(r121): [9..10]
 a4(r118): [15..18]
 a5(r119): [15..16]
 a6(r116): [21..24]
 a7(r117): [21..22]
 a8(r115): [27..28]
Compressing live ranges: from 35 to 12 - 34%
Ranges after the compression:
 a0(r114): [0..1]
 a1(r113): [2..3]
 a2(r120): [4..5]
 a3(r121): [4..5]
 a4(r118): [6..7]
 a5(r119): [6..7]
 a6(r116): [8..9]
 a7(r117): [8..9]
 a8(r115): [10..11]
  regions=1, blocks=3, points=12
    allocnos=9 (big 0), copies=0, conflicts=0, ranges=9
Disposition:
    1:r113 l0     3    0:r114 l0     3    8:r115 l0     3    6:r116 l0     3
    7:r117 l0     2    4:r118 l0     3    5:r119 l0     2    2:r120 l0     3
    3:r121 l0     2
+++Costs: overall 2000, reg 2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


getblk

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 102 [sfp] 103 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 11 [fp]
;;  ref usage 	r0={2d,3u} r1={1d,1u} r2={1d} r3={1d} r11={1d,2u} r13={1d,2u} r14={1d} r102={1d,11u} r103={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} 
;;    total ref usage 48{19d,29u,0e} in 17{17 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 113 114 115 116 117 118 119 120 121
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [4 dev+0 S4 A32])
        (reg:SI 0 r0 [ dev ])) "disk.c":54:1 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ dev ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [4 blk+0 S4 A32])
        (reg:SI 1 r1 [ blk ])) "disk.c":54:1 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 1 r1 [ blk ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:SI 115)
        (symbol_ref:SI ("writebuf") [flags 0x2]  <var_decl 0x7f1b8dc79090 writebuf>)) "disk.c":56:15 253 {*arm_movsi_insn}
     (nil))
(insn 8 7 9 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [3 bp+0 S4 A32])
        (reg/f:SI 115)) "disk.c":56:15 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 115)
        (nil)))
(insn 9 8 10 2 (set (reg/f:SI 116)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [3 bp+0 S4 A32])) "disk.c":57:11 253 {*arm_movsi_insn}
     (nil))
(insn 10 9 11 2 (set (reg:SI 117)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [4 dev+0 S4 A32])) "disk.c":57:11 253 {*arm_movsi_insn}
     (nil))
(insn 11 10 12 2 (set (mem:SI (plus:SI (reg/f:SI 116)
                (const_int 12 [0xc])) [4 bp_1->dev+0 S4 A32])
        (reg:SI 117)) "disk.c":57:11 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 117)
        (expr_list:REG_DEAD (reg/f:SI 116)
            (nil))))
(insn 12 11 13 2 (set (reg/f:SI 118)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [3 bp+0 S4 A32])) "disk.c":57:26 253 {*arm_movsi_insn}
     (nil))
(insn 13 12 14 2 (set (reg:SI 119)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [4 blk+0 S4 A32])) "disk.c":57:26 253 {*arm_movsi_insn}
     (nil))
(insn 14 13 15 2 (set (mem:SI (plus:SI (reg/f:SI 118)
                (const_int 16 [0x10])) [4 bp_1->blk+0 S4 A32])
        (reg:SI 119)) "disk.c":57:26 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 119)
        (expr_list:REG_DEAD (reg/f:SI 118)
            (nil))))
(insn 15 14 16 2 (set (reg/f:SI 120)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [3 bp+0 S4 A32])) "disk.c":58:13 253 {*arm_movsi_insn}
     (nil))
(insn 16 15 17 2 (set (reg:SI 121)
        (const_int 0 [0])) "disk.c":58:13 253 {*arm_movsi_insn}
     (nil))
(insn 17 16 18 2 (set (mem:SI (plus:SI (reg/f:SI 120)
                (const_int 20 [0x14])) [4 bp_1->dirty+0 S4 A32])
        (reg:SI 121)) "disk.c":58:13 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 121)
        (expr_list:REG_DEAD (reg/f:SI 120)
            (nil))))
(insn 18 17 21 2 (set (reg/f:SI 113 [ _8 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [3 bp+0 S4 A32])) "disk.c":59:10 253 {*arm_movsi_insn}
     (nil))
(insn 21 18 25 2 (set (reg/f:SI 114 [ <retval> ])
        (reg/f:SI 113 [ _8 ])) "disk.c":59:10 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 113 [ _8 ])
        (nil)))
(insn 25 21 26 2 (set (reg/i:SI 0 r0)
        (reg/f:SI 114 [ <retval> ])) "disk.c":60:1 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 114 [ <retval> ])
        (nil)))
(insn 26 25 0 2 (use (reg/i:SI 0 r0)) "disk.c":60:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp] 103 [afp]


;; Function bread (bread, funcdef_no=3, decl_uid=4471, cgraph_uid=4, symbol_order=7)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 19.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r115,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:11000
  a1(r114,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a2(r113,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:20000
  a3(r121,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a4(r119,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a5(r120,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a6(r117,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a7(r118,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a8(r116,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000

   Insn 28(l0): point = 0
   Insn 27(l0): point = 2
   Insn 23(l0): point = 4
   Insn 20(l0): point = 6
   Insn 19(l0): point = 8
   Insn 18(l0): point = 10
   Insn 17(l0): point = 12
   Insn 16(l0): point = 14
   Insn 15(l0): point = 16
   Insn 14(l0): point = 18
   Insn 13(l0): point = 20
   Insn 12(l0): point = 22
   Insn 11(l0): point = 24
   Insn 10(l0): point = 26
   Insn 9(l0): point = 28
   Insn 8(l0): point = 30
   Insn 7(l0): point = 32
   Insn 3(l0): point = 34
   Insn 2(l0): point = 36
 a0(r115): [3..4]
 a1(r114): [5..6]
 a2(r113): [13..14]
 a3(r121): [15..16]
 a4(r119): [19..22]
 a5(r120): [19..20]
 a6(r117): [25..28]
 a7(r118): [25..26]
 a8(r116): [31..32]
Compressing live ranges: from 39 to 14 - 35%
Ranges after the compression:
 a0(r115): [0..1]
 a1(r114): [2..3]
 a2(r113): [4..5]
 a3(r121): [6..7]
 a4(r119): [8..9]
 a5(r120): [8..9]
 a6(r117): [10..11]
 a7(r118): [10..11]
 a8(r116): [12..13]
  regions=1, blocks=3, points=14
    allocnos=9 (big 0), copies=0, conflicts=0, ranges=9
Disposition:
    2:r113 l0     3    1:r114 l0     3    0:r115 l0     3    8:r116 l0     3
    6:r117 l0     3    7:r118 l0     2    4:r119 l0     3    5:r120 l0     2
    3:r121 l0     3
+++Costs: overall 4000, reg 4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


bread

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 102 [sfp] 103 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;;  ref usage 	r0={4d,4u} r1={3d,2u} r2={2d} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d,12u} r103={1d,1u} r104={1d} r105={1d} r106={1d} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} 
;;    total ref usage 151{118d,33u,0e} in 19{18 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 113 114 115 116 117 118 119 120 121
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [4 dev+0 S4 A32])
        (reg:SI 0 r0 [ dev ])) "disk.c":63:1 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ dev ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [4 blk+0 S4 A32])
        (reg:SI 1 r1 [ blk ])) "disk.c":63:1 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 1 r1 [ blk ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:SI 116)
        (symbol_ref:SI ("readbuf") [flags 0x2]  <var_decl 0x7f1b8dc79000 readbuf>)) "disk.c":66:15 253 {*arm_movsi_insn}
     (nil))
(insn 8 7 9 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [3 bp+0 S4 A32])
        (reg/f:SI 116)) "disk.c":66:15 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 116)
        (nil)))
(insn 9 8 10 2 (set (reg/f:SI 117)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [3 bp+0 S4 A32])) "disk.c":67:11 253 {*arm_movsi_insn}
     (nil))
(insn 10 9 11 2 (set (reg:SI 118)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [4 dev+0 S4 A32])) "disk.c":67:11 253 {*arm_movsi_insn}
     (nil))
(insn 11 10 12 2 (set (mem:SI (plus:SI (reg/f:SI 117)
                (const_int 12 [0xc])) [4 bp_2->dev+0 S4 A32])
        (reg:SI 118)) "disk.c":67:11 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 118)
        (expr_list:REG_DEAD (reg/f:SI 117)
            (nil))))
(insn 12 11 13 2 (set (reg/f:SI 119)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [3 bp+0 S4 A32])) "disk.c":67:26 253 {*arm_movsi_insn}
     (nil))
(insn 13 12 14 2 (set (reg:SI 120)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [4 blk+0 S4 A32])) "disk.c":67:26 253 {*arm_movsi_insn}
     (nil))
(insn 14 13 15 2 (set (mem:SI (plus:SI (reg/f:SI 119)
                (const_int 16 [0x10])) [4 bp_2->blk+0 S4 A32])
        (reg:SI 120)) "disk.c":67:26 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 120)
        (expr_list:REG_DEAD (reg/f:SI 119)
            (nil))))
(insn 15 14 16 2 (set (reg:SI 121)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [3 bp+0 S4 A32])) "disk.c":68:19 253 {*arm_movsi_insn}
     (nil))
(insn 16 15 17 2 (set (reg/f:SI 113 [ _1 ])
        (plus:SI (reg:SI 121)
            (const_int 56 [0x38]))) "disk.c":68:19 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 121)
        (nil)))
(insn 17 16 18 2 (set (reg:SI 1 r1)
        (reg/f:SI 113 [ _1 ])) "disk.c":68:3 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 113 [ _1 ])
        (nil)))
(insn 18 17 19 2 (set (reg:SI 0 r0)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [4 blk+0 S4 A32])) "disk.c":68:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 19 18 20 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("getblock") [flags 0x41]  <function_decl 0x7f1b8dc71900 getblock>) [0 getblock S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "disk.c":68:3 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 20 19 23 2 (set (reg/f:SI 114 [ _9 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [3 bp+0 S4 A32])) "disk.c":69:10 253 {*arm_movsi_insn}
     (nil))
(insn 23 20 27 2 (set (reg/f:SI 115 [ <retval> ])
        (reg/f:SI 114 [ _9 ])) "disk.c":69:10 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 114 [ _9 ])
        (nil)))
(insn 27 23 28 2 (set (reg/i:SI 0 r0)
        (reg/f:SI 115 [ <retval> ])) "disk.c":70:1 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 115 [ <retval> ])
        (nil)))
(insn 28 27 0 2 (use (reg/i:SI 0 r0)) "disk.c":70:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp] 103 [afp]


;; Function bwrite (bwrite, funcdef_no=4, decl_uid=4504, cgraph_uid=5, symbol_order=8)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r115,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:10000
  a1(r113,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:20000
  a2(r114,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:20000
  a3(r117,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a4(r116,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000

   Insn 17(l0): point = 0
   Insn 14(l0): point = 2
   Insn 19(l0): point = 4
   Insn 16(l0): point = 6
   Insn 15(l0): point = 8
   Insn 12(l0): point = 10
   Insn 11(l0): point = 12
   Insn 10(l0): point = 14
   Insn 9(l0): point = 16
   Insn 8(l0): point = 18
   Insn 7(l0): point = 20
   Insn 6(l0): point = 22
   Insn 2(l0): point = 24
 a0(r115): [3..6]
 a1(r113): [13..20]
 a2(r114): [15..16]
 a3(r117): [17..18]
 a4(r116): [21..22]
Compressing live ranges: from 27 to 8 - 29%
Ranges after the compression:
 a0(r115): [0..1]
 a1(r113): [2..5]
 a2(r114): [2..3]
 a3(r117): [4..5]
 a4(r116): [6..7]
  regions=1, blocks=3, points=8
    allocnos=5 (big 0), copies=0, conflicts=0, ranges=5
Disposition:
    1:r113 l0     2    2:r114 l0     3    0:r115 l0     3    4:r116 l0     3
    3:r117 l0     3
+++Costs: overall 6000, reg 6000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


bwrite

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 102 [sfp] 103 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;;  ref usage 	r0={5d,4u} r1={3d,1u} r2={2d} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d,5u} r103={1d,1u} r104={1d} r105={1d} r106={1d} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} 
;;    total ref usage 136{115d,21u,0e} in 13{12 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 113 114 115 116 117
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [3 bp+0 S4 A32])
        (reg:SI 0 r0 [ bp ])) "disk.c":73:1 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ bp ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:SI 116)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [3 bp+0 S4 A32])) "disk.c":75:3 253 {*arm_movsi_insn}
     (nil))
(insn 7 6 8 2 (set (reg:SI 113 [ _1 ])
        (mem:SI (plus:SI (reg/f:SI 116)
                (const_int 16 [0x10])) [4 bp_4(D)->blk+0 S4 A32])) "disk.c":75:3 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 116)
        (nil)))
(insn 8 7 9 2 (set (reg:SI 117)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [3 bp+0 S4 A32])) "disk.c":75:23 253 {*arm_movsi_insn}
     (nil))
(insn 9 8 10 2 (set (reg/f:SI 114 [ _2 ])
        (plus:SI (reg:SI 117)
            (const_int 56 [0x38]))) "disk.c":75:23 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 117)
        (nil)))
(insn 10 9 11 2 (set (reg:SI 1 r1)
        (reg/f:SI 114 [ _2 ])) "disk.c":75:3 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 114 [ _2 ])
        (nil)))
(insn 11 10 12 2 (set (reg:SI 0 r0)
        (reg:SI 113 [ _1 ])) "disk.c":75:3 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 113 [ _1 ])
        (nil)))
(call_insn 12 11 15 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("putblock") [flags 0x41]  <function_decl 0x7f1b8dc71d00 putblock>) [0 putblock S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "disk.c":75:3 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 15 12 16 2 (clobber (reg/i:SI 0 r0)) "disk.c":76:1 -1
     (expr_list:REG_UNUSED (reg/i:SI 0 r0)
        (nil)))
(insn 16 15 19 2 (clobber (reg:SI 115 [ <retval> ])) "disk.c":76:1 -1
     (nil))
(insn 19 16 14 2 (const_int 0 [0]) "disk.c":76:1 311 {nop}
     (nil))
(insn 14 19 17 2 (set (reg/i:SI 0 r0)
        (reg:SI 115 [ <retval> ])) "disk.c":76:1 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 115 [ <retval> ])
        (nil)))
(insn 17 14 0 2 (use (reg/i:SI 0 r0)) "disk.c":76:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp] 103 [afp]


;; Function bread1 (bread1, funcdef_no=5, decl_uid=4509, cgraph_uid=6, symbol_order=9)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 19.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r115,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:11000
  a1(r114,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a2(r113,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:20000
  a3(r121,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a4(r119,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a5(r120,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a6(r117,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a7(r118,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a8(r116,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000

   Insn 28(l0): point = 0
   Insn 27(l0): point = 2
   Insn 23(l0): point = 4
   Insn 20(l0): point = 6
   Insn 19(l0): point = 8
   Insn 18(l0): point = 10
   Insn 17(l0): point = 12
   Insn 16(l0): point = 14
   Insn 15(l0): point = 16
   Insn 14(l0): point = 18
   Insn 13(l0): point = 20
   Insn 12(l0): point = 22
   Insn 11(l0): point = 24
   Insn 10(l0): point = 26
   Insn 9(l0): point = 28
   Insn 8(l0): point = 30
   Insn 7(l0): point = 32
   Insn 3(l0): point = 34
   Insn 2(l0): point = 36
 a0(r115): [3..4]
 a1(r114): [5..6]
 a2(r113): [13..14]
 a3(r121): [15..16]
 a4(r119): [19..22]
 a5(r120): [19..20]
 a6(r117): [25..28]
 a7(r118): [25..26]
 a8(r116): [31..32]
Compressing live ranges: from 39 to 14 - 35%
Ranges after the compression:
 a0(r115): [0..1]
 a1(r114): [2..3]
 a2(r113): [4..5]
 a3(r121): [6..7]
 a4(r119): [8..9]
 a5(r120): [8..9]
 a6(r117): [10..11]
 a7(r118): [10..11]
 a8(r116): [12..13]
  regions=1, blocks=3, points=14
    allocnos=9 (big 0), copies=0, conflicts=0, ranges=9
Disposition:
    2:r113 l0     3    1:r114 l0     3    0:r115 l0     3    8:r116 l0     3
    6:r117 l0     3    7:r118 l0     2    4:r119 l0     3    5:r120 l0     2
    3:r121 l0     3
+++Costs: overall 4000, reg 4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


bread1

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 102 [sfp] 103 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;;  ref usage 	r0={4d,4u} r1={3d,2u} r2={2d} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d,12u} r103={1d,1u} r104={1d} r105={1d} r106={1d} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} 
;;    total ref usage 151{118d,33u,0e} in 19{18 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 113 114 115 116 117 118 119 120 121
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [4 dev+0 S4 A32])
        (reg:SI 0 r0 [ dev ])) "disk.c":78:1 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ dev ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [4 blk+0 S4 A32])
        (reg:SI 1 r1 [ blk ])) "disk.c":78:1 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 1 r1 [ blk ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:SI 116)
        (symbol_ref:SI ("rbuf1") [flags 0x2]  <var_decl 0x7f1b8dc79120 rbuf1>)) "disk.c":81:15 253 {*arm_movsi_insn}
     (nil))
(insn 8 7 9 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [3 bp+0 S4 A32])
        (reg/f:SI 116)) "disk.c":81:15 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 116)
        (nil)))
(insn 9 8 10 2 (set (reg/f:SI 117)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [3 bp+0 S4 A32])) "disk.c":82:11 253 {*arm_movsi_insn}
     (nil))
(insn 10 9 11 2 (set (reg:SI 118)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [4 dev+0 S4 A32])) "disk.c":82:11 253 {*arm_movsi_insn}
     (nil))
(insn 11 10 12 2 (set (mem:SI (plus:SI (reg/f:SI 117)
                (const_int 12 [0xc])) [4 bp_2->dev+0 S4 A32])
        (reg:SI 118)) "disk.c":82:11 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 118)
        (expr_list:REG_DEAD (reg/f:SI 117)
            (nil))))
(insn 12 11 13 2 (set (reg/f:SI 119)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [3 bp+0 S4 A32])) "disk.c":82:26 253 {*arm_movsi_insn}
     (nil))
(insn 13 12 14 2 (set (reg:SI 120)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [4 blk+0 S4 A32])) "disk.c":82:26 253 {*arm_movsi_insn}
     (nil))
(insn 14 13 15 2 (set (mem:SI (plus:SI (reg/f:SI 119)
                (const_int 16 [0x10])) [4 bp_2->blk+0 S4 A32])
        (reg:SI 120)) "disk.c":82:26 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 120)
        (expr_list:REG_DEAD (reg/f:SI 119)
            (nil))))
(insn 15 14 16 2 (set (reg:SI 121)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [3 bp+0 S4 A32])) "disk.c":83:19 253 {*arm_movsi_insn}
     (nil))
(insn 16 15 17 2 (set (reg/f:SI 113 [ _1 ])
        (plus:SI (reg:SI 121)
            (const_int 56 [0x38]))) "disk.c":83:19 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 121)
        (nil)))
(insn 17 16 18 2 (set (reg:SI 1 r1)
        (reg/f:SI 113 [ _1 ])) "disk.c":83:3 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 113 [ _1 ])
        (nil)))
(insn 18 17 19 2 (set (reg:SI 0 r0)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [4 blk+0 S4 A32])) "disk.c":83:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 19 18 20 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("getblock") [flags 0x41]  <function_decl 0x7f1b8dc71900 getblock>) [0 getblock S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "disk.c":83:3 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 20 19 23 2 (set (reg/f:SI 114 [ _9 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [3 bp+0 S4 A32])) "disk.c":84:10 253 {*arm_movsi_insn}
     (nil))
(insn 23 20 27 2 (set (reg/f:SI 115 [ <retval> ])
        (reg/f:SI 114 [ _9 ])) "disk.c":84:10 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 114 [ _9 ])
        (nil)))
(insn 27 23 28 2 (set (reg/i:SI 0 r0)
        (reg/f:SI 115 [ <retval> ])) "disk.c":85:1 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 115 [ <retval> ])
        (nil)))
(insn 28 27 0 2 (use (reg/i:SI 0 r0)) "disk.c":85:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp] 103 [afp]


;; Function bwrite1 (bwrite1, funcdef_no=6, decl_uid=4514, cgraph_uid=7, symbol_order=10)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r115,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:10000
  a1(r113,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:20000
  a2(r114,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:20000
  a3(r117,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a4(r116,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000

   Insn 17(l0): point = 0
   Insn 14(l0): point = 2
   Insn 19(l0): point = 4
   Insn 16(l0): point = 6
   Insn 15(l0): point = 8
   Insn 12(l0): point = 10
   Insn 11(l0): point = 12
   Insn 10(l0): point = 14
   Insn 9(l0): point = 16
   Insn 8(l0): point = 18
   Insn 7(l0): point = 20
   Insn 6(l0): point = 22
   Insn 2(l0): point = 24
 a0(r115): [3..6]
 a1(r113): [13..20]
 a2(r114): [15..16]
 a3(r117): [17..18]
 a4(r116): [21..22]
Compressing live ranges: from 27 to 8 - 29%
Ranges after the compression:
 a0(r115): [0..1]
 a1(r113): [2..5]
 a2(r114): [2..3]
 a3(r117): [4..5]
 a4(r116): [6..7]
  regions=1, blocks=3, points=8
    allocnos=5 (big 0), copies=0, conflicts=0, ranges=5
Disposition:
    1:r113 l0     2    2:r114 l0     3    0:r115 l0     3    4:r116 l0     3
    3:r117 l0     3
+++Costs: overall 6000, reg 6000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


bwrite1

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 102 [sfp] 103 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;;  ref usage 	r0={5d,4u} r1={3d,1u} r2={2d} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d,5u} r103={1d,1u} r104={1d} r105={1d} r106={1d} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} 
;;    total ref usage 136{115d,21u,0e} in 13{12 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 113 114 115 116 117
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [3 bp+0 S4 A32])
        (reg:SI 0 r0 [ bp ])) "disk.c":88:1 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ bp ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:SI 116)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [3 bp+0 S4 A32])) "disk.c":90:3 253 {*arm_movsi_insn}
     (nil))
(insn 7 6 8 2 (set (reg:SI 113 [ _1 ])
        (mem:SI (plus:SI (reg/f:SI 116)
                (const_int 16 [0x10])) [4 bp_4(D)->blk+0 S4 A32])) "disk.c":90:3 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 116)
        (nil)))
(insn 8 7 9 2 (set (reg:SI 117)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [3 bp+0 S4 A32])) "disk.c":90:23 253 {*arm_movsi_insn}
     (nil))
(insn 9 8 10 2 (set (reg/f:SI 114 [ _2 ])
        (plus:SI (reg:SI 117)
            (const_int 56 [0x38]))) "disk.c":90:23 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 117)
        (nil)))
(insn 10 9 11 2 (set (reg:SI 1 r1)
        (reg/f:SI 114 [ _2 ])) "disk.c":90:3 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 114 [ _2 ])
        (nil)))
(insn 11 10 12 2 (set (reg:SI 0 r0)
        (reg:SI 113 [ _1 ])) "disk.c":90:3 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 113 [ _1 ])
        (nil)))
(call_insn 12 11 15 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("putblock") [flags 0x41]  <function_decl 0x7f1b8dc71d00 putblock>) [0 putblock S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "disk.c":90:3 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 15 12 16 2 (clobber (reg/i:SI 0 r0)) "disk.c":91:1 -1
     (expr_list:REG_UNUSED (reg/i:SI 0 r0)
        (nil)))
(insn 16 15 19 2 (clobber (reg:SI 115 [ <retval> ])) "disk.c":91:1 -1
     (nil))
(insn 19 16 14 2 (const_int 0 [0]) "disk.c":91:1 311 {nop}
     (nil))
(insn 14 19 17 2 (set (reg/i:SI 0 r0)
        (reg:SI 115 [ <retval> ])) "disk.c":91:1 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 115 [ <retval> ])
        (nil)))
(insn 17 14 0 2 (use (reg/i:SI 0 r0)) "disk.c":91:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp] 103 [afp]


;; Function awrite (awrite, funcdef_no=7, decl_uid=4518, cgraph_uid=8, symbol_order=11)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 7.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r113,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:10000

   Insn 12(l0): point = 0
   Insn 9(l0): point = 2
   Insn 14(l0): point = 4
   Insn 11(l0): point = 6
   Insn 10(l0): point = 8
   Insn 7(l0): point = 10
   Insn 6(l0): point = 12
   Insn 2(l0): point = 14
 a0(r113): [3..6]
Compressing live ranges: from 17 to 2 - 11%
Ranges after the compression:
 a0(r113): [0..1]
  regions=1, blocks=3, points=2
    allocnos=1 (big 0), copies=0, conflicts=0, ranges=1
Disposition:
    0:r113 l0     3
+++Costs: overall 2000, reg 2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


awrite

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 102 [sfp] 103 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;;  ref usage 	r0={5d,4u} r1={2d} r2={2d} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d,4u} r103={1d,1u} r104={1d} r105={1d} r106={1d} r113={1d,1u} 
;;    total ref usage 125{110d,15u,0e} in 8{7 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 113
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [3 bp+0 S4 A32])
        (reg:SI 0 r0 [ bp ])) "disk.c":94:1 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ bp ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [3 bp+0 S4 A32])) "disk.c":96:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 7 6 10 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("bwrite") [flags 0x3]  <function_decl 0x7f1b8dc7d400 bwrite>) [0 bwrite S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "disk.c":96:3 291 {*call_value_symbol}
     (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 10 7 11 2 (clobber (reg/i:SI 0 r0)) "disk.c":97:1 -1
     (expr_list:REG_UNUSED (reg/i:SI 0 r0)
        (nil)))
(insn 11 10 14 2 (clobber (reg:SI 113 [ <retval> ])) "disk.c":97:1 -1
     (nil))
(insn 14 11 9 2 (const_int 0 [0]) "disk.c":97:1 311 {nop}
     (nil))
(insn 9 14 12 2 (set (reg/i:SI 0 r0)
        (reg:SI 113 [ <retval> ])) "disk.c":97:1 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 113 [ <retval> ])
        (nil)))
(insn 12 9 0 2 (use (reg/i:SI 0 r0)) "disk.c":97:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp] 103 [afp]


;; Function brelse (brelse, funcdef_no=8, decl_uid=4521, cgraph_uid=9, symbol_order=12)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 5 n_edges 5 count 5 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r114,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:10000
  a1(r113,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a2(r115,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000

   Insn 19(l0): point = 0
   Insn 16(l0): point = 2
   Insn 21(l0): point = 4
   Insn 18(l0): point = 6
   Insn 17(l0): point = 8
   Insn 12(l0): point = 11
   Insn 11(l0): point = 13
   Insn 9(l0): point = 16
   Insn 8(l0): point = 18
   Insn 7(l0): point = 20
   Insn 6(l0): point = 22
   Insn 2(l0): point = 24
 a0(r114): [3..6]
 a1(r113): [19..20]
 a2(r115): [21..22]
Compressing live ranges: from 27 to 6 - 22%
Ranges after the compression:
 a0(r114): [0..1]
 a1(r113): [2..3]
 a2(r115): [4..5]
  regions=1, blocks=5, points=6
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    1:r113 l0     3    0:r114 l0     3    2:r115 l0     3
+++Costs: overall 2000, reg 2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


brelse

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 102 [sfp] 103 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={5d,4u} r1={2d} r2={2d} r3={2d} r11={1d,4u} r12={2d} r13={1d,5u} r14={2d} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={2d,1u} r101={1d} r102={1d,7u} r103={1d,3u} r104={1d} r105={1d} r106={1d} r113={1d,1u} r114={1d,1u} r115={1d,1u} 
;;    total ref usage 140{113d,27u,0e} in 12{11 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 113 115
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [3 bp+0 S4 A32])
        (reg:SI 0 r0 [ bp ])) "disk.c":100:1 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ bp ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:SI 115)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [3 bp+0 S4 A32])) "disk.c":102:9 253 {*arm_movsi_insn}
     (nil))
(insn 7 6 8 2 (set (reg:SI 113 [ _1 ])
        (mem:SI (plus:SI (reg/f:SI 115)
                (const_int 20 [0x14])) [4 bp_4(D)->dirty+0 S4 A32])) "disk.c":102:9 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 115)
        (nil)))
(insn 8 7 9 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 113 [ _1 ])
            (const_int 0 [0]))) "disk.c":102:6 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 113 [ _1 ])
        (nil)))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 13)
            (pc))) "disk.c":102:6 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (nil))
 -> 13)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [3 bp+0 S4 A32])) "disk.c":103:7 253 {*arm_movsi_insn}
     (nil))
(call_insn 12 11 13 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("bwrite") [flags 0x3]  <function_decl 0x7f1b8dc7d400 bwrite>) [0 bwrite S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "disk.c":103:7 291 {*call_value_symbol}
     (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 1, flags: (RTL)
;;  pred:       2
;;              3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 114
(code_label 13 12 14 4 19 (nil) [1 uses])
(note 14 13 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 14 18 4 (clobber (reg/i:SI 0 r0)) "disk.c":104:1 -1
     (expr_list:REG_UNUSED (reg/i:SI 0 r0)
        (nil)))
(insn 18 17 21 4 (clobber (reg:SI 114 [ <retval> ])) "disk.c":104:1 -1
     (nil))
(insn 21 18 16 4 (const_int 0 [0]) "disk.c":104:1 311 {nop}
     (nil))
(insn 16 21 19 4 (set (reg/i:SI 0 r0)
        (reg:SI 114 [ <retval> ])) "disk.c":104:1 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 114 [ <retval> ])
        (nil)))
(insn 19 16 0 4 (use (reg/i:SI 0 r0)) "disk.c":104:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp] 103 [afp]


;; Function testFS (testFS, funcdef_no=9, decl_uid=4526, cgraph_uid=10, symbol_order=16)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 13 n_edges 15 count 13 (    1)
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12
;;
;; Loop 2
;;  header 9, latch 8
;;  depth 1, outer 0
;;  nodes: 9 8
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3 4
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 8 10 }
;; 10 succs { 12 11 }
;; 11 succs { }
;; 12 succs { 1 }
Removing SCRATCH to p257 in insn #3 (nop 2)
Removing SCRATCH to p258 in insn #3 (nop 3)
rescanning insn with uid = 3.
Removing SCRATCH to p259 in insn #272 (nop 3)
Removing SCRATCH to p260 in insn #272 (nop 4)
rescanning insn with uid = 272.
Building IRA IR
verify found no changes in insn with uid = 7.
verify found no changes in insn with uid = 12.
verify found no changes in insn with uid = 27.
verify found no changes in insn with uid = 29.
verify found no changes in insn with uid = 34.
verify found no changes in insn with uid = 63.
verify found no changes in insn with uid = 65.
verify found no changes in insn with uid = 72.
verify found no changes in insn with uid = 81.
verify found no changes in insn with uid = 88.
verify found no changes in insn with uid = 96.
verify found no changes in insn with uid = 130.
verify found no changes in insn with uid = 135.
verify found no changes in insn with uid = 172.
verify found no changes in insn with uid = 186.
verify found no changes in insn with uid = 205.
verify found no changes in insn with uid = 245.
verify found no changes in insn with uid = 273.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 13 n_edges 15 count 13 (    1)

Pass 0 for finding pseudo/allocno costs

    r260: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r260,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r259: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r259,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r258: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a147 (r258,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r257: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a146 (r257,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r256: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r256,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r255: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r255,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r254: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r254,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r253: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r253,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r252: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r252,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r251: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r251,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r250: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r250,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r249: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r249,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r248: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r248,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r247: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r247,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r246: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r246,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r245: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r245,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r244: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r244,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r243: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r243,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r242: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r242,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r241: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r241,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r240: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r240,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r239: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r239,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r238: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r238,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r237: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r237,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r236: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r236,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r235: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r235,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r234: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r234,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r233: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r233,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r232: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r232,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r231: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r231,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r230: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r230,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r229: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r229,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r228: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r228,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r227: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r227,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r226: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r226,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r225: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r225,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r224: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r224,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r223: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r223,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r222: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r222,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r221: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r221,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r220: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r220,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r219: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r219,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r218: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r218,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r217: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r217,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r216: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r216,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r215: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a72 (r215,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r214: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r214,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r213: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a74 (r213,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r212: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a76 (r212,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r211: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a78 (r211,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r210: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r210,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r209: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a86 (r209,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r208: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a88 (r208,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r207: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a90 (r207,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r206: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a91 (r206,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r205: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a93 (r205,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r204: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a94 (r204,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r203: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a92 (r203,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r202: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a96 (r202,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r201: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a98 (r201,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r200: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a99 (r200,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r199: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a100 (r199,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r198: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a102 (r198,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r197: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a104 (r197,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r196: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a105 (r196,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r195: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a106 (r195,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r194: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a108 (r194,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r193: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a109 (r193,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r192: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a111 (r192,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r191: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a112 (r191,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r190: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a113 (r190,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r189: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a115 (r189,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r188: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a116 (r188,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r187: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a120 (r187,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r186: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a121 (r186,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r185: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a122 (r185,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r184: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a123 (r184,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r183: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a126 (r183,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r182: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a127 (r182,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r181: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a130 (r181,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r180: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a131 (r180,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r179: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a134 (r179,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a135 (r178,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r177: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a136 (r177,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a140 (r176,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r175: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a141 (r175,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a143 (r174,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a144 (r173,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a145 (r172,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r171,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r170,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r169: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r169,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r168,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r167,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r166,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r165,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r164,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r163,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r162,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r160,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r159,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r154,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r153,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a73 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a75 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a77 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a79 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a80 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a85 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a84 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a87 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a83 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a89 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a82 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a95 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a97 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a101 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a103 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a107 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a110 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a114 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a119 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a118 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a117 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a124 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a125 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a128 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a129 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a132 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a133 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a139 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a138 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a137 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a142 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r171,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:10000
  a1(r259,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:10000
  a2(r260,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:10000
  a3(r170,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:62000
  a4(r256,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a5(r255,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a6(r253,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a7(r169,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a8(r254,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a9(r168,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a10(r252,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a11(r250,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a12(r251,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a13(r167,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a14(r249,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a15(r166,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a16(r248,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a17(r160,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:20000
  a18(r162,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:11000
  a19(r164,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:11000
  a20(r165,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a21(r247,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a22(r163,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a23(r246,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a24(r161,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a25(r245,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a26(r244,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a27(r241,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a28(r243,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a29(r242,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:6000
  a30(r159,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a31(r240,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a32(r158,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a33(r239,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a34(r238,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a35(r237,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a36(r157,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a37(r236,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a38(r156,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a39(r235,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a40(r234,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:42000
  a41(r233,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:42000
  a42(r155,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:20000
  a43(r232,l0) costs: LO_REGS:4000 HI_REGS:4000 CALLER_SAVE_REGS:4000 EVEN_REG:4000 GENERAL_REGS:4000 MEM:42000
  a44(r231,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a45(r230,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a46(r154,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a47(r229,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:42000
  a48(r153,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a49(r152,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:31000
  a50(r228,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a51(r227,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a52(r151,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:30000
  a53(r226,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a54(r150,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:20000
  a55(r225,l0) costs: LO_REGS:4000 HI_REGS:4000 CALLER_SAVE_REGS:4000 EVEN_REG:4000 GENERAL_REGS:4000 MEM:42000
  a56(r149,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a57(r148,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:40000
  a58(r224,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a59(r223,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a60(r222,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a61(r147,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:30000
  a62(r221,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a63(r146,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:62000
  a64(r220,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a65(r219,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a66(r217,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a67(r145,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a68(r218,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a69(r144,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a70(r216,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a71(r214,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a72(r215,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a73(r143,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a74(r213,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a75(r142,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a76(r212,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a77(r141,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a78(r211,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a79(r140,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:20000
  a80(r139,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:20000
  a81(r210,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a82(r133,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:20000
  a83(r135,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:11000
  a84(r137,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:11000
  a85(r138,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a86(r209,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a87(r136,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a88(r208,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a89(r134,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a90(r207,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a91(r206,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a92(r203,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a93(r205,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a94(r204,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:6000
  a95(r132,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a96(r202,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a97(r131,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a98(r201,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a99(r200,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a100(r199,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a101(r130,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a102(r198,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a103(r129,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a104(r197,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a105(r196,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:42000
  a106(r195,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:42000
  a107(r128,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:20000
  a108(r194,l0) costs: LO_REGS:4000 HI_REGS:4000 CALLER_SAVE_REGS:4000 EVEN_REG:4000 GENERAL_REGS:4000 MEM:42000
  a109(r193,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a110(r127,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:20000
  a111(r192,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a112(r191,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a113(r190,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:42000
  a114(r126,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:20000
  a115(r189,l0) costs: LO_REGS:4000 HI_REGS:4000 CALLER_SAVE_REGS:4000 EVEN_REG:4000 GENERAL_REGS:4000 MEM:42000
  a116(r188,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a117(r123,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:20000
  a118(r124,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:20000
  a119(r125,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:20000
  a120(r187,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a121(r186,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a122(r185,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a123(r184,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a124(r122,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a125(r121,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a126(r183,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a127(r182,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a128(r120,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a129(r119,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a130(r181,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a131(r180,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a132(r118,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a133(r117,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a134(r179,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a135(r178,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:42000
  a136(r177,l0) costs: LO_REGS:4000 HI_REGS:4000 CALLER_SAVE_REGS:4000 EVEN_REG:4000 GENERAL_REGS:4000 MEM:42000
  a137(r114,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:11000
  a138(r115,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:20000
  a139(r116,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:20000
  a140(r176,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a141(r175,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a142(r113,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a143(r174,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a144(r173,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:42000
  a145(r172,l0) costs: LO_REGS:4000 HI_REGS:4000 CALLER_SAVE_REGS:4000 EVEN_REG:4000 GENERAL_REGS:4000 MEM:42000
  a146(r257,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:10000
  a147(r258,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:10000

   Insn 279(l0): point = 0
   Insn 276(l0): point = 2
   Insn 273(l0): point = 5
   Insn 272(l0): point = 8
   Insn 283(l0): point = 10
   Insn 278(l0): point = 12
   Insn 277(l0): point = 14
   Insn 260(l0): point = 17
   Insn 259(l0): point = 19
   Insn 258(l0): point = 21
   Insn 257(l0): point = 23
   Insn 256(l0): point = 25
   Insn 255(l0): point = 27
   Insn 254(l0): point = 29
   Insn 253(l0): point = 31
   Insn 252(l0): point = 33
   Insn 251(l0): point = 35
   Insn 250(l0): point = 37
   Insn 249(l0): point = 39
   Insn 248(l0): point = 41
   Insn 247(l0): point = 43
   Insn 246(l0): point = 45
   Insn 245(l0): point = 47
   Insn 244(l0): point = 49
   Insn 243(l0): point = 51
   Insn 242(l0): point = 53
   Insn 241(l0): point = 55
   Insn 240(l0): point = 57
   Insn 239(l0): point = 59
   Insn 238(l0): point = 61
   Insn 237(l0): point = 63
   Insn 236(l0): point = 65
   Insn 235(l0): point = 67
   Insn 234(l0): point = 69
   Insn 233(l0): point = 71
   Insn 232(l0): point = 73
   Insn 231(l0): point = 75
   Insn 230(l0): point = 77
   Insn 229(l0): point = 79
   Insn 228(l0): point = 81
   Insn 227(l0): point = 83
   Insn 226(l0): point = 85
   Insn 225(l0): point = 87
   Insn 224(l0): point = 89
   Insn 223(l0): point = 91
   Insn 222(l0): point = 93
   Insn 221(l0): point = 95
   Insn 220(l0): point = 97
   Insn 219(l0): point = 99
   Insn 218(l0): point = 101
   Insn 217(l0): point = 103
   Insn 216(l0): point = 105
   Insn 215(l0): point = 107
   Insn 269(l0): point = 110
   Insn 268(l0): point = 112
   Insn 267(l0): point = 114
   Insn 265(l0): point = 116
   Insn 264(l0): point = 118
   Insn 263(l0): point = 120
   Insn 286(l0): point = 123
   Insn 211(l0): point = 125
   Insn 210(l0): point = 127
   Insn 209(l0): point = 129
   Insn 208(l0): point = 131
   Insn 207(l0): point = 133
   Insn 206(l0): point = 135
   Insn 205(l0): point = 137
   Insn 204(l0): point = 139
   Insn 203(l0): point = 141
   Insn 202(l0): point = 143
   Insn 201(l0): point = 145
   Insn 200(l0): point = 147
   Insn 199(l0): point = 149
   Insn 198(l0): point = 151
   Insn 197(l0): point = 153
   Insn 196(l0): point = 155
   Insn 195(l0): point = 157
   Insn 194(l0): point = 159
   Insn 193(l0): point = 161
   Insn 192(l0): point = 163
   Insn 191(l0): point = 166
   Insn 190(l0): point = 168
   Insn 189(l0): point = 170
   Insn 188(l0): point = 172
   Insn 187(l0): point = 174
   Insn 186(l0): point = 176
   Insn 185(l0): point = 178
   Insn 184(l0): point = 180
   Insn 183(l0): point = 182
   Insn 182(l0): point = 184
   Insn 181(l0): point = 186
   Insn 180(l0): point = 188
   Insn 179(l0): point = 190
   Insn 178(l0): point = 192
   Insn 177(l0): point = 195
   Insn 176(l0): point = 197
   Insn 175(l0): point = 199
   Insn 174(l0): point = 201
   Insn 173(l0): point = 203
   Insn 172(l0): point = 205
   Insn 171(l0): point = 207
   Insn 170(l0): point = 209
   Insn 138(l0): point = 212
   Insn 137(l0): point = 214
   Insn 136(l0): point = 216
   Insn 135(l0): point = 218
   Insn 134(l0): point = 220
   Insn 133(l0): point = 222
   Insn 132(l0): point = 224
   Insn 131(l0): point = 226
   Insn 130(l0): point = 228
   Insn 129(l0): point = 230
   Insn 128(l0): point = 232
   Insn 127(l0): point = 234
   Insn 126(l0): point = 236
   Insn 125(l0): point = 238
   Insn 124(l0): point = 240
   Insn 123(l0): point = 242
   Insn 122(l0): point = 244
   Insn 121(l0): point = 246
   Insn 120(l0): point = 248
   Insn 119(l0): point = 250
   Insn 118(l0): point = 252
   Insn 117(l0): point = 254
   Insn 116(l0): point = 256
   Insn 115(l0): point = 258
   Insn 114(l0): point = 260
   Insn 113(l0): point = 262
   Insn 112(l0): point = 264
   Insn 111(l0): point = 266
   Insn 110(l0): point = 268
   Insn 109(l0): point = 270
   Insn 108(l0): point = 272
   Insn 107(l0): point = 274
   Insn 106(l0): point = 276
   Insn 105(l0): point = 278
   Insn 104(l0): point = 280
   Insn 103(l0): point = 282
   Insn 102(l0): point = 284
   Insn 101(l0): point = 286
   Insn 100(l0): point = 288
   Insn 168(l0): point = 291
   Insn 167(l0): point = 293
   Insn 166(l0): point = 295
   Insn 164(l0): point = 297
   Insn 163(l0): point = 299
   Insn 162(l0): point = 301
   Insn 159(l0): point = 304
   Insn 158(l0): point = 306
   Insn 157(l0): point = 308
   Insn 156(l0): point = 310
   Insn 155(l0): point = 312
   Insn 154(l0): point = 314
   Insn 153(l0): point = 316
   Insn 152(l0): point = 318
   Insn 151(l0): point = 320
   Insn 150(l0): point = 322
   Insn 149(l0): point = 324
   Insn 148(l0): point = 326
   Insn 147(l0): point = 328
   Insn 146(l0): point = 330
   Insn 145(l0): point = 332
   Insn 142(l0): point = 335
   Insn 141(l0): point = 337
   Insn 140(l0): point = 339
   Insn 284(l0): point = 342
   Insn 96(l0): point = 344
   Insn 95(l0): point = 346
   Insn 94(l0): point = 348
   Insn 93(l0): point = 350
   Insn 92(l0): point = 352
   Insn 91(l0): point = 354
   Insn 90(l0): point = 356
   Insn 89(l0): point = 358
   Insn 88(l0): point = 360
   Insn 87(l0): point = 362
   Insn 86(l0): point = 364
   Insn 85(l0): point = 366
   Insn 84(l0): point = 368
   Insn 83(l0): point = 370
   Insn 82(l0): point = 372
   Insn 81(l0): point = 374
   Insn 80(l0): point = 376
   Insn 79(l0): point = 378
   Insn 78(l0): point = 380
   Insn 77(l0): point = 382
   Insn 76(l0): point = 384
   Insn 75(l0): point = 386
   Insn 74(l0): point = 388
   Insn 73(l0): point = 390
   Insn 72(l0): point = 392
   Insn 71(l0): point = 394
   Insn 70(l0): point = 396
   Insn 69(l0): point = 398
   Insn 68(l0): point = 400
   Insn 67(l0): point = 402
   Insn 66(l0): point = 404
   Insn 65(l0): point = 406
   Insn 64(l0): point = 408
   Insn 63(l0): point = 410
   Insn 62(l0): point = 412
   Insn 61(l0): point = 414
   Insn 60(l0): point = 416
   Insn 59(l0): point = 418
   Insn 58(l0): point = 420
   Insn 57(l0): point = 422
   Insn 56(l0): point = 424
   Insn 55(l0): point = 426
   Insn 54(l0): point = 428
   Insn 53(l0): point = 430
   Insn 52(l0): point = 432
   Insn 51(l0): point = 434
   Insn 50(l0): point = 436
   Insn 49(l0): point = 438
   Insn 48(l0): point = 440
   Insn 47(l0): point = 442
   Insn 46(l0): point = 444
   Insn 45(l0): point = 446
   Insn 44(l0): point = 448
   Insn 43(l0): point = 450
   Insn 42(l0): point = 452
   Insn 41(l0): point = 454
   Insn 40(l0): point = 456
   Insn 39(l0): point = 458
   Insn 38(l0): point = 460
   Insn 37(l0): point = 462
   Insn 36(l0): point = 464
   Insn 35(l0): point = 466
   Insn 34(l0): point = 468
   Insn 33(l0): point = 470
   Insn 32(l0): point = 472
   Insn 31(l0): point = 474
   Insn 30(l0): point = 476
   Insn 29(l0): point = 478
   Insn 28(l0): point = 480
   Insn 27(l0): point = 482
   Insn 26(l0): point = 484
   Insn 25(l0): point = 486
   Insn 24(l0): point = 488
   Insn 23(l0): point = 490
   Insn 22(l0): point = 492
   Insn 21(l0): point = 494
   Insn 20(l0): point = 496
   Insn 19(l0): point = 498
   Insn 18(l0): point = 500
   Insn 17(l0): point = 502
   Insn 16(l0): point = 504
   Insn 15(l0): point = 506
   Insn 14(l0): point = 508
   Insn 13(l0): point = 510
   Insn 12(l0): point = 512
   Insn 11(l0): point = 514
   Insn 10(l0): point = 516
   Insn 9(l0): point = 518
   Insn 8(l0): point = 520
   Insn 7(l0): point = 522
   Insn 6(l0): point = 524
   Insn 3(l0): point = 526
 a0(r171): [8..12] [3..4]
 a1(r259): [8..8]
 a2(r260): [8..8]
 a3(r170): [113..120]
 a4(r256): [113..114]
 a5(r255): [18..19]
 a6(r253): [22..23]
 a7(r169): [24..27]
 a8(r254): [24..25]
 a9(r168): [28..29]
 a10(r252): [30..31]
 a11(r250): [34..37]
 a12(r251): [34..35]
 a13(r167): [38..41]
 a14(r249): [38..39]
 a15(r166): [42..43]
 a16(r248): [44..45]
 a17(r160): [52..75]
 a18(r162): [54..69]
 a19(r164): [56..63]
 a20(r165): [58..59]
 a21(r247): [60..61]
 a22(r163): [64..65]
 a23(r246): [66..67]
 a24(r161): [70..71]
 a25(r245): [72..73]
 a26(r244): [76..77]
 a27(r241): [80..85]
 a28(r243): [80..81]
 a29(r242): [82..83]
 a30(r159): [86..89]
 a31(r240): [86..87]
 a32(r158): [90..91]
 a33(r239): [92..93]
 a34(r238): [96..97]
 a35(r237): [98..99]
 a36(r157): [100..103]
 a37(r236): [100..101]
 a38(r156): [104..105]
 a39(r235): [106..107]
 a40(r234): [126..129]
 a41(r233): [132..135]
 a42(r155): [140..147]
 a43(r232): [142..145]
 a44(r231): [148..149]
 a45(r230): [152..153]
 a46(r154): [154..159]
 a47(r229): [154..157]
 a48(r153): [160..161]
 a49(r152): [162..168]
 a50(r228): [164..166]
 a51(r227): [167..170]
 a52(r151): [169..172]
 a53(r226): [173..174]
 a54(r150): [179..186]
 a55(r225): [181..184]
 a56(r149): [187..188]
 a57(r148): [187..197]
 a58(r224): [189..190]
 a59(r223): [193..195]
 a60(r222): [196..199]
 a61(r147): [198..201]
 a62(r221): [202..203]
 a63(r146): [294..301]
 a64(r220): [294..295]
 a65(r219): [305..306]
 a66(r217): [309..310]
 a67(r145): [311..314]
 a68(r218): [311..312]
 a69(r144): [315..316]
 a70(r216): [317..318]
 a71(r214): [321..324]
 a72(r215): [321..322]
 a73(r143): [325..328]
 a74(r213): [325..326]
 a75(r142): [329..330]
 a76(r212): [331..332]
 a77(r141): [336..337]
 a78(r211): [338..339]
 a79(r140): [215..216]
 a80(r139): [221..224]
 a81(r210): [225..226]
 a82(r133): [233..256]
 a83(r135): [235..250]
 a84(r137): [237..244]
 a85(r138): [239..240]
 a86(r209): [241..242]
 a87(r136): [245..246]
 a88(r208): [247..248]
 a89(r134): [251..252]
 a90(r207): [253..254]
 a91(r206): [257..258]
 a92(r203): [261..266]
 a93(r205): [261..262]
 a94(r204): [263..264]
 a95(r132): [267..270]
 a96(r202): [267..268]
 a97(r131): [271..272]
 a98(r201): [273..274]
 a99(r200): [277..278]
 a100(r199): [279..280]
 a101(r130): [281..284]
 a102(r198): [281..282]
 a103(r129): [285..286]
 a104(r197): [287..288]
 a105(r196): [349..352]
 a106(r195): [355..358]
 a107(r128): [363..370]
 a108(r194): [365..368]
 a109(r193): [371..372]
 a110(r127): [379..380]
 a111(r192): [381..382]
 a112(r191): [385..386]
 a113(r190): [387..390]
 a114(r126): [395..402]
 a115(r189): [397..400]
 a116(r188): [403..404]
 a117(r123): [415..428]
 a118(r124): [417..424]
 a119(r125): [419..420]
 a120(r187): [421..422]
 a121(r186): [425..426]
 a122(r185): [429..430]
 a123(r184): [433..434]
 a124(r122): [433..436]
 a125(r121): [437..438]
 a126(r183): [439..440]
 a127(r182): [443..444]
 a128(r120): [443..446]
 a129(r119): [447..448]
 a130(r181): [449..450]
 a131(r180): [453..454]
 a132(r118): [453..456]
 a133(r117): [457..458]
 a134(r179): [459..460]
 a135(r178): [463..466]
 a136(r177): [473..476]
 a137(r114): [487..500]
 a138(r115): [489..496]
 a139(r116): [491..492]
 a140(r176): [493..494]
 a141(r175): [497..498]
 a142(r113): [501..502]
 a143(r174): [503..504]
 a144(r173): [507..510]
 a145(r172): [517..520]
 a146(r257): [526..526]
 a147(r258): [526..526]
Compressing live ranges: from 529 to 223 - 42%
Ranges after the compression:
 a0(r171): [0..3]
 a1(r259): [2..2]
 a2(r260): [2..2]
 a3(r170): [56..57]
 a4(r256): [56..57]
 a5(r255): [4..5]
 a6(r253): [6..7]
 a7(r169): [8..9]
 a8(r254): [8..9]
 a9(r168): [10..11]
 a10(r252): [12..13]
 a11(r250): [14..15]
 a12(r251): [14..15]
 a13(r167): [16..17]
 a14(r249): [16..17]
 a15(r166): [18..19]
 a16(r248): [20..21]
 a17(r160): [22..33]
 a18(r162): [22..29]
 a19(r164): [22..25]
 a20(r165): [22..23]
 a21(r247): [24..25]
 a22(r163): [26..27]
 a23(r246): [28..29]
 a24(r161): [30..31]
 a25(r245): [32..33]
 a26(r244): [34..35]
 a27(r241): [36..39]
 a28(r243): [36..37]
 a29(r242): [38..39]
 a30(r159): [40..41]
 a31(r240): [40..41]
 a32(r158): [42..43]
 a33(r239): [44..45]
 a34(r238): [46..47]
 a35(r237): [48..49]
 a36(r157): [50..51]
 a37(r236): [50..51]
 a38(r156): [52..53]
 a39(r235): [54..55]
 a40(r234): [58..59]
 a41(r233): [60..61]
 a42(r155): [62..63]
 a43(r232): [62..63]
 a44(r231): [64..65]
 a45(r230): [66..67]
 a46(r154): [68..69]
 a47(r229): [68..69]
 a48(r153): [70..71]
 a49(r152): [72..75]
 a50(r228): [72..73]
 a51(r227): [74..77]
 a52(r151): [76..77]
 a53(r226): [78..79]
 a54(r150): [80..81]
 a55(r225): [80..81]
 a56(r149): [82..83]
 a57(r148): [82..89]
 a58(r224): [84..85]
 a59(r223): [86..87]
 a60(r222): [88..91]
 a61(r147): [90..91]
 a62(r221): [92..93]
 a63(r146): [134..135]
 a64(r220): [134..135]
 a65(r219): [136..137]
 a66(r217): [138..139]
 a67(r145): [140..141]
 a68(r218): [140..141]
 a69(r144): [142..143]
 a70(r216): [144..145]
 a71(r214): [146..147]
 a72(r215): [146..147]
 a73(r143): [148..149]
 a74(r213): [148..149]
 a75(r142): [150..151]
 a76(r212): [152..153]
 a77(r141): [154..155]
 a78(r211): [156..157]
 a79(r140): [94..95]
 a80(r139): [96..97]
 a81(r210): [98..99]
 a82(r133): [100..111]
 a83(r135): [100..107]
 a84(r137): [100..103]
 a85(r138): [100..101]
 a86(r209): [102..103]
 a87(r136): [104..105]
 a88(r208): [106..107]
 a89(r134): [108..109]
 a90(r207): [110..111]
 a91(r206): [112..113]
 a92(r203): [114..117]
 a93(r205): [114..115]
 a94(r204): [116..117]
 a95(r132): [118..119]
 a96(r202): [118..119]
 a97(r131): [120..121]
 a98(r201): [122..123]
 a99(r200): [124..125]
 a100(r199): [126..127]
 a101(r130): [128..129]
 a102(r198): [128..129]
 a103(r129): [130..131]
 a104(r197): [132..133]
 a105(r196): [158..159]
 a106(r195): [160..161]
 a107(r128): [162..163]
 a108(r194): [162..163]
 a109(r193): [164..165]
 a110(r127): [166..167]
 a111(r192): [168..169]
 a112(r191): [170..171]
 a113(r190): [172..173]
 a114(r126): [174..175]
 a115(r189): [174..175]
 a116(r188): [176..177]
 a117(r123): [178..183]
 a118(r124): [178..181]
 a119(r125): [178..179]
 a120(r187): [180..181]
 a121(r186): [182..183]
 a122(r185): [184..185]
 a123(r184): [186..187]
 a124(r122): [186..187]
 a125(r121): [188..189]
 a126(r183): [190..191]
 a127(r182): [192..193]
 a128(r120): [192..193]
 a129(r119): [194..195]
 a130(r181): [196..197]
 a131(r180): [198..199]
 a132(r118): [198..199]
 a133(r117): [200..201]
 a134(r179): [202..203]
 a135(r178): [204..205]
 a136(r177): [206..207]
 a137(r114): [208..213]
 a138(r115): [208..211]
 a139(r116): [208..209]
 a140(r176): [210..211]
 a141(r175): [212..213]
 a142(r113): [214..215]
 a143(r174): [216..217]
 a144(r173): [218..219]
 a145(r172): [220..221]
 a146(r257): [222..222]
 a147(r258): [222..222]
  regions=1, blocks=13, points=223
    allocnos=148 (big 0), copies=0, conflicts=0, ranges=148
Disposition:
  142:r113 l0     3  137:r114 l0     1  138:r115 l0     2  139:r116 l0     3
  133:r117 l0     3  132:r118 l0     2  129:r119 l0     3  128:r120 l0     2
  125:r121 l0     3  124:r122 l0     2  117:r123 l0     1  118:r124 l0     2
  119:r125 l0     3  114:r126 l0     2  110:r127 l0     3  107:r128 l0     2
  103:r129 l0     3  101:r130 l0     2   97:r131 l0     3   95:r132 l0     2
   82:r133 l0     1   89:r134 l0     3   83:r135 l0     2   87:r136 l0     3
   84:r137 l0     0   85:r138 l0     3   80:r139 l0     3   79:r140 l0     3
   77:r141 l0     3   75:r142 l0     3   73:r143 l0     2   69:r144 l0     3
   67:r145 l0     2   63:r146 l0     3   61:r147 l0     3   57:r148 l0     3
   56:r149 l0     2   54:r150 l0     2   52:r151 l0     3   49:r152 l0     3
   48:r153 l0     3   46:r154 l0     2   42:r155 l0     2   38:r156 l0     3
   36:r157 l0     2   32:r158 l0     3   30:r159 l0     2   17:r160 l0     1
   24:r161 l0     3   18:r162 l0     2   22:r163 l0     3   19:r164 l0     0
   20:r165 l0     3   15:r166 l0     3   13:r167 l0     2    9:r168 l0     3
    7:r169 l0     2    3:r170 l0     3    0:r171 l0     3  145:r172 l0     3
  144:r173 l0     3  143:r174 l0     3  141:r175 l0     3  140:r176 l0     3
  136:r177 l0     3  135:r178 l0     3  134:r179 l0     3  131:r180 l0     3
  130:r181 l0     3  127:r182 l0     3  126:r183 l0     3  123:r184 l0     3
  122:r185 l0     3  121:r186 l0     3  120:r187 l0     3  116:r188 l0     3
  115:r189 l0     3  113:r190 l0     3  112:r191 l0     3  111:r192 l0     3
  109:r193 l0     3  108:r194 l0     3  106:r195 l0     3  105:r196 l0     3
  104:r197 l0     3  102:r198 l0     3  100:r199 l0     3   99:r200 l0     3
   98:r201 l0     3   96:r202 l0     3   92:r203 l0     3   94:r204 l0     2
   93:r205 l0     2   91:r206 l0     3   90:r207 l0     3   88:r208 l0     3
   86:r209 l0     3   81:r210 l0     3   78:r211 l0     3   76:r212 l0     3
   74:r213 l0     3   71:r214 l0     3   72:r215 l0     2   70:r216 l0     3
   66:r217 l0     3   68:r218 l0     3   65:r219 l0     3   64:r220 l0     2
   62:r221 l0     3   60:r222 l0     2   59:r223 l0     2   58:r224 l0     2
   55:r225 l0     3   53:r226 l0     3   51:r227 l0     2   50:r228 l0     2
   47:r229 l0     3   45:r230 l0     3   44:r231 l0     3   43:r232 l0     3
   41:r233 l0     3   40:r234 l0     3   39:r235 l0     3   37:r236 l0     3
   35:r237 l0     3   34:r238 l0     3   33:r239 l0     3   31:r240 l0     3
   27:r241 l0     3   29:r242 l0     2   28:r243 l0     2   26:r244 l0     3
   25:r245 l0     3   23:r246 l0     3   21:r247 l0     3   16:r248 l0     3
   14:r249 l0     3   11:r250 l0     3   12:r251 l0     2   10:r252 l0     3
    6:r253 l0     3    8:r254 l0     3    5:r255 l0     3    4:r256 l0     2
  146:r257 l0     3  147:r258 l0     2    1:r259 l0     2    2:r260 l0     1
+++Costs: overall 84000, reg 84000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


testFS

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 102 [sfp] 103 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={38d,20u} r1={32d,13u} r2={23d,4u} r3={23d,4u} r11={1d,12u} r12={36d} r13={1d,34u} r14={19d} r15={18d} r16={18d} r17={18d} r18={18d} r19={18d} r20={18d} r21={18d} r22={18d} r23={18d} r24={18d} r25={18d} r26={18d} r27={18d} r28={18d} r29={18d} r30={18d} r31={18d} r32={18d} r33={18d} r34={18d} r35={18d} r36={18d} r37={18d} r38={18d} r39={18d} r40={18d} r41={18d} r42={18d} r43={18d} r44={18d} r45={18d} r46={18d} r47={18d} r48={18d} r49={18d} r50={18d} r51={18d} r52={18d} r53={18d} r54={18d} r55={18d} r56={18d} r57={18d} r58={18d} r59={18d} r60={18d} r61={18d} r62={18d} r63={18d} r64={18d} r65={18d} r66={18d} r67={18d} r68={18d} r69={18d} r70={18d} r71={18d} r72={18d} r73={18d} r74={18d} r75={18d} r76={18d} r77={18d} r78={18d} r79={18d} r80={18d} r81={18d} r82={18d} r83={18d} r84={18d} r85={18d} r86={18d} r87={18d} r88={18d} r89={18d} r90={18d} r91={18d} r92={18d} r93={18d} r94={18d} r95={18d} r96={18d} r97={18d} r98={18d} r99={18d} r100={24d,5u} r101={18d} r102={1d,89u,16e} r103={1d,11u} r104={18d} r105={18d} r106={18d} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={3d,3u} r147={1d,3u} r148={2d,2u} r149={1d,1u} r150={1d,1u} r151={1d,3u} r152={2d,2u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={3d,3u} r171={1d,1u} r172={2d,2u} r173={2d,2u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={2d,2u} r178={2d,2u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={2d,2u} r190={2d,2u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={2d,2u} r195={2d,2u} r196={2d,2u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u} r225={2d,2u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={2d,2u} r230={1d,1u} r231={1d,1u} r232={2d,2u} r233={2d,2u} r234={2d,2u} r235={1d,1u} r236={1d,1u} r237={1d,1u} r238={1d,1u} r239={1d,1u} r240={1d,1u} r241={1d,1u} r242={1d,1u} r243={1d,1u} r244={1d,1u} r245={1d,1u} r246={1d,1u} r247={1d,1u} r248={1d,1u} r249={1d,1u} r250={1d,1u} r251={1d,1u} r252={1d,1u} r253={1d,1u} r254={1d,1u} r255={1d,1u} r256={1d,1u} r257={1d} r258={1d} r259={1d} r260={1d} 
;;    total ref usage 2345{1969d,360u,16e} in 258{240 regular + 18 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 257 258
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 4 3 2 NOTE_INSN_FUNCTION_BEG)
(insn 3 2 6 2 (parallel [
            (set (mem/v/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                        (const_int -4 [0xfffffffffffffffc])) [8 D.4573+0 S4 A32])
                (unspec:SI [
                        (mem/v/f/c:SI (symbol_ref:SI ("__stack_chk_guard") [flags 0x40]  <var_decl 0x7f1b8dcb7090 __stack_chk_guard>) [8 __stack_chk_guard+0 S4 A32])
                    ] UNSPEC_SP_SET))
            (clobber (reg:SI 257))
            (clobber (reg:SI 258))
        ]) "disk.c":109:1 304 {*stack_protect_combined_set_insn}
     (expr_list:REG_UNUSED (reg:SI 258)
        (expr_list:REG_UNUSED (reg:SI 257)
            (nil))))
(insn 6 3 7 2 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x7f1b8dcb7120 *.LC0>)) "disk.c":119:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 7 6 8 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kprintf") [flags 0x41]  <function_decl 0x7f1b8dc80200 kprintf>) [0 kprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "disk.c":119:3 291 {*call_value_symbol}
     (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 8 7 9 2 (set (reg:SI 172)
        (plus:SI (reg/f:SI 102 sfp)
            (const_int -2048 [0xfffffffffffff800]))) "disk.c":120:3 7 {*arm_addsi3}
     (nil))
(insn 9 8 10 2 (set (reg:SI 172)
        (plus:SI (reg:SI 172)
            (const_int -4 [0xfffffffffffffffc]))) "disk.c":120:3 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 102 sfp)
            (const_int -2052 [0xfffffffffffff7fc]))
        (nil)))
(insn 10 9 11 2 (set (reg:SI 1 r1)
        (reg:SI 172)) "disk.c":120:3 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 172)
        (nil)))
(insn 11 10 12 2 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) "disk.c":120:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 12 11 13 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("getblock") [flags 0x41]  <function_decl 0x7f1b8dc71900 getblock>) [0 getblock S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "disk.c":120:3 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 13 12 14 2 (set (reg:SI 173)
        (plus:SI (reg/f:SI 102 sfp)
            (const_int -2048 [0xfffffffffffff800]))) "disk.c":121:6 7 {*arm_addsi3}
     (nil))
(insn 14 13 15 2 (set (reg:SI 173)
        (plus:SI (reg:SI 173)
            (const_int -4 [0xfffffffffffffffc]))) "disk.c":121:6 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 102 sfp)
            (const_int -2052 [0xfffffffffffff7fc]))
        (nil)))
(insn 15 14 16 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2064 [0xfffffffffffff7f0])) [11 sp+0 S4 A64])
        (reg:SI 173)) "disk.c":121:6 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 173)
        (nil)))
(insn 16 15 17 2 (set (reg/f:SI 174)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2064 [0xfffffffffffff7f0])) [11 sp+0 S4 A64])) "disk.c":122:47 253 {*arm_movsi_insn}
     (nil))
(insn 17 16 18 2 (set (reg:SI 113 [ _1 ])
        (zero_extend:SI (mem:HI (plus:SI (reg/f:SI 174)
                    (const_int 56 [0x38])) [14 sp_70->s_magic+0 S2 A32]))) "disk.c":122:47 172 {*arm_zero_extendhisi2}
     (expr_list:REG_DEAD (reg/f:SI 174)
        (nil)))
(insn 18 17 19 2 (set (reg:SI 114 [ _2 ])
        (reg:SI 113 [ _1 ])) "disk.c":122:3 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 113 [ _1 ])
        (nil)))
(insn 19 18 20 2 (set (reg/f:SI 175)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2064 [0xfffffffffffff7f0])) [11 sp+0 S4 A64])) "disk.c":122:3 253 {*arm_movsi_insn}
     (nil))
(insn 20 19 21 2 (set (reg:SI 115 [ _3 ])
        (mem:SI (plus:SI (reg/f:SI 175)
                (const_int 4 [0x4])) [4 sp_70->s_blocks_count+0 S4 A32])) "disk.c":122:3 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 175)
        (nil)))
(insn 21 20 22 2 (set (reg/f:SI 176)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2064 [0xfffffffffffff7f0])) [11 sp+0 S4 A64])) "disk.c":122:3 253 {*arm_movsi_insn}
     (nil))
(insn 22 21 23 2 (set (reg:SI 116 [ _4 ])
        (mem:SI (reg/f:SI 176) [4 sp_70->s_inodes_count+0 S4 A32])) "disk.c":122:3 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 176)
        (nil)))
(insn 23 22 24 2 (set (reg:SI 3 r3)
        (reg:SI 116 [ _4 ])) "disk.c":122:3 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 116 [ _4 ])
        (nil)))
(insn 24 23 25 2 (set (reg:SI 2 r2)
        (reg:SI 115 [ _3 ])) "disk.c":122:3 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 115 [ _3 ])
        (nil)))
(insn 25 24 26 2 (set (reg:SI 1 r1)
        (reg:SI 114 [ _2 ])) "disk.c":122:3 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 114 [ _2 ])
        (nil)))
(insn 26 25 27 2 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x7f1b8dcb71b0 *.LC1>)) "disk.c":122:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 27 26 28 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kprintf") [flags 0x41]  <function_decl 0x7f1b8dc80200 kprintf>) [0 kprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "disk.c":122:3 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (expr_list:SI (use (reg:SI 3 r3))
                        (nil)))))))
(insn 28 27 29 2 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC2") [flags 0x2]  <var_decl 0x7f1b8dcb7240 *.LC2>)) "disk.c":125:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 29 28 30 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kprintf") [flags 0x41]  <function_decl 0x7f1b8dc80200 kprintf>) [0 kprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "disk.c":125:3 291 {*call_value_symbol}
     (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 30 29 31 2 (set (reg:SI 177)
        (plus:SI (reg/f:SI 102 sfp)
            (const_int -2048 [0xfffffffffffff800]))) "disk.c":126:3 7 {*arm_addsi3}
     (nil))
(insn 31 30 32 2 (set (reg:SI 177)
        (plus:SI (reg:SI 177)
            (const_int -4 [0xfffffffffffffffc]))) "disk.c":126:3 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 102 sfp)
            (const_int -2052 [0xfffffffffffff7fc]))
        (nil)))
(insn 32 31 33 2 (set (reg:SI 1 r1)
        (reg:SI 177)) "disk.c":126:3 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 177)
        (nil)))
(insn 33 32 34 2 (set (reg:SI 0 r0)
        (const_int 2 [0x2])) "disk.c":126:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 34 33 35 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("getblock") [flags 0x41]  <function_decl 0x7f1b8dc71900 getblock>) [0 getblock S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "disk.c":126:3 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 35 34 36 2 (set (reg:SI 178)
        (plus:SI (reg/f:SI 102 sfp)
            (const_int -2048 [0xfffffffffffff800]))) "disk.c":127:6 7 {*arm_addsi3}
     (nil))
(insn 36 35 37 2 (set (reg:SI 178)
        (plus:SI (reg:SI 178)
            (const_int -4 [0xfffffffffffffffc]))) "disk.c":127:6 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 102 sfp)
            (const_int -2052 [0xfffffffffffff7fc]))
        (nil)))
(insn 37 36 38 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2060 [0xfffffffffffff7f4])) [10 gp+0 S4 A32])
        (reg:SI 178)) "disk.c":127:6 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 178)
        (nil)))
(insn 38 37 39 2 (set (reg/f:SI 179)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2060 [0xfffffffffffff7f4])) [10 gp+0 S4 A32])) "disk.c":128:12 253 {*arm_movsi_insn}
     (nil))
(insn 39 38 40 2 (set (reg:SI 117 [ _5 ])
        (mem:SI (reg/f:SI 179) [4 gp_74->bg_block_bitmap+0 S4 A32])) "disk.c":128:12 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 179)
        (nil)))
(insn 40 39 41 2 (set (reg:SI 118 [ _6 ])
        (reg:SI 117 [ _5 ])) "disk.c":128:12 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 117 [ _5 ])
        (nil)))
(insn 41 40 42 2 (set (reg/f:SI 180)
        (symbol_ref:SI ("bmap") [flags 0x2]  <var_decl 0x7f1b8dc79360 bmap>)) "disk.c":128:8 253 {*arm_movsi_insn}
     (nil))
(insn 42 41 43 2 (set (mem/c:SI (reg/f:SI 180) [4 bmap+0 S4 A32])
        (reg:SI 118 [ _6 ])) "disk.c":128:8 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 180)
        (expr_list:REG_DEAD (reg:SI 118 [ _6 ])
            (nil))))
(insn 43 42 44 2 (set (reg/f:SI 181)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2060 [0xfffffffffffff7f4])) [10 gp+0 S4 A32])) "disk.c":129:12 253 {*arm_movsi_insn}
     (nil))
(insn 44 43 45 2 (set (reg:SI 119 [ _7 ])
        (mem:SI (plus:SI (reg/f:SI 181)
                (const_int 4 [0x4])) [4 gp_74->bg_inode_bitmap+0 S4 A32])) "disk.c":129:12 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 181)
        (nil)))
(insn 45 44 46 2 (set (reg:SI 120 [ _8 ])
        (reg:SI 119 [ _7 ])) "disk.c":129:12 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 119 [ _7 ])
        (nil)))
(insn 46 45 47 2 (set (reg/f:SI 182)
        (symbol_ref:SI ("imap") [flags 0x2]  <var_decl 0x7f1b8dc793f0 imap>)) "disk.c":129:8 253 {*arm_movsi_insn}
     (nil))
(insn 47 46 48 2 (set (mem/c:SI (reg/f:SI 182) [4 imap+0 S4 A32])
        (reg:SI 120 [ _8 ])) "disk.c":129:8 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 182)
        (expr_list:REG_DEAD (reg:SI 120 [ _8 ])
            (nil))))
(insn 48 47 49 2 (set (reg/f:SI 183)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2060 [0xfffffffffffff7f4])) [10 gp+0 S4 A32])) "disk.c":130:12 253 {*arm_movsi_insn}
     (nil))
(insn 49 48 50 2 (set (reg:SI 121 [ _9 ])
        (mem:SI (plus:SI (reg/f:SI 183)
                (const_int 8 [0x8])) [4 gp_74->bg_inode_table+0 S4 A32])) "disk.c":130:12 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 183)
        (nil)))
(insn 50 49 51 2 (set (reg:SI 122 [ _10 ])
        (reg:SI 121 [ _9 ])) "disk.c":130:12 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 121 [ _9 ])
        (nil)))
(insn 51 50 52 2 (set (reg/f:SI 184)
        (symbol_ref:SI ("iblk") [flags 0x2]  <var_decl 0x7f1b8dc79480 iblk>)) "disk.c":130:8 253 {*arm_movsi_insn}
     (nil))
(insn 52 51 53 2 (set (mem/c:SI (reg/f:SI 184) [4 iblk+0 S4 A32])
        (reg:SI 122 [ _10 ])) "disk.c":130:8 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 184)
        (expr_list:REG_DEAD (reg:SI 122 [ _10 ])
            (nil))))
(insn 53 52 54 2 (set (reg/f:SI 185)
        (symbol_ref:SI ("bmap") [flags 0x2]  <var_decl 0x7f1b8dc79360 bmap>)) "disk.c":131:3 253 {*arm_movsi_insn}
     (nil))
(insn 54 53 55 2 (set (reg:SI 123 [ bmap.0_11 ])
        (mem/c:SI (reg/f:SI 185) [4 bmap+0 S4 A32])) "disk.c":131:3 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 185)
        (nil)))
(insn 55 54 56 2 (set (reg/f:SI 186)
        (symbol_ref:SI ("imap") [flags 0x2]  <var_decl 0x7f1b8dc793f0 imap>)) "disk.c":131:3 253 {*arm_movsi_insn}
     (nil))
(insn 56 55 57 2 (set (reg:SI 124 [ imap.1_12 ])
        (mem/c:SI (reg/f:SI 186) [4 imap+0 S4 A32])) "disk.c":131:3 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 186)
        (nil)))
(insn 57 56 58 2 (set (reg/f:SI 187)
        (symbol_ref:SI ("iblk") [flags 0x2]  <var_decl 0x7f1b8dc79480 iblk>)) "disk.c":131:3 253 {*arm_movsi_insn}
     (nil))
(insn 58 57 59 2 (set (reg:SI 125 [ iblk.2_13 ])
        (mem/c:SI (reg/f:SI 187) [4 iblk+0 S4 A32])) "disk.c":131:3 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 187)
        (nil)))
(insn 59 58 60 2 (set (reg:SI 3 r3)
        (reg:SI 125 [ iblk.2_13 ])) "disk.c":131:3 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 125 [ iblk.2_13 ])
        (nil)))
(insn 60 59 61 2 (set (reg:SI 2 r2)
        (reg:SI 124 [ imap.1_12 ])) "disk.c":131:3 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 124 [ imap.1_12 ])
        (nil)))
(insn 61 60 62 2 (set (reg:SI 1 r1)
        (reg:SI 123 [ bmap.0_11 ])) "disk.c":131:3 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 123 [ bmap.0_11 ])
        (nil)))
(insn 62 61 63 2 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC3") [flags 0x2]  <var_decl 0x7f1b8dcb72d0 *.LC3>)) "disk.c":131:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 63 62 64 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kprintf") [flags 0x41]  <function_decl 0x7f1b8dc80200 kprintf>) [0 kprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "disk.c":131:3 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (expr_list:SI (use (reg:SI 3 r3))
                        (nil)))))))
(insn 64 63 65 2 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC4") [flags 0x2]  <var_decl 0x7f1b8dcb7360 *.LC4>)) "disk.c":134:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 65 64 66 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kprintf") [flags 0x41]  <function_decl 0x7f1b8dc80200 kprintf>) [0 kprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "disk.c":134:3 291 {*call_value_symbol}
     (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 66 65 67 2 (set (reg/f:SI 188)
        (symbol_ref:SI ("iblk") [flags 0x2]  <var_decl 0x7f1b8dc79480 iblk>)) "disk.c":135:3 253 {*arm_movsi_insn}
     (nil))
(insn 67 66 68 2 (set (reg:SI 126 [ iblk.3_14 ])
        (mem/c:SI (reg/f:SI 188) [4 iblk+0 S4 A32])) "disk.c":135:3 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 188)
        (nil)))
(insn 68 67 69 2 (set (reg:SI 189)
        (plus:SI (reg/f:SI 102 sfp)
            (const_int -2048 [0xfffffffffffff800]))) "disk.c":135:3 7 {*arm_addsi3}
     (nil))
(insn 69 68 70 2 (set (reg:SI 189)
        (plus:SI (reg:SI 189)
            (const_int -4 [0xfffffffffffffffc]))) "disk.c":135:3 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 102 sfp)
            (const_int -2052 [0xfffffffffffff7fc]))
        (nil)))
(insn 70 69 71 2 (set (reg:SI 1 r1)
        (reg:SI 189)) "disk.c":135:3 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 189)
        (nil)))
(insn 71 70 72 2 (set (reg:SI 0 r0)
        (reg:SI 126 [ iblk.3_14 ])) "disk.c":135:3 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 126 [ iblk.3_14 ])
        (nil)))
(call_insn 72 71 73 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("getblock") [flags 0x41]  <function_decl 0x7f1b8dc71900 getblock>) [0 getblock S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "disk.c":135:3 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 73 72 74 2 (set (reg:SI 190)
        (plus:SI (reg/f:SI 102 sfp)
            (const_int -2048 [0xfffffffffffff800]))) "disk.c":136:6 7 {*arm_addsi3}
     (nil))
(insn 74 73 75 2 (set (reg:SI 190)
        (plus:SI (reg:SI 190)
            (const_int -4 [0xfffffffffffffffc]))) "disk.c":136:6 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 102 sfp)
            (const_int -2052 [0xfffffffffffff7fc]))
        (nil)))
(insn 75 74 76 2 (set (reg:SI 191)
        (plus:SI (reg:SI 190)
            (const_int 128 [0x80]))) "disk.c":136:6 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 190)
        (nil)))
(insn 76 75 77 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2056 [0xfffffffffffff7f8])) [9 ip+0 S4 A64])
        (reg:SI 191)) "disk.c":136:6 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 191)
        (nil)))
(insn 77 76 78 2 (set (reg/f:SI 192)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2056 [0xfffffffffffff7f8])) [9 ip+0 S4 A64])) "disk.c":137:3 253 {*arm_movsi_insn}
     (nil))
(insn 78 77 79 2 (set (reg:SI 127 [ _15 ])
        (mem:SI (plus:SI (reg/f:SI 192)
                (const_int 40 [0x28])) [4 ip_81->i_block[0]+0 S4 A32])) "disk.c":137:3 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 192)
        (nil)))
(insn 79 78 80 2 (set (reg:SI 1 r1)
        (reg:SI 127 [ _15 ])) "disk.c":137:3 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 127 [ _15 ])
        (nil)))
(insn 80 79 81 2 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC5") [flags 0x2]  <var_decl 0x7f1b8dcb73f0 *.LC5>)) "disk.c":137:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 81 80 82 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kprintf") [flags 0x41]  <function_decl 0x7f1b8dc80200 kprintf>) [0 kprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "disk.c":137:3 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 82 81 83 2 (set (reg/f:SI 193)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2056 [0xfffffffffffff7f8])) [9 ip+0 S4 A64])) "disk.c":138:3 253 {*arm_movsi_insn}
     (nil))
(insn 83 82 84 2 (set (reg:SI 128 [ _16 ])
        (mem:SI (plus:SI (reg/f:SI 193)
                (const_int 40 [0x28])) [4 ip_81->i_block[0]+0 S4 A32])) "disk.c":138:3 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 193)
        (nil)))
(insn 84 83 85 2 (set (reg:SI 194)
        (plus:SI (reg/f:SI 102 sfp)
            (const_int -1024 [0xfffffffffffffc00]))) "disk.c":138:3 7 {*arm_addsi3}
     (nil))
(insn 85 84 86 2 (set (reg:SI 194)
        (plus:SI (reg:SI 194)
            (const_int -4 [0xfffffffffffffffc]))) "disk.c":138:3 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 102 sfp)
            (const_int -1028 [0xfffffffffffffbfc]))
        (nil)))
(insn 86 85 87 2 (set (reg:SI 1 r1)
        (reg:SI 194)) "disk.c":138:3 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 194)
        (nil)))
(insn 87 86 88 2 (set (reg:SI 0 r0)
        (reg:SI 128 [ _16 ])) "disk.c":138:3 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 128 [ _16 ])
        (nil)))
(call_insn 88 87 89 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("getblock") [flags 0x41]  <function_decl 0x7f1b8dc71900 getblock>) [0 getblock S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "disk.c":138:3 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 89 88 90 2 (set (reg:SI 195)
        (plus:SI (reg/f:SI 102 sfp)
            (const_int -1024 [0xfffffffffffffc00]))) "disk.c":140:6 7 {*arm_addsi3}
     (nil))
(insn 90 89 91 2 (set (reg:SI 195)
        (plus:SI (reg:SI 195)
            (const_int -4 [0xfffffffffffffffc]))) "disk.c":140:6 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 102 sfp)
            (const_int -1028 [0xfffffffffffffbfc]))
        (nil)))
(insn 91 90 92 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2072 [0xfffffffffffff7e8])) [1 cp+0 S4 A64])
        (reg:SI 195)) "disk.c":140:6 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 195)
        (nil)))
(insn 92 91 93 2 (set (reg:SI 196)
        (plus:SI (reg/f:SI 102 sfp)
            (const_int -1024 [0xfffffffffffffc00]))) "disk.c":141:6 7 {*arm_addsi3}
     (nil))
(insn 93 92 94 2 (set (reg:SI 196)
        (plus:SI (reg:SI 196)
            (const_int -4 [0xfffffffffffffffc]))) "disk.c":141:6 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 102 sfp)
            (const_int -1028 [0xfffffffffffffbfc]))
        (nil)))
(insn 94 93 95 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2076 [0xfffffffffffff7e4])) [12 dp+0 S4 A32])
        (reg:SI 196)) "disk.c":141:6 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 196)
        (nil)))
(insn 95 94 96 2 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC6") [flags 0x2]  <var_decl 0x7f1b8dcb7480 *.LC6>)) "disk.c":143:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 96 95 284 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kprintf") [flags 0x41]  <function_decl 0x7f1b8dc80200 kprintf>) [0 kprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "disk.c":143:3 291 {*call_value_symbol}
     (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(jump_insn 284 96 285 2 (set (pc)
        (label_ref 160)) "disk.c":144:8 284 {*arm_jump}
     (nil)
 -> 160)
;;  succ:       6 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

(barrier 285 284 165)
;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       6
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 129 130 131 132 133 134 135 136 137 138 139 140 197 198 199 200 201 202 203 204 205 206 207 208 209 210
(code_label 165 285 99 3 23 (nil) [1 uses])
(note 99 165 100 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 100 99 101 3 (set (reg/f:SI 197)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2076 [0xfffffffffffff7e4])) [12 dp+0 S4 A32])) "disk.c":145:20 253 {*arm_movsi_insn}
     (nil))
(insn 101 100 102 3 (set (reg:SI 129 [ _17 ])
        (zero_extend:SI (mem:QI (plus:SI (reg/f:SI 197)
                    (const_int 6 [0x6])) [0 dp_59->name_len+0 S1 A16]))) "disk.c":145:20 175 {*arm_zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 197)
        (nil)))
(insn 102 101 103 3 (set (reg:SI 130 [ _18 ])
        (reg:SI 129 [ _17 ])) "disk.c":145:20 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 129 [ _17 ])
        (nil)))
(insn 103 102 104 3 (set (reg/f:SI 198)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2076 [0xfffffffffffff7e4])) [12 dp+0 S4 A32])) "disk.c":145:7 253 {*arm_movsi_insn}
     (nil))
(insn 104 103 105 3 (set (reg/f:SI 199)
        (plus:SI (reg/f:SI 198)
            (reg:SI 130 [ _18 ]))) "disk.c":145:7 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg/f:SI 198)
        (expr_list:REG_DEAD (reg:SI 130 [ _18 ])
            (nil))))
(insn 105 104 106 3 (set (reg:QI 200)
        (mem:QI (plus:SI (reg/f:SI 199)
                (const_int 8 [0x8])) [0 dp_59->name[_18]+0 S1 A8])) "disk.c":145:7 263 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg/f:SI 199)
        (nil)))
(insn 106 105 107 3 (set (mem/c:QI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2077 [0xfffffffffffff7e3])) [0 c+0 S1 A8])
        (reg:QI 200)) "disk.c":145:7 263 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:QI 200)
        (nil)))
(insn 107 106 108 3 (set (reg/f:SI 201)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2076 [0xfffffffffffff7e4])) [12 dp+0 S4 A32])) "disk.c":146:16 253 {*arm_movsi_insn}
     (nil))
(insn 108 107 109 3 (set (reg:SI 131 [ _19 ])
        (zero_extend:SI (mem:QI (plus:SI (reg/f:SI 201)
                    (const_int 6 [0x6])) [0 dp_59->name_len+0 S1 A16]))) "disk.c":146:16 175 {*arm_zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 201)
        (nil)))
(insn 109 108 110 3 (set (reg:SI 132 [ _20 ])
        (reg:SI 131 [ _19 ])) "disk.c":146:16 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 131 [ _19 ])
        (nil)))
(insn 110 109 111 3 (set (reg/f:SI 202)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2076 [0xfffffffffffff7e4])) [12 dp+0 S4 A32])) "disk.c":146:28 253 {*arm_movsi_insn}
     (nil))
(insn 111 110 112 3 (set (reg/f:SI 203)
        (plus:SI (reg/f:SI 202)
            (reg:SI 132 [ _20 ]))) "disk.c":146:28 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg/f:SI 202)
        (expr_list:REG_DEAD (reg:SI 132 [ _20 ])
            (nil))))
(insn 112 111 113 3 (set (reg:SI 204)
        (const_int 0 [0])) "disk.c":146:28 253 {*arm_movsi_insn}
     (nil))
(insn 113 112 114 3 (set (reg:QI 205)
        (subreg:QI (reg:SI 204) 0)) "disk.c":146:28 263 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:SI 204)
        (nil)))
(insn 114 113 115 3 (set (mem:QI (plus:SI (reg/f:SI 203)
                (const_int 8 [0x8])) [0 dp_59->name[_20]+0 S1 A8])
        (reg:QI 205)) "disk.c":146:28 263 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:QI 205)
        (expr_list:REG_DEAD (reg/f:SI 203)
            (nil))))
(insn 115 114 116 3 (set (reg/f:SI 206)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2076 [0xfffffffffffff7e4])) [12 dp+0 S4 A32])) "disk.c":147:5 253 {*arm_movsi_insn}
     (nil))
(insn 116 115 117 3 (set (reg:SI 133 [ _21 ])
        (mem:SI (reg/f:SI 206) [4 dp_59->inode+0 S4 A32])) "disk.c":147:5 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 206)
        (nil)))
(insn 117 116 118 3 (set (reg/f:SI 207)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2076 [0xfffffffffffff7e4])) [12 dp+0 S4 A32])) "disk.c":147:42 253 {*arm_movsi_insn}
     (nil))
(insn 118 117 119 3 (set (reg:SI 134 [ _22 ])
        (zero_extend:SI (mem:HI (plus:SI (reg/f:SI 207)
                    (const_int 4 [0x4])) [14 dp_59->rec_len+0 S2 A32]))) "disk.c":147:42 172 {*arm_zero_extendhisi2}
     (expr_list:REG_DEAD (reg/f:SI 207)
        (nil)))
(insn 119 118 120 3 (set (reg:SI 135 [ _23 ])
        (reg:SI 134 [ _22 ])) "disk.c":147:5 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 134 [ _22 ])
        (nil)))
(insn 120 119 121 3 (set (reg/f:SI 208)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2076 [0xfffffffffffff7e4])) [12 dp+0 S4 A32])) "disk.c":147:55 253 {*arm_movsi_insn}
     (nil))
(insn 121 120 122 3 (set (reg:SI 136 [ _24 ])
        (zero_extend:SI (mem:QI (plus:SI (reg/f:SI 208)
                    (const_int 6 [0x6])) [0 dp_59->name_len+0 S1 A16]))) "disk.c":147:55 175 {*arm_zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 208)
        (nil)))
(insn 122 121 123 3 (set (reg:SI 137 [ _25 ])
        (reg:SI 136 [ _24 ])) "disk.c":147:5 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 136 [ _24 ])
        (nil)))
(insn 123 122 124 3 (set (reg:SI 209)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2076 [0xfffffffffffff7e4])) [12 dp+0 S4 A32])) "disk.c":147:69 253 {*arm_movsi_insn}
     (nil))
(insn 124 123 125 3 (set (reg/f:SI 138 [ _26 ])
        (plus:SI (reg:SI 209)
            (const_int 8 [0x8]))) "disk.c":147:69 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 209)
        (nil)))
(insn 125 124 126 3 (set (mem:SI (reg/f:SI 13 sp) [0  S4 A32])
        (reg/f:SI 138 [ _26 ])) "disk.c":147:5 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 138 [ _26 ])
        (nil)))
(insn 126 125 127 3 (set (reg:SI 3 r3)
        (reg:SI 137 [ _25 ])) "disk.c":147:5 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 137 [ _25 ])
        (nil)))
(insn 127 126 128 3 (set (reg:SI 2 r2)
        (reg:SI 135 [ _23 ])) "disk.c":147:5 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 135 [ _23 ])
        (nil)))
(insn 128 127 129 3 (set (reg:SI 1 r1)
        (reg:SI 133 [ _21 ])) "disk.c":147:5 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 133 [ _21 ])
        (nil)))
(insn 129 128 130 3 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC7") [flags 0x2]  <var_decl 0x7f1b8dcb7510 *.LC7>)) "disk.c":147:5 253 {*arm_movsi_insn}
     (nil))
(call_insn 130 129 131 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kprintf") [flags 0x41]  <function_decl 0x7f1b8dc80200 kprintf>) [0 kprintf S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "disk.c":147:5 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (expr_list:SI (use (reg:SI 3 r3))
                        (expr_list:SI (use (mem/f:SI (reg/f:SI 13 sp) [0  S4 A32]))
                            (nil))))))))
(insn 131 130 132 3 (set (reg:SI 210)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2076 [0xfffffffffffff7e4])) [12 dp+0 S4 A32])) "disk.c":148:18 253 {*arm_movsi_insn}
     (nil))
(insn 132 131 133 3 (set (reg/f:SI 139 [ _27 ])
        (plus:SI (reg:SI 210)
            (const_int 8 [0x8]))) "disk.c":148:18 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 210)
        (nil)))
(insn 133 132 134 3 (set (reg:SI 1 r1)
        (symbol_ref/f:SI ("*.LC8") [flags 0x2]  <var_decl 0x7f1b8dcb75a0 *.LC8>)) "disk.c":148:9 253 {*arm_movsi_insn}
     (nil))
(insn 134 133 135 3 (set (reg:SI 0 r0)
        (reg/f:SI 139 [ _27 ])) "disk.c":148:9 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 139 [ _27 ])
        (nil)))
(call_insn/i 135 134 136 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41]  <function_decl 0x7f1b8def1700 strcmp>) [0 __builtin_strcmp S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "disk.c":148:9 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 136 135 137 3 (set (reg:SI 140 [ _28 ])
        (reg:SI 0 r0)) "disk.c":148:9 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(insn 137 136 138 3 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 140 [ _28 ])
            (const_int 0 [0]))) "disk.c":148:8 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 140 [ _28 ])
        (nil)))
(jump_insn 138 137 139 3 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 143)
            (pc))) "disk.c":148:8 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (nil))
 -> 143)
;;  succ:       4 (FALLTHRU)
;;              5
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 141 211
(note 139 138 140 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 140 139 141 4 (set (reg/f:SI 211)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2076 [0xfffffffffffff7e4])) [12 dp+0 S4 A32])) "disk.c":149:16 253 {*arm_movsi_insn}
     (nil))
(insn 141 140 142 4 (set (reg:SI 141 [ _29 ])
        (mem:SI (reg/f:SI 211) [4 dp_59->inode+0 S4 A32])) "disk.c":149:16 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 211)
        (nil)))
(insn 142 141 143 4 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2068 [0xfffffffffffff7ec])) [4 bino+0 S4 A32])
        (reg:SI 141 [ _29 ])) "disk.c":149:12 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 141 [ _29 ])
        (nil)))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       3
;;              4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 142 143 144 145 212 213 214 215 216 217 218 219
(code_label 143 142 144 5 22 (nil) [1 uses])
(note 144 143 145 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 145 144 146 5 (set (reg/f:SI 212)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2076 [0xfffffffffffff7e4])) [12 dp+0 S4 A32])) "disk.c":150:16 253 {*arm_movsi_insn}
     (nil))
(insn 146 145 147 5 (set (reg:SI 142 [ _30 ])
        (zero_extend:SI (mem:QI (plus:SI (reg/f:SI 212)
                    (const_int 6 [0x6])) [0 dp_59->name_len+0 S1 A16]))) "disk.c":150:16 175 {*arm_zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 212)
        (nil)))
(insn 147 146 148 5 (set (reg:SI 143 [ _31 ])
        (reg:SI 142 [ _30 ])) "disk.c":150:16 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 142 [ _30 ])
        (nil)))
(insn 148 147 149 5 (set (reg/f:SI 213)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2076 [0xfffffffffffff7e4])) [12 dp+0 S4 A32])) "disk.c":150:28 253 {*arm_movsi_insn}
     (nil))
(insn 149 148 150 5 (set (reg/f:SI 214)
        (plus:SI (reg/f:SI 213)
            (reg:SI 143 [ _31 ]))) "disk.c":150:28 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg/f:SI 213)
        (expr_list:REG_DEAD (reg:SI 143 [ _31 ])
            (nil))))
(insn 150 149 151 5 (set (reg:QI 215)
        (mem/c:QI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2077 [0xfffffffffffff7e3])) [0 c+0 S1 A8])) "disk.c":150:28 263 {*arm_movqi_insn}
     (nil))
(insn 151 150 152 5 (set (mem:QI (plus:SI (reg/f:SI 214)
                (const_int 8 [0x8])) [0 dp_59->name[_31]+0 S1 A8])
        (reg:QI 215)) "disk.c":150:28 263 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:QI 215)
        (expr_list:REG_DEAD (reg/f:SI 214)
            (nil))))
(insn 152 151 153 5 (set (reg/f:SI 216)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2076 [0xfffffffffffff7e4])) [12 dp+0 S4 A32])) "disk.c":151:13 253 {*arm_movsi_insn}
     (nil))
(insn 153 152 154 5 (set (reg:SI 144 [ _32 ])
        (zero_extend:SI (mem:HI (plus:SI (reg/f:SI 216)
                    (const_int 4 [0x4])) [14 dp_59->rec_len+0 S2 A32]))) "disk.c":151:13 172 {*arm_zero_extendhisi2}
     (expr_list:REG_DEAD (reg/f:SI 216)
        (nil)))
(insn 154 153 155 5 (set (reg:SI 145 [ _33 ])
        (reg:SI 144 [ _32 ])) "disk.c":151:13 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 144 [ _32 ])
        (nil)))
(insn 155 154 156 5 (set (reg:SI 218)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2072 [0xfffffffffffff7e8])) [1 cp+0 S4 A64])) "disk.c":151:8 253 {*arm_movsi_insn}
     (nil))
(insn 156 155 157 5 (set (reg:SI 217)
        (plus:SI (reg:SI 218)
            (reg:SI 145 [ _33 ]))) "disk.c":151:8 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 218)
        (expr_list:REG_DEAD (reg:SI 145 [ _33 ])
            (nil))))
(insn 157 156 158 5 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2072 [0xfffffffffffff7e8])) [1 cp+0 S4 A64])
        (reg:SI 217)) "disk.c":151:8 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 217)
        (nil)))
(insn 158 157 159 5 (set (reg/f:SI 219)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2072 [0xfffffffffffff7e8])) [1 cp+0 S4 A64])) "disk.c":152:8 253 {*arm_movsi_insn}
     (nil))
(insn 159 158 160 5 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2076 [0xfffffffffffff7e4])) [12 dp+0 S4 A32])
        (reg/f:SI 219)) "disk.c":152:8 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 219)
        (nil)))
;;  succ:       6 (FALLTHRU,DFS_BACK)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 (FALLTHRU,DFS_BACK)
;;              2 [always] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 146 220
(code_label 160 159 161 6 21 (nil) [1 uses])
(note 161 160 162 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 162 161 163 6 (set (reg/f:SI 146 [ _34 ])
        (plus:SI (reg/f:SI 102 sfp)
            (const_int -1024 [0xfffffffffffffc00]))) "disk.c":144:18 7 {*arm_addsi3}
     (nil))
(insn 163 162 164 6 (set (reg/f:SI 146 [ _34 ])
        (plus:SI (reg/f:SI 146 [ _34 ])
            (const_int -4 [0xfffffffffffffffc]))) "disk.c":144:18 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 102 sfp)
            (const_int -1028 [0xfffffffffffffbfc]))
        (nil)))
(insn 164 163 166 6 (set (reg/f:SI 146 [ _34 ])
        (plus:SI (reg/f:SI 146 [ _34 ])
            (const_int 1024 [0x400]))) "disk.c":144:18 7 {*arm_addsi3}
     (nil))
(insn 166 164 167 6 (set (reg:SI 220)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2072 [0xfffffffffffff7e8])) [1 cp+0 S4 A64])) "disk.c":144:12 253 {*arm_movsi_insn}
     (nil))
(insn 167 166 168 6 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 220)
            (reg/f:SI 146 [ _34 ]))) "disk.c":144:12 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 220)
        (expr_list:REG_DEAD (reg/f:SI 146 [ _34 ])
            (nil))))
(jump_insn 168 167 169 6 (set (pc)
        (if_then_else (ltu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 165)
            (pc))) "disk.c":144:12 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (nil))
 -> 165)
;;  succ:       3
;;              7 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 147 148 149 150 151 152 153 154 155 221 222 223 224 225 226 227 228 229 230 231 232 233 234
(note 169 168 170 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 170 169 171 7 (set (reg:SI 1 r1)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2068 [0xfffffffffffff7ec])) [4 bino+0 S4 A32])) "disk.c":154:3 253 {*arm_movsi_insn}
     (nil))
(insn 171 170 172 7 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC9") [flags 0x2]  <var_decl 0x7f1b8dcb7630 *.LC9>)) "disk.c":154:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 172 171 173 7 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kprintf") [flags 0x41]  <function_decl 0x7f1b8dc80200 kprintf>) [0 kprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "disk.c":154:3 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 173 172 174 7 (set (reg:SI 221)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2068 [0xfffffffffffff7ec])) [4 bino+0 S4 A32])) "disk.c":155:22 253 {*arm_movsi_insn}
     (nil))
(insn 174 173 175 7 (set (reg:SI 147 [ _35 ])
        (plus:SI (reg:SI 221)
            (const_int -1 [0xffffffffffffffff]))) "disk.c":155:22 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 221)
        (nil)))
(insn 175 174 176 7 (parallel [
            (set (reg:CC_NZ 100 cc)
                (compare:CC_NZ (minus:SI (const_int 0 [0])
                        (reg:SI 147 [ _35 ]))
                    (const_int 0 [0])))
            (set (reg:SI 222)
                (minus:SI (const_int 0 [0])
                    (reg:SI 147 [ _35 ])))
        ]) "disk.c":155:25 46 {subsi3_compare0}
     (nil))
(insn 176 175 177 7 (set (reg:SI 148 [ _36 ])
        (and:SI (reg:SI 147 [ _35 ])
            (const_int 7 [0x7]))) "disk.c":155:25 90 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 147 [ _35 ])
        (nil)))
(insn 177 176 178 7 (set (reg:SI 223)
        (and:SI (reg:SI 222)
            (const_int 7 [0x7]))) "disk.c":155:25 90 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 222)
        (nil)))
(insn 178 177 179 7 (set (reg:SI 148 [ _36 ])
        (if_then_else:SI (ge:SI (reg:CC_NZ 100 cc)
                (const_int 0 [0]))
            (neg:SI (reg:SI 223))
            (reg:SI 148 [ _36 ]))) "disk.c":155:25 371 {*if_neg_move}
     (expr_list:REG_DEAD (reg:SI 223)
        (expr_list:REG_DEAD (reg:CC_NZ 100 cc)
            (nil))))
(insn 179 178 180 7 (set (reg/f:SI 224)
        (symbol_ref:SI ("iblk") [flags 0x2]  <var_decl 0x7f1b8dc79480 iblk>)) "disk.c":155:3 253 {*arm_movsi_insn}
     (nil))
(insn 180 179 181 7 (set (reg:SI 149 [ iblk.4_37 ])
        (mem/c:SI (reg/f:SI 224) [4 iblk+0 S4 A32])) "disk.c":155:3 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 224)
        (nil)))
(insn 181 180 182 7 (set (reg:SI 150 [ _38 ])
        (plus:SI (reg:SI 148 [ _36 ])
            (reg:SI 149 [ iblk.4_37 ]))) "disk.c":155:3 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 149 [ iblk.4_37 ])
        (expr_list:REG_DEAD (reg:SI 148 [ _36 ])
            (nil))))
(insn 182 181 183 7 (set (reg:SI 225)
        (plus:SI (reg/f:SI 102 sfp)
            (const_int -2048 [0xfffffffffffff800]))) "disk.c":155:3 7 {*arm_addsi3}
     (nil))
(insn 183 182 184 7 (set (reg:SI 225)
        (plus:SI (reg:SI 225)
            (const_int -4 [0xfffffffffffffffc]))) "disk.c":155:3 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 102 sfp)
            (const_int -2052 [0xfffffffffffff7fc]))
        (nil)))
(insn 184 183 185 7 (set (reg:SI 1 r1)
        (reg:SI 225)) "disk.c":155:3 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 225)
        (nil)))
(insn 185 184 186 7 (set (reg:SI 0 r0)
        (reg:SI 150 [ _38 ])) "disk.c":155:3 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 150 [ _38 ])
        (nil)))
(call_insn 186 185 187 7 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("getblock") [flags 0x41]  <function_decl 0x7f1b8dc71900 getblock>) [0 getblock S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "disk.c":155:3 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 187 186 188 7 (set (reg:SI 226)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2068 [0xfffffffffffff7ec])) [4 bino+0 S4 A32])) "disk.c":156:28 253 {*arm_movsi_insn}
     (nil))
(insn 188 187 189 7 (set (reg:SI 151 [ _39 ])
        (plus:SI (reg:SI 226)
            (const_int -1 [0xffffffffffffffff]))) "disk.c":156:28 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 226)
        (nil)))
(insn 189 188 190 7 (parallel [
            (set (reg:CC_NZ 100 cc)
                (compare:CC_NZ (minus:SI (const_int 0 [0])
                        (reg:SI 151 [ _39 ]))
                    (const_int 0 [0])))
            (set (reg:SI 227)
                (minus:SI (const_int 0 [0])
                    (reg:SI 151 [ _39 ])))
        ]) "disk.c":156:31 46 {subsi3_compare0}
     (nil))
(insn 190 189 191 7 (set (reg:SI 152 [ _40 ])
        (and:SI (reg:SI 151 [ _39 ])
            (const_int 7 [0x7]))) "disk.c":156:31 90 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 151 [ _39 ])
        (nil)))
(insn 191 190 192 7 (set (reg:SI 228)
        (and:SI (reg:SI 227)
            (const_int 7 [0x7]))) "disk.c":156:31 90 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 227)
        (nil)))
(insn 192 191 193 7 (set (reg:SI 152 [ _40 ])
        (if_then_else:SI (ge:SI (reg:CC_NZ 100 cc)
                (const_int 0 [0]))
            (neg:SI (reg:SI 228))
            (reg:SI 152 [ _40 ]))) "disk.c":156:31 371 {*if_neg_move}
     (expr_list:REG_DEAD (reg:SI 228)
        (expr_list:REG_DEAD (reg:CC_NZ 100 cc)
            (nil))))
(insn 193 192 194 7 (set (reg:SI 153 [ _41 ])
        (reg:SI 152 [ _40 ])) "disk.c":156:31 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 152 [ _40 ])
        (nil)))
(insn 194 193 195 7 (set (reg:SI 154 [ _42 ])
        (ashift:SI (reg:SI 153 [ _41 ])
            (const_int 7 [0x7]))) "disk.c":156:21 147 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 153 [ _41 ])
        (nil)))
(insn 195 194 196 7 (set (reg:SI 229)
        (plus:SI (reg/f:SI 102 sfp)
            (const_int -2048 [0xfffffffffffff800]))) "disk.c":156:6 7 {*arm_addsi3}
     (nil))
(insn 196 195 197 7 (set (reg:SI 229)
        (plus:SI (reg:SI 229)
            (const_int -4 [0xfffffffffffffffc]))) "disk.c":156:6 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 102 sfp)
            (const_int -2052 [0xfffffffffffff7fc]))
        (nil)))
(insn 197 196 198 7 (set (reg:SI 230)
        (plus:SI (reg:SI 229)
            (reg:SI 154 [ _42 ]))) "disk.c":156:6 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 229)
        (expr_list:REG_DEAD (reg:SI 154 [ _42 ])
            (nil))))
(insn 198 197 199 7 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2056 [0xfffffffffffff7f8])) [9 ip+0 S4 A64])
        (reg:SI 230)) "disk.c":156:6 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 230)
        (nil)))
(insn 199 198 200 7 (set (reg/f:SI 231)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2056 [0xfffffffffffff7f8])) [9 ip+0 S4 A64])) "disk.c":158:3 253 {*arm_movsi_insn}
     (nil))
(insn 200 199 201 7 (set (reg:SI 155 [ _43 ])
        (mem:SI (plus:SI (reg/f:SI 231)
                (const_int 40 [0x28])) [4 ip_90->i_block[0]+0 S4 A32])) "disk.c":158:3 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 231)
        (nil)))
(insn 201 200 202 7 (set (reg:SI 232)
        (plus:SI (reg/f:SI 102 sfp)
            (const_int -1024 [0xfffffffffffffc00]))) "disk.c":158:3 7 {*arm_addsi3}
     (nil))
(insn 202 201 203 7 (set (reg:SI 232)
        (plus:SI (reg:SI 232)
            (const_int -4 [0xfffffffffffffffc]))) "disk.c":158:3 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 102 sfp)
            (const_int -1028 [0xfffffffffffffbfc]))
        (nil)))
(insn 203 202 204 7 (set (reg:SI 1 r1)
        (reg:SI 232)) "disk.c":158:3 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 232)
        (nil)))
(insn 204 203 205 7 (set (reg:SI 0 r0)
        (reg:SI 155 [ _43 ])) "disk.c":158:3 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 155 [ _43 ])
        (nil)))
(call_insn 205 204 206 7 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("getblock") [flags 0x41]  <function_decl 0x7f1b8dc71900 getblock>) [0 getblock S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "disk.c":158:3 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 206 205 207 7 (set (reg:SI 233)
        (plus:SI (reg/f:SI 102 sfp)
            (const_int -1024 [0xfffffffffffffc00]))) "disk.c":159:6 7 {*arm_addsi3}
     (nil))
(insn 207 206 208 7 (set (reg:SI 233)
        (plus:SI (reg:SI 233)
            (const_int -4 [0xfffffffffffffffc]))) "disk.c":159:6 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 102 sfp)
            (const_int -1028 [0xfffffffffffffbfc]))
        (nil)))
(insn 208 207 209 7 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2072 [0xfffffffffffff7e8])) [1 cp+0 S4 A64])
        (reg:SI 233)) "disk.c":159:6 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 233)
        (nil)))
(insn 209 208 210 7 (set (reg:SI 234)
        (plus:SI (reg/f:SI 102 sfp)
            (const_int -1024 [0xfffffffffffffc00]))) "disk.c":160:6 7 {*arm_addsi3}
     (nil))
(insn 210 209 211 7 (set (reg:SI 234)
        (plus:SI (reg:SI 234)
            (const_int -4 [0xfffffffffffffffc]))) "disk.c":160:6 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 102 sfp)
            (const_int -1028 [0xfffffffffffffbfc]))
        (nil)))
(insn 211 210 286 7 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2076 [0xfffffffffffff7e4])) [12 dp+0 S4 A32])
        (reg:SI 234)) "disk.c":160:6 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 234)
        (nil)))
(jump_insn 286 211 287 7 (set (pc)
        (label_ref 261)) "disk.c":161:8 284 {*arm_jump}
     (nil)
 -> 261)
;;  succ:       9 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

(barrier 287 286 266)
;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       9
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 156 157 158 159 160 161 162 163 164 165 166 167 168 169 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255
(code_label 266 287 214 8 25 (nil) [1 uses])
(note 214 266 215 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 215 214 216 8 (set (reg/f:SI 235)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2076 [0xfffffffffffff7e4])) [12 dp+0 S4 A32])) "disk.c":162:20 253 {*arm_movsi_insn}
     (nil))
(insn 216 215 217 8 (set (reg:SI 156 [ _44 ])
        (zero_extend:SI (mem:QI (plus:SI (reg/f:SI 235)
                    (const_int 6 [0x6])) [0 dp_60->name_len+0 S1 A16]))) "disk.c":162:20 175 {*arm_zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 235)
        (nil)))
(insn 217 216 218 8 (set (reg:SI 157 [ _45 ])
        (reg:SI 156 [ _44 ])) "disk.c":162:20 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 156 [ _44 ])
        (nil)))
(insn 218 217 219 8 (set (reg/f:SI 236)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2076 [0xfffffffffffff7e4])) [12 dp+0 S4 A32])) "disk.c":162:7 253 {*arm_movsi_insn}
     (nil))
(insn 219 218 220 8 (set (reg/f:SI 237)
        (plus:SI (reg/f:SI 236)
            (reg:SI 157 [ _45 ]))) "disk.c":162:7 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg/f:SI 236)
        (expr_list:REG_DEAD (reg:SI 157 [ _45 ])
            (nil))))
(insn 220 219 221 8 (set (reg:QI 238)
        (mem:QI (plus:SI (reg/f:SI 237)
                (const_int 8 [0x8])) [0 dp_60->name[_45]+0 S1 A8])) "disk.c":162:7 263 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg/f:SI 237)
        (nil)))
(insn 221 220 222 8 (set (mem/c:QI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2077 [0xfffffffffffff7e3])) [0 c+0 S1 A8])
        (reg:QI 238)) "disk.c":162:7 263 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:QI 238)
        (nil)))
(insn 222 221 223 8 (set (reg/f:SI 239)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2076 [0xfffffffffffff7e4])) [12 dp+0 S4 A32])) "disk.c":163:16 253 {*arm_movsi_insn}
     (nil))
(insn 223 222 224 8 (set (reg:SI 158 [ _46 ])
        (zero_extend:SI (mem:QI (plus:SI (reg/f:SI 239)
                    (const_int 6 [0x6])) [0 dp_60->name_len+0 S1 A16]))) "disk.c":163:16 175 {*arm_zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 239)
        (nil)))
(insn 224 223 225 8 (set (reg:SI 159 [ _47 ])
        (reg:SI 158 [ _46 ])) "disk.c":163:16 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 158 [ _46 ])
        (nil)))
(insn 225 224 226 8 (set (reg/f:SI 240)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2076 [0xfffffffffffff7e4])) [12 dp+0 S4 A32])) "disk.c":163:28 253 {*arm_movsi_insn}
     (nil))
(insn 226 225 227 8 (set (reg/f:SI 241)
        (plus:SI (reg/f:SI 240)
            (reg:SI 159 [ _47 ]))) "disk.c":163:28 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg/f:SI 240)
        (expr_list:REG_DEAD (reg:SI 159 [ _47 ])
            (nil))))
(insn 227 226 228 8 (set (reg:SI 242)
        (const_int 0 [0])) "disk.c":163:28 253 {*arm_movsi_insn}
     (nil))
(insn 228 227 229 8 (set (reg:QI 243)
        (subreg:QI (reg:SI 242) 0)) "disk.c":163:28 263 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:SI 242)
        (nil)))
(insn 229 228 230 8 (set (mem:QI (plus:SI (reg/f:SI 241)
                (const_int 8 [0x8])) [0 dp_60->name[_47]+0 S1 A8])
        (reg:QI 243)) "disk.c":163:28 263 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:QI 243)
        (expr_list:REG_DEAD (reg/f:SI 241)
            (nil))))
(insn 230 229 231 8 (set (reg/f:SI 244)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2076 [0xfffffffffffff7e4])) [12 dp+0 S4 A32])) "disk.c":164:5 253 {*arm_movsi_insn}
     (nil))
(insn 231 230 232 8 (set (reg:SI 160 [ _48 ])
        (mem:SI (reg/f:SI 244) [4 dp_60->inode+0 S4 A32])) "disk.c":164:5 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 244)
        (nil)))
(insn 232 231 233 8 (set (reg/f:SI 245)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2076 [0xfffffffffffff7e4])) [12 dp+0 S4 A32])) "disk.c":164:42 253 {*arm_movsi_insn}
     (nil))
(insn 233 232 234 8 (set (reg:SI 161 [ _49 ])
        (zero_extend:SI (mem:HI (plus:SI (reg/f:SI 245)
                    (const_int 4 [0x4])) [14 dp_60->rec_len+0 S2 A32]))) "disk.c":164:42 172 {*arm_zero_extendhisi2}
     (expr_list:REG_DEAD (reg/f:SI 245)
        (nil)))
(insn 234 233 235 8 (set (reg:SI 162 [ _50 ])
        (reg:SI 161 [ _49 ])) "disk.c":164:5 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 161 [ _49 ])
        (nil)))
(insn 235 234 236 8 (set (reg/f:SI 246)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2076 [0xfffffffffffff7e4])) [12 dp+0 S4 A32])) "disk.c":164:55 253 {*arm_movsi_insn}
     (nil))
(insn 236 235 237 8 (set (reg:SI 163 [ _51 ])
        (zero_extend:SI (mem:QI (plus:SI (reg/f:SI 246)
                    (const_int 6 [0x6])) [0 dp_60->name_len+0 S1 A16]))) "disk.c":164:55 175 {*arm_zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 246)
        (nil)))
(insn 237 236 238 8 (set (reg:SI 164 [ _52 ])
        (reg:SI 163 [ _51 ])) "disk.c":164:5 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 163 [ _51 ])
        (nil)))
(insn 238 237 239 8 (set (reg:SI 247)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2076 [0xfffffffffffff7e4])) [12 dp+0 S4 A32])) "disk.c":164:69 253 {*arm_movsi_insn}
     (nil))
(insn 239 238 240 8 (set (reg/f:SI 165 [ _53 ])
        (plus:SI (reg:SI 247)
            (const_int 8 [0x8]))) "disk.c":164:69 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 247)
        (nil)))
(insn 240 239 241 8 (set (mem:SI (reg/f:SI 13 sp) [0  S4 A32])
        (reg/f:SI 165 [ _53 ])) "disk.c":164:5 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 165 [ _53 ])
        (nil)))
(insn 241 240 242 8 (set (reg:SI 3 r3)
        (reg:SI 164 [ _52 ])) "disk.c":164:5 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 164 [ _52 ])
        (nil)))
(insn 242 241 243 8 (set (reg:SI 2 r2)
        (reg:SI 162 [ _50 ])) "disk.c":164:5 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 162 [ _50 ])
        (nil)))
(insn 243 242 244 8 (set (reg:SI 1 r1)
        (reg:SI 160 [ _48 ])) "disk.c":164:5 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 160 [ _48 ])
        (nil)))
(insn 244 243 245 8 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC7") [flags 0x2]  <var_decl 0x7f1b8dcb7510 *.LC7>)) "disk.c":164:5 253 {*arm_movsi_insn}
     (nil))
(call_insn 245 244 246 8 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kprintf") [flags 0x41]  <function_decl 0x7f1b8dc80200 kprintf>) [0 kprintf S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "disk.c":164:5 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (expr_list:SI (use (reg:SI 3 r3))
                        (expr_list:SI (use (mem/f:SI (reg/f:SI 13 sp) [0  S4 A32]))
                            (nil))))))))
(insn 246 245 247 8 (set (reg/f:SI 248)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2076 [0xfffffffffffff7e4])) [12 dp+0 S4 A32])) "disk.c":168:16 253 {*arm_movsi_insn}
     (nil))
(insn 247 246 248 8 (set (reg:SI 166 [ _54 ])
        (zero_extend:SI (mem:QI (plus:SI (reg/f:SI 248)
                    (const_int 6 [0x6])) [0 dp_60->name_len+0 S1 A16]))) "disk.c":168:16 175 {*arm_zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 248)
        (nil)))
(insn 248 247 249 8 (set (reg:SI 167 [ _55 ])
        (reg:SI 166 [ _54 ])) "disk.c":168:16 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 166 [ _54 ])
        (nil)))
(insn 249 248 250 8 (set (reg/f:SI 249)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2076 [0xfffffffffffff7e4])) [12 dp+0 S4 A32])) "disk.c":168:28 253 {*arm_movsi_insn}
     (nil))
(insn 250 249 251 8 (set (reg/f:SI 250)
        (plus:SI (reg/f:SI 249)
            (reg:SI 167 [ _55 ]))) "disk.c":168:28 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg/f:SI 249)
        (expr_list:REG_DEAD (reg:SI 167 [ _55 ])
            (nil))))
(insn 251 250 252 8 (set (reg:QI 251)
        (mem/c:QI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2077 [0xfffffffffffff7e3])) [0 c+0 S1 A8])) "disk.c":168:28 263 {*arm_movqi_insn}
     (nil))
(insn 252 251 253 8 (set (mem:QI (plus:SI (reg/f:SI 250)
                (const_int 8 [0x8])) [0 dp_60->name[_55]+0 S1 A8])
        (reg:QI 251)) "disk.c":168:28 263 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:QI 251)
        (expr_list:REG_DEAD (reg/f:SI 250)
            (nil))))
(insn 253 252 254 8 (set (reg/f:SI 252)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2076 [0xfffffffffffff7e4])) [12 dp+0 S4 A32])) "disk.c":169:13 253 {*arm_movsi_insn}
     (nil))
(insn 254 253 255 8 (set (reg:SI 168 [ _56 ])
        (zero_extend:SI (mem:HI (plus:SI (reg/f:SI 252)
                    (const_int 4 [0x4])) [14 dp_60->rec_len+0 S2 A32]))) "disk.c":169:13 172 {*arm_zero_extendhisi2}
     (expr_list:REG_DEAD (reg/f:SI 252)
        (nil)))
(insn 255 254 256 8 (set (reg:SI 169 [ _57 ])
        (reg:SI 168 [ _56 ])) "disk.c":169:13 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 168 [ _56 ])
        (nil)))
(insn 256 255 257 8 (set (reg:SI 254)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2072 [0xfffffffffffff7e8])) [1 cp+0 S4 A64])) "disk.c":169:8 253 {*arm_movsi_insn}
     (nil))
(insn 257 256 258 8 (set (reg:SI 253)
        (plus:SI (reg:SI 254)
            (reg:SI 169 [ _57 ]))) "disk.c":169:8 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 254)
        (expr_list:REG_DEAD (reg:SI 169 [ _57 ])
            (nil))))
(insn 258 257 259 8 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2072 [0xfffffffffffff7e8])) [1 cp+0 S4 A64])
        (reg:SI 253)) "disk.c":169:8 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 253)
        (nil)))
(insn 259 258 260 8 (set (reg/f:SI 255)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2072 [0xfffffffffffff7e8])) [1 cp+0 S4 A64])) "disk.c":170:8 253 {*arm_movsi_insn}
     (nil))
(insn 260 259 261 8 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2076 [0xfffffffffffff7e4])) [12 dp+0 S4 A32])
        (reg/f:SI 255)) "disk.c":170:8 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 255)
        (nil)))
;;  succ:       9 (FALLTHRU,DFS_BACK)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       8 (FALLTHRU,DFS_BACK)
;;              7 [always] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 170 256
(code_label 261 260 262 9 24 (nil) [1 uses])
(note 262 261 263 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 263 262 264 9 (set (reg/f:SI 170 [ _58 ])
        (plus:SI (reg/f:SI 102 sfp)
            (const_int -1024 [0xfffffffffffffc00]))) "disk.c":161:18 7 {*arm_addsi3}
     (nil))
(insn 264 263 265 9 (set (reg/f:SI 170 [ _58 ])
        (plus:SI (reg/f:SI 170 [ _58 ])
            (const_int -4 [0xfffffffffffffffc]))) "disk.c":161:18 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 102 sfp)
            (const_int -1028 [0xfffffffffffffbfc]))
        (nil)))
(insn 265 264 267 9 (set (reg/f:SI 170 [ _58 ])
        (plus:SI (reg/f:SI 170 [ _58 ])
            (const_int 1024 [0x400]))) "disk.c":161:18 7 {*arm_addsi3}
     (nil))
(insn 267 265 268 9 (set (reg:SI 256)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2072 [0xfffffffffffff7e8])) [1 cp+0 S4 A64])) "disk.c":161:12 253 {*arm_movsi_insn}
     (nil))
(insn 268 267 269 9 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 256)
            (reg/f:SI 170 [ _58 ]))) "disk.c":161:12 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 256)
        (expr_list:REG_DEAD (reg/f:SI 170 [ _58 ])
            (nil))))
(jump_insn 269 268 270 9 (set (pc)
        (if_then_else (ltu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 266)
            (pc))) "disk.c":161:12 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (nil))
 -> 266)
;;  succ:       8
;;              10 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 100 [cc] 171 259 260
(note 270 269 277 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 277 270 278 10 (clobber (reg/i:SI 0 r0)) "disk.c":173:1 -1
     (expr_list:REG_UNUSED (reg/i:SI 0 r0)
        (nil)))
(insn 278 277 283 10 (clobber (reg:SI 171 [ <retval> ])) "disk.c":173:1 -1
     (nil))
(insn 283 278 272 10 (const_int 0 [0]) "disk.c":173:1 311 {nop}
     (nil))
(jump_insn 272 283 281 10 (parallel [
            (set (pc)
                (if_then_else (eq (mem/v/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                                (const_int -4 [0xfffffffffffffffc])) [8 D.4573+0 S4 A32])
                        (unspec:SI [
                                (mem/v/f/c:SI (symbol_ref:SI ("__stack_chk_guard") [flags 0x40]  <var_decl 0x7f1b8dcb7090 __stack_chk_guard>) [8 __stack_chk_guard+0 S4 A32])
                            ] UNSPEC_SP_TEST))
                    (label_ref 275)
                    (pc)))
            (clobber (reg:SI 259))
            (clobber (reg:SI 260))
            (clobber (reg:CC 100 cc))
        ]) "disk.c":173:1 306 {*stack_protect_combined_test_insn}
     (expr_list:REG_UNUSED (reg:SI 260)
        (expr_list:REG_UNUSED (reg:SI 259)
            (expr_list:REG_UNUSED (reg:CC 100 cc)
                (nil))))
 -> 275)
;;  succ:       12
;;              11 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp] 171

;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(note 281 272 273 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(call_insn 273 281 274 11 (parallel [
            (call (mem:SI (symbol_ref:SI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f1b8dcacc00 __stack_chk_fail>) [0 __stack_chk_fail S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "disk.c":173:1 290 {*call_symbol}
     (expr_list:REG_NORETURN (const_int 0 [0])
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
;;  succ:      
;; lr  out 	 13 [sp] 102 [sfp] 103 [afp]

(barrier 274 273 275)
;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 1, flags: (RTL)
;;  pred:       10
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp] 171
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp] 171
;; lr  def 	 0 [r0]
(code_label 275 274 282 12 26 (nil) [1 uses])
(note 282 275 276 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 276 282 279 12 (set (reg/i:SI 0 r0)
        (reg:SI 171 [ <retval> ])) "disk.c":173:1 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 171 [ <retval> ])
        (nil)))
(insn 279 276 0 12 (use (reg/i:SI 0 r0)) "disk.c":173:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

