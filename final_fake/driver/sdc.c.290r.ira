
;; Function do_command (do_command, funcdef_no=0, decl_uid=4478, cgraph_uid=1, symbol_order=1)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r124,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:10000
  a1(r122,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a2(r123,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a3(r119,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a4(r121,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a5(r120,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a6(r128,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a7(r127,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a8(r118,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a9(r117,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a10(r126,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a11(r115,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a12(r116,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a13(r114,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a14(r113,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a15(r125,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000

   Insn 29(l0): point = 0
   Insn 26(l0): point = 2
   Insn 31(l0): point = 4
   Insn 28(l0): point = 6
   Insn 27(l0): point = 8
   Insn 24(l0): point = 10
   Insn 23(l0): point = 12
   Insn 22(l0): point = 14
   Insn 21(l0): point = 16
   Insn 20(l0): point = 18
   Insn 19(l0): point = 20
   Insn 18(l0): point = 22
   Insn 17(l0): point = 24
   Insn 16(l0): point = 26
   Insn 15(l0): point = 28
   Insn 14(l0): point = 30
   Insn 13(l0): point = 32
   Insn 12(l0): point = 34
   Insn 11(l0): point = 36
   Insn 10(l0): point = 38
   Insn 9(l0): point = 40
   Insn 8(l0): point = 42
   Insn 4(l0): point = 44
   Insn 3(l0): point = 46
   Insn 2(l0): point = 48
 a0(r124): [3..6]
 a1(r122): [11..14]
 a2(r123): [11..12]
 a3(r119): [13..22]
 a4(r121): [15..16]
 a5(r120): [17..18]
 a6(r128): [19..20]
 a7(r127): [23..24]
 a8(r118): [23..26]
 a9(r117): [27..28]
 a10(r126): [29..30]
 a11(r115): [33..36]
 a12(r116): [33..34]
 a13(r114): [37..38]
 a14(r113): [39..40]
 a15(r125): [41..42]
Compressing live ranges: from 51 to 26 - 50%
Ranges after the compression:
 a0(r124): [0..1]
 a1(r122): [2..5]
 a2(r123): [2..3]
 a3(r119): [4..11]
 a4(r121): [6..7]
 a5(r120): [8..9]
 a6(r128): [10..11]
 a7(r127): [12..13]
 a8(r118): [12..13]
 a9(r117): [14..15]
 a10(r126): [16..17]
 a11(r115): [18..19]
 a12(r116): [18..19]
 a13(r114): [20..21]
 a14(r113): [22..23]
 a15(r125): [24..25]
  regions=1, blocks=3, points=26
    allocnos=16 (big 0), copies=0, conflicts=0, ranges=16
Disposition:
   14:r113 l0     3   13:r114 l0     3   11:r115 l0     2   12:r116 l0     3
    9:r117 l0     3    8:r118 l0     2    3:r119 l0     2    5:r120 l0     3
    4:r121 l0     3    1:r122 l0     3    2:r123 l0     2    0:r124 l0     3
   15:r125 l0     3   10:r126 l0     3    7:r127 l0     3    6:r128 l0     3
+++Costs: overall 2000, reg 2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


do_command

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 102 [sfp] 103 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 11 [fp]
;;  ref usage 	r0={3d,3u} r1={1d,1u} r2={1d,1u} r3={1d} r11={1d,2u} r13={1d,2u} r14={1d} r102={1d,8u} r103={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} 
;;    total ref usage 61{27d,34u,0e} in 25{25 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 cmd+0 S4 A32])
        (reg:SI 0 r0 [ cmd ])) "sdc.c":70:1 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ cmd ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [1 arg+0 S4 A32])
        (reg:SI 1 r1 [ arg ])) "sdc.c":70:1 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 1 r1 [ arg ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [1 resp+0 S4 A32])
        (reg:SI 2 r2 [ resp ])) "sdc.c":70:1 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 2 r2 [ resp ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:SI 125)
        (symbol_ref:SI ("base") [flags 0x2]  <var_decl 0x7f2800e6a2d0 base>)) "sdc.c":71:17 253 {*arm_movsi_insn}
     (nil))
(insn 9 8 10 2 (set (reg:SI 113 [ base.0_1 ])
        (mem/c:SI (reg/f:SI 125) [1 base+0 S4 A32])) "sdc.c":71:17 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 125)
        (nil)))
(insn 10 9 11 2 (set (reg:SI 114 [ _2 ])
        (plus:SI (reg:SI 113 [ base.0_1 ])
            (const_int 8 [0x8]))) "sdc.c":71:17 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 113 [ base.0_1 ])
        (nil)))
(insn 11 10 12 2 (set (reg/f:SI 115 [ _3 ])
        (reg:SI 114 [ _2 ])) "sdc.c":71:4 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 114 [ _2 ])
        (nil)))
(insn 12 11 13 2 (set (reg:SI 116 [ arg.1_4 ])
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [1 arg+0 S4 A32])) "sdc.c":71:31 253 {*arm_movsi_insn}
     (nil))
(insn 13 12 14 2 (set (mem:SI (reg/f:SI 115 [ _3 ]) [1 *_3+0 S4 A32])
        (reg:SI 116 [ arg.1_4 ])) "sdc.c":71:29 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 116 [ arg.1_4 ])
        (expr_list:REG_DEAD (reg/f:SI 115 [ _3 ])
            (nil))))
(insn 14 13 15 2 (set (reg:SI 126)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [1 resp+0 S4 A32])) "sdc.c":72:44 253 {*arm_movsi_insn}
     (nil))
(insn 15 14 16 2 (set (reg:SI 117 [ _5 ])
        (ashift:SI (reg:SI 126)
            (const_int 6 [0x6]))) "sdc.c":72:44 147 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 126)
        (nil)))
(insn 16 15 17 2 (set (reg:SI 118 [ _6 ])
        (ior:SI (reg:SI 117 [ _5 ])
            (const_int 1024 [0x400]))) "sdc.c":72:37 106 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg:SI 117 [ _5 ])
        (nil)))
(insn 17 16 18 2 (set (reg:SI 127)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 cmd+0 S4 A32])) "sdc.c":72:49 253 {*arm_movsi_insn}
     (nil))
(insn 18 17 19 2 (set (reg:SI 119 [ _7 ])
        (ior:SI (reg:SI 118 [ _6 ])
            (reg:SI 127))) "sdc.c":72:49 106 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg:SI 127)
        (expr_list:REG_DEAD (reg:SI 118 [ _6 ])
            (nil))))
(insn 19 18 20 2 (set (reg/f:SI 128)
        (symbol_ref:SI ("base") [flags 0x2]  <var_decl 0x7f2800e6a2d0 base>)) "sdc.c":72:17 253 {*arm_movsi_insn}
     (nil))
(insn 20 19 21 2 (set (reg:SI 120 [ base.2_8 ])
        (mem/c:SI (reg/f:SI 128) [1 base+0 S4 A32])) "sdc.c":72:17 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 128)
        (nil)))
(insn 21 20 22 2 (set (reg:SI 121 [ _9 ])
        (plus:SI (reg:SI 120 [ base.2_8 ])
            (const_int 12 [0xc]))) "sdc.c":72:17 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 120 [ base.2_8 ])
        (nil)))
(insn 22 21 23 2 (set (reg/f:SI 122 [ _10 ])
        (reg:SI 121 [ _9 ])) "sdc.c":72:4 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 121 [ _9 ])
        (nil)))
(insn 23 22 24 2 (set (reg:SI 123 [ _11 ])
        (reg:SI 119 [ _7 ])) "sdc.c":72:49 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 119 [ _7 ])
        (nil)))
(insn 24 23 27 2 (set (mem:SI (reg/f:SI 122 [ _10 ]) [1 *_10+0 S4 A32])
        (reg:SI 123 [ _11 ])) "sdc.c":72:29 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 123 [ _11 ])
        (expr_list:REG_DEAD (reg/f:SI 122 [ _10 ])
            (nil))))
(insn 27 24 28 2 (clobber (reg/i:SI 0 r0)) "sdc.c":74:1 -1
     (expr_list:REG_UNUSED (reg/i:SI 0 r0)
        (nil)))
(insn 28 27 31 2 (clobber (reg:SI 124 [ <retval> ])) "sdc.c":74:1 -1
     (nil))
(insn 31 28 26 2 (const_int 0 [0]) "sdc.c":74:1 311 {nop}
     (nil))
(insn 26 31 29 2 (set (reg/i:SI 0 r0)
        (reg:SI 124 [ <retval> ])) "sdc.c":74:1 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 124 [ <retval> ])
        (nil)))
(insn 29 26 0 2 (use (reg/i:SI 0 r0)) "sdc.c":74:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp] 103 [afp]


;; Function sdc_handler (sdc_handler, funcdef_no=1, decl_uid=4488, cgraph_uid=2, symbol_order=10)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 21 n_edges 30 count 21 (    1)
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
;;
;; Loop 2
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6
;;
;; Loop 1
;;  header 16, latch 15
;;  depth 1, outer 0
;;  nodes: 16 15
;; 2 succs { 3 11 }
;; 3 succs { 4 9 }
;; 4 succs { 5 9 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 6 8 }
;; 8 succs { 9 }
;; 9 succs { 10 20 }
;; 10 succs { 20 }
;; 11 succs { 12 20 }
;; 12 succs { 13 18 }
;; 13 succs { 14 18 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 15 17 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 20 }
;; 20 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 96.
verify found no changes in insn with uid = 101.
verify found no changes in insn with uid = 188.
verify found no changes in insn with uid = 193.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r215: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r215,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r214: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r214,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r213: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r213,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r212: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r212,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r211: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r211,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r210: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r210,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r209: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r209,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r208: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r208,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r207: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r207,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r206: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r206,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r205: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r205,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r204: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r204,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r203: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r203,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r202: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r202,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r201: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r201,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r200: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r200,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r199: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r199,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r198: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r198,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r197: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r197,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r196: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r196,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r195: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r195,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r194: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r194,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r193: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r193,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r192: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r192,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r191: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r191,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r190: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r190,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r189: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r189,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r188: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r188,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r187: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r187,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r186: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r186,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r185: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r185,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r184: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r184,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r183: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r183,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r182: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r182,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r181: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r181,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r180: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r180,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r179: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r179,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r178,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r177: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r177,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r176,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r175: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r175,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r174,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r173,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a72 (r172,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a74 (r171,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a73 (r170,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r169: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a79 (r169,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a83 (r168,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a84 (r167,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a86 (r166,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a87 (r165,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a89 (r164,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a88 (r163,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a90 (r162,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a91 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a93 (r160,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a92 (r159,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a95 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a96 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a97 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a98 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a102 (r154,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r153,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a76 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a75 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a78 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a80 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a77 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a82 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a85 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a94 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a99 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a100 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a101 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r153,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:10000
  a1(r152,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a2(r215,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a3(r151,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a4(r150,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a5(r214,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a6(r212,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a7(r213,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a8(r149,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a9(r211,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a10(r209,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a11(r210,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a12(r208,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a13(r148,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a14(r147,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a15(r146,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a16(r207,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a17(r206,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a18(r145,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a19(r144,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a20(r205,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a21(r204,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a22(r143,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a23(r142,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a24(r203,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a25(r201,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a26(r202,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a27(r200,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a28(r198,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a29(r199,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a30(r140,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a31(r141,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a32(r137,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a33(r139,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a34(r138,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a35(r197,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a36(r136,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a37(r196,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a38(r135,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a39(r195,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a40(r134,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a41(r194,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a42(r193,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a43(r191,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a44(r192,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a45(r190,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a46(r189,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a47(r187,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a48(r188,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a49(r133,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a50(r186,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a51(r184,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a52(r185,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a53(r132,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a54(r183,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a55(r181,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a56(r182,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a57(r180,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a58(r131,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a59(r130,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a60(r129,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a61(r179,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a62(r178,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a63(r128,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a64(r127,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a65(r177,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a66(r176,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a67(r126,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a68(r125,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a69(r175,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a70(r173,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a71(r174,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a72(r172,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a73(r170,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a74(r171,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a75(r123,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a76(r124,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a77(r120,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a78(r122,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a79(r169,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a80(r121,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a81(r119,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a82(r118,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a83(r168,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a84(r167,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a85(r117,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a86(r166,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a87(r165,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a88(r163,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a89(r164,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a90(r162,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a91(r161,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a92(r159,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a93(r160,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a94(r116,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a95(r158,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a96(r157,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a97(r156,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a98(r155,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a99(r115,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a100(r114,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a101(r113,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a102(r154,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000

   Insn 206(l0): point = 0
   Insn 203(l0): point = 2
   Insn 208(l0): point = 4
   Insn 205(l0): point = 6
   Insn 204(l0): point = 8
   Insn 201(l0): point = 10
   Insn 200(l0): point = 12
   Insn 199(l0): point = 14
   Insn 198(l0): point = 16
   Insn 197(l0): point = 18
   Insn 196(l0): point = 20
   Insn 193(l0): point = 23
   Insn 192(l0): point = 25
   Insn 191(l0): point = 27
   Insn 190(l0): point = 29
   Insn 189(l0): point = 31
   Insn 188(l0): point = 33
   Insn 187(l0): point = 35
   Insn 186(l0): point = 37
   Insn 185(l0): point = 39
   Insn 183(l0): point = 42
   Insn 182(l0): point = 44
   Insn 181(l0): point = 46
   Insn 180(l0): point = 48
   Insn 179(l0): point = 50
   Insn 178(l0): point = 52
   Insn 177(l0): point = 54
   Insn 174(l0): point = 57
   Insn 173(l0): point = 59
   Insn 172(l0): point = 61
   Insn 171(l0): point = 63
   Insn 170(l0): point = 65
   Insn 169(l0): point = 67
   Insn 168(l0): point = 69
   Insn 167(l0): point = 71
   Insn 166(l0): point = 73
   Insn 165(l0): point = 75
   Insn 164(l0): point = 77
   Insn 163(l0): point = 79
   Insn 162(l0): point = 81
   Insn 161(l0): point = 83
   Insn 160(l0): point = 85
   Insn 159(l0): point = 87
   Insn 158(l0): point = 89
   Insn 157(l0): point = 91
   Insn 156(l0): point = 93
   Insn 146(l0): point = 96
   Insn 145(l0): point = 98
   Insn 144(l0): point = 100
   Insn 143(l0): point = 102
   Insn 142(l0): point = 104
   Insn 141(l0): point = 106
   Insn 140(l0): point = 108
   Insn 139(l0): point = 110
   Insn 138(l0): point = 112
   Insn 137(l0): point = 114
   Insn 136(l0): point = 116
   Insn 135(l0): point = 118
   Insn 134(l0): point = 120
   Insn 154(l0): point = 123
   Insn 153(l0): point = 125
   Insn 152(l0): point = 127
   Insn 213(l0): point = 130
   Insn 130(l0): point = 132
   Insn 129(l0): point = 134
   Insn 127(l0): point = 137
   Insn 126(l0): point = 139
   Insn 125(l0): point = 141
   Insn 124(l0): point = 143
   Insn 122(l0): point = 146
   Insn 121(l0): point = 148
   Insn 120(l0): point = 150
   Insn 119(l0): point = 152
   Insn 118(l0): point = 154
   Insn 117(l0): point = 156
   Insn 116(l0): point = 158
   Insn 115(l0): point = 160
   Insn 114(l0): point = 162
   Insn 113(l0): point = 164
   Insn 112(l0): point = 166
   Insn 111(l0): point = 168
   Insn 109(l0): point = 171
   Insn 108(l0): point = 173
   Insn 107(l0): point = 175
   Insn 106(l0): point = 177
   Insn 211(l0): point = 180
   Insn 101(l0): point = 182
   Insn 100(l0): point = 184
   Insn 99(l0): point = 186
   Insn 98(l0): point = 188
   Insn 97(l0): point = 190
   Insn 96(l0): point = 192
   Insn 95(l0): point = 194
   Insn 94(l0): point = 196
   Insn 93(l0): point = 198
   Insn 91(l0): point = 201
   Insn 90(l0): point = 203
   Insn 89(l0): point = 205
   Insn 88(l0): point = 207
   Insn 87(l0): point = 209
   Insn 86(l0): point = 211
   Insn 85(l0): point = 213
   Insn 82(l0): point = 216
   Insn 81(l0): point = 218
   Insn 80(l0): point = 220
   Insn 79(l0): point = 222
   Insn 78(l0): point = 224
   Insn 77(l0): point = 226
   Insn 76(l0): point = 228
   Insn 75(l0): point = 230
   Insn 74(l0): point = 232
   Insn 73(l0): point = 234
   Insn 72(l0): point = 236
   Insn 71(l0): point = 238
   Insn 70(l0): point = 240
   Insn 69(l0): point = 242
   Insn 68(l0): point = 244
   Insn 67(l0): point = 246
   Insn 66(l0): point = 248
   Insn 65(l0): point = 250
   Insn 64(l0): point = 252
   Insn 54(l0): point = 255
   Insn 53(l0): point = 257
   Insn 52(l0): point = 259
   Insn 51(l0): point = 261
   Insn 50(l0): point = 263
   Insn 49(l0): point = 265
   Insn 48(l0): point = 267
   Insn 47(l0): point = 269
   Insn 46(l0): point = 271
   Insn 45(l0): point = 273
   Insn 44(l0): point = 275
   Insn 43(l0): point = 277
   Insn 42(l0): point = 279
   Insn 62(l0): point = 282
   Insn 61(l0): point = 284
   Insn 60(l0): point = 286
   Insn 209(l0): point = 289
   Insn 38(l0): point = 291
   Insn 37(l0): point = 293
   Insn 35(l0): point = 296
   Insn 34(l0): point = 298
   Insn 33(l0): point = 300
   Insn 32(l0): point = 302
   Insn 30(l0): point = 305
   Insn 29(l0): point = 307
   Insn 28(l0): point = 309
   Insn 27(l0): point = 311
   Insn 26(l0): point = 313
   Insn 25(l0): point = 315
   Insn 24(l0): point = 317
   Insn 23(l0): point = 319
   Insn 22(l0): point = 321
   Insn 21(l0): point = 323
   Insn 20(l0): point = 325
   Insn 19(l0): point = 327
   Insn 17(l0): point = 330
   Insn 16(l0): point = 332
   Insn 15(l0): point = 334
   Insn 14(l0): point = 336
   Insn 13(l0): point = 338
   Insn 12(l0): point = 340
   Insn 11(l0): point = 342
   Insn 10(l0): point = 344
   Insn 9(l0): point = 346
   Insn 8(l0): point = 348
   Insn 7(l0): point = 350
   Insn 6(l0): point = 352
   Insn 5(l0): point = 354
 a0(r153): [3..6]
 a1(r152): [11..14]
 a2(r215): [11..12]
 a3(r151): [15..16]
 a4(r150): [17..18]
 a5(r214): [19..20]
 a6(r212): [28..31]
 a7(r213): [28..29]
 a8(r149): [45..46]
 a9(r211): [47..48]
 a10(r209): [51..54]
 a11(r210): [51..52]
 a12(r208): [58..59]
 a13(r148): [60..61]
 a14(r147): [62..63]
 a15(r146): [64..65]
 a16(r207): [66..67]
 a17(r206): [70..71]
 a18(r145): [70..73]
 a19(r144): [74..75]
 a20(r205): [76..77]
 a21(r204): [80..81]
 a22(r143): [80..83]
 a23(r142): [84..85]
 a24(r203): [86..87]
 a25(r201): [90..91]
 a26(r202): [92..93]
 a27(r200): [126..127]
 a28(r198): [97..98]
 a29(r199): [99..100]
 a30(r140): [103..106]
 a31(r141): [103..104]
 a32(r137): [105..114]
 a33(r139): [107..108]
 a34(r138): [109..110]
 a35(r197): [111..112]
 a36(r136): [115..118]
 a37(r196): [115..116]
 a38(r135): [119..120]
 a39(r195): [133..134]
 a40(r134): [140..141]
 a41(r194): [142..143]
 a42(r193): [149..150]
 a43(r191): [153..154]
 a44(r192): [155..156]
 a45(r190): [159..160]
 a46(r189): [161..162]
 a47(r187): [165..168]
 a48(r188): [165..166]
 a49(r133): [174..175]
 a50(r186): [176..177]
 a51(r184): [187..190]
 a52(r185): [187..188]
 a53(r132): [204..205]
 a54(r183): [206..207]
 a55(r181): [210..213]
 a56(r182): [210..211]
 a57(r180): [217..218]
 a58(r131): [219..220]
 a59(r130): [221..222]
 a60(r129): [223..224]
 a61(r179): [225..226]
 a62(r178): [229..230]
 a63(r128): [229..232]
 a64(r127): [233..234]
 a65(r177): [235..236]
 a66(r176): [239..240]
 a67(r126): [239..242]
 a68(r125): [243..244]
 a69(r175): [245..246]
 a70(r173): [249..250]
 a71(r174): [251..252]
 a72(r172): [285..286]
 a73(r170): [256..257]
 a74(r171): [258..259]
 a75(r123): [262..265]
 a76(r124): [262..263]
 a77(r120): [264..273]
 a78(r122): [266..269]
 a79(r169): [266..267]
 a80(r121): [270..271]
 a81(r119): [274..275]
 a82(r118): [276..277]
 a83(r168): [278..279]
 a84(r167): [292..293]
 a85(r117): [299..300]
 a86(r166): [301..302]
 a87(r165): [308..309]
 a88(r163): [312..313]
 a89(r164): [314..315]
 a90(r162): [318..319]
 a91(r161): [320..321]
 a92(r159): [324..327]
 a93(r160): [324..325]
 a94(r116): [333..334]
 a95(r158): [335..336]
 a96(r157): [339..340]
 a97(r156): [341..342]
 a98(r155): [345..346]
 a99(r115): [347..348]
 a100(r114): [349..350]
 a101(r113): [351..352]
 a102(r154): [353..354]
Compressing live ranges: from 357 to 176 - 49%
Ranges after the compression:
 a0(r153): [0..1]
 a1(r152): [2..3]
 a2(r215): [2..3]
 a3(r151): [4..5]
 a4(r150): [6..7]
 a5(r214): [8..9]
 a6(r212): [10..11]
 a7(r213): [10..11]
 a8(r149): [12..13]
 a9(r211): [14..15]
 a10(r209): [16..17]
 a11(r210): [16..17]
 a12(r208): [18..19]
 a13(r148): [20..21]
 a14(r147): [22..23]
 a15(r146): [24..25]
 a16(r207): [26..27]
 a17(r206): [28..29]
 a18(r145): [28..29]
 a19(r144): [30..31]
 a20(r205): [32..33]
 a21(r204): [34..35]
 a22(r143): [34..35]
 a23(r142): [36..37]
 a24(r203): [38..39]
 a25(r201): [40..41]
 a26(r202): [42..43]
 a27(r200): [62..63]
 a28(r198): [44..45]
 a29(r199): [46..47]
 a30(r140): [48..51]
 a31(r141): [48..49]
 a32(r137): [50..57]
 a33(r139): [52..53]
 a34(r138): [54..55]
 a35(r197): [56..57]
 a36(r136): [58..59]
 a37(r196): [58..59]
 a38(r135): [60..61]
 a39(r195): [64..65]
 a40(r134): [66..67]
 a41(r194): [68..69]
 a42(r193): [70..71]
 a43(r191): [72..73]
 a44(r192): [74..75]
 a45(r190): [76..77]
 a46(r189): [78..79]
 a47(r187): [80..81]
 a48(r188): [80..81]
 a49(r133): [82..83]
 a50(r186): [84..85]
 a51(r184): [86..87]
 a52(r185): [86..87]
 a53(r132): [88..89]
 a54(r183): [90..91]
 a55(r181): [92..93]
 a56(r182): [92..93]
 a57(r180): [94..95]
 a58(r131): [96..97]
 a59(r130): [98..99]
 a60(r129): [100..101]
 a61(r179): [102..103]
 a62(r178): [104..105]
 a63(r128): [104..105]
 a64(r127): [106..107]
 a65(r177): [108..109]
 a66(r176): [110..111]
 a67(r126): [110..111]
 a68(r125): [112..113]
 a69(r175): [114..115]
 a70(r173): [116..117]
 a71(r174): [118..119]
 a72(r172): [138..139]
 a73(r170): [120..121]
 a74(r171): [122..123]
 a75(r123): [124..127]
 a76(r124): [124..125]
 a77(r120): [126..131]
 a78(r122): [128..129]
 a79(r169): [128..129]
 a80(r121): [130..131]
 a81(r119): [132..133]
 a82(r118): [134..135]
 a83(r168): [136..137]
 a84(r167): [140..141]
 a85(r117): [142..143]
 a86(r166): [144..145]
 a87(r165): [146..147]
 a88(r163): [148..149]
 a89(r164): [150..151]
 a90(r162): [152..153]
 a91(r161): [154..155]
 a92(r159): [156..157]
 a93(r160): [156..157]
 a94(r116): [158..159]
 a95(r158): [160..161]
 a96(r157): [162..163]
 a97(r156): [164..165]
 a98(r155): [166..167]
 a99(r115): [168..169]
 a100(r114): [170..171]
 a101(r113): [172..173]
 a102(r154): [174..175]
  regions=1, blocks=21, points=176
    allocnos=103 (big 0), copies=0, conflicts=0, ranges=103
Disposition:
  101:r113 l0     3  100:r114 l0     3   99:r115 l0     3   94:r116 l0     3
   85:r117 l0     3   82:r118 l0     3   81:r119 l0     3   77:r120 l0     1
   80:r121 l0     3   78:r122 l0     3   75:r123 l0     3   76:r124 l0     2
   68:r125 l0     3   67:r126 l0     3   64:r127 l0     3   63:r128 l0     3
   60:r129 l0     3   59:r130 l0     3   58:r131 l0     3   53:r132 l0     3
   49:r133 l0     3   40:r134 l0     3   38:r135 l0     3   36:r136 l0     3
   32:r137 l0     3   34:r138 l0     2   33:r139 l0     2   30:r140 l0     2
   31:r141 l0     3   23:r142 l0     3   22:r143 l0     3   19:r144 l0     3
   18:r145 l0     3   15:r146 l0     3   14:r147 l0     3   13:r148 l0     3
    8:r149 l0     3    4:r150 l0     3    3:r151 l0     3    1:r152 l0     2
    0:r153 l0     3  102:r154 l0     3   98:r155 l0     3   97:r156 l0     3
   96:r157 l0     3   95:r158 l0     3   92:r159 l0     3   93:r160 l0     2
   91:r161 l0     3   90:r162 l0     3   88:r163 l0     3   89:r164 l0     3
   87:r165 l0     3   86:r166 l0     3   84:r167 l0     3   83:r168 l0     3
   79:r169 l0     2   73:r170 l0     3   74:r171 l0     3   72:r172 l0     3
   70:r173 l0     3   71:r174 l0     3   69:r175 l0     3   66:r176 l0     2
   65:r177 l0     3   62:r178 l0     2   61:r179 l0     3   57:r180 l0     3
   55:r181 l0     2   56:r182 l0     3   54:r183 l0     3   51:r184 l0     3
   52:r185 l0     2   50:r186 l0     3   47:r187 l0     3   48:r188 l0     2
   46:r189 l0     3   45:r190 l0     3   43:r191 l0     3   44:r192 l0     3
   42:r193 l0     3   41:r194 l0     3   39:r195 l0     3   37:r196 l0     2
   35:r197 l0     2   28:r198 l0     3   29:r199 l0     3   27:r200 l0     3
   25:r201 l0     3   26:r202 l0     3   24:r203 l0     3   21:r204 l0     2
   20:r205 l0     3   17:r206 l0     2   16:r207 l0     3   12:r208 l0     3
   10:r209 l0     2   11:r210 l0     3    9:r211 l0     3    6:r212 l0     3
    7:r213 l0     2    5:r214 l0     3    2:r215 l0     3
+++Costs: overall 2000, reg 2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


sdc_handler

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 102 [sfp] 103 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={11d,6u} r1={7d,2u} r2={7d,2u} r3={5d} r11={1d,20u} r12={8d} r13={1d,24u} r14={5d} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={14d,10u} r101={4d} r102={1d,52u} r103={1d,19u} r104={4d} r105={4d} r106={4d} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} 
;;    total ref usage 758{520d,238u,0e} in 169{165 regular + 4 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 113 114 115 116 154 155 156 157 158
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 154)
        (symbol_ref:SI ("base") [flags 0x2]  <var_decl 0x7f2800e6a2d0 base>)) "sdc.c":94:26 253 {*arm_movsi_insn}
     (nil))
(insn 6 5 7 2 (set (reg:SI 113 [ base.3_1 ])
        (mem/c:SI (reg/f:SI 154) [1 base+0 S4 A32])) "sdc.c":94:26 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 154)
        (nil)))
(insn 7 6 8 2 (set (reg:SI 114 [ _2 ])
        (plus:SI (reg:SI 113 [ base.3_1 ])
            (const_int 52 [0x34]))) "sdc.c":94:26 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 113 [ base.3_1 ])
        (nil)))
(insn 8 7 9 2 (set (reg/f:SI 115 [ _3 ])
        (reg:SI 114 [ _2 ])) "sdc.c":94:13 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 114 [ _2 ])
        (nil)))
(insn 9 8 10 2 (set (reg:SI 155)
        (mem:SI (reg/f:SI 115 [ _3 ]) [1 *_3+0 S4 A32])) "sdc.c":94:10 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 115 [ _3 ])
        (nil)))
(insn 10 9 11 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [1 status+0 S4 A64])
        (reg:SI 155)) "sdc.c":94:10 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 155)
        (nil)))
(insn 11 10 12 2 (set (reg/f:SI 156)
        (symbol_ref:SI ("color") [flags 0x40]  <var_decl 0x7f2801b4c480 color>)) "sdc.c":95:12 253 {*arm_movsi_insn}
     (nil))
(insn 12 11 13 2 (set (reg:SI 157)
        (mem/c:SI (reg/f:SI 156) [1 color+0 S4 A32])) "sdc.c":95:12 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 156)
        (nil)))
(insn 13 12 14 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [1 oldcolor+0 S4 A32])
        (reg:SI 157)) "sdc.c":95:12 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 157)
        (nil)))
(insn 14 13 15 2 (set (reg:SI 158)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [1 status+0 S4 A64])) "sdc.c":97:14 253 {*arm_movsi_insn}
     (nil))
(insn 15 14 16 2 (set (reg:SI 116 [ _4 ])
        (and:SI (reg:SI 158)
            (const_int 131072 [0x20000]))) "sdc.c":97:14 90 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 158)
        (nil)))
(insn 16 15 17 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 116 [ _4 ])
            (const_int 0 [0]))) "sdc.c":97:6 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 116 [ _4 ])
        (nil)))
(jump_insn 17 16 18 2 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 104)
            (pc))) "sdc.c":97:6 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (nil))
 -> 104)
;;  succ:       3 (FALLTHRU)
;;              11
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 159 160 161 162 163 164 165
(note 18 17 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 3 (set (reg/f:SI 159)
        (symbol_ref:SI ("color") [flags 0x40]  <var_decl 0x7f2801b4c480 color>)) "sdc.c":98:12 253 {*arm_movsi_insn}
     (nil))
(insn 20 19 21 3 (set (reg:SI 160)
        (const_int 2 [0x2])) "sdc.c":98:12 253 {*arm_movsi_insn}
     (nil))
(insn 21 20 22 3 (set (mem/c:SI (reg/f:SI 159) [1 color+0 S4 A32])
        (reg:SI 160)) "sdc.c":98:12 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 160)
        (expr_list:REG_DEAD (reg/f:SI 159)
            (nil))))
(insn 22 21 23 3 (set (reg/f:SI 161)
        (symbol_ref:SI ("rxbuf") [flags 0x2]  <var_decl 0x7f2800e6a360 rxbuf>)) "sdc.c":100:9 253 {*arm_movsi_insn}
     (nil))
(insn 23 22 24 3 (set (reg/f:SI 162)
        (mem/f/c:SI (reg/f:SI 161) [3 rxbuf+0 S4 A32])) "sdc.c":100:9 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 161)
        (nil)))
(insn 24 23 25 3 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A64])
        (reg/f:SI 162)) "sdc.c":100:9 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 162)
        (nil)))
(insn 25 24 26 3 (set (reg:SI 164)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [1 status+0 S4 A64])) "sdc.c":101:17 253 {*arm_movsi_insn}
     (nil))
(insn 26 25 27 3 (set (reg:SI 163)
        (and:SI (reg:SI 164)
            (const_int 42 [0x2a]))) "sdc.c":101:17 90 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 164)
        (nil)))
(insn 27 26 28 3 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 status_err+0 S4 A32])
        (reg:SI 163)) "sdc.c":101:17 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 163)
        (nil)))
(insn 28 27 29 3 (set (reg:SI 165)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 status_err+0 S4 A32])) "sdc.c":102:9 253 {*arm_movsi_insn}
     (nil))
(insn 29 28 30 3 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 165)
            (const_int 0 [0]))) "sdc.c":102:9 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 165)
        (nil)))
(jump_insn 30 29 31 3 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 83)
            (pc))) "sdc.c":102:9 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (nil))
 -> 83)
;;  succ:       4 (FALLTHRU)
;;              9
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 117 166
(note 31 30 32 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 4 (set (reg/f:SI 166)
        (symbol_ref:SI ("rxcount") [flags 0x2]  <var_decl 0x7f2800e6a480 rxcount>)) "sdc.c":102:22 253 {*arm_movsi_insn}
     (nil))
(insn 33 32 34 4 (set (reg:SI 117 [ rxcount.4_5 ])
        (mem/c:SI (reg/f:SI 166) [1 rxcount+0 S4 A32])) "sdc.c":102:22 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 166)
        (nil)))
(insn 34 33 35 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 117 [ rxcount.4_5 ])
            (const_int 0 [0]))) "sdc.c":102:22 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 117 [ rxcount.4_5 ])
        (nil)))
(jump_insn 35 34 36 4 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 83)
            (pc))) "sdc.c":102:22 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (nil))
 -> 83)
;;  succ:       5 (FALLTHRU)
;;              9
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 167
(note 36 35 37 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 5 (set (reg:SI 167)
        (const_int 0 [0])) "sdc.c":104:16 253 {*arm_movsi_insn}
     (nil))
(insn 38 37 209 5 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
        (reg:SI 167)) "sdc.c":104:16 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 167)
        (nil)))
(jump_insn 209 38 210 5 (set (pc)
        (label_ref 55)) "sdc.c":104:9 284 {*arm_jump}
     (nil)
 -> 55)
;;  succ:       7 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

(barrier 210 209 57)
;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       7
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 118 119 120 121 122 123 124 168 169 170 171
(code_label 57 210 41 6 8 (nil) [1 uses])
(note 41 57 42 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 6 (set (reg/f:SI 168)
        (symbol_ref:SI ("base") [flags 0x2]  <var_decl 0x7f2800e6a2d0 base>)) "sdc.c":105:38 253 {*arm_movsi_insn}
     (nil))
(insn 43 42 44 6 (set (reg:SI 118 [ base.5_6 ])
        (mem/c:SI (reg/f:SI 168) [1 base+0 S4 A32])) "sdc.c":105:38 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 168)
        (nil)))
(insn 44 43 45 6 (set (reg:SI 119 [ _7 ])
        (plus:SI (reg:SI 118 [ base.5_6 ])
            (const_int 128 [0x80]))) "sdc.c":105:38 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 118 [ base.5_6 ])
        (nil)))
(insn 45 44 46 6 (set (reg/f:SI 120 [ _8 ])
        (reg:SI 119 [ _7 ])) "sdc.c":105:25 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 119 [ _7 ])
        (nil)))
(insn 46 45 47 6 (set (reg:SI 121 [ i.6_9 ])
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "sdc.c":105:17 253 {*arm_movsi_insn}
     (nil))
(insn 47 46 48 6 (set (reg:SI 122 [ _10 ])
        (ashift:SI (reg:SI 121 [ i.6_9 ])
            (const_int 2 [0x2]))) "sdc.c":105:17 147 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 121 [ i.6_9 ])
        (nil)))
(insn 48 47 49 6 (set (reg:SI 169)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A64])) "sdc.c":105:17 253 {*arm_movsi_insn}
     (nil))
(insn 49 48 50 6 (set (reg/f:SI 123 [ _11 ])
        (plus:SI (reg:SI 169)
            (reg:SI 122 [ _10 ]))) "sdc.c":105:17 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 169)
        (expr_list:REG_DEAD (reg:SI 122 [ _10 ])
            (nil))))
(insn 50 49 51 6 (set (reg:SI 124 [ _12 ])
        (mem:SI (reg/f:SI 120 [ _8 ]) [1 *_8+0 S4 A32])) "sdc.c":105:24 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 120 [ _8 ])
        (nil)))
(insn 51 50 52 6 (set (mem:SI (reg/f:SI 123 [ _11 ]) [1 *_11+0 S4 A32])
        (reg:SI 124 [ _12 ])) "sdc.c":105:22 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 124 [ _12 ])
        (expr_list:REG_DEAD (reg/f:SI 123 [ _11 ])
            (nil))))
(insn 52 51 53 6 (set (reg:SI 171)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "sdc.c":104:30 253 {*arm_movsi_insn}
     (nil))
(insn 53 52 54 6 (set (reg:SI 170)
        (plus:SI (reg:SI 171)
            (const_int 1 [0x1]))) "sdc.c":104:30 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 171)
        (nil)))
(insn 54 53 55 6 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
        (reg:SI 170)) "sdc.c":104:30 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 170)
        (nil)))
;;  succ:       7 (FALLTHRU,DFS_BACK)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 (FALLTHRU,DFS_BACK)
;;              5 [always] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 172
(code_label 55 54 56 7 7 (nil) [1 uses])
(note 56 55 60 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 60 56 61 7 (set (reg:SI 172)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "sdc.c":104:23 253 {*arm_movsi_insn}
     (nil))
(insn 61 60 62 7 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 172)
            (const_int 15 [0xf]))) "sdc.c":104:23 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 172)
        (nil)))
(jump_insn 62 61 63 7 (set (pc)
        (if_then_else (le (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 57)
            (pc))) "sdc.c":104:23 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (nil))
 -> 57)
;;  succ:       6
;;              8 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 125 126 127 128 129 130 131 173 174 175 176 177 178 179 180
(note 63 62 64 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 8 (set (reg:SI 174)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A64])) "sdc.c":106:12 253 {*arm_movsi_insn}
     (nil))
(insn 65 64 66 8 (set (reg:SI 173)
        (plus:SI (reg:SI 174)
            (const_int 64 [0x40]))) "sdc.c":106:12 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 174)
        (nil)))
(insn 66 65 67 8 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A64])
        (reg:SI 173)) "sdc.c":106:12 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 173)
        (nil)))
(insn 67 66 68 8 (set (reg/f:SI 175)
        (symbol_ref:SI ("rxcount") [flags 0x2]  <var_decl 0x7f2800e6a480 rxcount>)) "sdc.c":107:17 253 {*arm_movsi_insn}
     (nil))
(insn 68 67 69 8 (set (reg:SI 125 [ rxcount.7_13 ])
        (mem/c:SI (reg/f:SI 175) [1 rxcount+0 S4 A32])) "sdc.c":107:17 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 175)
        (nil)))
(insn 69 68 70 8 (set (reg:SI 126 [ _14 ])
        (plus:SI (reg:SI 125 [ rxcount.7_13 ])
            (const_int -64 [0xffffffffffffffc0]))) "sdc.c":107:17 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 125 [ rxcount.7_13 ])
        (nil)))
(insn 70 69 71 8 (set (reg/f:SI 176)
        (symbol_ref:SI ("rxcount") [flags 0x2]  <var_decl 0x7f2800e6a480 rxcount>)) "sdc.c":107:17 253 {*arm_movsi_insn}
     (nil))
(insn 71 70 72 8 (set (mem/c:SI (reg/f:SI 176) [1 rxcount+0 S4 A32])
        (reg:SI 126 [ _14 ])) "sdc.c":107:17 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 176)
        (expr_list:REG_DEAD (reg:SI 126 [ _14 ])
            (nil))))
(insn 72 71 73 8 (set (reg/f:SI 177)
        (symbol_ref:SI ("rxbuf") [flags 0x2]  <var_decl 0x7f2800e6a360 rxbuf>)) "sdc.c":108:15 253 {*arm_movsi_insn}
     (nil))
(insn 73 72 74 8 (set (reg/f:SI 127 [ rxbuf.8_15 ])
        (mem/f/c:SI (reg/f:SI 177) [3 rxbuf+0 S4 A32])) "sdc.c":108:15 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 177)
        (nil)))
(insn 74 73 75 8 (set (reg/f:SI 128 [ _16 ])
        (plus:SI (reg/f:SI 127 [ rxbuf.8_15 ])
            (const_int 64 [0x40]))) "sdc.c":108:15 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg/f:SI 127 [ rxbuf.8_15 ])
        (nil)))
(insn 75 74 76 8 (set (reg/f:SI 178)
        (symbol_ref:SI ("rxbuf") [flags 0x2]  <var_decl 0x7f2800e6a360 rxbuf>)) "sdc.c":108:15 253 {*arm_movsi_insn}
     (nil))
(insn 76 75 77 8 (set (mem/f/c:SI (reg/f:SI 178) [3 rxbuf+0 S4 A32])
        (reg/f:SI 128 [ _16 ])) "sdc.c":108:15 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 178)
        (expr_list:REG_DEAD (reg/f:SI 128 [ _16 ])
            (nil))))
(insn 77 76 78 8 (set (reg/f:SI 179)
        (symbol_ref:SI ("base") [flags 0x2]  <var_decl 0x7f2800e6a2d0 base>)) "sdc.c":109:25 253 {*arm_movsi_insn}
     (nil))
(insn 78 77 79 8 (set (reg:SI 129 [ base.9_17 ])
        (mem/c:SI (reg/f:SI 179) [1 base+0 S4 A32])) "sdc.c":109:25 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 179)
        (nil)))
(insn 79 78 80 8 (set (reg:SI 130 [ _18 ])
        (plus:SI (reg:SI 129 [ base.9_17 ])
            (const_int 52 [0x34]))) "sdc.c":109:25 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 129 [ base.9_17 ])
        (nil)))
(insn 80 79 81 8 (set (reg/f:SI 131 [ _19 ])
        (reg:SI 130 [ _18 ])) "sdc.c":109:12 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 130 [ _18 ])
        (nil)))
(insn 81 80 82 8 (set (reg:SI 180)
        (mem:SI (reg/f:SI 131 [ _19 ]) [1 *_19+0 S4 A32])) "sdc.c":109:9 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 131 [ _19 ])
        (nil)))
(insn 82 81 83 8 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [1 status+0 S4 A64])
        (reg:SI 180)) "sdc.c":109:9 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 180)
        (nil)))
;;  succ:       9 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       3
;;              4
;;              8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 132 181 182 183
(code_label 83 82 84 9 6 (nil) [2 uses])
(note 84 83 85 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 86 9 (set (reg/f:SI 181)
        (symbol_ref:SI ("color") [flags 0x40]  <var_decl 0x7f2801b4c480 color>)) "sdc.c":111:12 253 {*arm_movsi_insn}
     (nil))
(insn 86 85 87 9 (set (reg:SI 182)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [1 oldcolor+0 S4 A32])) "sdc.c":111:12 253 {*arm_movsi_insn}
     (nil))
(insn 87 86 88 9 (set (mem/c:SI (reg/f:SI 181) [1 color+0 S4 A32])
        (reg:SI 182)) "sdc.c":111:12 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 182)
        (expr_list:REG_DEAD (reg/f:SI 181)
            (nil))))
(insn 88 87 89 9 (set (reg/f:SI 183)
        (symbol_ref:SI ("rxcount") [flags 0x2]  <var_decl 0x7f2800e6a480 rxcount>)) "sdc.c":112:18 253 {*arm_movsi_insn}
     (nil))
(insn 89 88 90 9 (set (reg:SI 132 [ rxcount.10_20 ])
        (mem/c:SI (reg/f:SI 183) [1 rxcount+0 S4 A32])) "sdc.c":112:18 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 183)
        (nil)))
(insn 90 89 91 9 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 132 [ rxcount.10_20 ])
            (const_int 0 [0]))) "sdc.c":112:9 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 132 [ rxcount.10_20 ])
        (nil)))
(jump_insn 91 90 92 9 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 194)
            (pc))) "sdc.c":112:9 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (nil))
 -> 194)
;;  succ:       10 (FALLTHRU)
;;              20
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 184 185
(note 92 91 93 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 10 (set (reg:SI 2 r2)
        (const_int 21 [0x15])) "sdc.c":113:9 253 {*arm_movsi_insn}
     (nil))
(insn 94 93 95 10 (set (reg:SI 1 r1)
        (const_int 0 [0])) "sdc.c":113:9 253 {*arm_movsi_insn}
     (nil))
(insn 95 94 96 10 (set (reg:SI 0 r0)
        (const_int 12 [0xc])) "sdc.c":113:9 253 {*arm_movsi_insn}
     (nil))
(call_insn 96 95 97 10 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_command") [flags 0x3]  <function_decl 0x7f2800e61e00 do_command>) [0 do_command S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "sdc.c":113:9 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 97 96 98 10 (set (reg/f:SI 184)
        (symbol_ref:SI ("rxdone") [flags 0x2]  <var_decl 0x7f2800e6a5a0 rxdone>)) "sdc.c":114:16 253 {*arm_movsi_insn}
     (nil))
(insn 98 97 99 10 (set (reg:SI 185)
        (const_int 1 [0x1])) "sdc.c":114:16 253 {*arm_movsi_insn}
     (nil))
(insn 99 98 100 10 (set (mem/c:SI (reg/f:SI 184) [1 rxdone+0 S4 A32])
        (reg:SI 185)) "sdc.c":114:16 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 185)
        (expr_list:REG_DEAD (reg/f:SI 184)
            (nil))))
(insn 100 99 101 10 (set (reg:SI 0 r0)
        (symbol_ref:SI ("rxsem") [flags 0x2]  <var_decl 0x7f2800e6a6c0 rxsem>)) "sdc.c":116:9 253 {*arm_movsi_insn}
     (nil))
(call_insn 101 100 211 10 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("V") [flags 0x41]  <function_decl 0x7f2800e73200 V>) [0 V S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "sdc.c":116:9 291 {*call_value_symbol}
     (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(jump_insn 211 101 212 10 (set (pc)
        (label_ref 194)) 284 {*arm_jump}
     (nil)
 -> 194)
;;  succ:       20 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

(barrier 212 211 104)
;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       2
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 133 186
(code_label 104 212 105 11 5 (nil) [1 uses])
(note 105 104 106 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 106 105 107 11 (set (reg:SI 186)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [1 status+0 S4 A64])) "sdc.c":119:19 253 {*arm_movsi_insn}
     (nil))
(insn 107 106 108 11 (set (reg:SI 133 [ _21 ])
        (and:SI (reg:SI 186)
            (const_int 262144 [0x40000]))) "sdc.c":119:19 90 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 186)
        (nil)))
(insn 108 107 109 11 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 133 [ _21 ])
            (const_int 0 [0]))) "sdc.c":119:11 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 133 [ _21 ])
        (nil)))
(jump_insn 109 108 110 11 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 194)
            (pc))) "sdc.c":119:11 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (nil))
 -> 194)
;;  succ:       12 (FALLTHRU)
;;              20
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 187 188 189 190 191 192 193
(note 110 109 111 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 112 12 (set (reg/f:SI 187)
        (symbol_ref:SI ("color") [flags 0x40]  <var_decl 0x7f2801b4c480 color>)) "sdc.c":120:11 253 {*arm_movsi_insn}
     (nil))
(insn 112 111 113 12 (set (reg:SI 188)
        (const_int 3 [0x3])) "sdc.c":120:11 253 {*arm_movsi_insn}
     (nil))
(insn 113 112 114 12 (set (mem/c:SI (reg/f:SI 187) [1 color+0 S4 A32])
        (reg:SI 188)) "sdc.c":120:11 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 188)
        (expr_list:REG_DEAD (reg/f:SI 187)
            (nil))))
(insn 114 113 115 12 (set (reg/f:SI 189)
        (symbol_ref:SI ("txbuf") [flags 0x2]  <var_decl 0x7f2800e6a3f0 txbuf>)) "sdc.c":122:8 253 {*arm_movsi_insn}
     (nil))
(insn 115 114 116 12 (set (reg/f:SI 190)
        (mem/f/c:SI (reg/f:SI 189) [3 txbuf+0 S4 A32])) "sdc.c":122:8 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 189)
        (nil)))
(insn 116 115 117 12 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A64])
        (reg/f:SI 190)) "sdc.c":122:8 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 190)
        (nil)))
(insn 117 116 118 12 (set (reg:SI 192)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [1 status+0 S4 A64])) "sdc.c":123:16 253 {*arm_movsi_insn}
     (nil))
(insn 118 117 119 12 (set (reg:SI 191)
        (and:SI (reg:SI 192)
            (const_int 10 [0xa]))) "sdc.c":123:16 90 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 192)
        (nil)))
(insn 119 118 120 12 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 status_err+0 S4 A32])
        (reg:SI 191)) "sdc.c":123:16 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 191)
        (nil)))
(insn 120 119 121 12 (set (reg:SI 193)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 status_err+0 S4 A32])) "sdc.c":125:8 253 {*arm_movsi_insn}
     (nil))
(insn 121 120 122 12 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 193)
            (const_int 0 [0]))) "sdc.c":125:8 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 193)
        (nil)))
(jump_insn 122 121 123 12 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 175)
            (pc))) "sdc.c":125:8 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (nil))
 -> 175)
;;  succ:       13 (FALLTHRU)
;;              18
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 14, flags: (RTL)
;;  pred:       12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 134 194
(note 123 122 124 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 124 123 125 13 (set (reg/f:SI 194)
        (symbol_ref:SI ("txcount") [flags 0x2]  <var_decl 0x7f2800e6a510 txcount>)) "sdc.c":125:21 253 {*arm_movsi_insn}
     (nil))
(insn 125 124 126 13 (set (reg:SI 134 [ txcount.11_22 ])
        (mem/c:SI (reg/f:SI 194) [1 txcount+0 S4 A32])) "sdc.c":125:21 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 194)
        (nil)))
(insn 126 125 127 13 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 134 [ txcount.11_22 ])
            (const_int 0 [0]))) "sdc.c":125:21 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 134 [ txcount.11_22 ])
        (nil)))
(jump_insn 127 126 128 13 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 175)
            (pc))) "sdc.c":125:21 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (nil))
 -> 175)
;;  succ:       14 (FALLTHRU)
;;              18
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 14, loop depth 0, maybe hot
;;  prev block 13, next block 15, flags: (RTL)
;;  pred:       13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 195
(note 128 127 129 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 129 128 130 14 (set (reg:SI 195)
        (const_int 0 [0])) "sdc.c":127:15 253 {*arm_movsi_insn}
     (nil))
(insn 130 129 213 14 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
        (reg:SI 195)) "sdc.c":127:15 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 195)
        (nil)))
(jump_insn 213 130 214 14 (set (pc)
        (label_ref 147)) "sdc.c":127:8 284 {*arm_jump}
     (nil)
 -> 147)
;;  succ:       16 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

(barrier 214 213 149)
;; basic block 15, loop depth 0, maybe hot
;;  prev block 14, next block 16, flags: (RTL)
;;  pred:       16
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 135 136 137 138 139 140 141 196 197 198 199
(code_label 149 214 133 15 12 (nil) [1 uses])
(note 133 149 134 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 134 133 135 15 (set (reg:SI 135 [ i.12_23 ])
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "sdc.c":128:41 253 {*arm_movsi_insn}
     (nil))
(insn 135 134 136 15 (set (reg:SI 136 [ _24 ])
        (ashift:SI (reg:SI 135 [ i.12_23 ])
            (const_int 2 [0x2]))) "sdc.c":128:41 147 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 135 [ i.12_23 ])
        (nil)))
(insn 136 135 137 15 (set (reg:SI 196)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A64])) "sdc.c":128:41 253 {*arm_movsi_insn}
     (nil))
(insn 137 136 138 15 (set (reg/f:SI 137 [ _25 ])
        (plus:SI (reg:SI 196)
            (reg:SI 136 [ _24 ]))) "sdc.c":128:41 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 196)
        (expr_list:REG_DEAD (reg:SI 136 [ _24 ])
            (nil))))
(insn 138 137 139 15 (set (reg/f:SI 197)
        (symbol_ref:SI ("base") [flags 0x2]  <var_decl 0x7f2800e6a2d0 base>)) "sdc.c":128:26 253 {*arm_movsi_insn}
     (nil))
(insn 139 138 140 15 (set (reg:SI 138 [ base.13_26 ])
        (mem/c:SI (reg/f:SI 197) [1 base+0 S4 A32])) "sdc.c":128:26 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 197)
        (nil)))
(insn 140 139 141 15 (set (reg:SI 139 [ _27 ])
        (plus:SI (reg:SI 138 [ base.13_26 ])
            (const_int 128 [0x80]))) "sdc.c":128:26 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 138 [ base.13_26 ])
        (nil)))
(insn 141 140 142 15 (set (reg/f:SI 140 [ _28 ])
        (reg:SI 139 [ _27 ])) "sdc.c":128:13 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 139 [ _27 ])
        (nil)))
(insn 142 141 143 15 (set (reg:SI 141 [ _29 ])
        (mem:SI (reg/f:SI 137 [ _25 ]) [1 *_25+0 S4 A32])) "sdc.c":128:36 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 137 [ _25 ])
        (nil)))
(insn 143 142 144 15 (set (mem:SI (reg/f:SI 140 [ _28 ]) [1 *_28+0 S4 A32])
        (reg:SI 141 [ _29 ])) "sdc.c":128:34 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 141 [ _29 ])
        (expr_list:REG_DEAD (reg/f:SI 140 [ _28 ])
            (nil))))
(insn 144 143 145 15 (set (reg:SI 199)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "sdc.c":127:29 253 {*arm_movsi_insn}
     (nil))
(insn 145 144 146 15 (set (reg:SI 198)
        (plus:SI (reg:SI 199)
            (const_int 1 [0x1]))) "sdc.c":127:29 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 199)
        (nil)))
(insn 146 145 147 15 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
        (reg:SI 198)) "sdc.c":127:29 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 198)
        (nil)))
;;  succ:       16 (FALLTHRU,DFS_BACK)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 16, loop depth 0, maybe hot
;;  prev block 15, next block 17, flags: (RTL)
;;  pred:       15 (FALLTHRU,DFS_BACK)
;;              14 [always] 
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 200
(code_label 147 146 148 16 11 (nil) [1 uses])
(note 148 147 152 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 152 148 153 16 (set (reg:SI 200)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "sdc.c":127:22 253 {*arm_movsi_insn}
     (nil))
(insn 153 152 154 16 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 200)
            (const_int 15 [0xf]))) "sdc.c":127:22 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 200)
        (nil)))
(jump_insn 154 153 155 16 (set (pc)
        (if_then_else (le (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 149)
            (pc))) "sdc.c":127:22 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (nil))
 -> 149)
;;  succ:       15
;;              17 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 17, loop depth 0, maybe hot
;;  prev block 16, next block 18, flags: (RTL)
;;  pred:       16 (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 142 143 144 145 146 147 148 201 202 203 204 205 206 207 208
(note 155 154 156 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 156 155 157 17 (set (reg:SI 202)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A64])) "sdc.c":129:11 253 {*arm_movsi_insn}
     (nil))
(insn 157 156 158 17 (set (reg:SI 201)
        (plus:SI (reg:SI 202)
            (const_int 64 [0x40]))) "sdc.c":129:11 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 202)
        (nil)))
(insn 158 157 159 17 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A64])
        (reg:SI 201)) "sdc.c":129:11 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 201)
        (nil)))
(insn 159 158 160 17 (set (reg/f:SI 203)
        (symbol_ref:SI ("txcount") [flags 0x2]  <var_decl 0x7f2800e6a510 txcount>)) "sdc.c":130:16 253 {*arm_movsi_insn}
     (nil))
(insn 160 159 161 17 (set (reg:SI 142 [ txcount.14_30 ])
        (mem/c:SI (reg/f:SI 203) [1 txcount+0 S4 A32])) "sdc.c":130:16 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 203)
        (nil)))
(insn 161 160 162 17 (set (reg:SI 143 [ _31 ])
        (plus:SI (reg:SI 142 [ txcount.14_30 ])
            (const_int -64 [0xffffffffffffffc0]))) "sdc.c":130:16 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 142 [ txcount.14_30 ])
        (nil)))
(insn 162 161 163 17 (set (reg/f:SI 204)
        (symbol_ref:SI ("txcount") [flags 0x2]  <var_decl 0x7f2800e6a510 txcount>)) "sdc.c":130:16 253 {*arm_movsi_insn}
     (nil))
(insn 163 162 164 17 (set (mem/c:SI (reg/f:SI 204) [1 txcount+0 S4 A32])
        (reg:SI 143 [ _31 ])) "sdc.c":130:16 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 204)
        (expr_list:REG_DEAD (reg:SI 143 [ _31 ])
            (nil))))
(insn 164 163 165 17 (set (reg/f:SI 205)
        (symbol_ref:SI ("txbuf") [flags 0x2]  <var_decl 0x7f2800e6a3f0 txbuf>)) "sdc.c":131:14 253 {*arm_movsi_insn}
     (nil))
(insn 165 164 166 17 (set (reg/f:SI 144 [ txbuf.15_32 ])
        (mem/f/c:SI (reg/f:SI 205) [3 txbuf+0 S4 A32])) "sdc.c":131:14 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 205)
        (nil)))
(insn 166 165 167 17 (set (reg/f:SI 145 [ _33 ])
        (plus:SI (reg/f:SI 144 [ txbuf.15_32 ])
            (const_int 64 [0x40]))) "sdc.c":131:14 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg/f:SI 144 [ txbuf.15_32 ])
        (nil)))
(insn 167 166 168 17 (set (reg/f:SI 206)
        (symbol_ref:SI ("txbuf") [flags 0x2]  <var_decl 0x7f2800e6a3f0 txbuf>)) "sdc.c":131:14 253 {*arm_movsi_insn}
     (nil))
(insn 168 167 169 17 (set (mem/f/c:SI (reg/f:SI 206) [3 txbuf+0 S4 A32])
        (reg/f:SI 145 [ _33 ])) "sdc.c":131:14 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 206)
        (expr_list:REG_DEAD (reg/f:SI 145 [ _33 ])
            (nil))))
(insn 169 168 170 17 (set (reg/f:SI 207)
        (symbol_ref:SI ("base") [flags 0x2]  <var_decl 0x7f2800e6a2d0 base>)) "sdc.c":132:31 253 {*arm_movsi_insn}
     (nil))
(insn 170 169 171 17 (set (reg:SI 146 [ base.16_34 ])
        (mem/c:SI (reg/f:SI 207) [1 base+0 S4 A32])) "sdc.c":132:31 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 207)
        (nil)))
(insn 171 170 172 17 (set (reg:SI 147 [ _35 ])
        (plus:SI (reg:SI 146 [ base.16_34 ])
            (const_int 52 [0x34]))) "sdc.c":132:31 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 146 [ base.16_34 ])
        (nil)))
(insn 172 171 173 17 (set (reg/f:SI 148 [ _36 ])
        (reg:SI 147 [ _35 ])) "sdc.c":132:18 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 147 [ _35 ])
        (nil)))
(insn 173 172 174 17 (set (reg:SI 208)
        (mem:SI (reg/f:SI 148 [ _36 ]) [1 *_36+0 S4 A32])) "sdc.c":132:15 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 148 [ _36 ])
        (nil)))
(insn 174 173 175 17 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [1 status+0 S4 A64])
        (reg:SI 208)) "sdc.c":132:15 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 208)
        (nil)))
;;  succ:       18 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 18, loop depth 0, maybe hot
;;  prev block 17, next block 19, flags: (RTL)
;;  pred:       12
;;              13
;;              17 (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 149 209 210 211
(code_label 175 174 176 18 10 (nil) [2 uses])
(note 176 175 177 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 177 176 178 18 (set (reg/f:SI 209)
        (symbol_ref:SI ("color") [flags 0x40]  <var_decl 0x7f2801b4c480 color>)) "sdc.c":134:11 253 {*arm_movsi_insn}
     (nil))
(insn 178 177 179 18 (set (reg:SI 210)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [1 oldcolor+0 S4 A32])) "sdc.c":134:11 253 {*arm_movsi_insn}
     (nil))
(insn 179 178 180 18 (set (mem/c:SI (reg/f:SI 209) [1 color+0 S4 A32])
        (reg:SI 210)) "sdc.c":134:11 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 210)
        (expr_list:REG_DEAD (reg/f:SI 209)
            (nil))))
(insn 180 179 181 18 (set (reg/f:SI 211)
        (symbol_ref:SI ("txcount") [flags 0x2]  <var_decl 0x7f2800e6a510 txcount>)) "sdc.c":135:17 253 {*arm_movsi_insn}
     (nil))
(insn 181 180 182 18 (set (reg:SI 149 [ txcount.17_37 ])
        (mem/c:SI (reg/f:SI 211) [1 txcount+0 S4 A32])) "sdc.c":135:17 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 211)
        (nil)))
(insn 182 181 183 18 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 149 [ txcount.17_37 ])
            (const_int 0 [0]))) "sdc.c":135:8 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 149 [ txcount.17_37 ])
        (nil)))
(jump_insn 183 182 184 18 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 194)
            (pc))) "sdc.c":135:8 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (nil))
 -> 194)
;;  succ:       19 (FALLTHRU)
;;              20
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 19, loop depth 0, maybe hot
;;  prev block 18, next block 20, flags: (RTL)
;;  pred:       18 (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 212 213
(note 184 183 185 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 185 184 186 19 (set (reg:SI 2 r2)
        (const_int 21 [0x15])) "sdc.c":136:8 253 {*arm_movsi_insn}
     (nil))
(insn 186 185 187 19 (set (reg:SI 1 r1)
        (const_int 0 [0])) "sdc.c":136:8 253 {*arm_movsi_insn}
     (nil))
(insn 187 186 188 19 (set (reg:SI 0 r0)
        (const_int 12 [0xc])) "sdc.c":136:8 253 {*arm_movsi_insn}
     (nil))
(call_insn 188 187 189 19 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_command") [flags 0x3]  <function_decl 0x7f2800e61e00 do_command>) [0 do_command S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "sdc.c":136:8 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 189 188 190 19 (set (reg/f:SI 212)
        (symbol_ref:SI ("txdone") [flags 0x2]  <var_decl 0x7f2800e6a630 txdone>)) "sdc.c":137:15 253 {*arm_movsi_insn}
     (nil))
(insn 190 189 191 19 (set (reg:SI 213)
        (const_int 1 [0x1])) "sdc.c":137:15 253 {*arm_movsi_insn}
     (nil))
(insn 191 190 192 19 (set (mem/c:SI (reg/f:SI 212) [1 txdone+0 S4 A32])
        (reg:SI 213)) "sdc.c":137:15 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 213)
        (expr_list:REG_DEAD (reg/f:SI 212)
            (nil))))
(insn 192 191 193 19 (set (reg:SI 0 r0)
        (symbol_ref:SI ("txsem") [flags 0x2]  <var_decl 0x7f2800e6a750 txsem>)) "sdc.c":138:8 253 {*arm_movsi_insn}
     (nil))
(call_insn 193 192 194 19 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("V") [flags 0x41]  <function_decl 0x7f2800e73200 V>) [0 V S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "sdc.c":138:8 291 {*call_value_symbol}
     (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
;;  succ:       20 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 20, loop depth 0, maybe hot
;;  prev block 19, next block 1, flags: (RTL)
;;  pred:       9
;;              11
;;              18
;;              19 (FALLTHRU)
;;              10 [always] 
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 150 151 152 153 214 215
(code_label 194 193 195 20 9 (nil) [4 uses])
(note 195 194 196 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 196 195 197 20 (set (reg/f:SI 214)
        (symbol_ref:SI ("base") [flags 0x2]  <var_decl 0x7f2800e6a2d0 base>)) "sdc.c":142:17 253 {*arm_movsi_insn}
     (nil))
(insn 197 196 198 20 (set (reg:SI 150 [ base.18_38 ])
        (mem/c:SI (reg/f:SI 214) [1 base+0 S4 A32])) "sdc.c":142:17 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 214)
        (nil)))
(insn 198 197 199 20 (set (reg:SI 151 [ _39 ])
        (plus:SI (reg:SI 150 [ base.18_38 ])
            (const_int 56 [0x38]))) "sdc.c":142:17 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 150 [ base.18_38 ])
        (nil)))
(insn 199 198 200 20 (set (reg/f:SI 152 [ _40 ])
        (reg:SI 151 [ _39 ])) "sdc.c":142:4 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 151 [ _39 ])
        (nil)))
(insn 200 199 201 20 (set (reg:SI 215)
        (const_int -1 [0xffffffffffffffff])) "sdc.c":142:33 253 {*arm_movsi_insn}
     (nil))
(insn 201 200 204 20 (set (mem:SI (reg/f:SI 152 [ _40 ]) [1 *_40+0 S4 A32])
        (reg:SI 215)) "sdc.c":142:33 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 215)
        (expr_list:REG_DEAD (reg/f:SI 152 [ _40 ])
            (nil))))
(insn 204 201 205 20 (clobber (reg/i:SI 0 r0)) "sdc.c":144:1 -1
     (expr_list:REG_UNUSED (reg/i:SI 0 r0)
        (nil)))
(insn 205 204 208 20 (clobber (reg:SI 153 [ <retval> ])) "sdc.c":144:1 -1
     (nil))
(insn 208 205 203 20 (const_int 0 [0]) "sdc.c":144:1 311 {nop}
     (nil))
(insn 203 208 206 20 (set (reg/i:SI 0 r0)
        (reg:SI 153 [ <retval> ])) "sdc.c":144:1 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 153 [ <retval> ])
        (nil)))
(insn 206 203 0 20 (use (reg/i:SI 0 r0)) "sdc.c":144:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp] 103 [afp]


;; Function sdc_init (sdc_init, funcdef_no=2, decl_uid=4506, cgraph_uid=3, symbol_order=11)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 11.
verify found no changes in insn with uid = 26.
verify found no changes in insn with uid = 30.
verify found no changes in insn with uid = 34.
verify found no changes in insn with uid = 38.
verify found no changes in insn with uid = 43.
verify found no changes in insn with uid = 48.
verify found no changes in insn with uid = 52.
verify found no changes in insn with uid = 72.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r123,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:10000
  a1(r139,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a2(r140,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a3(r137,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a4(r138,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a5(r135,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a6(r136,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a7(r133,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a8(r134,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a9(r122,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a10(r132,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a11(r121,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a12(r120,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a13(r131,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a14(r119,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:20000
  a15(r118,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:20000
  a16(r117,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a17(r130,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a18(r116,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a19(r115,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a20(r129,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a21(r114,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a22(r128,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a23(r113,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a24(r127,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a25(r125,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a26(r126,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a27(r124,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000

   Insn 77(l0): point = 0
   Insn 74(l0): point = 2
   Insn 79(l0): point = 4
   Insn 76(l0): point = 6
   Insn 75(l0): point = 8
   Insn 72(l0): point = 10
   Insn 71(l0): point = 12
   Insn 70(l0): point = 14
   Insn 69(l0): point = 16
   Insn 68(l0): point = 18
   Insn 67(l0): point = 20
   Insn 66(l0): point = 22
   Insn 65(l0): point = 24
   Insn 64(l0): point = 26
   Insn 63(l0): point = 28
   Insn 62(l0): point = 30
   Insn 61(l0): point = 32
   Insn 60(l0): point = 34
   Insn 59(l0): point = 36
   Insn 58(l0): point = 38
   Insn 57(l0): point = 40
   Insn 56(l0): point = 42
   Insn 55(l0): point = 44
   Insn 54(l0): point = 46
   Insn 53(l0): point = 48
   Insn 52(l0): point = 50
   Insn 51(l0): point = 52
   Insn 50(l0): point = 54
   Insn 49(l0): point = 56
   Insn 48(l0): point = 58
   Insn 47(l0): point = 60
   Insn 46(l0): point = 62
   Insn 45(l0): point = 64
   Insn 44(l0): point = 66
   Insn 43(l0): point = 68
   Insn 42(l0): point = 70
   Insn 41(l0): point = 72
   Insn 40(l0): point = 74
   Insn 39(l0): point = 76
   Insn 38(l0): point = 78
   Insn 37(l0): point = 80
   Insn 36(l0): point = 82
   Insn 35(l0): point = 84
   Insn 34(l0): point = 86
   Insn 33(l0): point = 88
   Insn 32(l0): point = 90
   Insn 31(l0): point = 92
   Insn 30(l0): point = 94
   Insn 29(l0): point = 96
   Insn 28(l0): point = 98
   Insn 27(l0): point = 100
   Insn 26(l0): point = 102
   Insn 25(l0): point = 104
   Insn 24(l0): point = 106
   Insn 23(l0): point = 108
   Insn 22(l0): point = 110
   Insn 21(l0): point = 112
   Insn 20(l0): point = 114
   Insn 19(l0): point = 116
   Insn 18(l0): point = 118
   Insn 17(l0): point = 120
   Insn 16(l0): point = 122
   Insn 15(l0): point = 124
   Insn 14(l0): point = 126
   Insn 13(l0): point = 128
   Insn 12(l0): point = 130
   Insn 11(l0): point = 132
   Insn 10(l0): point = 134
   Insn 9(l0): point = 136
   Insn 8(l0): point = 138
   Insn 7(l0): point = 140
   Insn 6(l0): point = 142
   Insn 5(l0): point = 144
 a0(r123): [3..6]
 a1(r139): [15..18]
 a2(r140): [15..16]
 a3(r137): [21..24]
 a4(r138): [21..22]
 a5(r135): [27..30]
 a6(r136): [27..28]
 a7(r133): [33..36]
 a8(r134): [33..34]
 a9(r122): [39..42]
 a10(r132): [39..40]
 a11(r121): [43..44]
 a12(r120): [45..46]
 a13(r131): [47..48]
 a14(r119): [63..66]
 a15(r118): [73..76]
 a16(r117): [111..114]
 a17(r130): [111..112]
 a18(r116): [115..116]
 a19(r115): [117..118]
 a20(r129): [119..120]
 a21(r114): [123..126]
 a22(r128): [123..124]
 a23(r113): [127..128]
 a24(r127): [129..130]
 a25(r125): [137..140]
 a26(r126): [137..138]
 a27(r124): [143..144]
Compressing live ranges: from 147 to 40 - 27%
Ranges after the compression:
 a0(r123): [0..1]
 a1(r139): [2..3]
 a2(r140): [2..3]
 a3(r137): [4..5]
 a4(r138): [4..5]
 a5(r135): [6..7]
 a6(r136): [6..7]
 a7(r133): [8..9]
 a8(r134): [8..9]
 a9(r122): [10..11]
 a10(r132): [10..11]
 a11(r121): [12..13]
 a12(r120): [14..15]
 a13(r131): [16..17]
 a14(r119): [18..19]
 a15(r118): [20..21]
 a16(r117): [22..23]
 a17(r130): [22..23]
 a18(r116): [24..25]
 a19(r115): [26..27]
 a20(r129): [28..29]
 a21(r114): [30..31]
 a22(r128): [30..31]
 a23(r113): [32..33]
 a24(r127): [34..35]
 a25(r125): [36..37]
 a26(r126): [36..37]
 a27(r124): [38..39]
  regions=1, blocks=3, points=40
    allocnos=28 (big 0), copies=0, conflicts=0, ranges=28
Disposition:
   23:r113 l0     3   21:r114 l0     2   19:r115 l0     3   18:r116 l0     3
   16:r117 l0     2   15:r118 l0     3   14:r119 l0     3   12:r120 l0     3
   11:r121 l0     3    9:r122 l0     2    0:r123 l0     3   27:r124 l0     3
   25:r125 l0     3   26:r126 l0     2   24:r127 l0     3   22:r128 l0     3
   20:r129 l0     3   17:r130 l0     3   13:r131 l0     3   10:r132 l0     3
    7:r133 l0     3    8:r134 l0     2    5:r135 l0     3    6:r136 l0     2
    3:r137 l0     3    4:r138 l0     2    1:r139 l0     3    2:r140 l0     2
+++Costs: overall 6000, reg 6000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


sdc_init

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 102 [sfp] 103 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;;  ref usage 	r0={21d,11u} r1={17d,7u} r2={17d,7u} r3={10d} r11={1d,2u} r12={18d} r13={1d,11u} r14={10d} r15={9d} r16={9d} r17={9d} r18={9d} r19={9d} r20={9d} r21={9d} r22={9d} r23={9d} r24={9d} r25={9d} r26={9d} r27={9d} r28={9d} r29={9d} r30={9d} r31={9d} r32={9d} r33={9d} r34={9d} r35={9d} r36={9d} r37={9d} r38={9d} r39={9d} r40={9d} r41={9d} r42={9d} r43={9d} r44={9d} r45={9d} r46={9d} r47={9d} r48={9d} r49={9d} r50={9d} r51={9d} r52={9d} r53={9d} r54={9d} r55={9d} r56={9d} r57={9d} r58={9d} r59={9d} r60={9d} r61={9d} r62={9d} r63={9d} r64={9d} r65={9d} r66={9d} r67={9d} r68={9d} r69={9d} r70={9d} r71={9d} r72={9d} r73={9d} r74={9d} r75={9d} r76={9d} r77={9d} r78={9d} r79={9d} r80={9d} r81={9d} r82={9d} r83={9d} r84={9d} r85={9d} r86={9d} r87={9d} r88={9d} r89={9d} r90={9d} r91={9d} r92={9d} r93={9d} r94={9d} r95={9d} r96={9d} r97={9d} r98={9d} r99={9d} r100={9d} r101={9d} r102={1d,5u} r103={1d,1u} r104={9d} r105={9d} r106={9d} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} 
;;    total ref usage 1007{935d,72u,0e} in 73{64 regular + 9 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 124)
        (const_int 1164378112 [0x45670000])) "sdc.c":148:7 253 {*arm_movsi_insn}
     (nil))
(insn 6 5 7 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 RCA+0 S4 A32])
        (reg:SI 124)) "sdc.c":148:7 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 124)
        (nil)))
(insn 7 6 8 2 (set (reg/f:SI 125)
        (symbol_ref:SI ("base") [flags 0x2]  <var_decl 0x7f2800e6a2d0 base>)) "sdc.c":149:11 253 {*arm_movsi_insn}
     (nil))
(insn 8 7 9 2 (set (reg:SI 126)
        (const_int 268455936 [0x10005000])) "sdc.c":149:11 253 {*arm_movsi_insn}
     (nil))
(insn 9 8 10 2 (set (mem/c:SI (reg/f:SI 125) [1 base+0 S4 A32])
        (reg:SI 126)) "sdc.c":149:11 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 126)
        (expr_list:REG_DEAD (reg/f:SI 125)
            (nil))))
(insn 10 9 11 2 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x7f2800e83480 *.LC0>)) "sdc.c":150:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 11 10 12 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kprintf") [flags 0x41]  <function_decl 0x7f2800e73700 kprintf>) [0 kprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "sdc.c":150:3 291 {*call_value_symbol}
     (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 12 11 13 2 (set (reg/f:SI 127)
        (symbol_ref:SI ("base") [flags 0x2]  <var_decl 0x7f2800e6a2d0 base>)) "sdc.c":151:4 253 {*arm_movsi_insn}
     (nil))
(insn 13 12 14 2 (set (reg:SI 113 [ base.19_1 ])
        (mem/c:SI (reg/f:SI 127) [1 base+0 S4 A32])) "sdc.c":151:4 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 127)
        (nil)))
(insn 14 13 15 2 (set (reg/f:SI 114 [ base.20_2 ])
        (reg:SI 113 [ base.19_1 ])) "sdc.c":151:4 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 113 [ base.19_1 ])
        (nil)))
(insn 15 14 16 2 (set (reg:SI 128)
        (const_int 191 [0xbf])) "sdc.c":151:26 253 {*arm_movsi_insn}
     (nil))
(insn 16 15 17 2 (set (mem:SI (reg/f:SI 114 [ base.20_2 ]) [1 *base.20_2+0 S4 A32])
        (reg:SI 128)) "sdc.c":151:26 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 128)
        (expr_list:REG_DEAD (reg/f:SI 114 [ base.20_2 ])
            (nil))))
(insn 17 16 18 2 (set (reg/f:SI 129)
        (symbol_ref:SI ("base") [flags 0x2]  <var_decl 0x7f2800e6a2d0 base>)) "sdc.c":152:17 253 {*arm_movsi_insn}
     (nil))
(insn 18 17 19 2 (set (reg:SI 115 [ base.21_3 ])
        (mem/c:SI (reg/f:SI 129) [1 base+0 S4 A32])) "sdc.c":152:17 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 129)
        (nil)))
(insn 19 18 20 2 (set (reg:SI 116 [ _4 ])
        (plus:SI (reg:SI 115 [ base.21_3 ])
            (const_int 4 [0x4]))) "sdc.c":152:17 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 115 [ base.21_3 ])
        (nil)))
(insn 20 19 21 2 (set (reg/f:SI 117 [ _5 ])
        (reg:SI 116 [ _4 ])) "sdc.c":152:4 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 116 [ _4 ])
        (nil)))
(insn 21 20 22 2 (set (reg:SI 130)
        (const_int 198 [0xc6])) "sdc.c":152:26 253 {*arm_movsi_insn}
     (nil))
(insn 22 21 23 2 (set (mem:SI (reg/f:SI 117 [ _5 ]) [1 *_5+0 S4 A32])
        (reg:SI 130)) "sdc.c":152:26 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 130)
        (expr_list:REG_DEAD (reg/f:SI 117 [ _5 ])
            (nil))))
(insn 23 22 24 2 (set (reg:SI 2 r2)
        (const_int 0 [0])) "sdc.c":155:3 253 {*arm_movsi_insn}
     (nil))
(insn 24 23 25 2 (set (reg:SI 1 r1)
        (const_int 0 [0])) "sdc.c":155:3 253 {*arm_movsi_insn}
     (nil))
(insn 25 24 26 2 (set (reg:SI 0 r0)
        (const_int 0 [0])) "sdc.c":155:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 26 25 27 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_command") [flags 0x3]  <function_decl 0x7f2800e61e00 do_command>) [0 do_command S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "sdc.c":155:3 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 27 26 28 2 (set (reg:SI 2 r2)
        (const_int 21 [0x15])) "sdc.c":156:3 253 {*arm_movsi_insn}
     (nil))
(insn 28 27 29 2 (set (reg:SI 1 r1)
        (const_int 0 [0])) "sdc.c":156:3 253 {*arm_movsi_insn}
     (nil))
(insn 29 28 30 2 (set (reg:SI 0 r0)
        (const_int 55 [0x37])) "sdc.c":156:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 30 29 31 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_command") [flags 0x3]  <function_decl 0x7f2800e61e00 do_command>) [0 do_command S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "sdc.c":156:3 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 31 30 32 2 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) "sdc.c":158:3 253 {*arm_movsi_insn}
     (nil))
(insn 32 31 33 2 (set (reg:SI 1 r1)
        (const_int 65535 [0xffff])) "sdc.c":158:3 253 {*arm_movsi_insn}
     (nil))
(insn 33 32 34 2 (set (reg:SI 0 r0)
        (const_int 41 [0x29])) "sdc.c":158:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 34 33 35 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_command") [flags 0x3]  <function_decl 0x7f2800e61e00 do_command>) [0 do_command S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "sdc.c":158:3 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 35 34 36 2 (set (reg:SI 2 r2)
        (const_int 7 [0x7])) "sdc.c":159:3 253 {*arm_movsi_insn}
     (nil))
(insn 36 35 37 2 (set (reg:SI 1 r1)
        (const_int 0 [0])) "sdc.c":159:3 253 {*arm_movsi_insn}
     (nil))
(insn 37 36 38 2 (set (reg:SI 0 r0)
        (const_int 2 [0x2])) "sdc.c":159:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 38 37 39 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_command") [flags 0x3]  <function_decl 0x7f2800e61e00 do_command>) [0 do_command S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "sdc.c":159:3 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 39 38 40 2 (set (reg:SI 118 [ RCA.22_6 ])
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 RCA+0 S4 A32])) "sdc.c":160:3 253 {*arm_movsi_insn}
     (nil))
(insn 40 39 41 2 (set (reg:SI 2 r2)
        (const_int 21 [0x15])) "sdc.c":160:3 253 {*arm_movsi_insn}
     (nil))
(insn 41 40 42 2 (set (reg:SI 1 r1)
        (reg:SI 118 [ RCA.22_6 ])) "sdc.c":160:3 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 118 [ RCA.22_6 ])
        (nil)))
(insn 42 41 43 2 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) "sdc.c":160:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 43 42 44 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_command") [flags 0x3]  <function_decl 0x7f2800e61e00 do_command>) [0 do_command S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "sdc.c":160:3 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 44 43 45 2 (set (reg:SI 119 [ RCA.23_7 ])
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 RCA+0 S4 A32])) "sdc.c":161:3 253 {*arm_movsi_insn}
     (nil))
(insn 45 44 46 2 (set (reg:SI 2 r2)
        (const_int 21 [0x15])) "sdc.c":161:3 253 {*arm_movsi_insn}
     (nil))
(insn 46 45 47 2 (set (reg:SI 1 r1)
        (reg:SI 119 [ RCA.23_7 ])) "sdc.c":161:3 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 119 [ RCA.23_7 ])
        (nil)))
(insn 47 46 48 2 (set (reg:SI 0 r0)
        (const_int 7 [0x7])) "sdc.c":161:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 48 47 49 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_command") [flags 0x3]  <function_decl 0x7f2800e61e00 do_command>) [0 do_command S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "sdc.c":161:3 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 49 48 50 2 (set (reg:SI 2 r2)
        (const_int 21 [0x15])) "sdc.c":162:3 253 {*arm_movsi_insn}
     (nil))
(insn 50 49 51 2 (set (reg:SI 1 r1)
        (const_int 512 [0x200])) "sdc.c":162:3 253 {*arm_movsi_insn}
     (nil))
(insn 51 50 52 2 (set (reg:SI 0 r0)
        (const_int 16 [0x10])) "sdc.c":162:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 52 51 53 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_command") [flags 0x3]  <function_decl 0x7f2800e61e00 do_command>) [0 do_command S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "sdc.c":162:3 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 53 52 54 2 (set (reg/f:SI 131)
        (symbol_ref:SI ("base") [flags 0x2]  <var_decl 0x7f2800e6a2d0 base>)) "sdc.c":165:17 253 {*arm_movsi_insn}
     (nil))
(insn 54 53 55 2 (set (reg:SI 120 [ base.24_8 ])
        (mem/c:SI (reg/f:SI 131) [1 base+0 S4 A32])) "sdc.c":165:17 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 131)
        (nil)))
(insn 55 54 56 2 (set (reg:SI 121 [ _9 ])
        (plus:SI (reg:SI 120 [ base.24_8 ])
            (const_int 60 [0x3c]))) "sdc.c":165:17 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 120 [ base.24_8 ])
        (nil)))
(insn 56 55 57 2 (set (reg/f:SI 122 [ _10 ])
        (reg:SI 121 [ _9 ])) "sdc.c":165:4 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 121 [ _9 ])
        (nil)))
(insn 57 56 58 2 (set (reg:SI 132)
        (const_int 393216 [0x60000])) "sdc.c":165:26 253 {*arm_movsi_insn}
     (nil))
(insn 58 57 59 2 (set (mem:SI (reg/f:SI 122 [ _10 ]) [1 *_10+0 S4 A32])
        (reg:SI 132)) "sdc.c":165:26 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 132)
        (expr_list:REG_DEAD (reg/f:SI 122 [ _10 ])
            (nil))))
(insn 59 58 60 2 (set (reg/f:SI 133)
        (symbol_ref:SI ("rxsem") [flags 0x2]  <var_decl 0x7f2800e6a6c0 rxsem>)) "sdc.c":167:15 253 {*arm_movsi_insn}
     (nil))
(insn 60 59 61 2 (set (reg:SI 134)
        (const_int 0 [0])) "sdc.c":167:15 253 {*arm_movsi_insn}
     (nil))
(insn 61 60 62 2 (set (mem/c:SI (reg/f:SI 133) [1 rxsem.value+0 S4 A32])
        (reg:SI 134)) "sdc.c":167:15 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 134)
        (expr_list:REG_DEAD (reg/f:SI 133)
            (nil))))
(insn 62 61 63 2 (set (reg/f:SI 135)
        (symbol_ref:SI ("rxsem") [flags 0x2]  <var_decl 0x7f2800e6a6c0 rxsem>)) "sdc.c":168:15 253 {*arm_movsi_insn}
     (nil))
(insn 63 62 64 2 (set (reg:SI 136)
        (const_int 0 [0])) "sdc.c":168:15 253 {*arm_movsi_insn}
     (nil))
(insn 64 63 65 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 135)
                (const_int 4 [0x4])) [5 rxsem.queue+0 S4 A32])
        (reg:SI 136)) "sdc.c":168:15 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 136)
        (expr_list:REG_DEAD (reg/f:SI 135)
            (nil))))
(insn 65 64 66 2 (set (reg/f:SI 137)
        (symbol_ref:SI ("txsem") [flags 0x2]  <var_decl 0x7f2800e6a750 txsem>)) "sdc.c":169:15 253 {*arm_movsi_insn}
     (nil))
(insn 66 65 67 2 (set (reg:SI 138)
        (const_int 0 [0])) "sdc.c":169:15 253 {*arm_movsi_insn}
     (nil))
(insn 67 66 68 2 (set (mem/c:SI (reg/f:SI 137) [1 txsem.value+0 S4 A32])
        (reg:SI 138)) "sdc.c":169:15 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 138)
        (expr_list:REG_DEAD (reg/f:SI 137)
            (nil))))
(insn 68 67 69 2 (set (reg/f:SI 139)
        (symbol_ref:SI ("txsem") [flags 0x2]  <var_decl 0x7f2800e6a750 txsem>)) "sdc.c":170:15 253 {*arm_movsi_insn}
     (nil))
(insn 69 68 70 2 (set (reg:SI 140)
        (const_int 0 [0])) "sdc.c":170:15 253 {*arm_movsi_insn}
     (nil))
(insn 70 69 71 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 139)
                (const_int 4 [0x4])) [5 txsem.queue+0 S4 A32])
        (reg:SI 140)) "sdc.c":170:15 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 140)
        (expr_list:REG_DEAD (reg/f:SI 139)
            (nil))))
(insn 71 70 72 2 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x7f2800e83510 *.LC1>)) "sdc.c":172:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 72 71 75 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kprintf") [flags 0x41]  <function_decl 0x7f2800e73700 kprintf>) [0 kprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "sdc.c":172:3 291 {*call_value_symbol}
     (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 75 72 76 2 (clobber (reg/i:SI 0 r0)) "sdc.c":173:1 -1
     (expr_list:REG_UNUSED (reg/i:SI 0 r0)
        (nil)))
(insn 76 75 79 2 (clobber (reg:SI 123 [ <retval> ])) "sdc.c":173:1 -1
     (nil))
(insn 79 76 74 2 (const_int 0 [0]) "sdc.c":173:1 311 {nop}
     (nil))
(insn 74 79 77 2 (set (reg/i:SI 0 r0)
        (reg:SI 123 [ <retval> ])) "sdc.c":173:1 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 123 [ <retval> ])
        (nil)))
(insn 77 74 0 2 (use (reg/i:SI 0 r0)) "sdc.c":173:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp] 103 [afp]


;; Function getblock (getblock, funcdef_no=3, decl_uid=4513, cgraph_uid=4, symbol_order=12)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 8 n_edges 9 count 8 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 7 5 6
;;
;; Loop 1
;;  header 5, latch 5
;;  depth 1, outer 0
;;  nodes: 5
;; 2 succs { 3 4 }
;; 3 succs { 6 }
;; 4 succs { 7 }
;; 7 succs { 5 }
;; 5 succs { 5 6 }
;; 6 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 44.
verify found no changes in insn with uid = 58.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r128,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:10000
  a1(r127,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a2(r148,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a3(r126,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a4(r125,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a5(r147,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a6(r124,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a7(r146,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a8(r123,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a9(r122,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a10(r145,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a11(r120,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:20000
  a12(r121,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:20000
  a13(r119,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a14(r144,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a15(r143,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a16(r118,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a17(r142,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a18(r117,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a19(r116,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a20(r141,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a21(r115,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a22(r140,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a23(r114,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a24(r113,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a25(r139,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a26(r137,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a27(r138,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a28(r135,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a29(r136,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a30(r133,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a31(r134,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a32(r131,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a33(r132,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a34(r129,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a35(r130,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000

   Insn 75(l0): point = 0
   Insn 72(l0): point = 2
   Insn 77(l0): point = 4
   Insn 74(l0): point = 6
   Insn 73(l0): point = 8
   Insn 68(l0): point = 11
   Insn 67(l0): point = 13
   Insn 65(l0): point = 15
   Insn 64(l0): point = 17
   Insn 81(l0): point = 20
   Insn 78(l0): point = 24
   Insn 58(l0): point = 26
   Insn 57(l0): point = 28
   Insn 55(l0): point = 31
   Insn 54(l0): point = 33
   Insn 53(l0): point = 35
   Insn 52(l0): point = 37
   Insn 51(l0): point = 39
   Insn 50(l0): point = 41
   Insn 49(l0): point = 43
   Insn 48(l0): point = 45
   Insn 47(l0): point = 47
   Insn 46(l0): point = 49
   Insn 45(l0): point = 51
   Insn 44(l0): point = 53
   Insn 43(l0): point = 55
   Insn 42(l0): point = 57
   Insn 41(l0): point = 59
   Insn 40(l0): point = 61
   Insn 39(l0): point = 63
   Insn 38(l0): point = 65
   Insn 37(l0): point = 67
   Insn 36(l0): point = 69
   Insn 35(l0): point = 71
   Insn 34(l0): point = 73
   Insn 33(l0): point = 75
   Insn 32(l0): point = 77
   Insn 31(l0): point = 79
   Insn 30(l0): point = 81
   Insn 29(l0): point = 83
   Insn 28(l0): point = 85
   Insn 27(l0): point = 87
   Insn 26(l0): point = 89
   Insn 25(l0): point = 91
   Insn 24(l0): point = 93
   Insn 23(l0): point = 95
   Insn 22(l0): point = 97
   Insn 21(l0): point = 99
   Insn 20(l0): point = 101
   Insn 19(l0): point = 103
   Insn 18(l0): point = 105
   Insn 17(l0): point = 107
   Insn 16(l0): point = 109
   Insn 15(l0): point = 111
   Insn 14(l0): point = 113
   Insn 13(l0): point = 115
   Insn 12(l0): point = 117
   Insn 11(l0): point = 119
   Insn 10(l0): point = 121
   Insn 9(l0): point = 123
   Insn 8(l0): point = 125
   Insn 7(l0): point = 127
   Insn 3(l0): point = 129
   Insn 2(l0): point = 131
 a0(r128): [3..6]
 a1(r127): [14..15]
 a2(r148): [16..17]
 a3(r126): [34..35]
 a4(r125): [36..37]
 a5(r147): [38..39]
 a6(r124): [42..45]
 a7(r146): [42..43]
 a8(r123): [46..47]
 a9(r122): [48..49]
 a10(r145): [50..51]
 a11(r120): [56..63]
 a12(r121): [58..61]
 a13(r119): [66..67]
 a14(r144): [68..69]
 a15(r143): [72..73]
 a16(r118): [76..79]
 a17(r142): [76..77]
 a18(r117): [80..81]
 a19(r116): [82..83]
 a20(r141): [84..85]
 a21(r115): [88..91]
 a22(r140): [88..89]
 a23(r114): [92..93]
 a24(r113): [94..95]
 a25(r139): [96..97]
 a26(r137): [100..103]
 a27(r138): [100..101]
 a28(r135): [106..109]
 a29(r136): [106..107]
 a30(r133): [112..115]
 a31(r134): [112..113]
 a32(r131): [118..121]
 a33(r132): [118..119]
 a34(r129): [124..127]
 a35(r130): [124..125]
Compressing live ranges: from 134 to 54 - 40%
Ranges after the compression:
 a0(r128): [0..1]
 a1(r127): [2..3]
 a2(r148): [4..5]
 a3(r126): [6..7]
 a4(r125): [8..9]
 a5(r147): [10..11]
 a6(r124): [12..13]
 a7(r146): [12..13]
 a8(r123): [14..15]
 a9(r122): [16..17]
 a10(r145): [18..19]
 a11(r120): [20..21]
 a12(r121): [20..21]
 a13(r119): [22..23]
 a14(r144): [24..25]
 a15(r143): [26..27]
 a16(r118): [28..29]
 a17(r142): [28..29]
 a18(r117): [30..31]
 a19(r116): [32..33]
 a20(r141): [34..35]
 a21(r115): [36..37]
 a22(r140): [36..37]
 a23(r114): [38..39]
 a24(r113): [40..41]
 a25(r139): [42..43]
 a26(r137): [44..45]
 a27(r138): [44..45]
 a28(r135): [46..47]
 a29(r136): [46..47]
 a30(r133): [48..49]
 a31(r134): [48..49]
 a32(r131): [50..51]
 a33(r132): [50..51]
 a34(r129): [52..53]
 a35(r130): [52..53]
  regions=1, blocks=8, points=54
    allocnos=36 (big 0), copies=0, conflicts=0, ranges=36
Disposition:
   24:r113 l0     3   23:r114 l0     3   21:r115 l0     2   19:r116 l0     3
   18:r117 l0     3   16:r118 l0     2   13:r119 l0     3   11:r120 l0     3
   12:r121 l0     1    9:r122 l0     3    8:r123 l0     3    6:r124 l0     2
    4:r125 l0     3    3:r126 l0     3    1:r127 l0     3    0:r128 l0     3
   34:r129 l0     2   35:r130 l0     3   32:r131 l0     3   33:r132 l0     2
   30:r133 l0     3   31:r134 l0     2   28:r135 l0     3   29:r136 l0     2
   26:r137 l0     3   27:r138 l0     2   25:r139 l0     3   22:r140 l0     3
   20:r141 l0     3   17:r142 l0     3   15:r143 l0     3   14:r144 l0     3
   10:r145 l0     3    7:r146 l0     3    5:r147 l0     3    2:r148 l0     3
+++Costs: overall 6000, reg 6000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


getblock

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 102 [sfp] 103 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={7d,5u} r1={4d,2u} r2={4d,1u} r3={3d} r11={1d,7u} r12={4d} r13={1d,9u} r14={3d} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={4d,2u} r101={2d} r102={1d,15u} r103={1d,6u} r104={2d} r105={2d} r106={2d} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} 
;;    total ref usage 330{247d,83u,0e} in 64{62 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 113 114 115 116 117 118 119 120 121 122 123 124 125 126 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [1 blk+0 S4 A32])
        (reg:SI 0 r0 [ blk ])) "sdc.c":176:1 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ blk ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [3 buf+0 S4 A32])
        (reg:SI 1 r1 [ buf ])) "sdc.c":176:1 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 1 r1 [ buf ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:SI 129)
        (symbol_ref:SI ("rxbuf") [flags 0x2]  <var_decl 0x7f2800e6a360 rxbuf>)) "sdc.c":180:9 253 {*arm_movsi_insn}
     (nil))
(insn 8 7 9 2 (set (reg/f:SI 130)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [3 buf+0 S4 A32])) "sdc.c":180:9 253 {*arm_movsi_insn}
     (nil))
(insn 9 8 10 2 (set (mem/f/c:SI (reg/f:SI 129) [3 rxbuf+0 S4 A32])
        (reg/f:SI 130)) "sdc.c":180:9 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 130)
        (expr_list:REG_DEAD (reg/f:SI 129)
            (nil))))
(insn 10 9 11 2 (set (reg/f:SI 131)
        (symbol_ref:SI ("rxcount") [flags 0x2]  <var_decl 0x7f2800e6a480 rxcount>)) "sdc.c":180:24 253 {*arm_movsi_insn}
     (nil))
(insn 11 10 12 2 (set (reg:SI 132)
        (const_int 1024 [0x400])) "sdc.c":180:24 253 {*arm_movsi_insn}
     (nil))
(insn 12 11 13 2 (set (mem/c:SI (reg/f:SI 131) [1 rxcount+0 S4 A32])
        (reg:SI 132)) "sdc.c":180:24 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 132)
        (expr_list:REG_DEAD (reg/f:SI 131)
            (nil))))
(insn 13 12 14 2 (set (reg/f:SI 133)
        (symbol_ref:SI ("rxsem") [flags 0x2]  <var_decl 0x7f2800e6a6c0 rxsem>)) "sdc.c":181:15 253 {*arm_movsi_insn}
     (nil))
(insn 14 13 15 2 (set (reg:SI 134)
        (const_int 0 [0])) "sdc.c":181:15 253 {*arm_movsi_insn}
     (nil))
(insn 15 14 16 2 (set (mem/c:SI (reg/f:SI 133) [1 rxsem.value+0 S4 A32])
        (reg:SI 134)) "sdc.c":181:15 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 134)
        (expr_list:REG_DEAD (reg/f:SI 133)
            (nil))))
(insn 16 15 17 2 (set (reg/f:SI 135)
        (symbol_ref:SI ("rxsem") [flags 0x2]  <var_decl 0x7f2800e6a6c0 rxsem>)) "sdc.c":182:15 253 {*arm_movsi_insn}
     (nil))
(insn 17 16 18 2 (set (reg:SI 136)
        (const_int 0 [0])) "sdc.c":182:15 253 {*arm_movsi_insn}
     (nil))
(insn 18 17 19 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 135)
                (const_int 4 [0x4])) [5 rxsem.queue+0 S4 A32])
        (reg:SI 136)) "sdc.c":182:15 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 136)
        (expr_list:REG_DEAD (reg/f:SI 135)
            (nil))))
(insn 19 18 20 2 (set (reg/f:SI 137)
        (symbol_ref:SI ("rxdone") [flags 0x2]  <var_decl 0x7f2800e6a5a0 rxdone>)) "sdc.c":183:10 253 {*arm_movsi_insn}
     (nil))
(insn 20 19 21 2 (set (reg:SI 138)
        (const_int 0 [0])) "sdc.c":183:10 253 {*arm_movsi_insn}
     (nil))
(insn 21 20 22 2 (set (mem/c:SI (reg/f:SI 137) [1 rxdone+0 S4 A32])
        (reg:SI 138)) "sdc.c":183:10 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 138)
        (expr_list:REG_DEAD (reg/f:SI 137)
            (nil))))
(insn 22 21 23 2 (set (reg/f:SI 139)
        (symbol_ref:SI ("base") [flags 0x2]  <var_decl 0x7f2800e6a2d0 base>)) "sdc.c":185:17 253 {*arm_movsi_insn}
     (nil))
(insn 23 22 24 2 (set (reg:SI 113 [ base.25_1 ])
        (mem/c:SI (reg/f:SI 139) [1 base+0 S4 A32])) "sdc.c":185:17 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 139)
        (nil)))
(insn 24 23 25 2 (set (reg:SI 114 [ _2 ])
        (plus:SI (reg:SI 113 [ base.25_1 ])
            (const_int 36 [0x24]))) "sdc.c":185:17 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 113 [ base.25_1 ])
        (nil)))
(insn 25 24 26 2 (set (reg/f:SI 115 [ _3 ])
        (reg:SI 114 [ _2 ])) "sdc.c":185:4 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 114 [ _2 ])
        (nil)))
(insn 26 25 27 2 (set (reg:SI 140)
        (const_int -65536 [0xffffffffffff0000])) "sdc.c":185:30 253 {*arm_movsi_insn}
     (nil))
(insn 27 26 28 2 (set (mem:SI (reg/f:SI 115 [ _3 ]) [1 *_3+0 S4 A32])
        (reg:SI 140)) "sdc.c":185:30 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 140)
        (expr_list:REG_DEAD (reg/f:SI 115 [ _3 ])
            (nil))))
(insn 28 27 29 2 (set (reg/f:SI 141)
        (symbol_ref:SI ("base") [flags 0x2]  <var_decl 0x7f2800e6a2d0 base>)) "sdc.c":187:17 253 {*arm_movsi_insn}
     (nil))
(insn 29 28 30 2 (set (reg:SI 116 [ base.26_4 ])
        (mem/c:SI (reg/f:SI 141) [1 base+0 S4 A32])) "sdc.c":187:17 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 141)
        (nil)))
(insn 30 29 31 2 (set (reg:SI 117 [ _5 ])
        (plus:SI (reg:SI 116 [ base.26_4 ])
            (const_int 40 [0x28]))) "sdc.c":187:17 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 116 [ base.26_4 ])
        (nil)))
(insn 31 30 32 2 (set (reg/f:SI 118 [ _6 ])
        (reg:SI 117 [ _5 ])) "sdc.c":187:4 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 117 [ _5 ])
        (nil)))
(insn 32 31 33 2 (set (reg:SI 142)
        (const_int 1024 [0x400])) "sdc.c":187:31 253 {*arm_movsi_insn}
     (nil))
(insn 33 32 34 2 (set (mem:SI (reg/f:SI 118 [ _6 ]) [1 *_6+0 S4 A32])
        (reg:SI 142)) "sdc.c":187:31 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 142)
        (expr_list:REG_DEAD (reg/f:SI 118 [ _6 ])
            (nil))))
(insn 34 33 35 2 (set (reg:SI 143)
        (const_int 18 [0x12])) "sdc.c":189:7 253 {*arm_movsi_insn}
     (nil))
(insn 35 34 36 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [1 cmd+0 S4 A64])
        (reg:SI 143)) "sdc.c":189:7 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 143)
        (nil)))
(insn 36 35 37 2 (set (reg:SI 144)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [1 blk+0 S4 A32])) "sdc.c":190:17 253 {*arm_movsi_insn}
     (nil))
(insn 37 36 38 2 (set (reg:SI 119 [ _7 ])
        (ashift:SI (reg:SI 144)
            (const_int 10 [0xa]))) "sdc.c":190:17 147 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 144)
        (nil)))
(insn 38 37 39 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 arg+0 S4 A32])
        (reg:SI 119 [ _7 ])) "sdc.c":190:7 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 119 [ _7 ])
        (nil)))
(insn 39 38 40 2 (set (reg:SI 120 [ cmd.27_8 ])
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [1 cmd+0 S4 A64])) "sdc.c":191:3 253 {*arm_movsi_insn}
     (nil))
(insn 40 39 41 2 (set (reg:SI 121 [ arg.28_9 ])
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 arg+0 S4 A32])) "sdc.c":191:3 253 {*arm_movsi_insn}
     (nil))
(insn 41 40 42 2 (set (reg:SI 2 r2)
        (const_int 21 [0x15])) "sdc.c":191:3 253 {*arm_movsi_insn}
     (nil))
(insn 42 41 43 2 (set (reg:SI 1 r1)
        (reg:SI 121 [ arg.28_9 ])) "sdc.c":191:3 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 121 [ arg.28_9 ])
        (nil)))
(insn 43 42 44 2 (set (reg:SI 0 r0)
        (reg:SI 120 [ cmd.27_8 ])) "sdc.c":191:3 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 120 [ cmd.27_8 ])
        (nil)))
(call_insn 44 43 45 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_command") [flags 0x3]  <function_decl 0x7f2800e61e00 do_command>) [0 do_command S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "sdc.c":191:3 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 45 44 46 2 (set (reg/f:SI 145)
        (symbol_ref:SI ("base") [flags 0x2]  <var_decl 0x7f2800e6a2d0 base>)) "sdc.c":195:17 253 {*arm_movsi_insn}
     (nil))
(insn 46 45 47 2 (set (reg:SI 122 [ base.29_10 ])
        (mem/c:SI (reg/f:SI 145) [1 base+0 S4 A32])) "sdc.c":195:17 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 145)
        (nil)))
(insn 47 46 48 2 (set (reg:SI 123 [ _11 ])
        (plus:SI (reg:SI 122 [ base.29_10 ])
            (const_int 44 [0x2c]))) "sdc.c":195:17 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 122 [ base.29_10 ])
        (nil)))
(insn 48 47 49 2 (set (reg/f:SI 124 [ _12 ])
        (reg:SI 123 [ _11 ])) "sdc.c":195:4 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 123 [ _11 ])
        (nil)))
(insn 49 48 50 2 (set (reg:SI 146)
        (const_int 147 [0x93])) "sdc.c":195:29 253 {*arm_movsi_insn}
     (nil))
(insn 50 49 51 2 (set (mem:SI (reg/f:SI 124 [ _12 ]) [1 *_12+0 S4 A32])
        (reg:SI 146)) "sdc.c":195:29 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 146)
        (expr_list:REG_DEAD (reg/f:SI 124 [ _12 ])
            (nil))))
(insn 51 50 52 2 (set (reg/f:SI 147)
        (symbol_ref:SI ("running") [flags 0x40]  <var_decl 0x7f2801b4c7e0 running>)) "sdc.c":198:14 253 {*arm_movsi_insn}
     (nil))
(insn 52 51 53 2 (set (reg/f:SI 125 [ running.30_13 ])
        (mem/f/c:SI (reg/f:SI 147) [5 running+0 S4 A32])) "sdc.c":198:14 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 147)
        (nil)))
(insn 53 52 54 2 (set (reg:SI 126 [ _14 ])
        (mem:SI (plus:SI (reg/f:SI 125 [ running.30_13 ])
                (const_int 24 [0x18])) [1 running.30_13->pid+0 S4 A32])) "sdc.c":198:14 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 125 [ running.30_13 ])
        (nil)))
(insn 54 53 55 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 126 [ _14 ])
            (const_int 0 [0]))) "sdc.c":198:6 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 126 [ _14 ])
        (nil)))
(jump_insn 55 54 56 2 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 61)
            (pc))) "sdc.c":198:6 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (nil))
 -> 61)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(note 56 55 57 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 3 (set (reg:SI 0 r0)
        (symbol_ref:SI ("rxsem") [flags 0x2]  <var_decl 0x7f2800e6a6c0 rxsem>)) "sdc.c":199:6 253 {*arm_movsi_insn}
     (nil))
(call_insn 58 57 78 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("P") [flags 0x41]  <function_decl 0x7f2800e73b00 P>) [0 P S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "sdc.c":199:6 291 {*call_value_symbol}
     (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(jump_insn 78 58 79 3 (set (pc)
        (label_ref 69)) 284 {*arm_jump}
     (nil)
 -> 69)
;;  succ:       6 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

(barrier 79 78 61)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 7, flags: (RTL)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(code_label 61 79 62 4 19 (nil) [1 uses])
(note 62 61 80 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       7 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 4, next block 5, flags: (RTL)
;;  pred:       4 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 80 62 81 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 66 7 (const_int 0 [0]) "sdc.c":201:10 311 {nop}
     (nil))
;;  succ:       5 [always]  (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 7, next block 6, flags: (RTL)
;;  pred:       7 [always]  (FALLTHRU)
;;              5 (DFS_BACK)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 127 148
(code_label 66 81 63 5 21 (nil) [1 uses])
(note 63 66 64 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 5 (set (reg/f:SI 148)
        (symbol_ref:SI ("rxdone") [flags 0x2]  <var_decl 0x7f2800e6a5a0 rxdone>)) "sdc.c":201:17 253 {*arm_movsi_insn}
     (nil))
(insn 65 64 67 5 (set (reg:SI 127 [ rxdone.31_15 ])
        (mem/c:SI (reg/f:SI 148) [1 rxdone+0 S4 A32])) "sdc.c":201:17 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 148)
        (nil)))
(insn 67 65 68 5 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 127 [ rxdone.31_15 ])
            (const_int 0 [0]))) "sdc.c":201:17 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 127 [ rxdone.31_15 ])
        (nil)))
(jump_insn 68 67 69 5 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 66)
            (pc))) "sdc.c":201:17 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (nil))
 -> 66)
;;  succ:       5 (DFS_BACK)
;;              6 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 1, flags: (RTL)
;;  pred:       5 (FALLTHRU)
;;              3 [always] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 128
(code_label 69 68 70 6 20 (nil) [1 uses])
(note 70 69 73 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 73 70 74 6 (clobber (reg/i:SI 0 r0)) "sdc.c":204:1 -1
     (expr_list:REG_UNUSED (reg/i:SI 0 r0)
        (nil)))
(insn 74 73 77 6 (clobber (reg:SI 128 [ <retval> ])) "sdc.c":204:1 -1
     (nil))
(insn 77 74 72 6 (const_int 0 [0]) "sdc.c":204:1 311 {nop}
     (nil))
(insn 72 77 75 6 (set (reg/i:SI 0 r0)
        (reg:SI 128 [ <retval> ])) "sdc.c":204:1 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 128 [ <retval> ])
        (nil)))
(insn 75 72 0 6 (use (reg/i:SI 0 r0)) "sdc.c":204:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp] 103 [afp]


;; Function putblock (putblock, funcdef_no=4, decl_uid=4524, cgraph_uid=5, symbol_order=13)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 8 n_edges 9 count 8 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 7 5 6
;;
;; Loop 1
;;  header 5, latch 5
;;  depth 1, outer 0
;;  nodes: 5
;; 2 succs { 3 4 }
;; 3 succs { 6 }
;; 4 succs { 7 }
;; 7 succs { 5 }
;; 5 succs { 5 6 }
;; 6 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 44.
verify found no changes in insn with uid = 58.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r128,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:10000
  a1(r127,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a2(r148,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a3(r126,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a4(r125,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a5(r147,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a6(r124,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a7(r146,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a8(r123,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a9(r122,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a10(r145,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a11(r120,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:20000
  a12(r121,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:20000
  a13(r119,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a14(r144,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a15(r143,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a16(r118,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a17(r142,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a18(r117,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a19(r116,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a20(r141,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a21(r115,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a22(r140,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a23(r114,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a24(r113,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a25(r139,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a26(r137,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a27(r138,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a28(r135,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a29(r136,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a30(r133,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a31(r134,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a32(r131,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a33(r132,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a34(r129,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a35(r130,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000

   Insn 75(l0): point = 0
   Insn 72(l0): point = 2
   Insn 77(l0): point = 4
   Insn 74(l0): point = 6
   Insn 73(l0): point = 8
   Insn 68(l0): point = 11
   Insn 67(l0): point = 13
   Insn 65(l0): point = 15
   Insn 64(l0): point = 17
   Insn 81(l0): point = 20
   Insn 78(l0): point = 24
   Insn 58(l0): point = 26
   Insn 57(l0): point = 28
   Insn 55(l0): point = 31
   Insn 54(l0): point = 33
   Insn 53(l0): point = 35
   Insn 52(l0): point = 37
   Insn 51(l0): point = 39
   Insn 50(l0): point = 41
   Insn 49(l0): point = 43
   Insn 48(l0): point = 45
   Insn 47(l0): point = 47
   Insn 46(l0): point = 49
   Insn 45(l0): point = 51
   Insn 44(l0): point = 53
   Insn 43(l0): point = 55
   Insn 42(l0): point = 57
   Insn 41(l0): point = 59
   Insn 40(l0): point = 61
   Insn 39(l0): point = 63
   Insn 38(l0): point = 65
   Insn 37(l0): point = 67
   Insn 36(l0): point = 69
   Insn 35(l0): point = 71
   Insn 34(l0): point = 73
   Insn 33(l0): point = 75
   Insn 32(l0): point = 77
   Insn 31(l0): point = 79
   Insn 30(l0): point = 81
   Insn 29(l0): point = 83
   Insn 28(l0): point = 85
   Insn 27(l0): point = 87
   Insn 26(l0): point = 89
   Insn 25(l0): point = 91
   Insn 24(l0): point = 93
   Insn 23(l0): point = 95
   Insn 22(l0): point = 97
   Insn 21(l0): point = 99
   Insn 20(l0): point = 101
   Insn 19(l0): point = 103
   Insn 18(l0): point = 105
   Insn 17(l0): point = 107
   Insn 16(l0): point = 109
   Insn 15(l0): point = 111
   Insn 14(l0): point = 113
   Insn 13(l0): point = 115
   Insn 12(l0): point = 117
   Insn 11(l0): point = 119
   Insn 10(l0): point = 121
   Insn 9(l0): point = 123
   Insn 8(l0): point = 125
   Insn 7(l0): point = 127
   Insn 3(l0): point = 129
   Insn 2(l0): point = 131
 a0(r128): [3..6]
 a1(r127): [14..15]
 a2(r148): [16..17]
 a3(r126): [34..35]
 a4(r125): [36..37]
 a5(r147): [38..39]
 a6(r124): [42..45]
 a7(r146): [42..43]
 a8(r123): [46..47]
 a9(r122): [48..49]
 a10(r145): [50..51]
 a11(r120): [56..63]
 a12(r121): [58..61]
 a13(r119): [66..67]
 a14(r144): [68..69]
 a15(r143): [72..73]
 a16(r118): [76..79]
 a17(r142): [76..77]
 a18(r117): [80..81]
 a19(r116): [82..83]
 a20(r141): [84..85]
 a21(r115): [88..91]
 a22(r140): [88..89]
 a23(r114): [92..93]
 a24(r113): [94..95]
 a25(r139): [96..97]
 a26(r137): [100..103]
 a27(r138): [100..101]
 a28(r135): [106..109]
 a29(r136): [106..107]
 a30(r133): [112..115]
 a31(r134): [112..113]
 a32(r131): [118..121]
 a33(r132): [118..119]
 a34(r129): [124..127]
 a35(r130): [124..125]
Compressing live ranges: from 134 to 54 - 40%
Ranges after the compression:
 a0(r128): [0..1]
 a1(r127): [2..3]
 a2(r148): [4..5]
 a3(r126): [6..7]
 a4(r125): [8..9]
 a5(r147): [10..11]
 a6(r124): [12..13]
 a7(r146): [12..13]
 a8(r123): [14..15]
 a9(r122): [16..17]
 a10(r145): [18..19]
 a11(r120): [20..21]
 a12(r121): [20..21]
 a13(r119): [22..23]
 a14(r144): [24..25]
 a15(r143): [26..27]
 a16(r118): [28..29]
 a17(r142): [28..29]
 a18(r117): [30..31]
 a19(r116): [32..33]
 a20(r141): [34..35]
 a21(r115): [36..37]
 a22(r140): [36..37]
 a23(r114): [38..39]
 a24(r113): [40..41]
 a25(r139): [42..43]
 a26(r137): [44..45]
 a27(r138): [44..45]
 a28(r135): [46..47]
 a29(r136): [46..47]
 a30(r133): [48..49]
 a31(r134): [48..49]
 a32(r131): [50..51]
 a33(r132): [50..51]
 a34(r129): [52..53]
 a35(r130): [52..53]
  regions=1, blocks=8, points=54
    allocnos=36 (big 0), copies=0, conflicts=0, ranges=36
Disposition:
   24:r113 l0     3   23:r114 l0     3   21:r115 l0     2   19:r116 l0     3
   18:r117 l0     3   16:r118 l0     2   13:r119 l0     3   11:r120 l0     3
   12:r121 l0     1    9:r122 l0     3    8:r123 l0     3    6:r124 l0     2
    4:r125 l0     3    3:r126 l0     3    1:r127 l0     3    0:r128 l0     3
   34:r129 l0     2   35:r130 l0     3   32:r131 l0     3   33:r132 l0     2
   30:r133 l0     3   31:r134 l0     2   28:r135 l0     3   29:r136 l0     2
   26:r137 l0     3   27:r138 l0     2   25:r139 l0     3   22:r140 l0     3
   20:r141 l0     3   17:r142 l0     3   15:r143 l0     3   14:r144 l0     3
   10:r145 l0     3    7:r146 l0     3    5:r147 l0     3    2:r148 l0     3
+++Costs: overall 6000, reg 6000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


putblock

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 102 [sfp] 103 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={7d,5u} r1={4d,2u} r2={4d,1u} r3={3d} r11={1d,7u} r12={4d} r13={1d,9u} r14={3d} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={4d,2u} r101={2d} r102={1d,15u} r103={1d,6u} r104={2d} r105={2d} r106={2d} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} 
;;    total ref usage 330{247d,83u,0e} in 64{62 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 113 114 115 116 117 118 119 120 121 122 123 124 125 126 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [1 blk+0 S4 A32])
        (reg:SI 0 r0 [ blk ])) "sdc.c":207:1 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ blk ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [3 buf+0 S4 A32])
        (reg:SI 1 r1 [ buf ])) "sdc.c":207:1 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 1 r1 [ buf ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:SI 129)
        (symbol_ref:SI ("txbuf") [flags 0x2]  <var_decl 0x7f2800e6a3f0 txbuf>)) "sdc.c":211:9 253 {*arm_movsi_insn}
     (nil))
(insn 8 7 9 2 (set (reg/f:SI 130)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [3 buf+0 S4 A32])) "sdc.c":211:9 253 {*arm_movsi_insn}
     (nil))
(insn 9 8 10 2 (set (mem/f/c:SI (reg/f:SI 129) [3 txbuf+0 S4 A32])
        (reg/f:SI 130)) "sdc.c":211:9 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 130)
        (expr_list:REG_DEAD (reg/f:SI 129)
            (nil))))
(insn 10 9 11 2 (set (reg/f:SI 131)
        (symbol_ref:SI ("txcount") [flags 0x2]  <var_decl 0x7f2800e6a510 txcount>)) "sdc.c":211:24 253 {*arm_movsi_insn}
     (nil))
(insn 11 10 12 2 (set (reg:SI 132)
        (const_int 1024 [0x400])) "sdc.c":211:24 253 {*arm_movsi_insn}
     (nil))
(insn 12 11 13 2 (set (mem/c:SI (reg/f:SI 131) [1 txcount+0 S4 A32])
        (reg:SI 132)) "sdc.c":211:24 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 132)
        (expr_list:REG_DEAD (reg/f:SI 131)
            (nil))))
(insn 13 12 14 2 (set (reg/f:SI 133)
        (symbol_ref:SI ("txsem") [flags 0x2]  <var_decl 0x7f2800e6a750 txsem>)) "sdc.c":212:15 253 {*arm_movsi_insn}
     (nil))
(insn 14 13 15 2 (set (reg:SI 134)
        (const_int 0 [0])) "sdc.c":212:15 253 {*arm_movsi_insn}
     (nil))
(insn 15 14 16 2 (set (mem/c:SI (reg/f:SI 133) [1 txsem.value+0 S4 A32])
        (reg:SI 134)) "sdc.c":212:15 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 134)
        (expr_list:REG_DEAD (reg/f:SI 133)
            (nil))))
(insn 16 15 17 2 (set (reg/f:SI 135)
        (symbol_ref:SI ("txsem") [flags 0x2]  <var_decl 0x7f2800e6a750 txsem>)) "sdc.c":213:15 253 {*arm_movsi_insn}
     (nil))
(insn 17 16 18 2 (set (reg:SI 136)
        (const_int 0 [0])) "sdc.c":213:15 253 {*arm_movsi_insn}
     (nil))
(insn 18 17 19 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 135)
                (const_int 4 [0x4])) [5 txsem.queue+0 S4 A32])
        (reg:SI 136)) "sdc.c":213:15 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 136)
        (expr_list:REG_DEAD (reg/f:SI 135)
            (nil))))
(insn 19 18 20 2 (set (reg/f:SI 137)
        (symbol_ref:SI ("txdone") [flags 0x2]  <var_decl 0x7f2800e6a630 txdone>)) "sdc.c":214:10 253 {*arm_movsi_insn}
     (nil))
(insn 20 19 21 2 (set (reg:SI 138)
        (const_int 0 [0])) "sdc.c":214:10 253 {*arm_movsi_insn}
     (nil))
(insn 21 20 22 2 (set (mem/c:SI (reg/f:SI 137) [1 txdone+0 S4 A32])
        (reg:SI 138)) "sdc.c":214:10 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 138)
        (expr_list:REG_DEAD (reg/f:SI 137)
            (nil))))
(insn 22 21 23 2 (set (reg/f:SI 139)
        (symbol_ref:SI ("base") [flags 0x2]  <var_decl 0x7f2800e6a2d0 base>)) "sdc.c":216:17 253 {*arm_movsi_insn}
     (nil))
(insn 23 22 24 2 (set (reg:SI 113 [ base.32_1 ])
        (mem/c:SI (reg/f:SI 139) [1 base+0 S4 A32])) "sdc.c":216:17 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 139)
        (nil)))
(insn 24 23 25 2 (set (reg:SI 114 [ _2 ])
        (plus:SI (reg:SI 113 [ base.32_1 ])
            (const_int 36 [0x24]))) "sdc.c":216:17 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 113 [ base.32_1 ])
        (nil)))
(insn 25 24 26 2 (set (reg/f:SI 115 [ _3 ])
        (reg:SI 114 [ _2 ])) "sdc.c":216:4 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 114 [ _2 ])
        (nil)))
(insn 26 25 27 2 (set (reg:SI 140)
        (const_int -65536 [0xffffffffffff0000])) "sdc.c":216:30 253 {*arm_movsi_insn}
     (nil))
(insn 27 26 28 2 (set (mem:SI (reg/f:SI 115 [ _3 ]) [1 *_3+0 S4 A32])
        (reg:SI 140)) "sdc.c":216:30 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 140)
        (expr_list:REG_DEAD (reg/f:SI 115 [ _3 ])
            (nil))))
(insn 28 27 29 2 (set (reg/f:SI 141)
        (symbol_ref:SI ("base") [flags 0x2]  <var_decl 0x7f2800e6a2d0 base>)) "sdc.c":217:17 253 {*arm_movsi_insn}
     (nil))
(insn 29 28 30 2 (set (reg:SI 116 [ base.33_4 ])
        (mem/c:SI (reg/f:SI 141) [1 base+0 S4 A32])) "sdc.c":217:17 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 141)
        (nil)))
(insn 30 29 31 2 (set (reg:SI 117 [ _5 ])
        (plus:SI (reg:SI 116 [ base.33_4 ])
            (const_int 40 [0x28]))) "sdc.c":217:17 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 116 [ base.33_4 ])
        (nil)))
(insn 31 30 32 2 (set (reg/f:SI 118 [ _6 ])
        (reg:SI 117 [ _5 ])) "sdc.c":217:4 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 117 [ _5 ])
        (nil)))
(insn 32 31 33 2 (set (reg:SI 142)
        (const_int 1024 [0x400])) "sdc.c":217:31 253 {*arm_movsi_insn}
     (nil))
(insn 33 32 34 2 (set (mem:SI (reg/f:SI 118 [ _6 ]) [1 *_6+0 S4 A32])
        (reg:SI 142)) "sdc.c":217:31 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 142)
        (expr_list:REG_DEAD (reg/f:SI 118 [ _6 ])
            (nil))))
(insn 34 33 35 2 (set (reg:SI 143)
        (const_int 25 [0x19])) "sdc.c":219:7 253 {*arm_movsi_insn}
     (nil))
(insn 35 34 36 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [1 cmd+0 S4 A64])
        (reg:SI 143)) "sdc.c":219:7 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 143)
        (nil)))
(insn 36 35 37 2 (set (reg:SI 144)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [1 blk+0 S4 A32])) "sdc.c":220:22 253 {*arm_movsi_insn}
     (nil))
(insn 37 36 38 2 (set (reg:SI 119 [ _7 ])
        (ashift:SI (reg:SI 144)
            (const_int 10 [0xa]))) "sdc.c":220:22 147 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 144)
        (nil)))
(insn 38 37 39 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 arg+0 S4 A32])
        (reg:SI 119 [ _7 ])) "sdc.c":220:7 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 119 [ _7 ])
        (nil)))
(insn 39 38 40 2 (set (reg:SI 120 [ cmd.34_8 ])
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [1 cmd+0 S4 A64])) "sdc.c":221:3 253 {*arm_movsi_insn}
     (nil))
(insn 40 39 41 2 (set (reg:SI 121 [ arg.35_9 ])
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 arg+0 S4 A32])) "sdc.c":221:3 253 {*arm_movsi_insn}
     (nil))
(insn 41 40 42 2 (set (reg:SI 2 r2)
        (const_int 21 [0x15])) "sdc.c":221:3 253 {*arm_movsi_insn}
     (nil))
(insn 42 41 43 2 (set (reg:SI 1 r1)
        (reg:SI 121 [ arg.35_9 ])) "sdc.c":221:3 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 121 [ arg.35_9 ])
        (nil)))
(insn 43 42 44 2 (set (reg:SI 0 r0)
        (reg:SI 120 [ cmd.34_8 ])) "sdc.c":221:3 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 120 [ cmd.34_8 ])
        (nil)))
(call_insn 44 43 45 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_command") [flags 0x3]  <function_decl 0x7f2800e61e00 do_command>) [0 do_command S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "sdc.c":221:3 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 45 44 46 2 (set (reg/f:SI 145)
        (symbol_ref:SI ("base") [flags 0x2]  <var_decl 0x7f2800e6a2d0 base>)) "sdc.c":225:17 253 {*arm_movsi_insn}
     (nil))
(insn 46 45 47 2 (set (reg:SI 122 [ base.36_10 ])
        (mem/c:SI (reg/f:SI 145) [1 base+0 S4 A32])) "sdc.c":225:17 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 145)
        (nil)))
(insn 47 46 48 2 (set (reg:SI 123 [ _11 ])
        (plus:SI (reg:SI 122 [ base.36_10 ])
            (const_int 44 [0x2c]))) "sdc.c":225:17 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 122 [ base.36_10 ])
        (nil)))
(insn 48 47 49 2 (set (reg/f:SI 124 [ _12 ])
        (reg:SI 123 [ _11 ])) "sdc.c":225:4 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 123 [ _11 ])
        (nil)))
(insn 49 48 50 2 (set (reg:SI 146)
        (const_int 145 [0x91])) "sdc.c":225:29 253 {*arm_movsi_insn}
     (nil))
(insn 50 49 51 2 (set (mem:SI (reg/f:SI 124 [ _12 ]) [1 *_12+0 S4 A32])
        (reg:SI 146)) "sdc.c":225:29 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 146)
        (expr_list:REG_DEAD (reg/f:SI 124 [ _12 ])
            (nil))))
(insn 51 50 52 2 (set (reg/f:SI 147)
        (symbol_ref:SI ("running") [flags 0x40]  <var_decl 0x7f2801b4c7e0 running>)) "sdc.c":228:14 253 {*arm_movsi_insn}
     (nil))
(insn 52 51 53 2 (set (reg/f:SI 125 [ running.37_13 ])
        (mem/f/c:SI (reg/f:SI 147) [5 running+0 S4 A32])) "sdc.c":228:14 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 147)
        (nil)))
(insn 53 52 54 2 (set (reg:SI 126 [ _14 ])
        (mem:SI (plus:SI (reg/f:SI 125 [ running.37_13 ])
                (const_int 24 [0x18])) [1 running.37_13->pid+0 S4 A32])) "sdc.c":228:14 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 125 [ running.37_13 ])
        (nil)))
(insn 54 53 55 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 126 [ _14 ])
            (const_int 0 [0]))) "sdc.c":228:6 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 126 [ _14 ])
        (nil)))
(jump_insn 55 54 56 2 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 61)
            (pc))) "sdc.c":228:6 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (nil))
 -> 61)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(note 56 55 57 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 3 (set (reg:SI 0 r0)
        (symbol_ref:SI ("txsem") [flags 0x2]  <var_decl 0x7f2800e6a750 txsem>)) "sdc.c":229:6 253 {*arm_movsi_insn}
     (nil))
(call_insn 58 57 78 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("P") [flags 0x41]  <function_decl 0x7f2800e73b00 P>) [0 P S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "sdc.c":229:6 291 {*call_value_symbol}
     (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(jump_insn 78 58 79 3 (set (pc)
        (label_ref 69)) 284 {*arm_jump}
     (nil)
 -> 69)
;;  succ:       6 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

(barrier 79 78 61)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 7, flags: (RTL)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(code_label 61 79 62 4 26 (nil) [1 uses])
(note 62 61 80 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       7 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 4, next block 5, flags: (RTL)
;;  pred:       4 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 80 62 81 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 66 7 (const_int 0 [0]) "sdc.c":231:10 311 {nop}
     (nil))
;;  succ:       5 [always]  (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 7, next block 6, flags: (RTL)
;;  pred:       7 [always]  (FALLTHRU)
;;              5 (DFS_BACK)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 127 148
(code_label 66 81 63 5 28 (nil) [1 uses])
(note 63 66 64 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 5 (set (reg/f:SI 148)
        (symbol_ref:SI ("txdone") [flags 0x2]  <var_decl 0x7f2800e6a630 txdone>)) "sdc.c":231:17 253 {*arm_movsi_insn}
     (nil))
(insn 65 64 67 5 (set (reg:SI 127 [ txdone.38_15 ])
        (mem/c:SI (reg/f:SI 148) [1 txdone+0 S4 A32])) "sdc.c":231:17 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 148)
        (nil)))
(insn 67 65 68 5 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 127 [ txdone.38_15 ])
            (const_int 0 [0]))) "sdc.c":231:17 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 127 [ txdone.38_15 ])
        (nil)))
(jump_insn 68 67 69 5 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 66)
            (pc))) "sdc.c":231:17 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (nil))
 -> 66)
;;  succ:       5 (DFS_BACK)
;;              6 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 1, flags: (RTL)
;;  pred:       5 (FALLTHRU)
;;              3 [always] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 128
(code_label 69 68 70 6 27 (nil) [1 uses])
(note 70 69 73 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 73 70 74 6 (clobber (reg/i:SI 0 r0)) "sdc.c":233:1 -1
     (expr_list:REG_UNUSED (reg/i:SI 0 r0)
        (nil)))
(insn 74 73 77 6 (clobber (reg:SI 128 [ <retval> ])) "sdc.c":233:1 -1
     (nil))
(insn 77 74 72 6 (const_int 0 [0]) "sdc.c":233:1 311 {nop}
     (nil))
(insn 72 77 75 6 (set (reg/i:SI 0 r0)
        (reg:SI 128 [ <retval> ])) "sdc.c":233:1 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 128 [ <retval> ])
        (nil)))
(insn 75 72 0 6 (use (reg/i:SI 0 r0)) "sdc.c":233:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

