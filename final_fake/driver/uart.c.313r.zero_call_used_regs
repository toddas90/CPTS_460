
;; Function uart_init (uart_init, funcdef_no=0, decl_uid=4478, cgraph_uid=1, symbol_order=2)



uart_init

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 11 [fp] 13 [sp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  regs ever live 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={5d,3u} r1={2d} r2={19d,19u,3e} r3={27d,30u} r11={3d,32u} r12={2d} r13={5d,20u} r14={2d,2u} r15={2d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={3d,2u} r101={1d} r102={1d,1u} r104={1d} r105={1d} r106={1d} 
;;    total ref usage 271{159d,109u,3e} in 78{77 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(note 3 1 94 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 94 3 95 2 (parallel [
            (set (mem/c:BLK (pre_modify:SI (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -8 [0xfffffffffffffff8]))) [7  A8])
                (unspec:BLK [
                        (reg/f:SI 11 fp)
                    ] UNSPEC_PUSH_MULT))
            (use (reg:SI 14 lr))
        ]) "uart.c":79:1 -1
     (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                (set/f (reg/f:SI 13 sp)
                    (plus:SI (reg/f:SI 13 sp)
                        (const_int -8 [0xfffffffffffffff8])))
                (set/f (mem/c:SI (reg/f:SI 13 sp) [7  S4 A32])
                    (reg/f:SI 11 fp))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 4 [0x4])) [7  S4 A32])
                    (reg:SI 14 lr))
            ])
        (nil)))
(insn/f 95 94 96 2 (set (reg/f:SI 11 fp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 4 [0x4]))) "uart.c":79:1 -1
     (nil))
(insn/f 96 95 97 2 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -8 [0xfffffffffffffff8]))) "uart.c":79:1 -1
     (nil))
(insn 97 96 98 2 (set (mem:BLK (scratch) [0  A8])
        (unspec:BLK [
                (reg/f:SI 13 sp)
                (reg/f:SI 11 fp)
            ] UNSPEC_PRLG_STK)) "uart.c":79:1 -1
     (nil))
(note 98 97 2 2 NOTE_INSN_PROLOGUE_END)
(note 2 98 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x7f19cf0af2d0 *.LC0>)) "uart.c":82:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 6 5 7 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kprintf") [flags 0x41]  <function_decl 0x7f19cf067700 kprintf>) [0 kprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "uart.c":82:3 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 7 6 8 2 (set (reg:SI 3 r3 [120])
        (const_int 0 [0])) "uart.c":83:9 253 {*arm_movsi_insn}
     (nil))
(insn 8 7 89 2 (set (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A64])
        (reg:SI 3 r3 [120])) "uart.c":83:9 253 {*arm_movsi_insn}
     (nil))
(jump_insn 89 8 90 2 (set (pc)
        (label_ref 73)) "uart.c":83:3 284 {*arm_jump}
     (nil)
 -> 73)
;;  succ:       6 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 90 89 75)
;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 100 [cc]
(code_label 75 90 11 3 4 (nil) [1 uses])
(note 11 75 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 3 (set (reg:SI 2 r2 [121])
        (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A64])) "uart.c":84:8 253 {*arm_movsi_insn}
     (nil))
(insn 13 12 14 3 (set (reg:SI 3 r3 [122])
        (reg:SI 2 r2 [121])) "uart.c":84:8 253 {*arm_movsi_insn}
     (nil))
(insn 14 13 15 3 (set (reg:SI 3 r3 [122])
        (ashift:SI (reg:SI 3 r3 [122])
            (const_int 4 [0x4]))) "uart.c":84:8 147 {*arm_shiftsi3}
     (nil))
(insn 15 14 16 3 (set (reg:SI 3 r3 [122])
        (minus:SI (reg:SI 3 r3 [122])
            (reg:SI 2 r2 [121]))) "uart.c":84:8 45 {*arm_subsi3_insn}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 2 r2 [121])
            (const_int 15 [0xf]))
        (nil)))
(insn 16 15 17 3 (set (reg:SI 3 r3 [122])
        (ashift:SI (reg:SI 3 r3 [122])
            (const_int 2 [0x2]))) "uart.c":84:8 147 {*arm_shiftsi3}
     (nil))
(insn 17 16 18 3 (set (reg:SI 3 r3 [122])
        (plus:SI (reg:SI 3 r3 [122])
            (reg:SI 2 r2 [121]))) "uart.c":84:8 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 2 r2 [121])
            (const_int 61 [0x3d]))
        (nil)))
(insn 18 17 20 3 (set (reg:SI 3 r3 [123])
        (ashift:SI (reg:SI 3 r3 [122])
            (const_int 2 [0x2]))) "uart.c":84:8 147 {*arm_shiftsi3}
     (nil))
(insn 20 18 21 3 (set (reg:SI 2 r2 [125])
        (symbol_ref:SI ("uart") [flags 0x2]  <var_decl 0x7f19cfd52ab0 uart>)) "uart.c":84:8 253 {*arm_movsi_insn}
     (nil))
(insn 21 20 22 3 (set (reg:SI 3 r3 [124])
        (plus:SI (reg:SI 3 r3 [122])
            (reg:SI 2 r2 [125]))) "uart.c":84:8 7 {*arm_addsi3}
     (nil))
(insn 22 21 23 3 (set (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A32])
        (reg:SI 3 r3 [124])) "uart.c":84:8 253 {*arm_movsi_insn}
     (nil))
(insn 23 22 24 3 (set (reg:SI 2 r2 [126])
        (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A64])) "uart.c":85:36 253 {*arm_movsi_insn}
     (nil))
(insn 24 23 25 3 (set (reg:SI 3 r3 [orig:113 _1 ] [113])
        (const_int 66033 [0x101f1])) "uart.c":85:36 253 {*arm_movsi_insn}
     (nil))
(insn 25 24 26 3 (set (reg:SI 3 r3 [orig:113 _1 ] [113])
        (plus:SI (reg:SI 2 r2 [126])
            (reg:SI 3 r3 [orig:113 _1 ] [113]))) "uart.c":85:36 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 2 r2 [126])
            (const_int 66033 [0x101f1]))
        (nil)))
(insn 26 25 27 3 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (ashift:SI (reg:SI 3 r3 [orig:113 _1 ] [113])
            (const_int 12 [0xc]))) "uart.c":85:36 147 {*arm_shiftsi3}
     (nil))
(insn 27 26 28 3 (set (reg/f:SI 2 r2 [orig:115 _3 ] [115])
        (reg:SI 3 r3 [orig:114 _2 ] [114])) "uart.c":85:16 253 {*arm_movsi_insn}
     (nil))
(insn 28 27 29 3 (set (reg/f:SI 3 r3 [127])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A32])) "uart.c":85:14 253 {*arm_movsi_insn}
     (nil))
(insn 29 28 30 3 (set (mem/v/f:SI (reg/f:SI 3 r3 [127]) [2 up_15->base+0 S4 A32])
        (reg/f:SI 2 r2 [orig:115 _3 ] [115])) "uart.c":85:14 253 {*arm_movsi_insn}
     (nil))
(insn 30 29 31 3 (set (reg:SI 3 r3 [128])
        (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A64])) "uart.c":86:8 253 {*arm_movsi_insn}
     (nil))
(insn 31 30 32 3 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [128])
            (const_int 3 [0x3]))) "uart.c":86:8 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 32 31 33 3 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) "uart.c":86:8 273 {arm_cond_branch}
     (nil)
 -> 37)
;;  succ:       4 (FALLTHRU)
;;              5
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
(note 33 32 34 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 4 (set (reg/f:SI 3 r3 [129])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A32])) "uart.c":87:17 253 {*arm_movsi_insn}
     (nil))
(insn 35 34 36 4 (set (reg:SI 2 r2 [130])
        (const_int 268472320 [0x10009000])) "uart.c":87:17 253 {*arm_movsi_insn}
     (nil))
(insn 36 35 37 4 (set (mem/v/f:SI (reg/f:SI 3 r3 [129]) [2 up_15->base+0 S4 A32])
        (reg:SI 2 r2 [130])) "uart.c":87:17 253 {*arm_movsi_insn}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3
;;              4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
(code_label 37 36 38 5 3 (nil) [1 uses])
(note 38 37 39 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 5 (set (reg:SI 3 r3 [orig:116 _4 ] [116])
        (const_int 0 [0])) "uart.c":89:29 253 {*arm_movsi_insn}
     (nil))
(insn 40 39 41 5 (set (reg/f:SI 2 r2 [131])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A32])) "uart.c":89:29 253 {*arm_movsi_insn}
     (nil))
(insn 41 40 42 5 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [131])
                (const_int 72 [0x48])) [3 up_15->intail+0 S4 A32])
        (reg:SI 3 r3 [orig:116 _4 ] [116])) "uart.c":89:29 253 {*arm_movsi_insn}
     (nil))
(insn 42 41 43 5 (set (reg/f:SI 2 r2 [132])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A32])) "uart.c":89:16 253 {*arm_movsi_insn}
     (nil))
(insn 43 42 44 5 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [132])
                (const_int 68 [0x44])) [3 up_15->inhead+0 S4 A32])
        (reg:SI 3 r3 [orig:116 _4 ] [116])) "uart.c":89:16 253 {*arm_movsi_insn}
     (nil))
(insn 44 43 45 5 (set (reg/f:SI 3 r3 [133])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A32])) "uart.c":90:22 253 {*arm_movsi_insn}
     (nil))
(insn 45 44 46 5 (set (reg:SI 2 r2 [134])
        (const_int 0 [0])) "uart.c":90:22 253 {*arm_movsi_insn}
     (nil))
(insn 46 45 47 5 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [133])
                (const_int 76 [0x4c])) [3 up_15->inchar.value+0 S4 A32])
        (reg:SI 2 r2 [134])) "uart.c":90:22 253 {*arm_movsi_insn}
     (nil))
(insn 47 46 48 5 (set (reg/f:SI 3 r3 [135])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A32])) "uart.c":90:44 253 {*arm_movsi_insn}
     (nil))
(insn 48 47 49 5 (set (reg:SI 2 r2 [136])
        (const_int 0 [0])) "uart.c":90:44 253 {*arm_movsi_insn}
     (nil))
(insn 49 48 50 5 (set (mem/v/f:SI (plus:SI (reg/f:SI 3 r3 [135])
                (const_int 80 [0x50])) [5 up_15->inchar.queue+0 S4 A32])
        (reg:SI 2 r2 [136])) "uart.c":90:44 253 {*arm_movsi_insn}
     (nil))
(insn 50 49 51 5 (set (reg:SI 3 r3 [orig:117 _5 ] [117])
        (const_int 0 [0])) "uart.c":92:43 253 {*arm_movsi_insn}
     (nil))
(insn 51 50 52 5 (set (reg/f:SI 2 r2 [137])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A32])) "uart.c":92:43 253 {*arm_movsi_insn}
     (nil))
(insn 52 51 53 5 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [137])
                (const_int 164 [0xa4])) [3 up_15->tx_on+0 S4 A32])
        (reg:SI 3 r3 [orig:117 _5 ] [117])) "uart.c":92:43 253 {*arm_movsi_insn}
     (nil))
(insn 53 52 54 5 (set (reg/f:SI 2 r2 [138])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A32])) "uart.c":92:31 253 {*arm_movsi_insn}
     (nil))
(insn 54 53 55 5 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [138])
                (const_int 152 [0x98])) [3 up_15->outtail+0 S4 A32])
        (reg:SI 3 r3 [orig:117 _5 ] [117])) "uart.c":92:31 253 {*arm_movsi_insn}
     (nil))
(insn 55 54 56 5 (set (reg/f:SI 2 r2 [139])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A32])) "uart.c":92:17 253 {*arm_movsi_insn}
     (nil))
(insn 56 55 57 5 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [139])
                (const_int 148 [0x94])) [3 up_15->outhead+0 S4 A32])
        (reg:SI 3 r3 [orig:117 _5 ] [117])) "uart.c":92:17 253 {*arm_movsi_insn}
     (nil))
(insn 57 56 58 5 (set (reg/f:SI 3 r3 [140])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A32])) "uart.c":93:24 253 {*arm_movsi_insn}
     (nil))
(insn 58 57 59 5 (set (reg:SI 2 r2 [141])
        (const_int 64 [0x40])) "uart.c":93:24 253 {*arm_movsi_insn}
     (nil))
(insn 59 58 60 5 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [140])
                (const_int 156 [0x9c])) [3 up_15->outspace.value+0 S4 A32])
        (reg:SI 2 r2 [141])) "uart.c":93:24 253 {*arm_movsi_insn}
     (nil))
(insn 60 59 61 5 (set (reg/f:SI 3 r3 [142])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A32])) "uart.c":93:53 253 {*arm_movsi_insn}
     (nil))
(insn 61 60 62 5 (set (reg:SI 2 r2 [143])
        (const_int 0 [0])) "uart.c":93:53 253 {*arm_movsi_insn}
     (nil))
(insn 62 61 63 5 (set (mem/v/f:SI (plus:SI (reg/f:SI 3 r3 [142])
                (const_int 160 [0xa0])) [5 up_15->outspace.queue+0 S4 A32])
        (reg:SI 2 r2 [143])) "uart.c":93:53 253 {*arm_movsi_insn}
     (nil))
(insn 63 62 64 5 (set (reg:SI 3 r3 [orig:118 _7 ] [118])
        (const_int 0 [0])) "uart.c":95:42 253 {*arm_movsi_insn}
     (nil))
(insn 64 63 65 5 (set (reg/f:SI 2 r2 [144])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A32])) "uart.c":95:42 253 {*arm_movsi_insn}
     (nil))
(insn 65 64 66 5 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [144])
                (const_int 240 [0xf0])) [3 up_15->e_count+0 S4 A32])
        (reg:SI 3 r3 [orig:118 _7 ] [118])) "uart.c":95:42 253 {*arm_movsi_insn}
     (nil))
(insn 66 65 67 5 (set (reg/f:SI 2 r2 [145])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A32])) "uart.c":95:28 253 {*arm_movsi_insn}
     (nil))
(insn 67 66 68 5 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [145])
                (const_int 236 [0xec])) [3 up_15->etail+0 S4 A32])
        (reg:SI 3 r3 [orig:118 _7 ] [118])) "uart.c":95:28 253 {*arm_movsi_insn}
     (nil))
(insn 68 67 69 5 (set (reg/f:SI 2 r2 [146])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A32])) "uart.c":95:15 253 {*arm_movsi_insn}
     (nil))
(insn 69 68 70 5 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [146])
                (const_int 232 [0xe8])) [3 up_15->ehead+0 S4 A32])
        (reg:SI 3 r3 [orig:118 _7 ] [118])) "uart.c":95:15 253 {*arm_movsi_insn}
     (nil))
(insn 70 69 71 5 (set (reg:SI 3 r3 [148])
        (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A64])) "uart.c":83:19 253 {*arm_movsi_insn}
     (nil))
(insn 71 70 72 5 (set (reg:SI 3 r3 [147])
        (plus:SI (reg:SI 3 r3 [148])
            (const_int 1 [0x1]))) "uart.c":83:19 7 {*arm_addsi3}
     (nil))
(insn 72 71 73 5 (set (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A64])
        (reg:SI 3 r3 [147])) "uart.c":83:19 253 {*arm_movsi_insn}
     (nil))
;;  succ:       6 (FALLTHRU,DFS_BACK)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU,DFS_BACK)
;;              2 [always] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(code_label 73 72 74 6 2 (nil) [1 uses])
(note 74 73 78 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 78 74 79 6 (set (reg:SI 3 r3 [149])
        (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A64])) "uart.c":83:14 253 {*arm_movsi_insn}
     (nil))
(insn 79 78 80 6 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [149])
            (const_int 3 [0x3]))) "uart.c":83:14 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 80 79 81 6 (set (pc)
        (if_then_else (le (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 75)
            (pc))) "uart.c":83:14 273 {arm_cond_branch}
     (nil)
 -> 75)
;;  succ:       3
;;              7 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 3 [r3]
(note 81 80 84 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 84 81 85 7 (clobber (reg/i:SI 0 r0)) "uart.c":97:1 -1
     (nil))
(insn 85 84 88 7 (clobber (reg:SI 3 r3 [orig:119 <retval> ] [119])) "uart.c":97:1 -1
     (nil))
(insn 88 85 83 7 (const_int 0 [0]) "uart.c":97:1 311 {nop}
     (nil))
(insn 83 88 86 7 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:119 <retval> ] [119])) "uart.c":97:1 253 {*arm_movsi_insn}
     (nil))
(insn 86 83 99 7 (use (reg/i:SI 0 r0)) "uart.c":97:1 -1
     (nil))
(note 99 86 100 7 NOTE_INSN_EPILOGUE_BEG)
(insn 100 99 101 7 (unspec_volatile [
            (const_int 0 [0])
        ] VUNSPEC_BLOCKAGE) "uart.c":97:1 -1
     (nil))
(insn/f 101 100 102 7 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 11 fp)
            (const_int -4 [0xfffffffffffffffc]))) "uart.c":97:1 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 13 sp)
            (plus:SI (reg/f:SI 11 fp)
                (const_int -4 [0xfffffffffffffffc])))
        (nil)))
(insn 102 101 103 7 (unspec:SI [
            (reg/f:SI 13 sp)
        ] UNSPEC_REGISTER_USE) "uart.c":97:1 -1
     (nil))
(jump_insn 103 102 104 7 (parallel [
            (return)
            (set/f (reg/f:SI 13 sp)
                (plus:SI (reg/f:SI 13 sp)
                    (const_int 8 [0x8])))
            (set/f (reg/f:SI 11 fp)
                (mem/c:SI (reg/f:SI 13 sp) [7  S4 A32]))
            (set/f (reg:SI 15 pc)
                (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                        (const_int 4 [0x4])) [7  S4 A32]))
        ]) "uart.c":97:1 -1
     (expr_list:REG_CFA_RESTORE (reg/f:SI 11 fp)
        (nil))
 -> return)
;;  succ:       EXIT [always] 
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp]

(barrier 104 103 93)
(note 93 104 0 NOTE_INSN_DELETED)

;; Function uart0_handler (uart0_handler, funcdef_no=1, decl_uid=4487, cgraph_uid=2, symbol_order=3)



uart0_handler

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 11 [fp] 13 [sp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={10d,6u} r1={11d,6u} r2={18d,25u,12e} r3={74d,71u} r11={3d,34u} r12={8d} r13={5d,26u} r14={5d,2u} r15={5d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={9d,5u} r101={4d} r102={1d,1u} r104={4d} r105={4d} r106={4d} 
;;    total ref usage 689{501d,176u,12e} in 127{123 regular + 4 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 100 [cc]
(note 3 1 153 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 153 3 154 2 (parallel [
            (set (mem/c:BLK (pre_modify:SI (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -8 [0xfffffffffffffff8]))) [7  A8])
                (unspec:BLK [
                        (reg/f:SI 11 fp)
                    ] UNSPEC_PUSH_MULT))
            (use (reg:SI 14 lr))
        ]) "uart.c":101:22 -1
     (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                (set/f (reg/f:SI 13 sp)
                    (plus:SI (reg/f:SI 13 sp)
                        (const_int -8 [0xfffffffffffffff8])))
                (set/f (mem/c:SI (reg/f:SI 13 sp) [7  S4 A32])
                    (reg/f:SI 11 fp))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 4 [0x4])) [7  S4 A32])
                    (reg:SI 14 lr))
            ])
        (nil)))
(insn/f 154 153 155 2 (set (reg/f:SI 11 fp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 4 [0x4]))) "uart.c":101:22 -1
     (nil))
(insn/f 155 154 156 2 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -16 [0xfffffffffffffff0]))) "uart.c":101:22 -1
     (nil))
(insn 156 155 157 2 (set (mem:BLK (scratch) [0  A8])
        (unspec:BLK [
                (reg/f:SI 13 sp)
                (reg/f:SI 11 fp)
            ] UNSPEC_PRLG_STK)) "uart.c":101:22 -1
     (nil))
(note 157 156 2 2 NOTE_INSN_PROLOGUE_END)
(note 2 157 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 3 r3 [129])
        (symbol_ref:SI ("color") [flags 0x40]  <var_decl 0x7f19cfd52480 color>)) "uart.c":107:9 253 {*arm_movsi_insn}
     (nil))
(insn 6 5 7 2 (set (reg:SI 2 r2 [130])
        (const_int 1 [0x1])) "uart.c":107:9 253 {*arm_movsi_insn}
     (nil))
(insn 7 6 8 2 (set (mem/c:SI (reg/f:SI 3 r3 [129]) [3 color+0 S4 A32])
        (reg:SI 2 r2 [130])) "uart.c":107:9 253 {*arm_movsi_insn}
     (nil))
(insn 8 7 9 2 (set (reg/f:SI 3 r3 [131])
        (symbol_ref:SI ("uart") [flags 0x2]  <var_decl 0x7f19cfd52ab0 uart>)) "uart.c":109:6 253 {*arm_movsi_insn}
     (nil))
(insn 9 8 147 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A32])
        (reg/f:SI 3 r3 [131])) "uart.c":109:6 253 {*arm_movsi_insn}
     (nil))
(insn 147 9 11 2 (const_int 0 [0]) "uart.c":110:8 311 {nop}
     (nil))
(insn 11 147 12 2 (set (reg/f:SI 3 r3 [132])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A32])) "uart.c":110:14 253 {*arm_movsi_insn}
     (nil))
(insn 12 11 15 2 (set (reg/f:SI 3 r3 [orig:113 _1 ] [113])
        (mem/v/f:SI (reg/f:SI 3 r3 [132]) [2 up_25->base+0 S4 A32])) "uart.c":110:14 253 {*arm_movsi_insn}
     (nil))
(insn 15 12 16 2 (set (reg/f:SI 3 r3 [133])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A32])) "uart.c":112:11 253 {*arm_movsi_insn}
     (nil))
(insn 16 15 17 2 (set (reg/f:SI 3 r3 [orig:115 _3 ] [115])
        (mem/v/f:SI (reg/f:SI 3 r3 [133]) [2 up_25->base+0 S4 A32])) "uart.c":112:11 253 {*arm_movsi_insn}
     (nil))
(insn 17 16 18 2 (set (reg:QI 3 r3 [134])
        (mem:QI (reg/f:SI 3 r3 [orig:115 _3 ] [115]) [0 *_3+0 S1 A8])) "uart.c":112:5 263 {*arm_movqi_insn}
     (nil))
(insn 18 17 19 2 (set (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                (const_int -13 [0xfffffffffffffff3])) [0 c+0 S1 A8])
        (reg:QI 3 r3 [134])) "uart.c":112:5 263 {*arm_movqi_insn}
     (nil))
(insn 19 18 20 2 (set (reg:SI 3 r3 [135])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -13 [0xfffffffffffffff3])) [0 c+0 S1 A8]))) "uart.c":115:6 175 {*arm_zero_extendqisi2}
     (nil))
(insn 20 19 21 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [135])
            (const_int 3 [0x3]))) "uart.c":115:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 21 20 22 2 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 119)
            (pc))) "uart.c":115:6 273 {arm_cond_branch}
     (nil)
 -> 119)
;;  succ:       3 (FALLTHRU)
;;              10
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(note 22 21 23 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 3 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x7f19cf0af360 *.LC1>)) "uart.c":116:5 253 {*arm_movsi_insn}
     (nil))
(call_insn 24 23 25 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kprintf") [flags 0x41]  <function_decl 0x7f19cf067700 kprintf>) [0 kprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "uart.c":116:5 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 25 24 26 3 (set (reg:SI 3 r3 [136])
        (const_int 1 [0x1])) "uart.c":117:11 253 {*arm_movsi_insn}
     (nil))
(insn 26 25 148 3 (set (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A64])
        (reg:SI 3 r3 [136])) "uart.c":117:11 253 {*arm_movsi_insn}
     (nil))
(jump_insn 148 26 149 3 (set (pc)
        (label_ref 105)) "uart.c":117:5 284 {*arm_jump}
     (nil)
 -> 105)
;;  succ:       8 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 149 148 107)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3] 100 [cc]
(code_label 107 149 29 4 11 (nil) [1 uses])
(note 29 107 30 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 4 (set (reg/f:SI 1 r1 [137])
        (symbol_ref:SI ("proc") [flags 0x40]  <var_decl 0x7f19cfd525a0 proc>)) "uart.c":118:18 253 {*arm_movsi_insn}
     (nil))
(insn 31 30 32 4 (set (reg:SI 2 r2 [138])
        (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A64])) "uart.c":118:18 253 {*arm_movsi_insn}
     (nil))
(insn 32 31 33 4 (set (reg:SI 3 r3 [139])
        (reg:SI 2 r2 [138])) "uart.c":118:18 253 {*arm_movsi_insn}
     (nil))
(insn 33 32 34 4 (set (reg:SI 3 r3 [139])
        (ashift:SI (reg:SI 3 r3 [139])
            (const_int 6 [0x6]))) "uart.c":118:18 147 {*arm_shiftsi3}
     (nil))
(insn 34 33 35 4 (set (reg:SI 3 r3 [139])
        (plus:SI (reg:SI 3 r3 [139])
            (reg:SI 2 r2 [138]))) "uart.c":118:18 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 2 r2 [138])
            (const_int 65 [0x41]))
        (nil)))
(insn 35 34 36 4 (set (reg:SI 3 r3 [139])
        (ashift:SI (reg:SI 3 r3 [139])
            (const_int 1 [0x1]))) "uart.c":118:18 147 {*arm_shiftsi3}
     (nil))
(insn 36 35 37 4 (set (reg:SI 3 r3 [139])
        (plus:SI (reg:SI 3 r3 [139])
            (reg:SI 2 r2 [138]))) "uart.c":118:18 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 2 r2 [138])
            (const_int 131 [0x83]))
        (nil)))
(insn 37 36 38 4 (set (reg:SI 3 r3 [139])
        (ashift:SI (reg:SI 3 r3 [139])
            (const_int 3 [0x3]))) "uart.c":118:18 147 {*arm_shiftsi3}
     (nil))
(insn 38 37 39 4 (set (reg:SI 3 r3 [139])
        (minus:SI (reg:SI 3 r3 [139])
            (reg:SI 2 r2 [138]))) "uart.c":118:18 45 {*arm_subsi3_insn}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 2 r2 [138])
            (const_int 1047 [0x417]))
        (nil)))
(insn 39 38 41 4 (set (reg:SI 3 r3 [140])
        (ashift:SI (reg:SI 3 r3 [139])
            (const_int 2 [0x2]))) "uart.c":118:18 147 {*arm_shiftsi3}
     (nil))
(insn 41 39 42 4 (set (reg:SI 3 r3 [141])
        (plus:SI (reg/f:SI 1 r1 [137])
            (reg:SI 3 r3 [139]))) "uart.c":118:18 7 {*arm_addsi3}
     (nil))
(insn 42 41 43 4 (set (reg/f:SI 3 r3 [142])
        (plus:SI (reg:SI 3 r3 [141])
            (const_int 28 [0x1c]))) "uart.c":118:18 7 {*arm_addsi3}
     (nil))
(insn 43 42 44 4 (set (reg:SI 3 r3 [orig:116 _4 ] [116])
        (mem:SI (reg/f:SI 3 r3 [142]) [3 proc[i_19].status+0 S4 A32])) "uart.c":118:18 253 {*arm_movsi_insn}
     (nil))
(insn 44 43 45 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:116 _4 ] [116])
            (const_int 0 [0]))) "uart.c":118:10 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 45 44 46 4 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 100)
            (pc))) "uart.c":118:10 273 {arm_cond_branch}
     (nil)
 -> 100)
;;  succ:       5 (FALLTHRU)
;;              7
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(note 46 45 47 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 5 (set (reg/f:SI 1 r1 [143])
        (symbol_ref:SI ("proc") [flags 0x40]  <var_decl 0x7f19cfd525a0 proc>)) "uart.c":118:51 253 {*arm_movsi_insn}
     (nil))
(insn 48 47 49 5 (set (reg:SI 2 r2 [144])
        (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A64])) "uart.c":118:51 253 {*arm_movsi_insn}
     (nil))
(insn 49 48 50 5 (set (reg:SI 3 r3 [145])
        (reg:SI 2 r2 [144])) "uart.c":118:51 253 {*arm_movsi_insn}
     (nil))
(insn 50 49 51 5 (set (reg:SI 3 r3 [145])
        (ashift:SI (reg:SI 3 r3 [145])
            (const_int 6 [0x6]))) "uart.c":118:51 147 {*arm_shiftsi3}
     (nil))
(insn 51 50 52 5 (set (reg:SI 3 r3 [145])
        (plus:SI (reg:SI 3 r3 [145])
            (reg:SI 2 r2 [144]))) "uart.c":118:51 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 2 r2 [144])
            (const_int 65 [0x41]))
        (nil)))
(insn 52 51 53 5 (set (reg:SI 3 r3 [145])
        (ashift:SI (reg:SI 3 r3 [145])
            (const_int 1 [0x1]))) "uart.c":118:51 147 {*arm_shiftsi3}
     (nil))
(insn 53 52 54 5 (set (reg:SI 3 r3 [145])
        (plus:SI (reg:SI 3 r3 [145])
            (reg:SI 2 r2 [144]))) "uart.c":118:51 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 2 r2 [144])
            (const_int 131 [0x83]))
        (nil)))
(insn 54 53 55 5 (set (reg:SI 3 r3 [145])
        (ashift:SI (reg:SI 3 r3 [145])
            (const_int 3 [0x3]))) "uart.c":118:51 147 {*arm_shiftsi3}
     (nil))
(insn 55 54 56 5 (set (reg:SI 3 r3 [145])
        (minus:SI (reg:SI 3 r3 [145])
            (reg:SI 2 r2 [144]))) "uart.c":118:51 45 {*arm_subsi3_insn}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 2 r2 [144])
            (const_int 1047 [0x417]))
        (nil)))
(insn 56 55 58 5 (set (reg:SI 3 r3 [146])
        (ashift:SI (reg:SI 3 r3 [145])
            (const_int 2 [0x2]))) "uart.c":118:51 147 {*arm_shiftsi3}
     (nil))
(insn 58 56 59 5 (set (reg:SI 3 r3 [147])
        (plus:SI (reg/f:SI 1 r1 [143])
            (reg:SI 3 r3 [145]))) "uart.c":118:51 7 {*arm_addsi3}
     (nil))
(insn 59 58 60 5 (set (reg/f:SI 3 r3 [148])
        (plus:SI (reg:SI 3 r3 [147])
            (const_int 84 [0x54]))) "uart.c":118:51 7 {*arm_addsi3}
     (nil))
(insn 60 59 61 5 (set (reg/f:SI 3 r3 [orig:117 _5 ] [117])
        (mem/f:SI (reg/f:SI 3 r3 [148]) [10 proc[i_19].res+0 S4 A32])) "uart.c":118:51 253 {*arm_movsi_insn}
     (nil))
(insn 61 60 62 5 (set (reg/f:SI 3 r3 [orig:118 _6 ] [118])
        (plus:SI (reg/f:SI 3 r3 [orig:117 _5 ] [117])
            (const_int 60 [0x3c]))) "uart.c":118:55 7 {*arm_addsi3}
     (nil))
(insn 62 61 63 5 (set (reg:SI 1 r1)
        (symbol_ref/f:SI ("*.LC2") [flags 0x2]  <var_decl 0x7f19cf0af480 *.LC2>)) "uart.c":118:37 253 {*arm_movsi_insn}
     (nil))
(insn 63 62 64 5 (set (reg:SI 0 r0)
        (reg/f:SI 3 r3 [orig:118 _6 ] [118])) "uart.c":118:37 253 {*arm_movsi_insn}
     (nil))
(call_insn/i 64 63 65 5 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41]  <function_decl 0x7f19cf2e7700 strcmp>) [0 __builtin_strcmp S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "uart.c":118:37 291 {*call_value_symbol}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 65 64 66 5 (set (reg:SI 3 r3 [orig:119 _7 ] [119])
        (reg:SI 0 r0)) "uart.c":118:37 253 {*arm_movsi_insn}
     (nil))
(insn 66 65 67 5 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:119 _7 ] [119])
            (const_int 0 [0]))) "uart.c":118:34 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 67 66 68 5 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 100)
            (pc))) "uart.c":118:34 273 {arm_cond_branch}
     (nil)
 -> 100)
;;  succ:       6 (FALLTHRU)
;;              7
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
(note 68 67 69 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 6 (set (reg/f:SI 1 r1 [149])
        (symbol_ref:SI ("proc") [flags 0x40]  <var_decl 0x7f19cfd525a0 proc>)) "uart.c":119:9 253 {*arm_movsi_insn}
     (nil))
(insn 70 69 71 6 (set (reg:SI 2 r2 [150])
        (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A64])) "uart.c":119:9 253 {*arm_movsi_insn}
     (nil))
(insn 71 70 72 6 (set (reg:SI 3 r3 [151])
        (reg:SI 2 r2 [150])) "uart.c":119:9 253 {*arm_movsi_insn}
     (nil))
(insn 72 71 73 6 (set (reg:SI 3 r3 [151])
        (ashift:SI (reg:SI 3 r3 [151])
            (const_int 6 [0x6]))) "uart.c":119:9 147 {*arm_shiftsi3}
     (nil))
(insn 73 72 74 6 (set (reg:SI 3 r3 [151])
        (plus:SI (reg:SI 3 r3 [151])
            (reg:SI 2 r2 [150]))) "uart.c":119:9 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 2 r2 [150])
            (const_int 65 [0x41]))
        (nil)))
(insn 74 73 75 6 (set (reg:SI 3 r3 [151])
        (ashift:SI (reg:SI 3 r3 [151])
            (const_int 1 [0x1]))) "uart.c":119:9 147 {*arm_shiftsi3}
     (nil))
(insn 75 74 76 6 (set (reg:SI 3 r3 [151])
        (plus:SI (reg:SI 3 r3 [151])
            (reg:SI 2 r2 [150]))) "uart.c":119:9 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 2 r2 [150])
            (const_int 131 [0x83]))
        (nil)))
(insn 76 75 77 6 (set (reg:SI 3 r3 [151])
        (ashift:SI (reg:SI 3 r3 [151])
            (const_int 3 [0x3]))) "uart.c":119:9 147 {*arm_shiftsi3}
     (nil))
(insn 77 76 78 6 (set (reg:SI 3 r3 [151])
        (minus:SI (reg:SI 3 r3 [151])
            (reg:SI 2 r2 [150]))) "uart.c":119:9 45 {*arm_subsi3_insn}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 2 r2 [150])
            (const_int 1047 [0x417]))
        (nil)))
(insn 78 77 80 6 (set (reg:SI 3 r3 [152])
        (ashift:SI (reg:SI 3 r3 [151])
            (const_int 2 [0x2]))) "uart.c":119:9 147 {*arm_shiftsi3}
     (nil))
(insn 80 78 81 6 (set (reg:SI 3 r3 [153])
        (plus:SI (reg/f:SI 1 r1 [149])
            (reg:SI 3 r3 [151]))) "uart.c":119:9 7 {*arm_addsi3}
     (nil))
(insn 81 80 82 6 (set (reg/f:SI 3 r3 [154])
        (plus:SI (reg:SI 3 r3 [153])
            (const_int 84 [0x54]))) "uart.c":119:9 7 {*arm_addsi3}
     (nil))
(insn 82 81 83 6 (set (reg/f:SI 3 r3 [orig:120 _8 ] [120])
        (mem/f:SI (reg/f:SI 3 r3 [154]) [10 proc[i_19].res+0 S4 A32])) "uart.c":119:9 253 {*arm_movsi_insn}
     (nil))
(insn 83 82 84 6 (set (reg:SI 1 r1 [orig:121 _9 ] [121])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [orig:120 _8 ] [120])
                (const_int 92 [0x5c])) [3 _8->signal+0 S4 A32])) "uart.c":119:22 253 {*arm_movsi_insn}
     (nil))
(insn 84 83 85 6 (set (reg/f:SI 0 r0 [155])
        (symbol_ref:SI ("proc") [flags 0x40]  <var_decl 0x7f19cfd525a0 proc>)) "uart.c":119:9 253 {*arm_movsi_insn}
     (nil))
(insn 85 84 86 6 (set (reg:SI 2 r2 [156])
        (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A64])) "uart.c":119:9 253 {*arm_movsi_insn}
     (nil))
(insn 86 85 87 6 (set (reg:SI 3 r3 [157])
        (reg:SI 2 r2 [156])) "uart.c":119:9 253 {*arm_movsi_insn}
     (nil))
(insn 87 86 88 6 (set (reg:SI 3 r3 [157])
        (ashift:SI (reg:SI 3 r3 [157])
            (const_int 6 [0x6]))) "uart.c":119:9 147 {*arm_shiftsi3}
     (nil))
(insn 88 87 89 6 (set (reg:SI 3 r3 [157])
        (plus:SI (reg:SI 3 r3 [157])
            (reg:SI 2 r2 [156]))) "uart.c":119:9 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 2 r2 [156])
            (const_int 65 [0x41]))
        (nil)))
(insn 89 88 90 6 (set (reg:SI 3 r3 [157])
        (ashift:SI (reg:SI 3 r3 [157])
            (const_int 1 [0x1]))) "uart.c":119:9 147 {*arm_shiftsi3}
     (nil))
(insn 90 89 91 6 (set (reg:SI 3 r3 [157])
        (plus:SI (reg:SI 3 r3 [157])
            (reg:SI 2 r2 [156]))) "uart.c":119:9 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 2 r2 [156])
            (const_int 131 [0x83]))
        (nil)))
(insn 91 90 92 6 (set (reg:SI 3 r3 [157])
        (ashift:SI (reg:SI 3 r3 [157])
            (const_int 3 [0x3]))) "uart.c":119:9 147 {*arm_shiftsi3}
     (nil))
(insn 92 91 93 6 (set (reg:SI 3 r3 [157])
        (minus:SI (reg:SI 3 r3 [157])
            (reg:SI 2 r2 [156]))) "uart.c":119:9 45 {*arm_subsi3_insn}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 2 r2 [156])
            (const_int 1047 [0x417]))
        (nil)))
(insn 93 92 95 6 (set (reg:SI 3 r3 [158])
        (ashift:SI (reg:SI 3 r3 [157])
            (const_int 2 [0x2]))) "uart.c":119:9 147 {*arm_shiftsi3}
     (nil))
(insn 95 93 96 6 (set (reg:SI 3 r3 [159])
        (plus:SI (reg/f:SI 0 r0 [155])
            (reg:SI 3 r3 [157]))) "uart.c":119:9 7 {*arm_addsi3}
     (nil))
(insn 96 95 97 6 (set (reg/f:SI 3 r3 [160])
        (plus:SI (reg:SI 3 r3 [159])
            (const_int 84 [0x54]))) "uart.c":119:9 7 {*arm_addsi3}
     (nil))
(insn 97 96 98 6 (set (reg/f:SI 3 r3 [orig:122 _10 ] [122])
        (mem/f:SI (reg/f:SI 3 r3 [160]) [10 proc[i_19].res+0 S4 A32])) "uart.c":119:9 253 {*arm_movsi_insn}
     (nil))
(insn 98 97 99 6 (set (reg:SI 2 r2 [orig:123 _11 ] [123])
        (ior:SI (reg:SI 1 r1 [orig:121 _9 ] [121])
            (const_int 4 [0x4]))) "uart.c":119:22 106 {*iorsi3_insn}
     (nil))
(insn 99 98 100 6 (set (mem:SI (plus:SI (reg/f:SI 3 r3 [orig:122 _10 ] [122])
                (const_int 92 [0x5c])) [3 _10->signal+0 S4 A32])
        (reg:SI 2 r2 [orig:123 _11 ] [123])) "uart.c":119:22 253 {*arm_movsi_insn}
     (nil))
;;  succ:       7 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4
;;              5
;;              6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3]
(code_label 100 99 101 7 10 (nil) [2 uses])
(note 101 100 102 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 102 101 103 7 (set (reg:SI 3 r3 [162])
        (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A64])) "uart.c":117:25 253 {*arm_movsi_insn}
     (nil))
(insn 103 102 104 7 (set (reg:SI 3 r3 [161])
        (plus:SI (reg:SI 3 r3 [162])
            (const_int 1 [0x1]))) "uart.c":117:25 7 {*arm_addsi3}
     (nil))
(insn 104 103 105 7 (set (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A64])
        (reg:SI 3 r3 [161])) "uart.c":117:25 253 {*arm_movsi_insn}
     (nil))
;;  succ:       8 (FALLTHRU,DFS_BACK)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU,DFS_BACK)
;;              3 [always] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(code_label 105 104 106 8 9 (nil) [1 uses])
(note 106 105 110 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 110 106 111 8 (set (reg:SI 3 r3 [163])
        (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A64])) "uart.c":117:16 253 {*arm_movsi_insn}
     (nil))
(insn 111 110 112 8 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [163])
            (const_int 63 [0x3f]))) "uart.c":117:16 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 112 111 113 8 (set (pc)
        (if_then_else (le (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 107)
            (pc))) "uart.c":117:16 273 {arm_cond_branch}
     (nil)
 -> 107)
;;  succ:       4
;;              9 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(note 113 112 114 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 114 113 115 9 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC3") [flags 0x2]  <var_decl 0x7f19cf0af510 *.LC3>)) "uart.c":122:5 253 {*arm_movsi_insn}
     (nil))
(call_insn 115 114 116 9 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kprintf") [flags 0x41]  <function_decl 0x7f19cf067700 kprintf>) [0 kprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "uart.c":122:5 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 116 115 118 9 (set (reg:SI 3 r3 [164])
        (const_int 13 [0xd])) "uart.c":123:7 253 {*arm_movsi_insn}
     (nil))
(insn 118 116 119 9 (set (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                (const_int -13 [0xfffffffffffffff3])) [0 c+0 S1 A8])
        (reg:QI 3 r3 [165])) "uart.c":123:7 263 {*arm_movqi_insn}
     (nil))
;;  succ:       10 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(code_label 119 118 120 10 8 (nil) [1 uses])
(note 120 119 121 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 121 120 122 10 (set (reg/f:SI 3 r3 [166])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A32])) "uart.c":126:15 253 {*arm_movsi_insn}
     (nil))
(insn 122 121 123 10 (set (reg:SI 3 r3 [orig:124 _12 ] [124])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [166])
                (const_int 68 [0x44])) [3 up_25->inhead+0 S4 A32])) "uart.c":126:15 253 {*arm_movsi_insn}
     (nil))
(insn 123 122 124 10 (set (reg:SI 1 r1 [orig:125 _14 ] [125])
        (plus:SI (reg:SI 3 r3 [orig:124 _12 ] [124])
            (const_int 1 [0x1]))) "uart.c":126:23 7 {*arm_addsi3}
     (nil))
(insn 124 123 125 10 (set (reg/f:SI 2 r2 [167])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A32])) "uart.c":126:23 253 {*arm_movsi_insn}
     (nil))
(insn 125 124 126 10 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [167])
                (const_int 68 [0x44])) [3 up_25->inhead+0 S4 A32])
        (reg:SI 1 r1 [orig:125 _14 ] [125])) "uart.c":126:23 253 {*arm_movsi_insn}
     (nil))
(insn 126 125 127 10 (set (reg/f:SI 2 r2 [168])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A32])) "uart.c":126:27 253 {*arm_movsi_insn}
     (nil))
(insn 127 126 128 10 (set (reg/f:SI 3 r3 [169])
        (plus:SI (reg/f:SI 2 r2 [168])
            (reg:SI 3 r3 [orig:124 _12 ] [124]))) "uart.c":126:27 7 {*arm_addsi3}
     (nil))
(insn 128 127 129 10 (set (reg:QI 2 r2 [170])
        (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                (const_int -13 [0xfffffffffffffff3])) [0 c+0 S1 A8])) "uart.c":126:27 263 {*arm_movqi_insn}
     (nil))
(insn 129 128 130 10 (set (mem/v:QI (plus:SI (reg/f:SI 3 r3 [169])
                (const_int 4 [0x4])) [0 up_25->inbuf[_13]+0 S1 A8])
        (reg:QI 2 r2 [170])) "uart.c":126:27 263 {*arm_movqi_insn}
     (nil))
(insn 130 129 131 10 (set (reg/f:SI 3 r3 [171])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A32])) "uart.c":127:14 253 {*arm_movsi_insn}
     (nil))
(insn 131 130 132 10 (set (reg:SI 3 r3 [orig:126 _15 ] [126])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [171])
                (const_int 68 [0x44])) [3 up_25->inhead+0 S4 A32])) "uart.c":127:14 253 {*arm_movsi_insn}
     (nil))
(insn 132 131 133 10 (parallel [
            (set (reg:CC_NZ 100 cc)
                (compare:CC_NZ (minus:SI (const_int 0 [0])
                        (reg:SI 3 r3 [orig:126 _15 ] [126]))
                    (const_int 0 [0])))
            (set (reg:SI 2 r2 [172])
                (minus:SI (const_int 0 [0])
                    (reg:SI 3 r3 [orig:126 _15 ] [126])))
        ]) "uart.c":127:14 46 {subsi3_compare0}
     (nil))
(insn 133 132 134 10 (set (reg:SI 3 r3 [orig:127 _16 ] [127])
        (and:SI (reg:SI 3 r3 [orig:126 _15 ] [126])
            (const_int 63 [0x3f]))) "uart.c":127:14 90 {*arm_andsi3_insn}
     (nil))
(insn 134 133 135 10 (set (reg:SI 2 r2 [173])
        (and:SI (reg:SI 2 r2 [172])
            (const_int 63 [0x3f]))) "uart.c":127:14 90 {*arm_andsi3_insn}
     (nil))
(insn 135 134 136 10 (set (reg:SI 3 r3 [orig:127 _16 ] [127])
        (if_then_else:SI (ge:SI (reg:CC_NZ 100 cc)
                (const_int 0 [0]))
            (neg:SI (reg:SI 2 r2 [173]))
            (reg:SI 3 r3 [orig:127 _16 ] [127]))) "uart.c":127:14 371 {*if_neg_move}
     (nil))
(insn 136 135 137 10 (set (reg/f:SI 2 r2 [174])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A32])) "uart.c":127:14 253 {*arm_movsi_insn}
     (nil))
(insn 137 136 138 10 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [174])
                (const_int 68 [0x44])) [3 up_25->inhead+0 S4 A32])
        (reg:SI 3 r3 [orig:127 _16 ] [127])) "uart.c":127:14 253 {*arm_movsi_insn}
     (nil))
(insn 138 137 139 10 (set (reg:SI 3 r3 [175])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A32])) "uart.c":128:3 253 {*arm_movsi_insn}
     (nil))
(insn 139 138 140 10 (set (reg/f:SI 3 r3 [orig:128 _17 ] [128])
        (plus:SI (reg:SI 3 r3 [175])
            (const_int 76 [0x4c]))) "uart.c":128:3 7 {*arm_addsi3}
     (nil))
(insn 140 139 141 10 (set (reg:SI 0 r0)
        (reg/f:SI 3 r3 [orig:128 _17 ] [128])) "uart.c":128:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 141 140 142 10 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("V") [flags 0x41]  <function_decl 0x7f19cf067d00 V>) [0 V S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "uart.c":128:3 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 142 141 143 10 (set (reg/f:SI 3 r3 [176])
        (symbol_ref:SI ("color") [flags 0x40]  <var_decl 0x7f19cfd52480 color>)) "uart.c":129:8 253 {*arm_movsi_insn}
     (nil))
(insn 143 142 144 10 (set (reg:SI 2 r2 [177])
        (const_int 6 [0x6])) "uart.c":129:8 253 {*arm_movsi_insn}
     (nil))
(insn 144 143 151 10 (set (mem/c:SI (reg/f:SI 3 r3 [176]) [3 color+0 S4 A32])
        (reg:SI 2 r2 [177])) "uart.c":129:8 253 {*arm_movsi_insn}
     (nil))
(insn 151 144 158 10 (const_int 0 [0]) "uart.c":130:1 311 {nop}
     (nil))
(note 158 151 159 10 NOTE_INSN_EPILOGUE_BEG)
(insn 159 158 160 10 (unspec_volatile [
            (const_int 0 [0])
        ] VUNSPEC_BLOCKAGE) "uart.c":130:1 -1
     (nil))
(insn/f 160 159 161 10 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 11 fp)
            (const_int -4 [0xfffffffffffffffc]))) "uart.c":130:1 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 13 sp)
            (plus:SI (reg/f:SI 11 fp)
                (const_int -4 [0xfffffffffffffffc])))
        (nil)))
(insn 161 160 162 10 (unspec:SI [
            (reg/f:SI 13 sp)
        ] UNSPEC_REGISTER_USE) "uart.c":130:1 -1
     (nil))
(jump_insn 162 161 163 10 (parallel [
            (return)
            (set/f (reg/f:SI 13 sp)
                (plus:SI (reg/f:SI 13 sp)
                    (const_int 8 [0x8])))
            (set/f (reg/f:SI 11 fp)
                (mem/c:SI (reg/f:SI 13 sp) [7  S4 A32]))
            (set/f (reg:SI 15 pc)
                (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                        (const_int 4 [0x4])) [7  S4 A32]))
        ]) "uart.c":130:1 -1
     (expr_list:REG_CFA_RESTORE (reg/f:SI 11 fp)
        (nil))
 -> return)
;;  succ:       EXIT [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 163 162 152)
(note 152 163 0 NOTE_INSN_DELETED)

;; Function uart1_handler (uart1_handler, funcdef_no=2, decl_uid=4506, cgraph_uid=3, symbol_order=4)



uart1_handler

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 11 [fp] 13 [sp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={10d,6u} r1={11d,6u} r2={18d,25u,12e} r3={74d,71u} r11={3d,34u} r12={8d} r13={5d,26u} r14={5d,2u} r15={5d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={9d,5u} r101={4d} r102={1d,1u} r104={4d} r105={4d} r106={4d} 
;;    total ref usage 689{501d,176u,12e} in 127{123 regular + 4 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 100 [cc]
(note 3 1 153 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 153 3 154 2 (parallel [
            (set (mem/c:BLK (pre_modify:SI (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -8 [0xfffffffffffffff8]))) [7  A8])
                (unspec:BLK [
                        (reg/f:SI 11 fp)
                    ] UNSPEC_PUSH_MULT))
            (use (reg:SI 14 lr))
        ]) "uart.c":133:22 -1
     (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                (set/f (reg/f:SI 13 sp)
                    (plus:SI (reg/f:SI 13 sp)
                        (const_int -8 [0xfffffffffffffff8])))
                (set/f (mem/c:SI (reg/f:SI 13 sp) [7  S4 A32])
                    (reg/f:SI 11 fp))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 4 [0x4])) [7  S4 A32])
                    (reg:SI 14 lr))
            ])
        (nil)))
(insn/f 154 153 155 2 (set (reg/f:SI 11 fp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 4 [0x4]))) "uart.c":133:22 -1
     (nil))
(insn/f 155 154 156 2 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -16 [0xfffffffffffffff0]))) "uart.c":133:22 -1
     (nil))
(insn 156 155 157 2 (set (mem:BLK (scratch) [0  A8])
        (unspec:BLK [
                (reg/f:SI 13 sp)
                (reg/f:SI 11 fp)
            ] UNSPEC_PRLG_STK)) "uart.c":133:22 -1
     (nil))
(note 157 156 2 2 NOTE_INSN_PROLOGUE_END)
(note 2 157 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 3 r3 [129])
        (symbol_ref:SI ("color") [flags 0x40]  <var_decl 0x7f19cfd52480 color>)) "uart.c":137:8 253 {*arm_movsi_insn}
     (nil))
(insn 6 5 7 2 (set (reg:SI 2 r2 [130])
        (const_int 5 [0x5])) "uart.c":137:8 253 {*arm_movsi_insn}
     (nil))
(insn 7 6 8 2 (set (mem/c:SI (reg/f:SI 3 r3 [129]) [3 color+0 S4 A32])
        (reg:SI 2 r2 [130])) "uart.c":137:8 253 {*arm_movsi_insn}
     (nil))
(insn 8 7 9 2 (set (reg/f:SI 3 r3 [131])
        (const:SI (plus:SI (symbol_ref:SI ("uart") [flags 0x2]  <var_decl 0x7f19cfd52ab0 uart>)
                (const_int 244 [0xf4])))) "uart.c":139:6 253 {*arm_movsi_insn}
     (nil))
(insn 9 8 147 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A32])
        (reg/f:SI 3 r3 [131])) "uart.c":139:6 253 {*arm_movsi_insn}
     (nil))
(insn 147 9 11 2 (const_int 0 [0]) "uart.c":140:8 311 {nop}
     (nil))
(insn 11 147 12 2 (set (reg/f:SI 3 r3 [132])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A32])) "uart.c":140:14 253 {*arm_movsi_insn}
     (nil))
(insn 12 11 15 2 (set (reg/f:SI 3 r3 [orig:113 _1 ] [113])
        (mem/v/f:SI (reg/f:SI 3 r3 [132]) [2 up_25->base+0 S4 A32])) "uart.c":140:14 253 {*arm_movsi_insn}
     (nil))
(insn 15 12 16 2 (set (reg/f:SI 3 r3 [133])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A32])) "uart.c":142:11 253 {*arm_movsi_insn}
     (nil))
(insn 16 15 17 2 (set (reg/f:SI 3 r3 [orig:115 _3 ] [115])
        (mem/v/f:SI (reg/f:SI 3 r3 [133]) [2 up_25->base+0 S4 A32])) "uart.c":142:11 253 {*arm_movsi_insn}
     (nil))
(insn 17 16 18 2 (set (reg:QI 3 r3 [134])
        (mem:QI (reg/f:SI 3 r3 [orig:115 _3 ] [115]) [0 *_3+0 S1 A8])) "uart.c":142:5 263 {*arm_movqi_insn}
     (nil))
(insn 18 17 19 2 (set (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                (const_int -13 [0xfffffffffffffff3])) [0 c+0 S1 A8])
        (reg:QI 3 r3 [134])) "uart.c":142:5 263 {*arm_movqi_insn}
     (nil))
(insn 19 18 20 2 (set (reg:SI 3 r3 [135])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -13 [0xfffffffffffffff3])) [0 c+0 S1 A8]))) "uart.c":145:6 175 {*arm_zero_extendqisi2}
     (nil))
(insn 20 19 21 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [135])
            (const_int 3 [0x3]))) "uart.c":145:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 21 20 22 2 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 119)
            (pc))) "uart.c":145:6 273 {arm_cond_branch}
     (nil)
 -> 119)
;;  succ:       3 (FALLTHRU)
;;              10
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(note 22 21 23 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 3 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x7f19cf0af360 *.LC1>)) "uart.c":146:5 253 {*arm_movsi_insn}
     (nil))
(call_insn 24 23 25 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kprintf") [flags 0x41]  <function_decl 0x7f19cf067700 kprintf>) [0 kprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "uart.c":146:5 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 25 24 26 3 (set (reg:SI 3 r3 [136])
        (const_int 1 [0x1])) "uart.c":147:11 253 {*arm_movsi_insn}
     (nil))
(insn 26 25 148 3 (set (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A64])
        (reg:SI 3 r3 [136])) "uart.c":147:11 253 {*arm_movsi_insn}
     (nil))
(jump_insn 148 26 149 3 (set (pc)
        (label_ref 105)) "uart.c":147:5 284 {*arm_jump}
     (nil)
 -> 105)
;;  succ:       8 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 149 148 107)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3] 100 [cc]
(code_label 107 149 29 4 18 (nil) [1 uses])
(note 29 107 30 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 4 (set (reg/f:SI 1 r1 [137])
        (symbol_ref:SI ("proc") [flags 0x40]  <var_decl 0x7f19cfd525a0 proc>)) "uart.c":148:18 253 {*arm_movsi_insn}
     (nil))
(insn 31 30 32 4 (set (reg:SI 2 r2 [138])
        (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A64])) "uart.c":148:18 253 {*arm_movsi_insn}
     (nil))
(insn 32 31 33 4 (set (reg:SI 3 r3 [139])
        (reg:SI 2 r2 [138])) "uart.c":148:18 253 {*arm_movsi_insn}
     (nil))
(insn 33 32 34 4 (set (reg:SI 3 r3 [139])
        (ashift:SI (reg:SI 3 r3 [139])
            (const_int 6 [0x6]))) "uart.c":148:18 147 {*arm_shiftsi3}
     (nil))
(insn 34 33 35 4 (set (reg:SI 3 r3 [139])
        (plus:SI (reg:SI 3 r3 [139])
            (reg:SI 2 r2 [138]))) "uart.c":148:18 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 2 r2 [138])
            (const_int 65 [0x41]))
        (nil)))
(insn 35 34 36 4 (set (reg:SI 3 r3 [139])
        (ashift:SI (reg:SI 3 r3 [139])
            (const_int 1 [0x1]))) "uart.c":148:18 147 {*arm_shiftsi3}
     (nil))
(insn 36 35 37 4 (set (reg:SI 3 r3 [139])
        (plus:SI (reg:SI 3 r3 [139])
            (reg:SI 2 r2 [138]))) "uart.c":148:18 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 2 r2 [138])
            (const_int 131 [0x83]))
        (nil)))
(insn 37 36 38 4 (set (reg:SI 3 r3 [139])
        (ashift:SI (reg:SI 3 r3 [139])
            (const_int 3 [0x3]))) "uart.c":148:18 147 {*arm_shiftsi3}
     (nil))
(insn 38 37 39 4 (set (reg:SI 3 r3 [139])
        (minus:SI (reg:SI 3 r3 [139])
            (reg:SI 2 r2 [138]))) "uart.c":148:18 45 {*arm_subsi3_insn}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 2 r2 [138])
            (const_int 1047 [0x417]))
        (nil)))
(insn 39 38 41 4 (set (reg:SI 3 r3 [140])
        (ashift:SI (reg:SI 3 r3 [139])
            (const_int 2 [0x2]))) "uart.c":148:18 147 {*arm_shiftsi3}
     (nil))
(insn 41 39 42 4 (set (reg:SI 3 r3 [141])
        (plus:SI (reg/f:SI 1 r1 [137])
            (reg:SI 3 r3 [139]))) "uart.c":148:18 7 {*arm_addsi3}
     (nil))
(insn 42 41 43 4 (set (reg/f:SI 3 r3 [142])
        (plus:SI (reg:SI 3 r3 [141])
            (const_int 28 [0x1c]))) "uart.c":148:18 7 {*arm_addsi3}
     (nil))
(insn 43 42 44 4 (set (reg:SI 3 r3 [orig:116 _4 ] [116])
        (mem:SI (reg/f:SI 3 r3 [142]) [3 proc[i_19].status+0 S4 A32])) "uart.c":148:18 253 {*arm_movsi_insn}
     (nil))
(insn 44 43 45 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:116 _4 ] [116])
            (const_int 0 [0]))) "uart.c":148:10 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 45 44 46 4 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 100)
            (pc))) "uart.c":148:10 273 {arm_cond_branch}
     (nil)
 -> 100)
;;  succ:       5 (FALLTHRU)
;;              7
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(note 46 45 47 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 5 (set (reg/f:SI 1 r1 [143])
        (symbol_ref:SI ("proc") [flags 0x40]  <var_decl 0x7f19cfd525a0 proc>)) "uart.c":148:51 253 {*arm_movsi_insn}
     (nil))
(insn 48 47 49 5 (set (reg:SI 2 r2 [144])
        (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A64])) "uart.c":148:51 253 {*arm_movsi_insn}
     (nil))
(insn 49 48 50 5 (set (reg:SI 3 r3 [145])
        (reg:SI 2 r2 [144])) "uart.c":148:51 253 {*arm_movsi_insn}
     (nil))
(insn 50 49 51 5 (set (reg:SI 3 r3 [145])
        (ashift:SI (reg:SI 3 r3 [145])
            (const_int 6 [0x6]))) "uart.c":148:51 147 {*arm_shiftsi3}
     (nil))
(insn 51 50 52 5 (set (reg:SI 3 r3 [145])
        (plus:SI (reg:SI 3 r3 [145])
            (reg:SI 2 r2 [144]))) "uart.c":148:51 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 2 r2 [144])
            (const_int 65 [0x41]))
        (nil)))
(insn 52 51 53 5 (set (reg:SI 3 r3 [145])
        (ashift:SI (reg:SI 3 r3 [145])
            (const_int 1 [0x1]))) "uart.c":148:51 147 {*arm_shiftsi3}
     (nil))
(insn 53 52 54 5 (set (reg:SI 3 r3 [145])
        (plus:SI (reg:SI 3 r3 [145])
            (reg:SI 2 r2 [144]))) "uart.c":148:51 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 2 r2 [144])
            (const_int 131 [0x83]))
        (nil)))
(insn 54 53 55 5 (set (reg:SI 3 r3 [145])
        (ashift:SI (reg:SI 3 r3 [145])
            (const_int 3 [0x3]))) "uart.c":148:51 147 {*arm_shiftsi3}
     (nil))
(insn 55 54 56 5 (set (reg:SI 3 r3 [145])
        (minus:SI (reg:SI 3 r3 [145])
            (reg:SI 2 r2 [144]))) "uart.c":148:51 45 {*arm_subsi3_insn}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 2 r2 [144])
            (const_int 1047 [0x417]))
        (nil)))
(insn 56 55 58 5 (set (reg:SI 3 r3 [146])
        (ashift:SI (reg:SI 3 r3 [145])
            (const_int 2 [0x2]))) "uart.c":148:51 147 {*arm_shiftsi3}
     (nil))
(insn 58 56 59 5 (set (reg:SI 3 r3 [147])
        (plus:SI (reg/f:SI 1 r1 [143])
            (reg:SI 3 r3 [145]))) "uart.c":148:51 7 {*arm_addsi3}
     (nil))
(insn 59 58 60 5 (set (reg/f:SI 3 r3 [148])
        (plus:SI (reg:SI 3 r3 [147])
            (const_int 84 [0x54]))) "uart.c":148:51 7 {*arm_addsi3}
     (nil))
(insn 60 59 61 5 (set (reg/f:SI 3 r3 [orig:117 _5 ] [117])
        (mem/f:SI (reg/f:SI 3 r3 [148]) [10 proc[i_19].res+0 S4 A32])) "uart.c":148:51 253 {*arm_movsi_insn}
     (nil))
(insn 61 60 62 5 (set (reg/f:SI 3 r3 [orig:118 _6 ] [118])
        (plus:SI (reg/f:SI 3 r3 [orig:117 _5 ] [117])
            (const_int 60 [0x3c]))) "uart.c":148:55 7 {*arm_addsi3}
     (nil))
(insn 62 61 63 5 (set (reg:SI 1 r1)
        (symbol_ref/f:SI ("*.LC4") [flags 0x2]  <var_decl 0x7f19cf0af5a0 *.LC4>)) "uart.c":148:37 253 {*arm_movsi_insn}
     (nil))
(insn 63 62 64 5 (set (reg:SI 0 r0)
        (reg/f:SI 3 r3 [orig:118 _6 ] [118])) "uart.c":148:37 253 {*arm_movsi_insn}
     (nil))
(call_insn/i 64 63 65 5 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41]  <function_decl 0x7f19cf2e7700 strcmp>) [0 __builtin_strcmp S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "uart.c":148:37 291 {*call_value_symbol}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 65 64 66 5 (set (reg:SI 3 r3 [orig:119 _7 ] [119])
        (reg:SI 0 r0)) "uart.c":148:37 253 {*arm_movsi_insn}
     (nil))
(insn 66 65 67 5 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:119 _7 ] [119])
            (const_int 0 [0]))) "uart.c":148:34 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 67 66 68 5 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 100)
            (pc))) "uart.c":148:34 273 {arm_cond_branch}
     (nil)
 -> 100)
;;  succ:       6 (FALLTHRU)
;;              7
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
(note 68 67 69 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 6 (set (reg/f:SI 1 r1 [149])
        (symbol_ref:SI ("proc") [flags 0x40]  <var_decl 0x7f19cfd525a0 proc>)) "uart.c":149:9 253 {*arm_movsi_insn}
     (nil))
(insn 70 69 71 6 (set (reg:SI 2 r2 [150])
        (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A64])) "uart.c":149:9 253 {*arm_movsi_insn}
     (nil))
(insn 71 70 72 6 (set (reg:SI 3 r3 [151])
        (reg:SI 2 r2 [150])) "uart.c":149:9 253 {*arm_movsi_insn}
     (nil))
(insn 72 71 73 6 (set (reg:SI 3 r3 [151])
        (ashift:SI (reg:SI 3 r3 [151])
            (const_int 6 [0x6]))) "uart.c":149:9 147 {*arm_shiftsi3}
     (nil))
(insn 73 72 74 6 (set (reg:SI 3 r3 [151])
        (plus:SI (reg:SI 3 r3 [151])
            (reg:SI 2 r2 [150]))) "uart.c":149:9 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 2 r2 [150])
            (const_int 65 [0x41]))
        (nil)))
(insn 74 73 75 6 (set (reg:SI 3 r3 [151])
        (ashift:SI (reg:SI 3 r3 [151])
            (const_int 1 [0x1]))) "uart.c":149:9 147 {*arm_shiftsi3}
     (nil))
(insn 75 74 76 6 (set (reg:SI 3 r3 [151])
        (plus:SI (reg:SI 3 r3 [151])
            (reg:SI 2 r2 [150]))) "uart.c":149:9 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 2 r2 [150])
            (const_int 131 [0x83]))
        (nil)))
(insn 76 75 77 6 (set (reg:SI 3 r3 [151])
        (ashift:SI (reg:SI 3 r3 [151])
            (const_int 3 [0x3]))) "uart.c":149:9 147 {*arm_shiftsi3}
     (nil))
(insn 77 76 78 6 (set (reg:SI 3 r3 [151])
        (minus:SI (reg:SI 3 r3 [151])
            (reg:SI 2 r2 [150]))) "uart.c":149:9 45 {*arm_subsi3_insn}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 2 r2 [150])
            (const_int 1047 [0x417]))
        (nil)))
(insn 78 77 80 6 (set (reg:SI 3 r3 [152])
        (ashift:SI (reg:SI 3 r3 [151])
            (const_int 2 [0x2]))) "uart.c":149:9 147 {*arm_shiftsi3}
     (nil))
(insn 80 78 81 6 (set (reg:SI 3 r3 [153])
        (plus:SI (reg/f:SI 1 r1 [149])
            (reg:SI 3 r3 [151]))) "uart.c":149:9 7 {*arm_addsi3}
     (nil))
(insn 81 80 82 6 (set (reg/f:SI 3 r3 [154])
        (plus:SI (reg:SI 3 r3 [153])
            (const_int 84 [0x54]))) "uart.c":149:9 7 {*arm_addsi3}
     (nil))
(insn 82 81 83 6 (set (reg/f:SI 3 r3 [orig:120 _8 ] [120])
        (mem/f:SI (reg/f:SI 3 r3 [154]) [10 proc[i_19].res+0 S4 A32])) "uart.c":149:9 253 {*arm_movsi_insn}
     (nil))
(insn 83 82 84 6 (set (reg:SI 1 r1 [orig:121 _9 ] [121])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [orig:120 _8 ] [120])
                (const_int 92 [0x5c])) [3 _8->signal+0 S4 A32])) "uart.c":149:22 253 {*arm_movsi_insn}
     (nil))
(insn 84 83 85 6 (set (reg/f:SI 0 r0 [155])
        (symbol_ref:SI ("proc") [flags 0x40]  <var_decl 0x7f19cfd525a0 proc>)) "uart.c":149:9 253 {*arm_movsi_insn}
     (nil))
(insn 85 84 86 6 (set (reg:SI 2 r2 [156])
        (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A64])) "uart.c":149:9 253 {*arm_movsi_insn}
     (nil))
(insn 86 85 87 6 (set (reg:SI 3 r3 [157])
        (reg:SI 2 r2 [156])) "uart.c":149:9 253 {*arm_movsi_insn}
     (nil))
(insn 87 86 88 6 (set (reg:SI 3 r3 [157])
        (ashift:SI (reg:SI 3 r3 [157])
            (const_int 6 [0x6]))) "uart.c":149:9 147 {*arm_shiftsi3}
     (nil))
(insn 88 87 89 6 (set (reg:SI 3 r3 [157])
        (plus:SI (reg:SI 3 r3 [157])
            (reg:SI 2 r2 [156]))) "uart.c":149:9 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 2 r2 [156])
            (const_int 65 [0x41]))
        (nil)))
(insn 89 88 90 6 (set (reg:SI 3 r3 [157])
        (ashift:SI (reg:SI 3 r3 [157])
            (const_int 1 [0x1]))) "uart.c":149:9 147 {*arm_shiftsi3}
     (nil))
(insn 90 89 91 6 (set (reg:SI 3 r3 [157])
        (plus:SI (reg:SI 3 r3 [157])
            (reg:SI 2 r2 [156]))) "uart.c":149:9 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 2 r2 [156])
            (const_int 131 [0x83]))
        (nil)))
(insn 91 90 92 6 (set (reg:SI 3 r3 [157])
        (ashift:SI (reg:SI 3 r3 [157])
            (const_int 3 [0x3]))) "uart.c":149:9 147 {*arm_shiftsi3}
     (nil))
(insn 92 91 93 6 (set (reg:SI 3 r3 [157])
        (minus:SI (reg:SI 3 r3 [157])
            (reg:SI 2 r2 [156]))) "uart.c":149:9 45 {*arm_subsi3_insn}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 2 r2 [156])
            (const_int 1047 [0x417]))
        (nil)))
(insn 93 92 95 6 (set (reg:SI 3 r3 [158])
        (ashift:SI (reg:SI 3 r3 [157])
            (const_int 2 [0x2]))) "uart.c":149:9 147 {*arm_shiftsi3}
     (nil))
(insn 95 93 96 6 (set (reg:SI 3 r3 [159])
        (plus:SI (reg/f:SI 0 r0 [155])
            (reg:SI 3 r3 [157]))) "uart.c":149:9 7 {*arm_addsi3}
     (nil))
(insn 96 95 97 6 (set (reg/f:SI 3 r3 [160])
        (plus:SI (reg:SI 3 r3 [159])
            (const_int 84 [0x54]))) "uart.c":149:9 7 {*arm_addsi3}
     (nil))
(insn 97 96 98 6 (set (reg/f:SI 3 r3 [orig:122 _10 ] [122])
        (mem/f:SI (reg/f:SI 3 r3 [160]) [10 proc[i_19].res+0 S4 A32])) "uart.c":149:9 253 {*arm_movsi_insn}
     (nil))
(insn 98 97 99 6 (set (reg:SI 2 r2 [orig:123 _11 ] [123])
        (ior:SI (reg:SI 1 r1 [orig:121 _9 ] [121])
            (const_int 4 [0x4]))) "uart.c":149:22 106 {*iorsi3_insn}
     (nil))
(insn 99 98 100 6 (set (mem:SI (plus:SI (reg/f:SI 3 r3 [orig:122 _10 ] [122])
                (const_int 92 [0x5c])) [3 _10->signal+0 S4 A32])
        (reg:SI 2 r2 [orig:123 _11 ] [123])) "uart.c":149:22 253 {*arm_movsi_insn}
     (nil))
;;  succ:       7 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4
;;              5
;;              6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3]
(code_label 100 99 101 7 17 (nil) [2 uses])
(note 101 100 102 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 102 101 103 7 (set (reg:SI 3 r3 [162])
        (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A64])) "uart.c":147:25 253 {*arm_movsi_insn}
     (nil))
(insn 103 102 104 7 (set (reg:SI 3 r3 [161])
        (plus:SI (reg:SI 3 r3 [162])
            (const_int 1 [0x1]))) "uart.c":147:25 7 {*arm_addsi3}
     (nil))
(insn 104 103 105 7 (set (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A64])
        (reg:SI 3 r3 [161])) "uart.c":147:25 253 {*arm_movsi_insn}
     (nil))
;;  succ:       8 (FALLTHRU,DFS_BACK)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU,DFS_BACK)
;;              3 [always] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(code_label 105 104 106 8 16 (nil) [1 uses])
(note 106 105 110 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 110 106 111 8 (set (reg:SI 3 r3 [163])
        (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A64])) "uart.c":147:16 253 {*arm_movsi_insn}
     (nil))
(insn 111 110 112 8 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [163])
            (const_int 63 [0x3f]))) "uart.c":147:16 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 112 111 113 8 (set (pc)
        (if_then_else (le (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 107)
            (pc))) "uart.c":147:16 273 {arm_cond_branch}
     (nil)
 -> 107)
;;  succ:       4
;;              9 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(note 113 112 114 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 114 113 115 9 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC3") [flags 0x2]  <var_decl 0x7f19cf0af510 *.LC3>)) "uart.c":152:5 253 {*arm_movsi_insn}
     (nil))
(call_insn 115 114 116 9 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kprintf") [flags 0x41]  <function_decl 0x7f19cf067700 kprintf>) [0 kprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "uart.c":152:5 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 116 115 118 9 (set (reg:SI 3 r3 [164])
        (const_int 13 [0xd])) "uart.c":153:7 253 {*arm_movsi_insn}
     (nil))
(insn 118 116 119 9 (set (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                (const_int -13 [0xfffffffffffffff3])) [0 c+0 S1 A8])
        (reg:QI 3 r3 [165])) "uart.c":153:7 263 {*arm_movqi_insn}
     (nil))
;;  succ:       10 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(code_label 119 118 120 10 15 (nil) [1 uses])
(note 120 119 121 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 121 120 122 10 (set (reg/f:SI 3 r3 [166])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A32])) "uart.c":156:15 253 {*arm_movsi_insn}
     (nil))
(insn 122 121 123 10 (set (reg:SI 3 r3 [orig:124 _12 ] [124])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [166])
                (const_int 68 [0x44])) [3 up_25->inhead+0 S4 A32])) "uart.c":156:15 253 {*arm_movsi_insn}
     (nil))
(insn 123 122 124 10 (set (reg:SI 1 r1 [orig:125 _14 ] [125])
        (plus:SI (reg:SI 3 r3 [orig:124 _12 ] [124])
            (const_int 1 [0x1]))) "uart.c":156:23 7 {*arm_addsi3}
     (nil))
(insn 124 123 125 10 (set (reg/f:SI 2 r2 [167])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A32])) "uart.c":156:23 253 {*arm_movsi_insn}
     (nil))
(insn 125 124 126 10 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [167])
                (const_int 68 [0x44])) [3 up_25->inhead+0 S4 A32])
        (reg:SI 1 r1 [orig:125 _14 ] [125])) "uart.c":156:23 253 {*arm_movsi_insn}
     (nil))
(insn 126 125 127 10 (set (reg/f:SI 2 r2 [168])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A32])) "uart.c":156:27 253 {*arm_movsi_insn}
     (nil))
(insn 127 126 128 10 (set (reg/f:SI 3 r3 [169])
        (plus:SI (reg/f:SI 2 r2 [168])
            (reg:SI 3 r3 [orig:124 _12 ] [124]))) "uart.c":156:27 7 {*arm_addsi3}
     (nil))
(insn 128 127 129 10 (set (reg:QI 2 r2 [170])
        (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                (const_int -13 [0xfffffffffffffff3])) [0 c+0 S1 A8])) "uart.c":156:27 263 {*arm_movqi_insn}
     (nil))
(insn 129 128 130 10 (set (mem/v:QI (plus:SI (reg/f:SI 3 r3 [169])
                (const_int 4 [0x4])) [0 up_25->inbuf[_13]+0 S1 A8])
        (reg:QI 2 r2 [170])) "uart.c":156:27 263 {*arm_movqi_insn}
     (nil))
(insn 130 129 131 10 (set (reg/f:SI 3 r3 [171])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A32])) "uart.c":157:14 253 {*arm_movsi_insn}
     (nil))
(insn 131 130 132 10 (set (reg:SI 3 r3 [orig:126 _15 ] [126])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [171])
                (const_int 68 [0x44])) [3 up_25->inhead+0 S4 A32])) "uart.c":157:14 253 {*arm_movsi_insn}
     (nil))
(insn 132 131 133 10 (parallel [
            (set (reg:CC_NZ 100 cc)
                (compare:CC_NZ (minus:SI (const_int 0 [0])
                        (reg:SI 3 r3 [orig:126 _15 ] [126]))
                    (const_int 0 [0])))
            (set (reg:SI 2 r2 [172])
                (minus:SI (const_int 0 [0])
                    (reg:SI 3 r3 [orig:126 _15 ] [126])))
        ]) "uart.c":157:14 46 {subsi3_compare0}
     (nil))
(insn 133 132 134 10 (set (reg:SI 3 r3 [orig:127 _16 ] [127])
        (and:SI (reg:SI 3 r3 [orig:126 _15 ] [126])
            (const_int 63 [0x3f]))) "uart.c":157:14 90 {*arm_andsi3_insn}
     (nil))
(insn 134 133 135 10 (set (reg:SI 2 r2 [173])
        (and:SI (reg:SI 2 r2 [172])
            (const_int 63 [0x3f]))) "uart.c":157:14 90 {*arm_andsi3_insn}
     (nil))
(insn 135 134 136 10 (set (reg:SI 3 r3 [orig:127 _16 ] [127])
        (if_then_else:SI (ge:SI (reg:CC_NZ 100 cc)
                (const_int 0 [0]))
            (neg:SI (reg:SI 2 r2 [173]))
            (reg:SI 3 r3 [orig:127 _16 ] [127]))) "uart.c":157:14 371 {*if_neg_move}
     (nil))
(insn 136 135 137 10 (set (reg/f:SI 2 r2 [174])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A32])) "uart.c":157:14 253 {*arm_movsi_insn}
     (nil))
(insn 137 136 138 10 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [174])
                (const_int 68 [0x44])) [3 up_25->inhead+0 S4 A32])
        (reg:SI 3 r3 [orig:127 _16 ] [127])) "uart.c":157:14 253 {*arm_movsi_insn}
     (nil))
(insn 138 137 139 10 (set (reg:SI 3 r3 [175])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A32])) "uart.c":158:3 253 {*arm_movsi_insn}
     (nil))
(insn 139 138 140 10 (set (reg/f:SI 3 r3 [orig:128 _17 ] [128])
        (plus:SI (reg:SI 3 r3 [175])
            (const_int 76 [0x4c]))) "uart.c":158:3 7 {*arm_addsi3}
     (nil))
(insn 140 139 141 10 (set (reg:SI 0 r0)
        (reg/f:SI 3 r3 [orig:128 _17 ] [128])) "uart.c":158:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 141 140 142 10 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("V") [flags 0x41]  <function_decl 0x7f19cf067d00 V>) [0 V S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "uart.c":158:3 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 142 141 143 10 (set (reg/f:SI 3 r3 [176])
        (symbol_ref:SI ("color") [flags 0x40]  <var_decl 0x7f19cfd52480 color>)) "uart.c":160:8 253 {*arm_movsi_insn}
     (nil))
(insn 143 142 144 10 (set (reg:SI 2 r2 [177])
        (const_int 6 [0x6])) "uart.c":160:8 253 {*arm_movsi_insn}
     (nil))
(insn 144 143 151 10 (set (mem/c:SI (reg/f:SI 3 r3 [176]) [3 color+0 S4 A32])
        (reg:SI 2 r2 [177])) "uart.c":160:8 253 {*arm_movsi_insn}
     (nil))
(insn 151 144 158 10 (const_int 0 [0]) "uart.c":161:1 311 {nop}
     (nil))
(note 158 151 159 10 NOTE_INSN_EPILOGUE_BEG)
(insn 159 158 160 10 (unspec_volatile [
            (const_int 0 [0])
        ] VUNSPEC_BLOCKAGE) "uart.c":161:1 -1
     (nil))
(insn/f 160 159 161 10 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 11 fp)
            (const_int -4 [0xfffffffffffffffc]))) "uart.c":161:1 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 13 sp)
            (plus:SI (reg/f:SI 11 fp)
                (const_int -4 [0xfffffffffffffffc])))
        (nil)))
(insn 161 160 162 10 (unspec:SI [
            (reg/f:SI 13 sp)
        ] UNSPEC_REGISTER_USE) "uart.c":161:1 -1
     (nil))
(jump_insn 162 161 163 10 (parallel [
            (return)
            (set/f (reg/f:SI 13 sp)
                (plus:SI (reg/f:SI 13 sp)
                    (const_int 8 [0x8])))
            (set/f (reg/f:SI 11 fp)
                (mem/c:SI (reg/f:SI 13 sp) [7  S4 A32]))
            (set/f (reg:SI 15 pc)
                (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                        (const_int 4 [0x4])) [7  S4 A32]))
        ]) "uart.c":161:1 -1
     (expr_list:REG_CFA_RESTORE (reg/f:SI 11 fp)
        (nil))
 -> return)
;;  succ:       EXIT [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 163 162 152)
(note 152 163 0 NOTE_INSN_DELETED)

;; Function sputc (sputc, funcdef_no=3, decl_uid=4522, cgraph_uid=4, symbol_order=5)



sputc

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 11 [fp] 13 [sp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 100 [cc]
;;  ref usage 	r0={3d,3u} r1={1d,1u} r2={2d,1u} r3={14d,13u} r11={3d,14u} r13={5d,13u} r14={1d,1u} r100={1d,1u} r102={1d,1u} 
;;    total ref usage 79{31d,48u,0e} in 34{34 regular + 0 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp]
;; lr  def 	 3 [r3]
(note 7 1 39 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 39 7 40 2 (parallel [
            (set (mem/c:BLK (pre_modify:SI (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -4 [0xfffffffffffffffc]))) [7  A8])
                (unspec:BLK [
                        (reg/f:SI 11 fp)
                    ] UNSPEC_PUSH_MULT))
        ]) "uart.c":166:1 -1
     (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                (set/f (reg/f:SI 13 sp)
                    (plus:SI (reg/f:SI 13 sp)
                        (const_int -4 [0xfffffffffffffffc])))
                (set/f (mem/c:SI (reg/f:SI 13 sp) [7  S4 A32])
                    (reg/f:SI 11 fp))
            ])
        (nil)))
(insn/f 40 39 41 2 (set (reg/f:SI 11 fp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 0 [0]))) "uart.c":166:1 -1
     (nil))
(insn/f 41 40 42 2 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -20 [0xffffffffffffffec]))) "uart.c":166:1 -1
     (nil))
(insn 42 41 43 2 (set (mem:BLK (scratch) [0  A8])
        (unspec:BLK [
                (reg/f:SI 13 sp)
                (reg/f:SI 11 fp)
            ] UNSPEC_PRLG_STK)) "uart.c":166:1 -1
     (nil))
(note 43 42 2 2 NOTE_INSN_PROLOGUE_END)
(insn 2 43 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [6 up+0 S4 A32])
        (reg:SI 0 r0 [ up ])) "uart.c":166:1 253 {*arm_movsi_insn}
     (nil))
(insn 3 2 5 2 (set (reg:SI 3 r3 [123])
        (reg:SI 1 r1 [ c ])) "uart.c":166:1 253 {*arm_movsi_insn}
     (nil))
(insn 5 3 6 2 (set (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                (const_int -17 [0xffffffffffffffef])) [0 c+0 S1 A8])
        (reg:QI 3 r3 [124])) "uart.c":166:1 263 {*arm_movqi_insn}
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg/f:SI 3 r3 [125])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [6 up+0 S4 A32])) "uart.c":167:15 253 {*arm_movsi_insn}
     (nil))
(insn 10 9 11 2 (set (reg/f:SI 3 r3 [orig:113 _1 ] [113])
        (mem/v/f:SI (reg/f:SI 3 r3 [125]) [2 up_11(D)->base+0 S4 A32])) "uart.c":167:15 253 {*arm_movsi_insn}
     (nil))
(insn 11 10 12 2 (set (reg/f:SI 3 r3 [orig:114 _2 ] [114])
        (plus:SI (reg/f:SI 3 r3 [orig:113 _1 ] [113])
            (const_int 24 [0x18]))) "uart.c":167:22 7 {*arm_addsi3}
     (nil))
(insn 12 11 13 2 (set (reg:SI 3 r3 [orig:115 _3 ] [115])
        (zero_extend:SI (mem:QI (reg/f:SI 3 r3 [orig:114 _2 ] [114]) [0 *_2+0 S1 A8]))) "uart.c":167:11 175 {*arm_zero_extendqisi2}
     (nil))
(insn 13 12 37 2 (set (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [3 i+0 S4 A32])
        (reg:SI 3 r3 [orig:115 _3 ] [115])) "uart.c":167:7 253 {*arm_movsi_insn}
     (nil))
(insn 37 13 21 2 (const_int 0 [0]) "uart.c":168:8 311 {nop}
     (nil))
;;  succ:       3 [always]  (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [always]  (FALLTHRU)
;;              3 (DFS_BACK)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(code_label 21 37 14 3 22 (nil) [1 uses])
(note 14 21 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 3 (set (reg/f:SI 3 r3 [126])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [6 up+0 S4 A32])) "uart.c":168:13 253 {*arm_movsi_insn}
     (nil))
(insn 16 15 17 3 (set (reg/f:SI 3 r3 [orig:116 _4 ] [116])
        (mem/v/f:SI (reg/f:SI 3 r3 [126]) [2 up_11(D)->base+0 S4 A32])) "uart.c":168:13 253 {*arm_movsi_insn}
     (nil))
(insn 17 16 18 3 (set (reg/f:SI 3 r3 [orig:117 _5 ] [117])
        (plus:SI (reg/f:SI 3 r3 [orig:116 _4 ] [116])
            (const_int 24 [0x18]))) "uart.c":168:20 7 {*arm_addsi3}
     (nil))
(insn 18 17 20 3 (set (reg:SI 3 r3 [orig:118 _6 ] [118])
        (zero_extend:SI (mem:QI (reg/f:SI 3 r3 [orig:117 _5 ] [117]) [0 *_5+0 S1 A8]))) "uart.c":168:9 175 {*arm_zero_extendqisi2}
     (nil))
(insn 20 18 22 3 (set (reg:SI 3 r3 [orig:120 _8 ] [120])
        (and:SI (reg:SI 3 r3 [orig:119 _7 ] [119])
            (const_int 32 [0x20]))) "uart.c":168:26 90 {*arm_andsi3_insn}
     (nil))
(insn 22 20 23 3 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:120 _8 ] [120])
            (const_int 0 [0]))) "uart.c":168:9 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 23 22 24 3 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) "uart.c":168:9 273 {arm_cond_branch}
     (nil)
 -> 21)
;;  succ:       3 (DFS_BACK)
;;              4 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3]
(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 4 (set (reg/f:SI 3 r3 [127])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [6 up+0 S4 A32])) "uart.c":170:7 253 {*arm_movsi_insn}
     (nil))
(insn 26 25 27 4 (set (reg/f:SI 3 r3 [orig:121 _9 ] [121])
        (mem/v/f:SI (reg/f:SI 3 r3 [127]) [2 up_11(D)->base+0 S4 A32])) "uart.c":170:7 253 {*arm_movsi_insn}
     (nil))
(insn 27 26 28 4 (set (reg:QI 2 r2 [128])
        (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                (const_int -17 [0xffffffffffffffef])) [0 c+0 S1 A8])) "uart.c":170:20 263 {*arm_movqi_insn}
     (nil))
(insn 28 27 31 4 (set (mem:QI (reg/f:SI 3 r3 [orig:121 _9 ] [121]) [0 *_9+0 S1 A8])
        (reg:QI 2 r2 [128])) "uart.c":170:20 263 {*arm_movqi_insn}
     (nil))
(insn 31 28 32 4 (clobber (reg/i:SI 0 r0)) "uart.c":171:1 -1
     (nil))
(insn 32 31 35 4 (clobber (reg:SI 3 r3 [orig:122 <retval> ] [122])) "uart.c":171:1 -1
     (nil))
(insn 35 32 30 4 (const_int 0 [0]) "uart.c":171:1 311 {nop}
     (nil))
(insn 30 35 33 4 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:122 <retval> ] [122])) "uart.c":171:1 253 {*arm_movsi_insn}
     (nil))
(insn 33 30 44 4 (use (reg/i:SI 0 r0)) "uart.c":171:1 -1
     (nil))
(note 44 33 45 4 NOTE_INSN_EPILOGUE_BEG)
(insn 45 44 46 4 (unspec_volatile [
            (const_int 0 [0])
        ] VUNSPEC_BLOCKAGE) "uart.c":171:1 -1
     (nil))
(insn/f 46 45 47 4 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 11 fp)
            (const_int 0 [0]))) "uart.c":171:1 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 13 sp)
            (reg/f:SI 11 fp))
        (nil)))
(insn 47 46 48 4 (unspec:SI [
            (reg/f:SI 13 sp)
        ] UNSPEC_REGISTER_USE) "uart.c":171:1 -1
     (nil))
(insn/f 48 47 49 4 (set (reg/f:SI 11 fp)
        (mem:SI (post_inc:SI (reg/f:SI 13 sp)) [7  S4 A32])) "uart.c":171:1 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 13 sp)
            (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])))
        (expr_list:REG_CFA_RESTORE (reg/f:SI 11 fp)
            (nil))))
(jump_insn 49 48 50 4 (simple_return) "uart.c":171:1 -1
     (nil)
 -> simple_return)
;;  succ:       EXIT [always] 
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp]

(barrier 50 49 38)
(note 38 50 0 NOTE_INSN_DELETED)

;; Function sgetc (sgetc, funcdef_no=4, decl_uid=4529, cgraph_uid=5, symbol_order=6)



sgetc

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 11 [fp] 13 [sp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={4d,4u} r1={3d,1u} r2={7d,5u} r3={13d,14u} r11={3d,14u} r12={2d} r13={5d,15u} r14={2d,2u} r15={2d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={2d,1u} r101={1d} r102={1d,1u} r104={1d} r105={1d} r106={1d} 
;;    total ref usage 189{132d,57u,0e} in 33{32 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(note 4 1 38 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 38 4 39 2 (parallel [
            (set (mem/c:BLK (pre_modify:SI (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -8 [0xfffffffffffffff8]))) [7  A8])
                (unspec:BLK [
                        (reg/f:SI 11 fp)
                    ] UNSPEC_PUSH_MULT))
            (use (reg:SI 14 lr))
        ]) "uart.c":174:1 -1
     (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                (set/f (reg/f:SI 13 sp)
                    (plus:SI (reg/f:SI 13 sp)
                        (const_int -8 [0xfffffffffffffff8])))
                (set/f (mem/c:SI (reg/f:SI 13 sp) [7  S4 A32])
                    (reg/f:SI 11 fp))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 4 [0x4])) [7  S4 A32])
                    (reg:SI 14 lr))
            ])
        (nil)))
(insn/f 39 38 40 2 (set (reg/f:SI 11 fp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 4 [0x4]))) "uart.c":174:1 -1
     (nil))
(insn/f 40 39 41 2 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -16 [0xfffffffffffffff0]))) "uart.c":174:1 -1
     (nil))
(insn 41 40 42 2 (set (mem:BLK (scratch) [0  A8])
        (unspec:BLK [
                (reg/f:SI 13 sp)
                (reg/f:SI 11 fp)
            ] UNSPEC_PRLG_STK)) "uart.c":174:1 -1
     (nil))
(note 42 41 2 2 NOTE_INSN_PROLOGUE_END)
(insn 2 42 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [6 up+0 S4 A32])
        (reg:SI 0 r0 [ up ])) "uart.c":174:1 253 {*arm_movsi_insn}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:SI 3 r3 [120])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [6 up+0 S4 A32])) "uart.c":177:3 253 {*arm_movsi_insn}
     (nil))
(insn 7 6 8 2 (set (reg/f:SI 3 r3 [orig:113 _1 ] [113])
        (plus:SI (reg:SI 3 r3 [120])
            (const_int 76 [0x4c]))) "uart.c":177:3 7 {*arm_addsi3}
     (nil))
(insn 8 7 9 2 (set (reg:SI 0 r0)
        (reg/f:SI 3 r3 [orig:113 _1 ] [113])) "uart.c":177:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 9 8 10 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("P") [flags 0x41]  <function_decl 0x7f19cf077700 P>) [0 P S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "uart.c":177:3 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 10 9 11 2 (set (reg/f:SI 3 r3 [121])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [6 up+0 S4 A32])) "uart.c":179:19 253 {*arm_movsi_insn}
     (nil))
(insn 11 10 12 2 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [121])
                (const_int 72 [0x48])) [3 up_7(D)->intail+0 S4 A32])) "uart.c":179:19 253 {*arm_movsi_insn}
     (nil))
(insn 12 11 13 2 (set (reg:SI 1 r1 [orig:115 _4 ] [115])
        (plus:SI (reg:SI 3 r3 [orig:114 _2 ] [114])
            (const_int 1 [0x1]))) "uart.c":179:27 7 {*arm_addsi3}
     (nil))
(insn 13 12 14 2 (set (reg/f:SI 2 r2 [122])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [6 up+0 S4 A32])) "uart.c":179:27 253 {*arm_movsi_insn}
     (nil))
(insn 14 13 15 2 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [122])
                (const_int 72 [0x48])) [3 up_7(D)->intail+0 S4 A32])
        (reg:SI 1 r1 [orig:115 _4 ] [115])) "uart.c":179:27 253 {*arm_movsi_insn}
     (nil))
(insn 15 14 16 2 (set (reg/f:SI 2 r2 [123])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [6 up+0 S4 A32])) "uart.c":179:5 253 {*arm_movsi_insn}
     (nil))
(insn 16 15 17 2 (set (reg/f:SI 3 r3 [124])
        (plus:SI (reg/f:SI 2 r2 [123])
            (reg:SI 3 r3 [orig:114 _2 ] [114]))) "uart.c":179:5 7 {*arm_addsi3}
     (nil))
(insn 17 16 18 2 (set (reg:QI 3 r3 [125])
        (mem/v:QI (plus:SI (reg/f:SI 3 r3 [124])
                (const_int 4 [0x4])) [0 up_7(D)->inbuf[_3]+0 S1 A8])) "uart.c":179:5 263 {*arm_movqi_insn}
     (nil))
(insn 18 17 19 2 (set (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                (const_int -5 [0xfffffffffffffffb])) [0 c+0 S1 A8])
        (reg:QI 3 r3 [125])) "uart.c":179:5 263 {*arm_movqi_insn}
     (nil))
(insn 19 18 20 2 (set (reg/f:SI 3 r3 [126])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [6 up+0 S4 A32])) "uart.c":180:14 253 {*arm_movsi_insn}
     (nil))
(insn 20 19 21 2 (set (reg:SI 3 r3 [orig:116 _5 ] [116])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [126])
                (const_int 72 [0x48])) [3 up_7(D)->intail+0 S4 A32])) "uart.c":180:14 253 {*arm_movsi_insn}
     (nil))
(insn 21 20 22 2 (parallel [
            (set (reg:CC_NZ 100 cc)
                (compare:CC_NZ (minus:SI (const_int 0 [0])
                        (reg:SI 3 r3 [orig:116 _5 ] [116]))
                    (const_int 0 [0])))
            (set (reg:SI 2 r2 [127])
                (minus:SI (const_int 0 [0])
                    (reg:SI 3 r3 [orig:116 _5 ] [116])))
        ]) "uart.c":180:14 46 {subsi3_compare0}
     (nil))
(insn 22 21 23 2 (set (reg:SI 3 r3 [orig:117 _6 ] [117])
        (and:SI (reg:SI 3 r3 [orig:116 _5 ] [116])
            (const_int 63 [0x3f]))) "uart.c":180:14 90 {*arm_andsi3_insn}
     (nil))
(insn 23 22 24 2 (set (reg:SI 2 r2 [128])
        (and:SI (reg:SI 2 r2 [127])
            (const_int 63 [0x3f]))) "uart.c":180:14 90 {*arm_andsi3_insn}
     (nil))
(insn 24 23 25 2 (set (reg:SI 3 r3 [orig:117 _6 ] [117])
        (if_then_else:SI (ge:SI (reg:CC_NZ 100 cc)
                (const_int 0 [0]))
            (neg:SI (reg:SI 2 r2 [128]))
            (reg:SI 3 r3 [orig:117 _6 ] [117]))) "uart.c":180:14 371 {*if_neg_move}
     (nil))
(insn 25 24 26 2 (set (reg/f:SI 2 r2 [129])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [6 up+0 S4 A32])) "uart.c":180:14 253 {*arm_movsi_insn}
     (nil))
(insn 26 25 27 2 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [129])
                (const_int 72 [0x48])) [3 up_7(D)->intail+0 S4 A32])
        (reg:SI 3 r3 [orig:117 _6 ] [117])) "uart.c":180:14 253 {*arm_movsi_insn}
     (nil))
(insn 27 26 34 2 (set (reg:SI 3 r3 [orig:118 _13 ] [118])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -5 [0xfffffffffffffffb])) [0 c+0 S1 A8]))) "uart.c":182:10 175 {*arm_zero_extendqisi2}
     (nil))
(insn 34 27 35 2 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:119 <retval> ] [119])) "uart.c":183:1 253 {*arm_movsi_insn}
     (nil))
(insn 35 34 43 2 (use (reg/i:SI 0 r0)) "uart.c":183:1 -1
     (nil))
(note 43 35 44 2 NOTE_INSN_EPILOGUE_BEG)
(insn 44 43 45 2 (unspec_volatile [
            (const_int 0 [0])
        ] VUNSPEC_BLOCKAGE) "uart.c":183:1 -1
     (nil))
(insn/f 45 44 46 2 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 11 fp)
            (const_int -4 [0xfffffffffffffffc]))) "uart.c":183:1 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 13 sp)
            (plus:SI (reg/f:SI 11 fp)
                (const_int -4 [0xfffffffffffffffc])))
        (nil)))
(insn 46 45 47 2 (unspec:SI [
            (reg/f:SI 13 sp)
        ] UNSPEC_REGISTER_USE) "uart.c":183:1 -1
     (nil))
(jump_insn 47 46 48 2 (parallel [
            (return)
            (set/f (reg/f:SI 13 sp)
                (plus:SI (reg/f:SI 13 sp)
                    (const_int 8 [0x8])))
            (set/f (reg/f:SI 11 fp)
                (mem/c:SI (reg/f:SI 13 sp) [7  S4 A32]))
            (set/f (reg:SI 15 pc)
                (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                        (const_int 4 [0x4])) [7  S4 A32]))
        ]) "uart.c":183:1 -1
     (expr_list:REG_CFA_RESTORE (reg/f:SI 11 fp)
        (nil))
 -> return)
;;  succ:       EXIT [always] 
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp]

(barrier 48 47 37)
(note 37 48 0 NOTE_INSN_DELETED)

;; Function sgets (sgets, funcdef_no=5, decl_uid=4536, cgraph_uid=6, symbol_order=7)



sgets

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 11 [fp] 13 [sp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={7d,6u} r1={4d,2u} r2={5d,2u} r3={13d,10u} r11={3d,18u} r12={4d} r13={5d,19u} r14={3d,2u} r15={3d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={3d,1u} r101={2d} r102={1d,1u} r104={2d} r105={2d} r106={2d} 
;;    total ref usage 288{227d,61u,0e} in 37{35 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp]
;; lr  def 	
(note 5 1 47 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 47 5 48 2 (parallel [
            (set (mem/c:BLK (pre_modify:SI (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -8 [0xfffffffffffffff8]))) [7  A8])
                (unspec:BLK [
                        (reg/f:SI 11 fp)
                    ] UNSPEC_PUSH_MULT))
            (use (reg:SI 14 lr))
        ]) "uart.c":186:1 -1
     (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                (set/f (reg/f:SI 13 sp)
                    (plus:SI (reg/f:SI 13 sp)
                        (const_int -8 [0xfffffffffffffff8])))
                (set/f (mem/c:SI (reg/f:SI 13 sp) [7  S4 A32])
                    (reg/f:SI 11 fp))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 4 [0x4])) [7  S4 A32])
                    (reg:SI 14 lr))
            ])
        (nil)))
(insn/f 48 47 49 2 (set (reg/f:SI 11 fp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 4 [0x4]))) "uart.c":186:1 -1
     (nil))
(insn/f 49 48 50 2 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -8 [0xfffffffffffffff8]))) "uart.c":186:1 -1
     (nil))
(insn 50 49 51 2 (set (mem:BLK (scratch) [0  A8])
        (unspec:BLK [
                (reg/f:SI 13 sp)
                (reg/f:SI 11 fp)
            ] UNSPEC_PRLG_STK)) "uart.c":186:1 -1
     (nil))
(note 51 50 2 2 NOTE_INSN_PROLOGUE_END)
(insn 2 51 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A32])
        (reg:SI 0 r0 [ up ])) "uart.c":186:1 253 {*arm_movsi_insn}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [2 s+0 S4 A32])
        (reg:SI 1 r1 [ s ])) "uart.c":186:1 253 {*arm_movsi_insn}
     (nil))
(note 4 3 44 2 NOTE_INSN_FUNCTION_BEG)
(jump_insn 44 4 45 2 (set (pc)
        (label_ref 18)) "uart.c":187:9 284 {*arm_jump}
     (nil)
 -> 18)
;;  succ:       4 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 45 44 29)
;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(code_label 29 45 9 3 27 (nil) [1 uses])
(note 9 29 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg/f:SI 3 r3 [118])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [2 s+0 S4 A32])) "uart.c":188:5 253 {*arm_movsi_insn}
     (nil))
(insn 11 10 12 3 (set (reg:SI 3 r3 [orig:113 _1 ] [113])
        (zero_extend:SI (mem:QI (reg/f:SI 3 r3 [118]) [0 *s_5+0 S1 A8]))) "uart.c":188:5 175 {*arm_zero_extendqisi2}
     (nil))
(insn 12 11 13 3 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [orig:113 _1 ] [113])) "uart.c":188:5 253 {*arm_movsi_insn}
     (nil))
(insn 13 12 14 3 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A32])) "uart.c":188:5 253 {*arm_movsi_insn}
     (nil))
(call_insn 14 13 15 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sputc") [flags 0x3]  <function_decl 0x7f19cf077300 sputc>) [0 sputc S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "uart.c":188:5 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:QI (use (reg:SI 1 r1))
                (nil)))))
(insn 15 14 16 3 (set (reg:SI 3 r3 [120])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [2 s+0 S4 A32])) "uart.c":189:6 253 {*arm_movsi_insn}
     (nil))
(insn 16 15 17 3 (set (reg:SI 3 r3 [119])
        (plus:SI (reg:SI 3 r3 [120])
            (const_int 1 [0x1]))) "uart.c":189:6 7 {*arm_addsi3}
     (nil))
(insn 17 16 18 3 (set (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [2 s+0 S4 A32])
        (reg:SI 3 r3 [119])) "uart.c":189:6 253 {*arm_movsi_insn}
     (nil))
;;  succ:       4 (FALLTHRU,DFS_BACK)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU,DFS_BACK)
;;              2 [always] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(code_label 18 17 19 4 26 (nil) [1 uses])
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 4 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A32])) "uart.c":187:22 253 {*arm_movsi_insn}
     (nil))
(call_insn 21 20 22 4 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sgetc") [flags 0x3]  <function_decl 0x7f19cf077500 sgetc>) [0 sgetc S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "uart.c":187:22 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 22 21 23 4 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (reg:SI 0 r0)) "uart.c":187:22 253 {*arm_movsi_insn}
     (nil))
(insn 23 22 24 4 (set (reg:SI 2 r2 [orig:115 _3 ] [115])
        (and:SI (reg:SI 3 r3 [orig:114 _2 ] [114])
            (const_int 255 [0xff]))) "uart.c":187:16 90 {*arm_andsi3_insn}
     (nil))
(insn 24 23 26 4 (set (reg/f:SI 3 r3 [121])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [2 s+0 S4 A32])) "uart.c":187:14 253 {*arm_movsi_insn}
     (nil))
(insn 26 24 27 4 (set (mem:QI (reg/f:SI 3 r3 [121]) [0 *s_5+0 S1 A8])
        (reg:QI 2 r2 [122])) "uart.c":187:14 263 {*arm_movqi_insn}
     (nil))
(insn 27 26 28 4 (set (reg/f:SI 3 r3 [123])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [2 s+0 S4 A32])) "uart.c":187:11 253 {*arm_movsi_insn}
     (nil))
(insn 28 27 30 4 (set (reg:SI 3 r3 [orig:116 _4 ] [116])
        (zero_extend:SI (mem:QI (reg/f:SI 3 r3 [123]) [0 *s_5+0 S1 A8]))) "uart.c":187:11 175 {*arm_zero_extendqisi2}
     (nil))
(insn 30 28 31 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:116 _4 ] [116])
            (const_int 13 [0xd]))) "uart.c":187:33 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 31 30 32 4 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) "uart.c":187:33 273 {arm_cond_branch}
     (nil)
 -> 29)
;;  succ:       3
;;              5 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3]
(note 32 31 33 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 5 (set (reg/f:SI 3 r3 [124])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [2 s+0 S4 A32])) "uart.c":191:5 253 {*arm_movsi_insn}
     (nil))
(insn 34 33 36 5 (set (reg:SI 2 r2 [125])
        (const_int 0 [0])) "uart.c":191:5 253 {*arm_movsi_insn}
     (nil))
(insn 36 34 39 5 (set (mem:QI (reg/f:SI 3 r3 [124]) [0 *s_5+0 S1 A8])
        (reg:QI 2 r2 [126])) "uart.c":191:5 263 {*arm_movqi_insn}
     (nil))
(insn 39 36 40 5 (clobber (reg/i:SI 0 r0)) "uart.c":192:1 -1
     (nil))
(insn 40 39 43 5 (clobber (reg:SI 3 r3 [orig:117 <retval> ] [117])) "uart.c":192:1 -1
     (nil))
(insn 43 40 38 5 (const_int 0 [0]) "uart.c":192:1 311 {nop}
     (nil))
(insn 38 43 41 5 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:117 <retval> ] [117])) "uart.c":192:1 253 {*arm_movsi_insn}
     (nil))
(insn 41 38 52 5 (use (reg/i:SI 0 r0)) "uart.c":192:1 -1
     (nil))
(note 52 41 53 5 NOTE_INSN_EPILOGUE_BEG)
(insn 53 52 54 5 (unspec_volatile [
            (const_int 0 [0])
        ] VUNSPEC_BLOCKAGE) "uart.c":192:1 -1
     (nil))
(insn/f 54 53 55 5 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 11 fp)
            (const_int -4 [0xfffffffffffffffc]))) "uart.c":192:1 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 13 sp)
            (plus:SI (reg/f:SI 11 fp)
                (const_int -4 [0xfffffffffffffffc])))
        (nil)))
(insn 55 54 56 5 (unspec:SI [
            (reg/f:SI 13 sp)
        ] UNSPEC_REGISTER_USE) "uart.c":192:1 -1
     (nil))
(jump_insn 56 55 57 5 (parallel [
            (return)
            (set/f (reg/f:SI 13 sp)
                (plus:SI (reg/f:SI 13 sp)
                    (const_int 8 [0x8])))
            (set/f (reg/f:SI 11 fp)
                (mem/c:SI (reg/f:SI 13 sp) [7  S4 A32]))
            (set/f (reg:SI 15 pc)
                (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                        (const_int 4 [0x4])) [7  S4 A32]))
        ]) "uart.c":192:1 -1
     (expr_list:REG_CFA_RESTORE (reg/f:SI 11 fp)
        (nil))
 -> return)
;;  succ:       EXIT [always] 
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp]

(barrier 57 56 46)
(note 46 57 0 NOTE_INSN_DELETED)

;; Function sputs (sputs, funcdef_no=6, decl_uid=4542, cgraph_uid=7, symbol_order=8)



sputs

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 11 [fp] 13 [sp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={7d,5u} r1={5d,2u} r2={4d,1u} r3={13d,11u} r11={3d,14u} r12={4d} r13={5d,20u} r14={3d,2u} r15={3d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={4d,2u} r101={2d} r102={1d,1u} r104={2d} r105={2d} r106={2d} 
;;    total ref usage 286{228d,58u,0e} in 36{34 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp]
;; lr  def 	
(note 4 1 46 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 46 4 47 2 (parallel [
            (set (mem/c:BLK (pre_modify:SI (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -8 [0xfffffffffffffff8]))) [7  A8])
                (unspec:BLK [
                        (reg/f:SI 11 fp)
                    ] UNSPEC_PUSH_MULT))
            (use (reg:SI 14 lr))
        ]) "uart.c":195:1 -1
     (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                (set/f (reg/f:SI 13 sp)
                    (plus:SI (reg/f:SI 13 sp)
                        (const_int -8 [0xfffffffffffffff8])))
                (set/f (mem/c:SI (reg/f:SI 13 sp) [7  S4 A32])
                    (reg/f:SI 11 fp))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 4 [0x4])) [7  S4 A32])
                    (reg:SI 14 lr))
            ])
        (nil)))
(insn/f 47 46 48 2 (set (reg/f:SI 11 fp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 4 [0x4]))) "uart.c":195:1 -1
     (nil))
(insn/f 48 47 49 2 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -8 [0xfffffffffffffff8]))) "uart.c":195:1 -1
     (nil))
(insn 49 48 50 2 (set (mem:BLK (scratch) [0  A8])
        (unspec:BLK [
                (reg/f:SI 13 sp)
                (reg/f:SI 11 fp)
            ] UNSPEC_PRLG_STK)) "uart.c":195:1 -1
     (nil))
(note 50 49 2 2 NOTE_INSN_PROLOGUE_END)
(insn 2 50 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [2 s+0 S4 A32])
        (reg:SI 0 r0 [ s ])) "uart.c":195:1 253 {*arm_movsi_insn}
     (nil))
(note 3 2 43 2 NOTE_INSN_FUNCTION_BEG)
(jump_insn 43 3 44 2 (set (pc)
        (label_ref 28)) "uart.c":196:8 284 {*arm_jump}
     (nil)
 -> 28)
;;  succ:       5 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 44 43 32)
;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(code_label 32 44 8 3 30 (nil) [1 uses])
(note 8 32 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 3 (set (reg/f:SI 3 r3 [120])
        (symbol_ref:SI ("up") [flags 0x2]  <var_decl 0x7f19cfd52b40 up>)) "uart.c":197:5 253 {*arm_movsi_insn}
     (nil))
(insn 10 9 11 3 (set (reg/f:SI 0 r0 [orig:113 up.0_1 ] [113])
        (mem/f/c:SI (reg/f:SI 3 r3 [120]) [6 up+0 S4 A32])) "uart.c":197:5 253 {*arm_movsi_insn}
     (nil))
(insn 11 10 12 3 (set (reg/f:SI 3 r3 [orig:114 s.1_2 ] [114])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [2 s+0 S4 A32])) "uart.c":197:17 253 {*arm_movsi_insn}
     (nil))
(insn 12 11 13 3 (set (reg:SI 2 r2 [121])
        (plus:SI (reg/f:SI 3 r3 [orig:114 s.1_2 ] [114])
            (const_int 1 [0x1]))) "uart.c":197:17 7 {*arm_addsi3}
     (nil))
(insn 13 12 14 3 (set (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [2 s+0 S4 A32])
        (reg:SI 2 r2 [121])) "uart.c":197:17 253 {*arm_movsi_insn}
     (nil))
(insn 14 13 15 3 (set (reg:SI 3 r3 [orig:115 _3 ] [115])
        (zero_extend:SI (mem:QI (reg/f:SI 3 r3 [orig:114 s.1_2 ] [114]) [0 *s.1_2+0 S1 A8]))) "uart.c":197:5 175 {*arm_zero_extendqisi2}
     (nil))
(insn 15 14 17 3 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [orig:115 _3 ] [115])) "uart.c":197:5 253 {*arm_movsi_insn}
     (nil))
(call_insn 17 15 18 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sputc") [flags 0x3]  <function_decl 0x7f19cf077300 sputc>) [0 sputc S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "uart.c":197:5 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:QI (use (reg:SI 1 r1))
                (nil)))))
(insn 18 17 19 3 (set (reg/f:SI 3 r3 [122])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [2 s+0 S4 A32])) "uart.c":198:9 253 {*arm_movsi_insn}
     (nil))
(insn 19 18 20 3 (set (reg:SI 3 r3 [orig:116 _4 ] [116])
        (zero_extend:SI (mem:QI (reg/f:SI 3 r3 [122]) [0 *s_11+0 S1 A8]))) "uart.c":198:9 175 {*arm_zero_extendqisi2}
     (nil))
(insn 20 19 21 3 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:116 _4 ] [116])
            (const_int 10 [0xa]))) "uart.c":198:8 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 21 20 22 3 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 28)
            (pc))) "uart.c":198:8 273 {arm_cond_branch}
     (nil)
 -> 28)
;;  succ:       4 (FALLTHRU)
;;              5 (DFS_BACK)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(note 22 21 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 4 (set (reg/f:SI 3 r3 [123])
        (symbol_ref:SI ("up") [flags 0x2]  <var_decl 0x7f19cfd52b40 up>)) "uart.c":199:7 253 {*arm_movsi_insn}
     (nil))
(insn 24 23 25 4 (set (reg/f:SI 3 r3 [orig:117 up.2_5 ] [117])
        (mem/f/c:SI (reg/f:SI 3 r3 [123]) [6 up+0 S4 A32])) "uart.c":199:7 253 {*arm_movsi_insn}
     (nil))
(insn 25 24 26 4 (set (reg:SI 1 r1)
        (const_int 13 [0xd])) "uart.c":199:7 253 {*arm_movsi_insn}
     (nil))
(insn 26 25 27 4 (set (reg:SI 0 r0)
        (reg/f:SI 3 r3 [orig:117 up.2_5 ] [117])) "uart.c":199:7 253 {*arm_movsi_insn}
     (nil))
(call_insn 27 26 28 4 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sputc") [flags 0x3]  <function_decl 0x7f19cf077300 sputc>) [0 sputc S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "uart.c":199:7 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:QI (use (reg:SI 1 r1))
                (nil)))))
;;  succ:       5 (FALLTHRU,DFS_BACK)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU,DFS_BACK)
;;              3 (DFS_BACK)
;;              2 [always] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(code_label 28 27 29 5 29 (nil) [2 uses])
(note 29 28 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 5 (set (reg/f:SI 3 r3 [124])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [2 s+0 S4 A32])) "uart.c":196:9 253 {*arm_movsi_insn}
     (nil))
(insn 31 30 33 5 (set (reg:SI 3 r3 [orig:118 _6 ] [118])
        (zero_extend:SI (mem:QI (reg/f:SI 3 r3 [124]) [0 *s_7+0 S1 A8]))) "uart.c":196:9 175 {*arm_zero_extendqisi2}
     (nil))
(insn 33 31 34 5 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:118 _6 ] [118])
            (const_int 0 [0]))) "uart.c":196:9 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 34 33 35 5 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 32)
            (pc))) "uart.c":196:9 273 {arm_cond_branch}
     (nil)
 -> 32)
;;  succ:       3
;;              6 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 3 [r3]
(note 35 34 38 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 38 35 39 6 (clobber (reg/i:SI 0 r0)) "uart.c":202:1 -1
     (nil))
(insn 39 38 42 6 (clobber (reg:SI 3 r3 [orig:119 <retval> ] [119])) "uart.c":202:1 -1
     (nil))
(insn 42 39 37 6 (const_int 0 [0]) "uart.c":202:1 311 {nop}
     (nil))
(insn 37 42 40 6 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:119 <retval> ] [119])) "uart.c":202:1 253 {*arm_movsi_insn}
     (nil))
(insn 40 37 51 6 (use (reg/i:SI 0 r0)) "uart.c":202:1 -1
     (nil))
(note 51 40 52 6 NOTE_INSN_EPILOGUE_BEG)
(insn 52 51 53 6 (unspec_volatile [
            (const_int 0 [0])
        ] VUNSPEC_BLOCKAGE) "uart.c":202:1 -1
     (nil))
(insn/f 53 52 54 6 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 11 fp)
            (const_int -4 [0xfffffffffffffffc]))) "uart.c":202:1 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 13 sp)
            (plus:SI (reg/f:SI 11 fp)
                (const_int -4 [0xfffffffffffffffc])))
        (nil)))
(insn 54 53 55 6 (unspec:SI [
            (reg/f:SI 13 sp)
        ] UNSPEC_REGISTER_USE) "uart.c":202:1 -1
     (nil))
(jump_insn 55 54 56 6 (parallel [
            (return)
            (set/f (reg/f:SI 13 sp)
                (plus:SI (reg/f:SI 13 sp)
                    (const_int 8 [0x8])))
            (set/f (reg/f:SI 11 fp)
                (mem/c:SI (reg/f:SI 13 sp) [7  S4 A32]))
            (set/f (reg:SI 15 pc)
                (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                        (const_int 4 [0x4])) [7  S4 A32]))
        ]) "uart.c":202:1 -1
     (expr_list:REG_CFA_RESTORE (reg/f:SI 11 fp)
        (nil))
 -> return)
;;  succ:       EXIT [always] 
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp]

(barrier 56 55 45)
(note 45 56 0 NOTE_INSN_DELETED)

;; Function sprints (sprints, funcdef_no=7, decl_uid=4549, cgraph_uid=8, symbol_order=9)



sprints

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 11 [fp] 13 [sp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={5d,4u} r1={3d,2u} r2={3d,1u} r3={7d,6u} r11={3d,14u} r12={2d} r13={5d,18u} r14={2d,2u} r15={2d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={2d,1u} r101={1d} r102={1d,1u} r104={1d} r105={1d} r106={1d} 
;;    total ref usage 172{123d,49u,0e} in 27{26 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp]
;; lr  def 	
(note 5 1 35 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 35 5 36 2 (parallel [
            (set (mem/c:BLK (pre_modify:SI (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -8 [0xfffffffffffffff8]))) [7  A8])
                (unspec:BLK [
                        (reg/f:SI 11 fp)
                    ] UNSPEC_PUSH_MULT))
            (use (reg:SI 14 lr))
        ]) "uart.c":205:1 -1
     (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                (set/f (reg/f:SI 13 sp)
                    (plus:SI (reg/f:SI 13 sp)
                        (const_int -8 [0xfffffffffffffff8])))
                (set/f (mem/c:SI (reg/f:SI 13 sp) [7  S4 A32])
                    (reg/f:SI 11 fp))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 4 [0x4])) [7  S4 A32])
                    (reg:SI 14 lr))
            ])
        (nil)))
(insn/f 36 35 37 2 (set (reg/f:SI 11 fp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 4 [0x4]))) "uart.c":205:1 -1
     (nil))
(insn/f 37 36 38 2 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -8 [0xfffffffffffffff8]))) "uart.c":205:1 -1
     (nil))
(insn 38 37 39 2 (set (mem:BLK (scratch) [0  A8])
        (unspec:BLK [
                (reg/f:SI 13 sp)
                (reg/f:SI 11 fp)
            ] UNSPEC_PRLG_STK)) "uart.c":205:1 -1
     (nil))
(note 39 38 2 2 NOTE_INSN_PROLOGUE_END)
(insn 2 39 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A32])
        (reg:SI 0 r0 [ up ])) "uart.c":205:1 253 {*arm_movsi_insn}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [2 s+0 S4 A32])
        (reg:SI 1 r1 [ s ])) "uart.c":205:1 253 {*arm_movsi_insn}
     (nil))
(note 4 3 32 2 NOTE_INSN_FUNCTION_BEG)
(jump_insn 32 4 33 2 (set (pc)
        (label_ref 17)) "uart.c":206:8 284 {*arm_jump}
     (nil)
 -> 17)
;;  succ:       4 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 33 32 21)
;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(code_label 21 33 9 3 35 (nil) [1 uses])
(note 9 21 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg/f:SI 3 r3 [orig:113 s.3_1 ] [113])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [2 s+0 S4 A32])) "uart.c":207:17 253 {*arm_movsi_insn}
     (nil))
(insn 11 10 12 3 (set (reg:SI 2 r2 [117])
        (plus:SI (reg/f:SI 3 r3 [orig:113 s.3_1 ] [113])
            (const_int 1 [0x1]))) "uart.c":207:17 7 {*arm_addsi3}
     (nil))
(insn 12 11 13 3 (set (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [2 s+0 S4 A32])
        (reg:SI 2 r2 [117])) "uart.c":207:17 253 {*arm_movsi_insn}
     (nil))
(insn 13 12 14 3 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (zero_extend:SI (mem:QI (reg/f:SI 3 r3 [orig:113 s.3_1 ] [113]) [0 *s.3_1+0 S1 A8]))) "uart.c":207:5 175 {*arm_zero_extendqisi2}
     (nil))
(insn 14 13 15 3 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [orig:114 _2 ] [114])) "uart.c":207:5 253 {*arm_movsi_insn}
     (nil))
(insn 15 14 16 3 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A32])) "uart.c":207:5 253 {*arm_movsi_insn}
     (nil))
(call_insn 16 15 17 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sputc") [flags 0x3]  <function_decl 0x7f19cf077300 sputc>) [0 sputc S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "uart.c":207:5 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:QI (use (reg:SI 1 r1))
                (nil)))))
;;  succ:       4 (FALLTHRU,DFS_BACK)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU,DFS_BACK)
;;              2 [always] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(code_label 17 16 18 4 34 (nil) [1 uses])
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (set (reg/f:SI 3 r3 [118])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [2 s+0 S4 A32])) "uart.c":206:9 253 {*arm_movsi_insn}
     (nil))
(insn 20 19 22 4 (set (reg:SI 3 r3 [orig:115 _3 ] [115])
        (zero_extend:SI (mem:QI (reg/f:SI 3 r3 [118]) [0 *s_4+0 S1 A8]))) "uart.c":206:9 175 {*arm_zero_extendqisi2}
     (nil))
(insn 22 20 23 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:115 _3 ] [115])
            (const_int 0 [0]))) "uart.c":206:9 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 23 22 24 4 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) "uart.c":206:9 273 {arm_cond_branch}
     (nil)
 -> 21)
;;  succ:       3
;;              5 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 3 [r3]
(note 24 23 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 27 24 28 5 (clobber (reg/i:SI 0 r0)) "uart.c":207:21 -1
     (nil))
(insn 28 27 31 5 (clobber (reg:SI 3 r3 [orig:116 <retval> ] [116])) "uart.c":207:21 -1
     (nil))
(insn 31 28 26 5 (const_int 0 [0]) "uart.c":207:21 311 {nop}
     (nil))
(insn 26 31 29 5 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:116 <retval> ] [116])) "uart.c":207:21 253 {*arm_movsi_insn}
     (nil))
(insn 29 26 40 5 (use (reg/i:SI 0 r0)) "uart.c":207:21 -1
     (nil))
(note 40 29 41 5 NOTE_INSN_EPILOGUE_BEG)
(insn 41 40 42 5 (unspec_volatile [
            (const_int 0 [0])
        ] VUNSPEC_BLOCKAGE) "uart.c":207:21 -1
     (nil))
(insn/f 42 41 43 5 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 11 fp)
            (const_int -4 [0xfffffffffffffffc]))) "uart.c":207:21 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 13 sp)
            (plus:SI (reg/f:SI 11 fp)
                (const_int -4 [0xfffffffffffffffc])))
        (nil)))
(insn 43 42 44 5 (unspec:SI [
            (reg/f:SI 13 sp)
        ] UNSPEC_REGISTER_USE) "uart.c":207:21 -1
     (nil))
(jump_insn 44 43 45 5 (parallel [
            (return)
            (set/f (reg/f:SI 13 sp)
                (plus:SI (reg/f:SI 13 sp)
                    (const_int 8 [0x8])))
            (set/f (reg/f:SI 11 fp)
                (mem/c:SI (reg/f:SI 13 sp) [7  S4 A32]))
            (set/f (reg:SI 15 pc)
                (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                        (const_int 4 [0x4])) [7  S4 A32]))
        ]) "uart.c":207:21 -1
     (expr_list:REG_CFA_RESTORE (reg/f:SI 11 fp)
        (nil))
 -> return)
;;  succ:       EXIT [always] 
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp]

(barrier 45 44 34)
(note 34 45 0 NOTE_INSN_DELETED)

;; Function srpx (srpx, funcdef_no=8, decl_uid=4556, cgraph_uid=9, symbol_order=10)



srpx

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 11 [fp] 13 [sp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={7d,5u} r1={7d,5u} r2={5d,2u} r3={15d,16u} r11={3d,16u} r12={4d} r13={5d,18u} r14={3d,2u} r15={3d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={5d,3u} r101={2d} r102={1d,1u} r104={2d} r105={2d} r106={2d} 
;;    total ref usage 302{234d,68u,0e} in 40{38 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(note 5 1 48 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 48 5 49 2 (parallel [
            (set (mem/c:BLK (pre_modify:SI (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -8 [0xfffffffffffffff8]))) [7  A8])
                (unspec:BLK [
                        (reg/f:SI 11 fp)
                    ] UNSPEC_PUSH_MULT))
            (use (reg:SI 14 lr))
        ]) "uart.c":210:1 -1
     (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                (set/f (reg/f:SI 13 sp)
                    (plus:SI (reg/f:SI 13 sp)
                        (const_int -8 [0xfffffffffffffff8])))
                (set/f (mem/c:SI (reg/f:SI 13 sp) [7  S4 A32])
                    (reg/f:SI 11 fp))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 4 [0x4])) [7  S4 A32])
                    (reg:SI 14 lr))
            ])
        (nil)))
(insn/f 49 48 50 2 (set (reg/f:SI 11 fp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 4 [0x4]))) "uart.c":210:1 -1
     (nil))
(insn/f 50 49 51 2 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -16 [0xfffffffffffffff0]))) "uart.c":210:1 -1
     (nil))
(insn 51 50 52 2 (set (mem:BLK (scratch) [0  A8])
        (unspec:BLK [
                (reg/f:SI 13 sp)
                (reg/f:SI 11 fp)
            ] UNSPEC_PRLG_STK)) "uart.c":210:1 -1
     (nil))
(note 52 51 2 2 NOTE_INSN_PROLOGUE_END)
(insn 2 52 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [6 up+0 S4 A32])
        (reg:SI 0 r0 [ up ])) "uart.c":210:1 253 {*arm_movsi_insn}
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -20 [0xffffffffffffffec])) [3 x+0 S4 A32])
        (reg:SI 1 r1 [ x ])) "uart.c":210:1 253 {*arm_movsi_insn}
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:SI 3 r3 [119])
        (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -20 [0xffffffffffffffec])) [3 x+0 S4 A32])) "uart.c":212:6 253 {*arm_movsi_insn}
     (nil))
(insn 8 7 9 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [119])
            (const_int 0 [0]))) "uart.c":212:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 34)
            (pc))) "uart.c":212:6 273 {arm_cond_branch}
     (nil)
 -> 34)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg/f:SI 3 r3 [120])
        (symbol_ref:SI ("tab") [flags 0x40]  <var_decl 0x7f19cfd52510 tab>)) "uart.c":213:13 253 {*arm_movsi_insn}
     (nil))
(insn 12 11 13 3 (set (reg/f:SI 2 r2 [orig:113 tab.4_1 ] [113])
        (mem/f/c:SI (reg/f:SI 3 r3 [120]) [2 tab+0 S4 A32])) "uart.c":213:13 253 {*arm_movsi_insn}
     (nil))
(insn 13 12 14 3 (set (reg:SI 3 r3 [121])
        (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -20 [0xffffffffffffffec])) [3 x+0 S4 A32])) "uart.c":213:16 253 {*arm_movsi_insn}
     (nil))
(insn 14 13 15 3 (parallel [
            (set (reg:CC_NZ 100 cc)
                (compare:CC_NZ (minus:SI (const_int 0 [0])
                        (reg:SI 3 r3 [121]))
                    (const_int 0 [0])))
            (set (reg:SI 1 r1 [122])
                (minus:SI (const_int 0 [0])
                    (reg:SI 3 r3 [121])))
        ]) "uart.c":213:16 46 {subsi3_compare0}
     (nil))
(insn 15 14 16 3 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (and:SI (reg:SI 3 r3 [121])
            (const_int 15 [0xf]))) "uart.c":213:16 90 {*arm_andsi3_insn}
     (nil))
(insn 16 15 17 3 (set (reg:SI 1 r1 [123])
        (and:SI (reg:SI 1 r1 [122])
            (const_int 15 [0xf]))) "uart.c":213:16 90 {*arm_andsi3_insn}
     (nil))
(insn 17 16 19 3 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (if_then_else:SI (ge:SI (reg:CC_NZ 100 cc)
                (const_int 0 [0]))
            (neg:SI (reg:SI 1 r1 [123]))
            (reg:SI 3 r3 [orig:114 _2 ] [114]))) "uart.c":213:16 371 {*if_neg_move}
     (nil))
(insn 19 17 20 3 (set (reg/f:SI 3 r3 [orig:116 _4 ] [116])
        (plus:SI (reg/f:SI 2 r2 [orig:113 tab.4_1 ] [113])
            (reg:SI 3 r3 [orig:115 _3 ] [115]))) "uart.c":213:13 7 {*arm_addsi3}
     (nil))
(insn 20 19 21 3 (set (reg:QI 3 r3 [124])
        (mem:QI (reg/f:SI 3 r3 [orig:116 _4 ] [116]) [0 *_4+0 S1 A8])) "uart.c":213:8 263 {*arm_movqi_insn}
     (nil))
(insn 21 20 22 3 (set (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                (const_int -5 [0xfffffffffffffffb])) [0 c+0 S1 A8])
        (reg:QI 3 r3 [124])) "uart.c":213:8 263 {*arm_movqi_insn}
     (nil))
(insn 22 21 24 3 (set (reg:SI 3 r3 [125])
        (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -20 [0xffffffffffffffec])) [3 x+0 S4 A32])) "uart.c":214:6 253 {*arm_movsi_insn}
     (nil))
(insn 24 22 27 3 (set (reg:SI 2 r2 [127])
        (plus:SI (reg:SI 3 r3 [126])
            (const_int 15 [0xf]))) "uart.c":214:6 7 {*arm_addsi3}
     (nil))
(insn 27 24 28 3 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [126])
            (const_int 0 [0]))) "uart.c":214:6 268 {*arm_cmpsi_insn}
     (nil))
(insn 28 27 29 3 (set (reg:SI 3 r3 [126])
        (if_then_else:SI (lt (reg:CC 100 cc)
                (const_int 0 [0]))
            (reg:SI 2 r2 [127])
            (reg:SI 3 r3 [126]))) "uart.c":214:6 282 {*movsicc_insn}
     (nil))
(insn 29 28 31 3 (set (reg:SI 3 r3 [128])
        (ashiftrt:SI (reg:SI 3 r3 [126])
            (const_int 4 [0x4]))) "uart.c":214:6 147 {*arm_shiftsi3}
     (nil))
(insn 31 29 32 3 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [orig:117 _5 ] [117])) "uart.c":214:6 253 {*arm_movsi_insn}
     (nil))
(insn 32 31 33 3 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [6 up+0 S4 A32])) "uart.c":214:6 253 {*arm_movsi_insn}
     (nil))
(call_insn 33 32 34 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("srpx") [flags 0x3]  <function_decl 0x7f19cf077f00 srpx>) [0 srpx S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "uart.c":214:6 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(code_label 34 33 35 4 37 (nil) [1 uses])
(note 35 34 36 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 4 (set (reg:SI 3 r3 [129])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -5 [0xfffffffffffffffb])) [0 c+0 S1 A8]))) "uart.c":216:3 175 {*arm_zero_extendqisi2}
     (nil))
(insn 37 36 38 4 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [129])) "uart.c":216:3 253 {*arm_movsi_insn}
     (nil))
(insn 38 37 39 4 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [6 up+0 S4 A32])) "uart.c":216:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 39 38 42 4 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sputc") [flags 0x3]  <function_decl 0x7f19cf077300 sputc>) [0 sputc S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "uart.c":216:3 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:QI (use (reg:SI 1 r1))
                (nil)))))
(insn 42 39 43 4 (clobber (reg/i:SI 0 r0)) "uart.c":217:1 -1
     (nil))
(insn 43 42 46 4 (clobber (reg:SI 3 r3 [orig:118 <retval> ] [118])) "uart.c":217:1 -1
     (nil))
(insn 46 43 41 4 (const_int 0 [0]) "uart.c":217:1 311 {nop}
     (nil))
(insn 41 46 44 4 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:118 <retval> ] [118])) "uart.c":217:1 253 {*arm_movsi_insn}
     (nil))
(insn 44 41 53 4 (use (reg/i:SI 0 r0)) "uart.c":217:1 -1
     (nil))
(note 53 44 54 4 NOTE_INSN_EPILOGUE_BEG)
(insn 54 53 55 4 (unspec_volatile [
            (const_int 0 [0])
        ] VUNSPEC_BLOCKAGE) "uart.c":217:1 -1
     (nil))
(insn/f 55 54 56 4 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 11 fp)
            (const_int -4 [0xfffffffffffffffc]))) "uart.c":217:1 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 13 sp)
            (plus:SI (reg/f:SI 11 fp)
                (const_int -4 [0xfffffffffffffffc])))
        (nil)))
(insn 56 55 57 4 (unspec:SI [
            (reg/f:SI 13 sp)
        ] UNSPEC_REGISTER_USE) "uart.c":217:1 -1
     (nil))
(jump_insn 57 56 58 4 (parallel [
            (return)
            (set/f (reg/f:SI 13 sp)
                (plus:SI (reg/f:SI 13 sp)
                    (const_int 8 [0x8])))
            (set/f (reg/f:SI 11 fp)
                (mem/c:SI (reg/f:SI 13 sp) [7  S4 A32]))
            (set/f (reg:SI 15 pc)
                (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                        (const_int 4 [0x4])) [7  S4 A32]))
        ]) "uart.c":217:1 -1
     (expr_list:REG_CFA_RESTORE (reg/f:SI 11 fp)
        (nil))
 -> return)
;;  succ:       EXIT [always] 
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp]

(barrier 58 57 47)
(note 47 58 0 NOTE_INSN_DELETED)

;; Function sprintx (sprintx, funcdef_no=9, decl_uid=4561, cgraph_uid=10, symbol_order=11)



sprintx

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 11 [fp] 13 [sp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={11d,7u} r1={9d,5u} r2={5d} r3={7d,2u} r11={3d,16u} r12={8d} r13={5d,21u} r14={5d,2u} r15={5d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={5d,1u} r101={4d} r102={1d,1u} r104={4d} r105={4d} r106={4d} 
;;    total ref usage 471{416d,55u,0e} in 31{27 regular + 4 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(note 5 1 39 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 39 5 40 2 (parallel [
            (set (mem/c:BLK (pre_modify:SI (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -8 [0xfffffffffffffff8]))) [7  A8])
                (unspec:BLK [
                        (reg/f:SI 11 fp)
                    ] UNSPEC_PUSH_MULT))
            (use (reg:SI 14 lr))
        ]) "uart.c":220:1 -1
     (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                (set/f (reg/f:SI 13 sp)
                    (plus:SI (reg/f:SI 13 sp)
                        (const_int -8 [0xfffffffffffffff8])))
                (set/f (mem/c:SI (reg/f:SI 13 sp) [7  S4 A32])
                    (reg/f:SI 11 fp))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 4 [0x4])) [7  S4 A32])
                    (reg:SI 14 lr))
            ])
        (nil)))
(insn/f 40 39 41 2 (set (reg/f:SI 11 fp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 4 [0x4]))) "uart.c":220:1 -1
     (nil))
(insn/f 41 40 42 2 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -8 [0xfffffffffffffff8]))) "uart.c":220:1 -1
     (nil))
(insn 42 41 43 2 (set (mem:BLK (scratch) [0  A8])
        (unspec:BLK [
                (reg/f:SI 13 sp)
                (reg/f:SI 11 fp)
            ] UNSPEC_PRLG_STK)) "uart.c":220:1 -1
     (nil))
(note 43 42 2 2 NOTE_INSN_PROLOGUE_END)
(insn 2 43 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A32])
        (reg:SI 0 r0 [ up ])) "uart.c":220:1 253 {*arm_movsi_insn}
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [3 x+0 S4 A32])
        (reg:SI 1 r1 [ x ])) "uart.c":220:1 253 {*arm_movsi_insn}
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:SI 1 r1)
        (symbol_ref/f:SI ("*.LC5") [flags 0x2]  <var_decl 0x7f19cf0af6c0 *.LC5>)) "uart.c":221:3 253 {*arm_movsi_insn}
     (nil))
(insn 8 7 9 2 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A32])) "uart.c":221:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 9 8 10 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sprints") [flags 0x3]  <function_decl 0x7f19cf077d00 sprints>) [0 sprints S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "uart.c":221:3 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 10 9 11 2 (set (reg:SI 3 r3 [114])
        (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [3 x+0 S4 A32])) "uart.c":222:6 253 {*arm_movsi_insn}
     (nil))
(insn 11 10 12 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [114])
            (const_int 0 [0]))) "uart.c":222:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) "uart.c":222:6 273 {arm_cond_branch}
     (nil)
 -> 19)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(note 13 12 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 3 (set (reg:SI 1 r1)
        (const_int 48 [0x30])) "uart.c":223:5 253 {*arm_movsi_insn}
     (nil))
(insn 15 14 16 3 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A32])) "uart.c":223:5 253 {*arm_movsi_insn}
     (nil))
(call_insn 16 15 36 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sputc") [flags 0x3]  <function_decl 0x7f19cf077300 sputc>) [0 sputc S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "uart.c":223:5 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:QI (use (reg:SI 1 r1))
                (nil)))))
(jump_insn 36 16 37 3 (set (pc)
        (label_ref 24)) 284 {*arm_jump}
     (nil)
 -> 24)
;;  succ:       5 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 37 36 19)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(code_label 19 37 20 4 41 (nil) [1 uses])
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 4 (set (reg:SI 1 r1)
        (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [3 x+0 S4 A32])) "uart.c":225:5 253 {*arm_movsi_insn}
     (nil))
(insn 22 21 23 4 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A32])) "uart.c":225:5 253 {*arm_movsi_insn}
     (nil))
(call_insn 23 22 24 4 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("srpx") [flags 0x3]  <function_decl 0x7f19cf077f00 srpx>) [0 srpx S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "uart.c":225:5 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              3 [always] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(code_label 24 23 25 5 42 (nil) [1 uses])
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 5 (set (reg:SI 1 r1)
        (const_int 32 [0x20])) "uart.c":226:3 253 {*arm_movsi_insn}
     (nil))
(insn 27 26 28 5 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A32])) "uart.c":226:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 28 27 31 5 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sputc") [flags 0x3]  <function_decl 0x7f19cf077300 sputc>) [0 sputc S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "uart.c":226:3 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:QI (use (reg:SI 1 r1))
                (nil)))))
(insn 31 28 32 5 (clobber (reg/i:SI 0 r0)) "uart.c":227:1 -1
     (nil))
(insn 32 31 35 5 (clobber (reg:SI 3 r3 [orig:113 <retval> ] [113])) "uart.c":227:1 -1
     (nil))
(insn 35 32 30 5 (const_int 0 [0]) "uart.c":227:1 311 {nop}
     (nil))
(insn 30 35 33 5 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:113 <retval> ] [113])) "uart.c":227:1 253 {*arm_movsi_insn}
     (nil))
(insn 33 30 44 5 (use (reg/i:SI 0 r0)) "uart.c":227:1 -1
     (nil))
(note 44 33 45 5 NOTE_INSN_EPILOGUE_BEG)
(insn 45 44 46 5 (unspec_volatile [
            (const_int 0 [0])
        ] VUNSPEC_BLOCKAGE) "uart.c":227:1 -1
     (nil))
(insn/f 46 45 47 5 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 11 fp)
            (const_int -4 [0xfffffffffffffffc]))) "uart.c":227:1 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 13 sp)
            (plus:SI (reg/f:SI 11 fp)
                (const_int -4 [0xfffffffffffffffc])))
        (nil)))
(insn 47 46 48 5 (unspec:SI [
            (reg/f:SI 13 sp)
        ] UNSPEC_REGISTER_USE) "uart.c":227:1 -1
     (nil))
(jump_insn 48 47 49 5 (parallel [
            (return)
            (set/f (reg/f:SI 13 sp)
                (plus:SI (reg/f:SI 13 sp)
                    (const_int 8 [0x8])))
            (set/f (reg/f:SI 11 fp)
                (mem/c:SI (reg/f:SI 13 sp) [7  S4 A32]))
            (set/f (reg:SI 15 pc)
                (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                        (const_int 4 [0x4])) [7  S4 A32]))
        ]) "uart.c":227:1 -1
     (expr_list:REG_CFA_RESTORE (reg/f:SI 11 fp)
        (nil))
 -> return)
;;  succ:       EXIT [always] 
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp]

(barrier 49 48 38)
(note 38 49 0 NOTE_INSN_DELETED)

;; Function srpu (srpu, funcdef_no=10, decl_uid=4565, cgraph_uid=11, symbol_order=12)



srpu

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 11 [fp] 13 [sp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={8d,6u} r1={10d,7u,1e} r2={7d,6u,1e} r3={20d,18u} r11={3d,16u} r12={4d} r13={5d,18u} r14={3d,2u} r15={3d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={3d,1u} r101={2d} r102={1d,1u} r104={2d} r105={2d} r106={2d} 
;;    total ref usage 320{243d,75u,2e} in 48{46 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(note 5 1 58 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 58 5 59 2 (parallel [
            (set (mem/c:BLK (pre_modify:SI (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -8 [0xfffffffffffffff8]))) [7  A8])
                (unspec:BLK [
                        (reg/f:SI 11 fp)
                    ] UNSPEC_PUSH_MULT))
            (use (reg:SI 14 lr))
        ]) "uart.c":230:1 -1
     (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                (set/f (reg/f:SI 13 sp)
                    (plus:SI (reg/f:SI 13 sp)
                        (const_int -8 [0xfffffffffffffff8])))
                (set/f (mem/c:SI (reg/f:SI 13 sp) [7  S4 A32])
                    (reg/f:SI 11 fp))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 4 [0x4])) [7  S4 A32])
                    (reg:SI 14 lr))
            ])
        (nil)))
(insn/f 59 58 60 2 (set (reg/f:SI 11 fp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 4 [0x4]))) "uart.c":230:1 -1
     (nil))
(insn/f 60 59 61 2 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -16 [0xfffffffffffffff0]))) "uart.c":230:1 -1
     (nil))
(insn 61 60 62 2 (set (mem:BLK (scratch) [0  A8])
        (unspec:BLK [
                (reg/f:SI 13 sp)
                (reg/f:SI 11 fp)
            ] UNSPEC_PRLG_STK)) "uart.c":230:1 -1
     (nil))
(note 62 61 2 2 NOTE_INSN_PROLOGUE_END)
(insn 2 62 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [6 up+0 S4 A32])
        (reg:SI 0 r0 [ up ])) "uart.c":230:1 253 {*arm_movsi_insn}
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -20 [0xffffffffffffffec])) [3 x+0 S4 A32])
        (reg:SI 1 r1 [ x ])) "uart.c":230:1 253 {*arm_movsi_insn}
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:SI 3 r3 [119])
        (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -20 [0xffffffffffffffec])) [3 x+0 S4 A32])) "uart.c":232:6 253 {*arm_movsi_insn}
     (nil))
(insn 8 7 9 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [119])
            (const_int 0 [0]))) "uart.c":232:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 38)
            (pc))) "uart.c":232:6 273 {arm_cond_branch}
     (nil)
 -> 38)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg/f:SI 3 r3 [120])
        (symbol_ref:SI ("tab") [flags 0x40]  <var_decl 0x7f19cfd52510 tab>)) "uart.c":233:13 253 {*arm_movsi_insn}
     (nil))
(insn 12 11 13 3 (set (reg/f:SI 0 r0 [orig:113 tab.5_1 ] [113])
        (mem/f/c:SI (reg/f:SI 3 r3 [120]) [2 tab+0 S4 A32])) "uart.c":233:13 253 {*arm_movsi_insn}
     (nil))
(insn 13 12 14 3 (set (reg:SI 2 r2 [121])
        (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -20 [0xffffffffffffffec])) [3 x+0 S4 A32])) "uart.c":233:16 253 {*arm_movsi_insn}
     (nil))
(insn 14 13 15 3 (set (reg:SI 3 r3 [123])
        (const_int 1717986919 [0x66666667])) "uart.c":233:16 253 {*arm_movsi_insn}
     (nil))
(insn 15 14 16 3 (parallel [
            (set (reg:SI 3 r3 [122])
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 3 r3 [122]))
                            (sign_extend:DI (reg:SI 2 r2 [121])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 1 r1 [135]))
        ]) "uart.c":233:16 71 {*smull_high}
     (nil))
(insn 16 15 17 3 (set (reg:SI 1 r1 [124])
        (ashiftrt:SI (reg:SI 3 r3 [122])
            (const_int 2 [0x2]))) "uart.c":233:16 147 {*arm_shiftsi3}
     (nil))
(insn 17 16 18 3 (set (reg:SI 3 r3 [125])
        (ashiftrt:SI (reg:SI 2 r2 [121])
            (const_int 31 [0x1f]))) "uart.c":233:16 147 {*arm_shiftsi3}
     (nil))
(insn 18 17 19 3 (set (reg:SI 1 r1 [orig:114 _2 ] [114])
        (minus:SI (reg:SI 1 r1 [124])
            (reg:SI 3 r3 [125]))) "uart.c":233:16 45 {*arm_subsi3_insn}
     (expr_list:REG_EQUAL (div:SI (reg:SI 2 r2 [121])
            (const_int 10 [0xa]))
        (nil)))
(insn 19 18 20 3 (set (reg:SI 3 r3 [126])
        (reg:SI 1 r1 [orig:114 _2 ] [114])) "uart.c":233:16 253 {*arm_movsi_insn}
     (nil))
(insn 20 19 21 3 (set (reg:SI 3 r3 [126])
        (ashift:SI (reg:SI 3 r3 [126])
            (const_int 2 [0x2]))) "uart.c":233:16 147 {*arm_shiftsi3}
     (nil))
(insn 21 20 22 3 (set (reg:SI 3 r3 [126])
        (plus:SI (reg:SI 3 r3 [126])
            (reg:SI 1 r1 [orig:114 _2 ] [114]))) "uart.c":233:16 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 1 r1 [orig:114 _2 ] [114])
            (const_int 5 [0x5]))
        (nil)))
(insn 22 21 24 3 (set (reg:SI 3 r3 [127])
        (ashift:SI (reg:SI 3 r3 [126])
            (const_int 1 [0x1]))) "uart.c":233:16 147 {*arm_shiftsi3}
     (nil))
(insn 24 22 25 3 (set (reg:SI 1 r1 [orig:114 _2 ] [114])
        (minus:SI (reg:SI 2 r2 [121])
            (reg:SI 3 r3 [126]))) "uart.c":233:16 45 {*arm_subsi3_insn}
     (nil))
(insn 25 24 26 3 (set (reg:SI 3 r3 [orig:115 _3 ] [115])
        (reg:SI 1 r1 [orig:114 _2 ] [114])) "uart.c":233:16 253 {*arm_movsi_insn}
     (nil))
(insn 26 25 27 3 (set (reg/f:SI 3 r3 [orig:116 _4 ] [116])
        (plus:SI (reg/f:SI 0 r0 [orig:113 tab.5_1 ] [113])
            (reg:SI 3 r3 [orig:115 _3 ] [115]))) "uart.c":233:13 7 {*arm_addsi3}
     (nil))
(insn 27 26 28 3 (set (reg:QI 3 r3 [128])
        (mem:QI (reg/f:SI 3 r3 [orig:116 _4 ] [116]) [0 *_4+0 S1 A8])) "uart.c":233:8 263 {*arm_movqi_insn}
     (nil))
(insn 28 27 29 3 (set (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                (const_int -5 [0xfffffffffffffffb])) [0 c+0 S1 A8])
        (reg:QI 3 r3 [128])) "uart.c":233:8 263 {*arm_movqi_insn}
     (nil))
(insn 29 28 30 3 (set (reg:SI 3 r3 [129])
        (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -20 [0xffffffffffffffec])) [3 x+0 S4 A32])) "uart.c":234:6 253 {*arm_movsi_insn}
     (nil))
(insn 30 29 31 3 (set (reg:SI 2 r2 [131])
        (const_int 1717986919 [0x66666667])) "uart.c":234:6 253 {*arm_movsi_insn}
     (nil))
(insn 31 30 32 3 (parallel [
            (set (reg:SI 2 r2 [130])
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 2 r2 [130]))
                            (sign_extend:DI (reg:SI 3 r3 [129])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 1 r1 [136]))
        ]) "uart.c":234:6 71 {*smull_high}
     (nil))
(insn 32 31 33 3 (set (reg:SI 2 r2 [132])
        (ashiftrt:SI (reg:SI 2 r2 [130])
            (const_int 2 [0x2]))) "uart.c":234:6 147 {*arm_shiftsi3}
     (nil))
(insn 33 32 34 3 (set (reg:SI 3 r3 [133])
        (ashiftrt:SI (reg:SI 3 r3 [129])
            (const_int 31 [0x1f]))) "uart.c":234:6 147 {*arm_shiftsi3}
     (nil))
(insn 34 33 35 3 (set (reg:SI 3 r3 [orig:117 _5 ] [117])
        (minus:SI (reg:SI 2 r2 [132])
            (reg:SI 3 r3 [133]))) "uart.c":234:6 45 {*arm_subsi3_insn}
     (nil))
(insn 35 34 36 3 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [orig:117 _5 ] [117])) "uart.c":234:6 253 {*arm_movsi_insn}
     (nil))
(insn 36 35 37 3 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [6 up+0 S4 A32])) "uart.c":234:6 253 {*arm_movsi_insn}
     (nil))
(call_insn 37 36 38 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("srpu") [flags 0x3]  <function_decl 0x7f19cf07d300 srpu>) [0 srpu S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "uart.c":234:6 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(code_label 38 37 39 4 46 (nil) [1 uses])
(note 39 38 40 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 4 (set (reg:SI 3 r3 [134])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -5 [0xfffffffffffffffb])) [0 c+0 S1 A8]))) "uart.c":236:3 175 {*arm_zero_extendqisi2}
     (nil))
(insn 41 40 42 4 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [134])) "uart.c":236:3 253 {*arm_movsi_insn}
     (nil))
(insn 42 41 43 4 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [6 up+0 S4 A32])) "uart.c":236:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 43 42 46 4 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sputc") [flags 0x3]  <function_decl 0x7f19cf077300 sputc>) [0 sputc S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "uart.c":236:3 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:QI (use (reg:SI 1 r1))
                (nil)))))
(insn 46 43 47 4 (clobber (reg/i:SI 0 r0)) "uart.c":237:1 -1
     (nil))
(insn 47 46 50 4 (clobber (reg:SI 3 r3 [orig:118 <retval> ] [118])) "uart.c":237:1 -1
     (nil))
(insn 50 47 45 4 (const_int 0 [0]) "uart.c":237:1 311 {nop}
     (nil))
(insn 45 50 48 4 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:118 <retval> ] [118])) "uart.c":237:1 253 {*arm_movsi_insn}
     (nil))
(insn 48 45 63 4 (use (reg/i:SI 0 r0)) "uart.c":237:1 -1
     (nil))
(note 63 48 64 4 NOTE_INSN_EPILOGUE_BEG)
(insn 64 63 65 4 (unspec_volatile [
            (const_int 0 [0])
        ] VUNSPEC_BLOCKAGE) "uart.c":237:1 -1
     (nil))
(insn/f 65 64 66 4 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 11 fp)
            (const_int -4 [0xfffffffffffffffc]))) "uart.c":237:1 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 13 sp)
            (plus:SI (reg/f:SI 11 fp)
                (const_int -4 [0xfffffffffffffffc])))
        (nil)))
(insn 66 65 67 4 (unspec:SI [
            (reg/f:SI 13 sp)
        ] UNSPEC_REGISTER_USE) "uart.c":237:1 -1
     (nil))
(jump_insn 67 66 68 4 (parallel [
            (return)
            (set/f (reg/f:SI 13 sp)
                (plus:SI (reg/f:SI 13 sp)
                    (const_int 8 [0x8])))
            (set/f (reg/f:SI 11 fp)
                (mem/c:SI (reg/f:SI 13 sp) [7  S4 A32]))
            (set/f (reg:SI 15 pc)
                (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                        (const_int 4 [0x4])) [7  S4 A32]))
        ]) "uart.c":237:1 -1
     (expr_list:REG_CFA_RESTORE (reg/f:SI 11 fp)
        (nil))
 -> return)
;;  succ:       EXIT [always] 
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp]

(barrier 68 67 53)
(note 53 68 0 NOTE_INSN_DELETED)

;; Function sprintu (sprintu, funcdef_no=11, decl_uid=4570, cgraph_uid=12, symbol_order=13)



sprintu

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 11 [fp] 13 [sp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={9d,6u} r1={7d,4u} r2={4d} r3={6d,2u} r11={3d,15u} r12={6d} r13={5d,20u} r14={4d,2u} r15={4d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={4d,1u} r101={3d} r102={1d,1u} r104={3d} r105={3d} r106={3d} 
;;    total ref usage 368{317d,51u,0e} in 28{25 regular + 3 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(note 5 1 36 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 36 5 37 2 (parallel [
            (set (mem/c:BLK (pre_modify:SI (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -8 [0xfffffffffffffff8]))) [7  A8])
                (unspec:BLK [
                        (reg/f:SI 11 fp)
                    ] UNSPEC_PUSH_MULT))
            (use (reg:SI 14 lr))
        ]) "uart.c":240:1 -1
     (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                (set/f (reg/f:SI 13 sp)
                    (plus:SI (reg/f:SI 13 sp)
                        (const_int -8 [0xfffffffffffffff8])))
                (set/f (mem/c:SI (reg/f:SI 13 sp) [7  S4 A32])
                    (reg/f:SI 11 fp))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 4 [0x4])) [7  S4 A32])
                    (reg:SI 14 lr))
            ])
        (nil)))
(insn/f 37 36 38 2 (set (reg/f:SI 11 fp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 4 [0x4]))) "uart.c":240:1 -1
     (nil))
(insn/f 38 37 39 2 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -8 [0xfffffffffffffff8]))) "uart.c":240:1 -1
     (nil))
(insn 39 38 40 2 (set (mem:BLK (scratch) [0  A8])
        (unspec:BLK [
                (reg/f:SI 13 sp)
                (reg/f:SI 11 fp)
            ] UNSPEC_PRLG_STK)) "uart.c":240:1 -1
     (nil))
(note 40 39 2 2 NOTE_INSN_PROLOGUE_END)
(insn 2 40 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A32])
        (reg:SI 0 r0 [ up ])) "uart.c":240:1 253 {*arm_movsi_insn}
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [3 x+0 S4 A32])
        (reg:SI 1 r1 [ x ])) "uart.c":240:1 253 {*arm_movsi_insn}
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:SI 3 r3 [114])
        (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [3 x+0 S4 A32])) "uart.c":241:6 253 {*arm_movsi_insn}
     (nil))
(insn 8 7 9 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [114])
            (const_int 0 [0]))) "uart.c":241:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 16)
            (pc))) "uart.c":241:6 273 {arm_cond_branch}
     (nil)
 -> 16)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg:SI 1 r1)
        (const_int 48 [0x30])) "uart.c":242:5 253 {*arm_movsi_insn}
     (nil))
(insn 12 11 13 3 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A32])) "uart.c":242:5 253 {*arm_movsi_insn}
     (nil))
(call_insn 13 12 33 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sputc") [flags 0x3]  <function_decl 0x7f19cf077300 sputc>) [0 sputc S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "uart.c":242:5 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:QI (use (reg:SI 1 r1))
                (nil)))))
(jump_insn 33 13 34 3 (set (pc)
        (label_ref 21)) 284 {*arm_jump}
     (nil)
 -> 21)
;;  succ:       5 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 34 33 16)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(code_label 16 34 17 4 50 (nil) [1 uses])
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 4 (set (reg:SI 1 r1)
        (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [3 x+0 S4 A32])) "uart.c":244:5 253 {*arm_movsi_insn}
     (nil))
(insn 19 18 20 4 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A32])) "uart.c":244:5 253 {*arm_movsi_insn}
     (nil))
(call_insn 20 19 21 4 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("srpu") [flags 0x3]  <function_decl 0x7f19cf07d300 srpu>) [0 srpu S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "uart.c":244:5 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              3 [always] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(code_label 21 20 22 5 51 (nil) [1 uses])
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 5 (set (reg:SI 1 r1)
        (const_int 32 [0x20])) "uart.c":245:3 253 {*arm_movsi_insn}
     (nil))
(insn 24 23 25 5 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A32])) "uart.c":245:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 25 24 28 5 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sputc") [flags 0x3]  <function_decl 0x7f19cf077300 sputc>) [0 sputc S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "uart.c":245:3 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:QI (use (reg:SI 1 r1))
                (nil)))))
(insn 28 25 29 5 (clobber (reg/i:SI 0 r0)) "uart.c":246:1 -1
     (nil))
(insn 29 28 32 5 (clobber (reg:SI 3 r3 [orig:113 <retval> ] [113])) "uart.c":246:1 -1
     (nil))
(insn 32 29 27 5 (const_int 0 [0]) "uart.c":246:1 311 {nop}
     (nil))
(insn 27 32 30 5 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:113 <retval> ] [113])) "uart.c":246:1 253 {*arm_movsi_insn}
     (nil))
(insn 30 27 41 5 (use (reg/i:SI 0 r0)) "uart.c":246:1 -1
     (nil))
(note 41 30 42 5 NOTE_INSN_EPILOGUE_BEG)
(insn 42 41 43 5 (unspec_volatile [
            (const_int 0 [0])
        ] VUNSPEC_BLOCKAGE) "uart.c":246:1 -1
     (nil))
(insn/f 43 42 44 5 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 11 fp)
            (const_int -4 [0xfffffffffffffffc]))) "uart.c":246:1 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 13 sp)
            (plus:SI (reg/f:SI 11 fp)
                (const_int -4 [0xfffffffffffffffc])))
        (nil)))
(insn 44 43 45 5 (unspec:SI [
            (reg/f:SI 13 sp)
        ] UNSPEC_REGISTER_USE) "uart.c":246:1 -1
     (nil))
(jump_insn 45 44 46 5 (parallel [
            (return)
            (set/f (reg/f:SI 13 sp)
                (plus:SI (reg/f:SI 13 sp)
                    (const_int 8 [0x8])))
            (set/f (reg/f:SI 11 fp)
                (mem/c:SI (reg/f:SI 13 sp) [7  S4 A32]))
            (set/f (reg:SI 15 pc)
                (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                        (const_int 4 [0x4])) [7  S4 A32]))
        ]) "uart.c":246:1 -1
     (expr_list:REG_CFA_RESTORE (reg/f:SI 11 fp)
        (nil))
 -> return)
;;  succ:       EXIT [always] 
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp]

(barrier 46 45 35)
(note 35 46 0 NOTE_INSN_DELETED)

;; Function sprinti (sprinti, funcdef_no=12, decl_uid=4574, cgraph_uid=13, symbol_order=14)



sprinti

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 11 [fp] 13 [sp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={7d,5u} r1={5d,3u} r2={3d} r3={7d,4u} r11={3d,15u} r12={4d} r13={5d,18u} r14={3d,2u} r15={3d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={3d,1u} r101={2d} r102={1d,1u} r104={2d} r105={2d} r106={2d} 
;;    total ref usage 269{220d,49u,0e} in 27{25 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(note 5 1 32 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 32 5 33 2 (parallel [
            (set (mem/c:BLK (pre_modify:SI (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -8 [0xfffffffffffffff8]))) [7  A8])
                (unspec:BLK [
                        (reg/f:SI 11 fp)
                    ] UNSPEC_PUSH_MULT))
            (use (reg:SI 14 lr))
        ]) "uart.c":249:1 -1
     (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                (set/f (reg/f:SI 13 sp)
                    (plus:SI (reg/f:SI 13 sp)
                        (const_int -8 [0xfffffffffffffff8])))
                (set/f (mem/c:SI (reg/f:SI 13 sp) [7  S4 A32])
                    (reg/f:SI 11 fp))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 4 [0x4])) [7  S4 A32])
                    (reg:SI 14 lr))
            ])
        (nil)))
(insn/f 33 32 34 2 (set (reg/f:SI 11 fp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 4 [0x4]))) "uart.c":249:1 -1
     (nil))
(insn/f 34 33 35 2 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -8 [0xfffffffffffffff8]))) "uart.c":249:1 -1
     (nil))
(insn 35 34 36 2 (set (mem:BLK (scratch) [0  A8])
        (unspec:BLK [
                (reg/f:SI 13 sp)
                (reg/f:SI 11 fp)
            ] UNSPEC_PRLG_STK)) "uart.c":249:1 -1
     (nil))
(note 36 35 2 2 NOTE_INSN_PROLOGUE_END)
(insn 2 36 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A32])
        (reg:SI 0 r0 [ up ])) "uart.c":249:1 253 {*arm_movsi_insn}
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [3 x+0 S4 A32])
        (reg:SI 1 r1 [ x ])) "uart.c":249:1 253 {*arm_movsi_insn}
     (nil))
(note 4 3 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 4 10 2 (set (reg:SI 3 r3 [114])
        (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [3 x+0 S4 A32])) "uart.c":250:6 253 {*arm_movsi_insn}
     (nil))
(insn 10 9 11 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [114])
            (const_int 0 [0]))) "uart.c":250:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ge (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) "uart.c":250:6 273 {arm_cond_branch}
     (nil)
 -> 19)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (set (reg:SI 1 r1)
        (const_int 45 [0x2d])) "uart.c":251:5 253 {*arm_movsi_insn}
     (nil))
(insn 14 13 15 3 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A32])) "uart.c":251:5 253 {*arm_movsi_insn}
     (nil))
(call_insn 15 14 16 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sputc") [flags 0x3]  <function_decl 0x7f19cf077300 sputc>) [0 sputc S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "uart.c":251:5 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:QI (use (reg:SI 1 r1))
                (nil)))))
(insn 16 15 17 3 (set (reg:SI 3 r3 [116])
        (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [3 x+0 S4 A32])) "uart.c":252:7 253 {*arm_movsi_insn}
     (nil))
(insn 17 16 18 3 (set (reg:SI 3 r3 [115])
        (neg:SI (reg:SI 3 r3 [116]))) "uart.c":252:7 164 {*arm_negsi2}
     (nil))
(insn 18 17 19 3 (set (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [3 x+0 S4 A32])
        (reg:SI 3 r3 [115])) "uart.c":252:7 253 {*arm_movsi_insn}
     (nil))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(code_label 19 18 20 4 53 (nil) [1 uses])
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 4 (set (reg:SI 1 r1)
        (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [3 x+0 S4 A32])) "uart.c":254:3 253 {*arm_movsi_insn}
     (nil))
(insn 22 21 23 4 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A32])) "uart.c":254:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 23 22 26 4 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sprintu") [flags 0x3]  <function_decl 0x7f19cf07d500 sprintu>) [0 sprintu S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "uart.c":254:3 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 26 23 27 4 (clobber (reg/i:SI 0 r0)) "uart.c":255:1 -1
     (nil))
(insn 27 26 30 4 (clobber (reg:SI 3 r3 [orig:113 <retval> ] [113])) "uart.c":255:1 -1
     (nil))
(insn 30 27 25 4 (const_int 0 [0]) "uart.c":255:1 311 {nop}
     (nil))
(insn 25 30 28 4 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:113 <retval> ] [113])) "uart.c":255:1 253 {*arm_movsi_insn}
     (nil))
(insn 28 25 37 4 (use (reg/i:SI 0 r0)) "uart.c":255:1 -1
     (nil))
(note 37 28 38 4 NOTE_INSN_EPILOGUE_BEG)
(insn 38 37 39 4 (unspec_volatile [
            (const_int 0 [0])
        ] VUNSPEC_BLOCKAGE) "uart.c":255:1 -1
     (nil))
(insn/f 39 38 40 4 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 11 fp)
            (const_int -4 [0xfffffffffffffffc]))) "uart.c":255:1 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 13 sp)
            (plus:SI (reg/f:SI 11 fp)
                (const_int -4 [0xfffffffffffffffc])))
        (nil)))
(insn 40 39 41 4 (unspec:SI [
            (reg/f:SI 13 sp)
        ] UNSPEC_REGISTER_USE) "uart.c":255:1 -1
     (nil))
(jump_insn 41 40 42 4 (parallel [
            (return)
            (set/f (reg/f:SI 13 sp)
                (plus:SI (reg/f:SI 13 sp)
                    (const_int 8 [0x8])))
            (set/f (reg/f:SI 11 fp)
                (mem/c:SI (reg/f:SI 13 sp) [7  S4 A32]))
            (set/f (reg:SI 15 pc)
                (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                        (const_int 4 [0x4])) [7  S4 A32]))
        ]) "uart.c":255:1 -1
     (expr_list:REG_CFA_RESTORE (reg/f:SI 11 fp)
        (nil))
 -> return)
;;  succ:       EXIT [always] 
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp]

(barrier 42 41 31)
(note 31 42 0 NOTE_INSN_DELETED)

;; Function sfprintf (sfprintf, funcdef_no=13, decl_uid=4578, cgraph_uid=14, symbol_order=15)



sfprintf

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 11 [fp] 13 [sp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={17d,10u} r1={15d,8u} r2={8d,1u} r3={41d,35u} r11={3d,48u} r12={14d} r13={7d,38u} r14={9d,2u} r15={7d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={7d} r38={7d} r39={7d} r40={7d} r41={7d} r42={7d} r43={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r76={7d} r77={7d} r78={7d} r79={7d} r80={7d} r81={7d} r82={7d} r83={7d} r84={7d} r85={7d} r86={7d} r87={7d} r88={7d} r89={7d} r90={7d} r91={7d} r92={7d} r93={7d} r94={7d} r95={7d} r96={7d} r97={7d} r98={7d} r99={7d} r100={11d,3u} r101={7d} r102={1d,1u} r104={7d} r105={7d} r106={7d} 
;;    total ref usage 895{749d,146u,0e} in 90{83 regular + 7 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp]
;; lr  def 	 3 [r3]
(note 4 1 134 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 134 4 135 2 (parallel [
            (set (mem/c:BLK (pre_modify:SI (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -12 [0xfffffffffffffff4]))) [7  A8])
                (unspec:BLK [
                        (reg:SI 1 r1)
                    ] UNSPEC_PUSH_MULT))
            (use (reg:SI 2 r2))
            (use (reg:SI 3 r3))
        ]) "uart.c":258:1 -1
     (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                (set/f (reg/f:SI 13 sp)
                    (plus:SI (reg/f:SI 13 sp)
                        (const_int -12 [0xfffffffffffffff4])))
                (set/f (mem/c:SI (reg/f:SI 13 sp) [7  S4 A32])
                    (reg:SI 1 r1))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 4 [0x4])) [7  S4 A32])
                    (reg:SI 2 r2))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 8 [0x8])) [7  S4 A32])
                    (reg:SI 3 r3))
            ])
        (nil)))
(insn/f 135 134 136 2 (parallel [
            (set (mem/c:BLK (pre_modify:SI (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -8 [0xfffffffffffffff8]))) [7  A8])
                (unspec:BLK [
                        (reg/f:SI 11 fp)
                    ] UNSPEC_PUSH_MULT))
            (use (reg:SI 14 lr))
        ]) "uart.c":258:1 -1
     (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                (set/f (reg/f:SI 13 sp)
                    (plus:SI (reg/f:SI 13 sp)
                        (const_int -8 [0xfffffffffffffff8])))
                (set/f (mem/c:SI (reg/f:SI 13 sp) [7  S4 A32])
                    (reg/f:SI 11 fp))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 4 [0x4])) [7  S4 A32])
                    (reg:SI 14 lr))
            ])
        (nil)))
(insn/f 136 135 137 2 (set (reg/f:SI 11 fp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 4 [0x4]))) "uart.c":258:1 -1
     (nil))
(insn/f 137 136 138 2 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -20 [0xffffffffffffffec]))) "uart.c":258:1 -1
     (nil))
(insn 138 137 139 2 (set (mem:BLK (scratch) [0  A8])
        (unspec:BLK [
                (reg/f:SI 13 sp)
                (reg/f:SI 11 fp)
            ] UNSPEC_PRLG_STK)) "uart.c":258:1 -1
     (nil))
(note 139 138 2 2 NOTE_INSN_PROLOGUE_END)
(insn 2 139 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -20 [0xffffffffffffffec])) [6 up+0 S4 A32])
        (reg:SI 0 r0 [ up ])) "uart.c":258:1 253 {*arm_movsi_insn}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:SI 3 r3 [127])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int 4 [0x4])) [2 fmt+0 S4 A64])) "uart.c":261:6 253 {*arm_movsi_insn}
     (nil))
(insn 7 6 8 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [2 cp+0 S4 A32])
        (reg/f:SI 3 r3 [127])) "uart.c":261:6 253 {*arm_movsi_insn}
     (nil))
(insn 8 7 9 2 (set (reg:SI 3 r3 [128])
        (plus:SI (reg/f:SI 11 fp)
            (const_int 8 [0x8]))) "uart.c":262:6 7 {*arm_addsi3}
     (nil))
(insn 9 8 119 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [9 ip+0 S4 A64])
        (reg:SI 3 r3 [128])) "uart.c":262:6 253 {*arm_movsi_insn}
     (nil))
(jump_insn 119 9 120 2 (set (pc)
        (label_ref 104)) "uart.c":264:8 284 {*arm_jump}
     (nil)
 -> 104)
;;  succ:       14 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 120 119 108)
;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       14
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(code_label 108 120 12 3 65 (nil) [1 uses])
(note 12 108 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (set (reg/f:SI 3 r3 [129])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [2 cp+0 S4 A32])) "uart.c":265:9 253 {*arm_movsi_insn}
     (nil))
(insn 14 13 15 3 (set (reg:SI 3 r3 [orig:113 _1 ] [113])
        (zero_extend:SI (mem:QI (reg/f:SI 3 r3 [129]) [0 *cp_15+0 S1 A8]))) "uart.c":265:9 175 {*arm_zero_extendqisi2}
     (nil))
(insn 15 14 16 3 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:113 _1 ] [113])
            (const_int 37 [0x25]))) "uart.c":265:8 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 16 15 17 3 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 38)
            (pc))) "uart.c":265:8 273 {arm_cond_branch}
     (nil)
 -> 38)
;;  succ:       4 (FALLTHRU)
;;              7
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 4 (set (reg/f:SI 3 r3 [130])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [2 cp+0 S4 A32])) "uart.c":266:7 253 {*arm_movsi_insn}
     (nil))
(insn 19 18 20 4 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (zero_extend:SI (mem:QI (reg/f:SI 3 r3 [130]) [0 *cp_15+0 S1 A8]))) "uart.c":266:7 175 {*arm_zero_extendqisi2}
     (nil))
(insn 20 19 21 4 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [orig:114 _2 ] [114])) "uart.c":266:7 253 {*arm_movsi_insn}
     (nil))
(insn 21 20 22 4 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -20 [0xffffffffffffffec])) [6 up+0 S4 A32])) "uart.c":266:7 253 {*arm_movsi_insn}
     (nil))
(call_insn 22 21 23 4 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sputc") [flags 0x3]  <function_decl 0x7f19cf077300 sputc>) [0 sputc S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "uart.c":266:7 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:QI (use (reg:SI 1 r1))
                (nil)))))
(insn 23 22 24 4 (set (reg/f:SI 3 r3 [131])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [2 cp+0 S4 A32])) "uart.c":267:11 253 {*arm_movsi_insn}
     (nil))
(insn 24 23 25 4 (set (reg:SI 3 r3 [orig:115 _3 ] [115])
        (zero_extend:SI (mem:QI (reg/f:SI 3 r3 [131]) [0 *cp_15+0 S1 A8]))) "uart.c":267:11 175 {*arm_zero_extendqisi2}
     (nil))
(insn 25 24 26 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:115 _3 ] [115])
            (const_int 10 [0xa]))) "uart.c":267:10 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 26 25 27 4 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) "uart.c":267:10 273 {arm_cond_branch}
     (nil)
 -> 31)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(note 27 26 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 5 (set (reg:SI 1 r1)
        (const_int 13 [0xd])) "uart.c":268:2 253 {*arm_movsi_insn}
     (nil))
(insn 29 28 30 5 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -20 [0xffffffffffffffec])) [6 up+0 S4 A32])) "uart.c":268:2 253 {*arm_movsi_insn}
     (nil))
(call_insn 30 29 31 5 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sputc") [flags 0x3]  <function_decl 0x7f19cf077300 sputc>) [0 sputc S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "uart.c":268:2 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:QI (use (reg:SI 1 r1))
                (nil)))))
;;  succ:       6 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4
;;              5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3]
(code_label 31 30 32 6 57 (nil) [1 uses])
(note 32 31 33 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 6 (set (reg:SI 3 r3 [133])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [2 cp+0 S4 A32])) "uart.c":269:9 253 {*arm_movsi_insn}
     (nil))
(insn 34 33 35 6 (set (reg:SI 3 r3 [132])
        (plus:SI (reg:SI 3 r3 [133])
            (const_int 1 [0x1]))) "uart.c":269:9 7 {*arm_addsi3}
     (nil))
(insn 35 34 121 6 (set (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [2 cp+0 S4 A32])
        (reg:SI 3 r3 [132])) "uart.c":269:9 253 {*arm_movsi_insn}
     (nil))
(jump_insn 121 35 122 6 (set (pc)
        (label_ref 104)) "uart.c":270:7 284 {*arm_jump}
     (nil)
 -> 104)
;;  succ:       14 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 122 121 38)
;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(code_label 38 122 39 7 56 (nil) [1 uses])
(note 39 38 40 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 7 (set (reg:SI 3 r3 [135])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [2 cp+0 S4 A32])) "uart.c":272:7 253 {*arm_movsi_insn}
     (nil))
(insn 41 40 42 7 (set (reg:SI 3 r3 [134])
        (plus:SI (reg:SI 3 r3 [135])
            (const_int 1 [0x1]))) "uart.c":272:7 7 {*arm_addsi3}
     (nil))
(insn 42 41 43 7 (set (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [2 cp+0 S4 A32])
        (reg:SI 3 r3 [134])) "uart.c":272:7 253 {*arm_movsi_insn}
     (nil))
(insn 43 42 44 7 (set (reg/f:SI 3 r3 [136])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [2 cp+0 S4 A32])) "uart.c":273:12 253 {*arm_movsi_insn}
     (nil))
(insn 44 43 46 7 (set (reg:SI 3 r3 [orig:116 _4 ] [116])
        (zero_extend:SI (mem:QI (reg/f:SI 3 r3 [136]) [0 *cp_22+0 S1 A8]))) "uart.c":273:12 175 {*arm_zero_extendqisi2}
     (nil))
(insn 46 44 47 7 (set (reg:SI 3 r3 [137])
        (plus:SI (reg:SI 3 r3 [orig:117 _5 ] [117])
            (const_int -99 [0xffffffffffffff9d]))) "uart.c":273:5 7 {*arm_addsi3}
     (nil))
(jump_insn 47 46 48 7 (parallel [
            (set (pc)
                (if_then_else (leu (reg:SI 3 r3 [137])
                        (const_int 21 [0x15]))
                    (mem/u/c:SI (plus:SI (mult:SI (reg:SI 3 r3 [137])
                                (const_int 4 [0x4]))
                            (label_ref:SI 48)) [0  S4 A32])
                    (label_ref:SI 96)))
            (clobber (reg:CC 100 cc))
            (use (label_ref:SI 48))
        ]) "uart.c":273:5 308 {*arm_casesi_internal}
     (insn_list:REG_LABEL_TARGET 96 (nil))
 -> 48)
;;  succ:       13 [63.0% (adjusted)] 
;;              8 [7.4% (adjusted)] 
;;              10 [7.4% (adjusted)] 
;;              9 [7.4% (adjusted)] 
;;              11 [7.4% (adjusted)] 
;;              12 [7.4% (adjusted)] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; Insn is not within a basic block
(code_label 48 47 49 60 (nil) [2 uses])
;; Insn is not within a basic block
(jump_table_data 49 48 50 (addr_vec:SI [
            (label_ref:SI 51)
            (label_ref:SI 71)
            (label_ref:SI 96)
            (label_ref:SI 96)
            (label_ref:SI 96)
            (label_ref:SI 96)
            (label_ref:SI 96)
            (label_ref:SI 96)
            (label_ref:SI 96)
            (label_ref:SI 96)
            (label_ref:SI 96)
            (label_ref:SI 96)
            (label_ref:SI 96)
            (label_ref:SI 96)
            (label_ref:SI 96)
            (label_ref:SI 96)
            (label_ref:SI 61)
            (label_ref:SI 96)
            (label_ref:SI 80)
            (label_ref:SI 96)
            (label_ref:SI 96)
            (label_ref:SI 89)
        ]))
(barrier 50 49 51)
;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [7.4% (adjusted)] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(code_label 51 50 52 8 64 (nil) [1 uses])
(note 52 51 53 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 8 (set (reg/f:SI 3 r3 [138])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [9 ip+0 S4 A64])) "uart.c":274:31 253 {*arm_movsi_insn}
     (nil))
(insn 54 53 55 8 (set (reg:SI 3 r3 [orig:118 _6 ] [118])
        (mem:SI (reg/f:SI 3 r3 [138]) [3 *ip_14+0 S4 A32])) "uart.c":274:31 253 {*arm_movsi_insn}
     (nil))
(insn 55 54 56 8 (set (reg:SI 3 r3 [orig:119 _7 ] [119])
        (and:SI (reg:SI 3 r3 [orig:118 _6 ] [118])
            (const_int 255 [0xff]))) "uart.c":274:15 90 {*arm_andsi3_insn}
     (nil))
(insn 56 55 57 8 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [orig:119 _7 ] [119])) "uart.c":274:15 253 {*arm_movsi_insn}
     (nil))
(insn 57 56 58 8 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -20 [0xffffffffffffffec])) [6 up+0 S4 A32])) "uart.c":274:15 253 {*arm_movsi_insn}
     (nil))
(call_insn 58 57 123 8 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sputc") [flags 0x3]  <function_decl 0x7f19cf077300 sputc>) [0 sputc S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "uart.c":274:15 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:QI (use (reg:SI 1 r1))
                (nil)))))
(jump_insn 123 58 124 8 (set (pc)
        (label_ref 96)) "uart.c":274:42 284 {*arm_jump}
     (nil)
 -> 96)
;;  succ:       13 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 124 123 61)
;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [7.4% (adjusted)] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(code_label 61 124 62 9 62 (nil) [1 uses])
(note 62 61 63 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 9 (set (reg/f:SI 3 r3 [139])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [9 ip+0 S4 A64])) "uart.c":275:35 253 {*arm_movsi_insn}
     (nil))
(insn 64 63 66 9 (set (reg:SI 3 r3 [orig:120 _8 ] [120])
        (mem:SI (reg/f:SI 3 r3 [139]) [3 *ip_14+0 S4 A32])) "uart.c":275:35 253 {*arm_movsi_insn}
     (nil))
(insn 66 64 67 9 (set (reg:SI 1 r1)
        (reg/f:SI 3 r3 [orig:121 _9 ] [121])) "uart.c":275:15 253 {*arm_movsi_insn}
     (nil))
(insn 67 66 68 9 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -20 [0xffffffffffffffec])) [6 up+0 S4 A32])) "uart.c":275:15 253 {*arm_movsi_insn}
     (nil))
(call_insn 68 67 125 9 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sprints") [flags 0x3]  <function_decl 0x7f19cf077d00 sprints>) [0 sprints S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "uart.c":275:15 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(jump_insn 125 68 126 9 (set (pc)
        (label_ref 96)) "uart.c":275:42 284 {*arm_jump}
     (nil)
 -> 96)
;;  succ:       13 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 126 125 71)
;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [7.4% (adjusted)] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(code_label 71 126 72 10 63 (nil) [1 uses])
(note 72 71 73 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 10 (set (reg/f:SI 3 r3 [140])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [9 ip+0 S4 A64])) "uart.c":276:15 253 {*arm_movsi_insn}
     (nil))
(insn 74 73 75 10 (set (reg:SI 3 r3 [orig:122 _10 ] [122])
        (mem:SI (reg/f:SI 3 r3 [140]) [3 *ip_14+0 S4 A32])) "uart.c":276:15 253 {*arm_movsi_insn}
     (nil))
(insn 75 74 76 10 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [orig:122 _10 ] [122])) "uart.c":276:15 253 {*arm_movsi_insn}
     (nil))
(insn 76 75 77 10 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -20 [0xffffffffffffffec])) [6 up+0 S4 A32])) "uart.c":276:15 253 {*arm_movsi_insn}
     (nil))
(call_insn 77 76 127 10 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sprinti") [flags 0x3]  <function_decl 0x7f19cf07d700 sprinti>) [0 sprinti S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "uart.c":276:15 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(jump_insn 127 77 128 10 (set (pc)
        (label_ref 96)) "uart.c":276:43 284 {*arm_jump}
     (nil)
 -> 96)
;;  succ:       13 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 128 127 80)
;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [7.4% (adjusted)] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(code_label 80 128 81 11 61 (nil) [1 uses])
(note 81 80 82 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 11 (set (reg/f:SI 3 r3 [141])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [9 ip+0 S4 A64])) "uart.c":277:15 253 {*arm_movsi_insn}
     (nil))
(insn 83 82 84 11 (set (reg:SI 3 r3 [orig:123 _11 ] [123])
        (mem:SI (reg/f:SI 3 r3 [141]) [3 *ip_14+0 S4 A32])) "uart.c":277:15 253 {*arm_movsi_insn}
     (nil))
(insn 84 83 85 11 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [orig:123 _11 ] [123])) "uart.c":277:15 253 {*arm_movsi_insn}
     (nil))
(insn 85 84 86 11 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -20 [0xffffffffffffffec])) [6 up+0 S4 A32])) "uart.c":277:15 253 {*arm_movsi_insn}
     (nil))
(call_insn 86 85 129 11 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sprintu") [flags 0x3]  <function_decl 0x7f19cf07d500 sprintu>) [0 sprintu S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "uart.c":277:15 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(jump_insn 129 86 130 11 (set (pc)
        (label_ref 96)) "uart.c":277:43 284 {*arm_jump}
     (nil)
 -> 96)
;;  succ:       13 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 130 129 89)
;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [7.4% (adjusted)] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(code_label 89 130 90 12 59 (nil) [1 uses])
(note 90 89 91 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 92 12 (set (reg/f:SI 3 r3 [142])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [9 ip+0 S4 A64])) "uart.c":278:15 253 {*arm_movsi_insn}
     (nil))
(insn 92 91 93 12 (set (reg:SI 3 r3 [orig:124 _12 ] [124])
        (mem:SI (reg/f:SI 3 r3 [142]) [3 *ip_14+0 S4 A32])) "uart.c":278:15 253 {*arm_movsi_insn}
     (nil))
(insn 93 92 94 12 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [orig:124 _12 ] [124])) "uart.c":278:15 253 {*arm_movsi_insn}
     (nil))
(insn 94 93 95 12 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -20 [0xffffffffffffffec])) [6 up+0 S4 A32])) "uart.c":278:15 253 {*arm_movsi_insn}
     (nil))
(call_insn 95 94 132 12 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sprintx") [flags 0x3]  <function_decl 0x7f19cf07d100 sprintx>) [0 sprintx S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "uart.c":278:15 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 132 95 96 12 (const_int 0 [0]) "uart.c":278:34 311 {nop}
     (nil))
;;  succ:       13 [always]  (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [63.0% (adjusted)] 
;;              12 [always]  (FALLTHRU)
;;              8 [always] 
;;              9 [always] 
;;              10 [always] 
;;              11 [always] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3]
(code_label 96 132 97 13 58 (nil) [22 uses])
(note 97 96 98 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 98 97 99 13 (set (reg:SI 3 r3 [144])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [2 cp+0 S4 A32])) "uart.c":280:7 253 {*arm_movsi_insn}
     (nil))
(insn 99 98 100 13 (set (reg:SI 3 r3 [143])
        (plus:SI (reg:SI 3 r3 [144])
            (const_int 1 [0x1]))) "uart.c":280:7 7 {*arm_addsi3}
     (nil))
(insn 100 99 101 13 (set (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [2 cp+0 S4 A32])
        (reg:SI 3 r3 [143])) "uart.c":280:7 253 {*arm_movsi_insn}
     (nil))
(insn 101 100 102 13 (set (reg:SI 3 r3 [146])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [9 ip+0 S4 A64])) "uart.c":280:13 253 {*arm_movsi_insn}
     (nil))
(insn 102 101 103 13 (set (reg:SI 3 r3 [145])
        (plus:SI (reg:SI 3 r3 [146])
            (const_int 4 [0x4]))) "uart.c":280:13 7 {*arm_addsi3}
     (nil))
(insn 103 102 104 13 (set (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [9 ip+0 S4 A64])
        (reg:SI 3 r3 [145])) "uart.c":280:13 253 {*arm_movsi_insn}
     (nil))
;;  succ:       14 (FALLTHRU,DFS_BACK)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 14, loop depth 0, maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       13 (FALLTHRU,DFS_BACK)
;;              2 [always] 
;;              6 [always] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(code_label 104 103 105 14 55 (nil) [2 uses])
(note 105 104 106 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 106 105 107 14 (set (reg/f:SI 3 r3 [147])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [2 cp+0 S4 A32])) "uart.c":264:9 253 {*arm_movsi_insn}
     (nil))
(insn 107 106 109 14 (set (reg:SI 3 r3 [orig:125 _13 ] [125])
        (zero_extend:SI (mem:QI (reg/f:SI 3 r3 [147]) [0 *cp_15+0 S1 A8]))) "uart.c":264:9 175 {*arm_zero_extendqisi2}
     (nil))
(insn 109 107 110 14 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:125 _13 ] [125])
            (const_int 0 [0]))) "uart.c":264:9 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 110 109 111 14 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 108)
            (pc))) "uart.c":264:9 273 {arm_cond_branch}
     (nil)
 -> 108)
;;  succ:       3
;;              15 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 15, loop depth 0, maybe hot
;;  prev block 14, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 3 [r3]
(note 111 110 114 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 114 111 115 15 (clobber (reg/i:SI 0 r0)) "uart.c":282:1 -1
     (nil))
(insn 115 114 118 15 (clobber (reg:SI 3 r3 [orig:126 <retval> ] [126])) "uart.c":282:1 -1
     (nil))
(insn 118 115 113 15 (const_int 0 [0]) "uart.c":282:1 311 {nop}
     (nil))
(insn 113 118 116 15 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:126 <retval> ] [126])) "uart.c":282:1 253 {*arm_movsi_insn}
     (nil))
(insn 116 113 140 15 (use (reg/i:SI 0 r0)) "uart.c":282:1 -1
     (nil))
(note 140 116 141 15 NOTE_INSN_EPILOGUE_BEG)
(insn 141 140 142 15 (unspec_volatile [
            (const_int 0 [0])
        ] VUNSPEC_BLOCKAGE) "uart.c":282:1 -1
     (nil))
(insn/f 142 141 143 15 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 11 fp)
            (const_int -4 [0xfffffffffffffffc]))) "uart.c":282:1 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 13 sp)
            (plus:SI (reg/f:SI 11 fp)
                (const_int -4 [0xfffffffffffffffc])))
        (nil)))
(insn 143 142 144 15 (unspec:SI [
            (reg/f:SI 13 sp)
        ] UNSPEC_REGISTER_USE) "uart.c":282:1 -1
     (nil))
(insn/f 144 143 145 15 (parallel [
            (set/f (reg/f:SI 13 sp)
                (plus:SI (reg/f:SI 13 sp)
                    (const_int 8 [0x8])))
            (set/f (reg/f:SI 11 fp)
                (mem/c:SI (reg/f:SI 13 sp) [7  S4 A32]))
            (set/f (reg:SI 14 lr)
                (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                        (const_int 4 [0x4])) [7  S4 A32]))
        ]) "uart.c":282:1 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 13 sp)
            (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])))
        (expr_list:REG_CFA_RESTORE (reg:SI 14 lr)
            (expr_list:REG_CFA_RESTORE (reg/f:SI 11 fp)
                (nil)))))
(insn/f 145 144 146 15 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 12 [0xc]))) "uart.c":282:1 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 13 sp)
            (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])))
        (expr_list:REG_CFA_RESTORE (reg:SI 3 r3)
            (expr_list:REG_CFA_RESTORE (reg:SI 2 r2)
                (expr_list:REG_CFA_RESTORE (reg:SI 1 r1)
                    (nil))))))
(jump_insn 146 145 147 15 (simple_return) "uart.c":282:1 -1
     (nil)
 -> simple_return)
;;  succ:       EXIT [always] 
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp]

(barrier 147 146 133)
(note 133 147 0 NOTE_INSN_DELETED)

;; Function ksprintf (ksprintf, funcdef_no=14, decl_uid=4592, cgraph_uid=15, symbol_order=16)



ksprintf

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 11 [fp] 13 [sp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={17d,10u} r1={15d,8u} r2={8d,1u} r3={42d,36u} r11={3d,48u} r12={14d} r13={7d,38u} r14={9d,2u} r15={7d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={7d} r38={7d} r39={7d} r40={7d} r41={7d} r42={7d} r43={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r76={7d} r77={7d} r78={7d} r79={7d} r80={7d} r81={7d} r82={7d} r83={7d} r84={7d} r85={7d} r86={7d} r87={7d} r88={7d} r89={7d} r90={7d} r91={7d} r92={7d} r93={7d} r94={7d} r95={7d} r96={7d} r97={7d} r98={7d} r99={7d} r100={11d,3u} r101={7d} r102={1d,1u} r104={7d} r105={7d} r106={7d} 
;;    total ref usage 897{750d,147u,0e} in 91{84 regular + 7 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3]
(note 3 1 135 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 135 3 136 2 (parallel [
            (set (mem/c:BLK (pre_modify:SI (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -16 [0xfffffffffffffff0]))) [7  A8])
                (unspec:BLK [
                        (reg:SI 0 r0)
                    ] UNSPEC_PUSH_MULT))
            (use (reg:SI 1 r1))
            (use (reg:SI 2 r2))
            (use (reg:SI 3 r3))
        ]) "uart.c":285:1 -1
     (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                (set/f (reg/f:SI 13 sp)
                    (plus:SI (reg/f:SI 13 sp)
                        (const_int -16 [0xfffffffffffffff0])))
                (set/f (mem/c:SI (reg/f:SI 13 sp) [7  S4 A32])
                    (reg:SI 0 r0))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 4 [0x4])) [7  S4 A32])
                    (reg:SI 1 r1))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 8 [0x8])) [7  S4 A32])
                    (reg:SI 2 r2))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 12 [0xc])) [7  S4 A32])
                    (reg:SI 3 r3))
            ])
        (nil)))
(insn/f 136 135 137 2 (parallel [
            (set (mem/c:BLK (pre_modify:SI (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -8 [0xfffffffffffffff8]))) [7  A8])
                (unspec:BLK [
                        (reg/f:SI 11 fp)
                    ] UNSPEC_PUSH_MULT))
            (use (reg:SI 14 lr))
        ]) "uart.c":285:1 -1
     (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                (set/f (reg/f:SI 13 sp)
                    (plus:SI (reg/f:SI 13 sp)
                        (const_int -8 [0xfffffffffffffff8])))
                (set/f (mem/c:SI (reg/f:SI 13 sp) [7  S4 A32])
                    (reg/f:SI 11 fp))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 4 [0x4])) [7  S4 A32])
                    (reg:SI 14 lr))
            ])
        (nil)))
(insn/f 137 136 138 2 (set (reg/f:SI 11 fp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 4 [0x4]))) "uart.c":285:1 -1
     (nil))
(insn/f 138 137 139 2 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -16 [0xfffffffffffffff0]))) "uart.c":285:1 -1
     (nil))
(insn 139 138 140 2 (set (mem:BLK (scratch) [0  A8])
        (unspec:BLK [
                (reg/f:SI 13 sp)
                (reg/f:SI 11 fp)
            ] UNSPEC_PRLG_STK)) "uart.c":285:1 -1
     (nil))
(note 140 139 2 2 NOTE_INSN_PROLOGUE_END)
(note 2 140 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 3 r3 [127])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int 4 [0x4])) [2 fmt+0 S4 A64])) "uart.c":288:6 253 {*arm_movsi_insn}
     (nil))
(insn 6 5 7 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [2 cp+0 S4 A64])
        (reg/f:SI 3 r3 [127])) "uart.c":288:6 253 {*arm_movsi_insn}
     (nil))
(insn 7 6 8 2 (set (reg:SI 3 r3 [128])
        (plus:SI (reg/f:SI 11 fp)
            (const_int 8 [0x8]))) "uart.c":289:6 7 {*arm_addsi3}
     (nil))
(insn 8 7 9 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [9 ip+0 S4 A32])
        (reg:SI 3 r3 [128])) "uart.c":289:6 253 {*arm_movsi_insn}
     (nil))
(insn 9 8 10 2 (set (reg/f:SI 3 r3 [129])
        (symbol_ref:SI ("uart") [flags 0x2]  <var_decl 0x7f19cfd52ab0 uart>)) "uart.c":291:9 253 {*arm_movsi_insn}
     (nil))
(insn 10 9 120 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A32])
        (reg/f:SI 3 r3 [129])) "uart.c":291:9 253 {*arm_movsi_insn}
     (nil))
(jump_insn 120 10 121 2 (set (pc)
        (label_ref 105)) "uart.c":293:8 284 {*arm_jump}
     (nil)
 -> 105)
;;  succ:       14 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 121 120 109)
;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       14
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(code_label 109 121 13 3 77 (nil) [1 uses])
(note 13 109 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 3 (set (reg/f:SI 3 r3 [130])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [2 cp+0 S4 A64])) "uart.c":294:9 253 {*arm_movsi_insn}
     (nil))
(insn 15 14 16 3 (set (reg:SI 3 r3 [orig:113 _1 ] [113])
        (zero_extend:SI (mem:QI (reg/f:SI 3 r3 [130]) [0 *cp_15+0 S1 A8]))) "uart.c":294:9 175 {*arm_zero_extendqisi2}
     (nil))
(insn 16 15 17 3 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:113 _1 ] [113])
            (const_int 37 [0x25]))) "uart.c":294:8 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 17 16 18 3 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 39)
            (pc))) "uart.c":294:8 273 {arm_cond_branch}
     (nil)
 -> 39)
;;  succ:       4 (FALLTHRU)
;;              7
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (set (reg/f:SI 3 r3 [131])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [2 cp+0 S4 A64])) "uart.c":295:7 253 {*arm_movsi_insn}
     (nil))
(insn 20 19 21 4 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (zero_extend:SI (mem:QI (reg/f:SI 3 r3 [131]) [0 *cp_15+0 S1 A8]))) "uart.c":295:7 175 {*arm_zero_extendqisi2}
     (nil))
(insn 21 20 22 4 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [orig:114 _2 ] [114])) "uart.c":295:7 253 {*arm_movsi_insn}
     (nil))
(insn 22 21 23 4 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A32])) "uart.c":295:7 253 {*arm_movsi_insn}
     (nil))
(call_insn 23 22 24 4 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sputc") [flags 0x3]  <function_decl 0x7f19cf077300 sputc>) [0 sputc S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "uart.c":295:7 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:QI (use (reg:SI 1 r1))
                (nil)))))
(insn 24 23 25 4 (set (reg/f:SI 3 r3 [132])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [2 cp+0 S4 A64])) "uart.c":296:11 253 {*arm_movsi_insn}
     (nil))
(insn 25 24 26 4 (set (reg:SI 3 r3 [orig:115 _3 ] [115])
        (zero_extend:SI (mem:QI (reg/f:SI 3 r3 [132]) [0 *cp_15+0 S1 A8]))) "uart.c":296:11 175 {*arm_zero_extendqisi2}
     (nil))
(insn 26 25 27 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:115 _3 ] [115])
            (const_int 10 [0xa]))) "uart.c":296:10 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 27 26 28 4 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 32)
            (pc))) "uart.c":296:10 273 {arm_cond_branch}
     (nil)
 -> 32)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(note 28 27 29 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 5 (set (reg:SI 1 r1)
        (const_int 13 [0xd])) "uart.c":297:2 253 {*arm_movsi_insn}
     (nil))
(insn 30 29 31 5 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A32])) "uart.c":297:2 253 {*arm_movsi_insn}
     (nil))
(call_insn 31 30 32 5 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sputc") [flags 0x3]  <function_decl 0x7f19cf077300 sputc>) [0 sputc S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "uart.c":297:2 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:QI (use (reg:SI 1 r1))
                (nil)))))
;;  succ:       6 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4
;;              5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3]
(code_label 32 31 33 6 69 (nil) [1 uses])
(note 33 32 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 6 (set (reg:SI 3 r3 [134])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [2 cp+0 S4 A64])) "uart.c":298:9 253 {*arm_movsi_insn}
     (nil))
(insn 35 34 36 6 (set (reg:SI 3 r3 [133])
        (plus:SI (reg:SI 3 r3 [134])
            (const_int 1 [0x1]))) "uart.c":298:9 7 {*arm_addsi3}
     (nil))
(insn 36 35 122 6 (set (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [2 cp+0 S4 A64])
        (reg:SI 3 r3 [133])) "uart.c":298:9 253 {*arm_movsi_insn}
     (nil))
(jump_insn 122 36 123 6 (set (pc)
        (label_ref 105)) "uart.c":299:7 284 {*arm_jump}
     (nil)
 -> 105)
;;  succ:       14 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 123 122 39)
;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(code_label 39 123 40 7 68 (nil) [1 uses])
(note 40 39 41 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 7 (set (reg:SI 3 r3 [136])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [2 cp+0 S4 A64])) "uart.c":301:7 253 {*arm_movsi_insn}
     (nil))
(insn 42 41 43 7 (set (reg:SI 3 r3 [135])
        (plus:SI (reg:SI 3 r3 [136])
            (const_int 1 [0x1]))) "uart.c":301:7 7 {*arm_addsi3}
     (nil))
(insn 43 42 44 7 (set (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [2 cp+0 S4 A64])
        (reg:SI 3 r3 [135])) "uart.c":301:7 253 {*arm_movsi_insn}
     (nil))
(insn 44 43 45 7 (set (reg/f:SI 3 r3 [137])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [2 cp+0 S4 A64])) "uart.c":302:12 253 {*arm_movsi_insn}
     (nil))
(insn 45 44 47 7 (set (reg:SI 3 r3 [orig:116 _4 ] [116])
        (zero_extend:SI (mem:QI (reg/f:SI 3 r3 [137]) [0 *cp_23+0 S1 A8]))) "uart.c":302:12 175 {*arm_zero_extendqisi2}
     (nil))
(insn 47 45 48 7 (set (reg:SI 3 r3 [138])
        (plus:SI (reg:SI 3 r3 [orig:117 _5 ] [117])
            (const_int -99 [0xffffffffffffff9d]))) "uart.c":302:5 7 {*arm_addsi3}
     (nil))
(jump_insn 48 47 49 7 (parallel [
            (set (pc)
                (if_then_else (leu (reg:SI 3 r3 [138])
                        (const_int 21 [0x15]))
                    (mem/u/c:SI (plus:SI (mult:SI (reg:SI 3 r3 [138])
                                (const_int 4 [0x4]))
                            (label_ref:SI 49)) [0  S4 A32])
                    (label_ref:SI 97)))
            (clobber (reg:CC 100 cc))
            (use (label_ref:SI 49))
        ]) "uart.c":302:5 308 {*arm_casesi_internal}
     (insn_list:REG_LABEL_TARGET 97 (nil))
 -> 49)
;;  succ:       13 [63.0% (adjusted)] 
;;              8 [7.4% (adjusted)] 
;;              10 [7.4% (adjusted)] 
;;              9 [7.4% (adjusted)] 
;;              11 [7.4% (adjusted)] 
;;              12 [7.4% (adjusted)] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; Insn is not within a basic block
(code_label 49 48 50 72 (nil) [2 uses])
;; Insn is not within a basic block
(jump_table_data 50 49 51 (addr_vec:SI [
            (label_ref:SI 52)
            (label_ref:SI 72)
            (label_ref:SI 97)
            (label_ref:SI 97)
            (label_ref:SI 97)
            (label_ref:SI 97)
            (label_ref:SI 97)
            (label_ref:SI 97)
            (label_ref:SI 97)
            (label_ref:SI 97)
            (label_ref:SI 97)
            (label_ref:SI 97)
            (label_ref:SI 97)
            (label_ref:SI 97)
            (label_ref:SI 97)
            (label_ref:SI 97)
            (label_ref:SI 62)
            (label_ref:SI 97)
            (label_ref:SI 81)
            (label_ref:SI 97)
            (label_ref:SI 97)
            (label_ref:SI 90)
        ]))
(barrier 51 50 52)
;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [7.4% (adjusted)] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(code_label 52 51 53 8 76 (nil) [1 uses])
(note 53 52 54 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 8 (set (reg/f:SI 3 r3 [139])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [9 ip+0 S4 A32])) "uart.c":303:31 253 {*arm_movsi_insn}
     (nil))
(insn 55 54 56 8 (set (reg:SI 3 r3 [orig:118 _6 ] [118])
        (mem:SI (reg/f:SI 3 r3 [139]) [3 *ip_14+0 S4 A32])) "uart.c":303:31 253 {*arm_movsi_insn}
     (nil))
(insn 56 55 57 8 (set (reg:SI 3 r3 [orig:119 _7 ] [119])
        (and:SI (reg:SI 3 r3 [orig:118 _6 ] [118])
            (const_int 255 [0xff]))) "uart.c":303:15 90 {*arm_andsi3_insn}
     (nil))
(insn 57 56 58 8 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [orig:119 _7 ] [119])) "uart.c":303:15 253 {*arm_movsi_insn}
     (nil))
(insn 58 57 59 8 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A32])) "uart.c":303:15 253 {*arm_movsi_insn}
     (nil))
(call_insn 59 58 124 8 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sputc") [flags 0x3]  <function_decl 0x7f19cf077300 sputc>) [0 sputc S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "uart.c":303:15 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:QI (use (reg:SI 1 r1))
                (nil)))))
(jump_insn 124 59 125 8 (set (pc)
        (label_ref 97)) "uart.c":303:42 284 {*arm_jump}
     (nil)
 -> 97)
;;  succ:       13 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 125 124 62)
;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [7.4% (adjusted)] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(code_label 62 125 63 9 74 (nil) [1 uses])
(note 63 62 64 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 9 (set (reg/f:SI 3 r3 [140])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [9 ip+0 S4 A32])) "uart.c":304:35 253 {*arm_movsi_insn}
     (nil))
(insn 65 64 67 9 (set (reg:SI 3 r3 [orig:120 _8 ] [120])
        (mem:SI (reg/f:SI 3 r3 [140]) [3 *ip_14+0 S4 A32])) "uart.c":304:35 253 {*arm_movsi_insn}
     (nil))
(insn 67 65 68 9 (set (reg:SI 1 r1)
        (reg/f:SI 3 r3 [orig:121 _9 ] [121])) "uart.c":304:15 253 {*arm_movsi_insn}
     (nil))
(insn 68 67 69 9 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A32])) "uart.c":304:15 253 {*arm_movsi_insn}
     (nil))
(call_insn 69 68 126 9 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sprints") [flags 0x3]  <function_decl 0x7f19cf077d00 sprints>) [0 sprints S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "uart.c":304:15 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(jump_insn 126 69 127 9 (set (pc)
        (label_ref 97)) "uart.c":304:43 284 {*arm_jump}
     (nil)
 -> 97)
;;  succ:       13 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 127 126 72)
;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [7.4% (adjusted)] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(code_label 72 127 73 10 75 (nil) [1 uses])
(note 73 72 74 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 75 10 (set (reg/f:SI 3 r3 [141])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [9 ip+0 S4 A32])) "uart.c":305:15 253 {*arm_movsi_insn}
     (nil))
(insn 75 74 76 10 (set (reg:SI 3 r3 [orig:122 _10 ] [122])
        (mem:SI (reg/f:SI 3 r3 [141]) [3 *ip_14+0 S4 A32])) "uart.c":305:15 253 {*arm_movsi_insn}
     (nil))
(insn 76 75 77 10 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [orig:122 _10 ] [122])) "uart.c":305:15 253 {*arm_movsi_insn}
     (nil))
(insn 77 76 78 10 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A32])) "uart.c":305:15 253 {*arm_movsi_insn}
     (nil))
(call_insn 78 77 128 10 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sprinti") [flags 0x3]  <function_decl 0x7f19cf07d700 sprinti>) [0 sprinti S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "uart.c":305:15 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(jump_insn 128 78 129 10 (set (pc)
        (label_ref 97)) "uart.c":305:43 284 {*arm_jump}
     (nil)
 -> 97)
;;  succ:       13 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 129 128 81)
;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [7.4% (adjusted)] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(code_label 81 129 82 11 73 (nil) [1 uses])
(note 82 81 83 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 11 (set (reg/f:SI 3 r3 [142])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [9 ip+0 S4 A32])) "uart.c":306:15 253 {*arm_movsi_insn}
     (nil))
(insn 84 83 85 11 (set (reg:SI 3 r3 [orig:123 _11 ] [123])
        (mem:SI (reg/f:SI 3 r3 [142]) [3 *ip_14+0 S4 A32])) "uart.c":306:15 253 {*arm_movsi_insn}
     (nil))
(insn 85 84 86 11 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [orig:123 _11 ] [123])) "uart.c":306:15 253 {*arm_movsi_insn}
     (nil))
(insn 86 85 87 11 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A32])) "uart.c":306:15 253 {*arm_movsi_insn}
     (nil))
(call_insn 87 86 130 11 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sprintu") [flags 0x3]  <function_decl 0x7f19cf07d500 sprintu>) [0 sprintu S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "uart.c":306:15 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(jump_insn 130 87 131 11 (set (pc)
        (label_ref 97)) "uart.c":306:43 284 {*arm_jump}
     (nil)
 -> 97)
;;  succ:       13 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 131 130 90)
;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [7.4% (adjusted)] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(code_label 90 131 91 12 71 (nil) [1 uses])
(note 91 90 92 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 93 12 (set (reg/f:SI 3 r3 [143])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [9 ip+0 S4 A32])) "uart.c":307:15 253 {*arm_movsi_insn}
     (nil))
(insn 93 92 94 12 (set (reg:SI 3 r3 [orig:124 _12 ] [124])
        (mem:SI (reg/f:SI 3 r3 [143]) [3 *ip_14+0 S4 A32])) "uart.c":307:15 253 {*arm_movsi_insn}
     (nil))
(insn 94 93 95 12 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [orig:124 _12 ] [124])) "uart.c":307:15 253 {*arm_movsi_insn}
     (nil))
(insn 95 94 96 12 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A32])) "uart.c":307:15 253 {*arm_movsi_insn}
     (nil))
(call_insn 96 95 133 12 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sprintx") [flags 0x3]  <function_decl 0x7f19cf07d100 sprintx>) [0 sprintx S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "uart.c":307:15 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 133 96 97 12 (const_int 0 [0]) "uart.c":307:34 311 {nop}
     (nil))
;;  succ:       13 [always]  (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [63.0% (adjusted)] 
;;              12 [always]  (FALLTHRU)
;;              8 [always] 
;;              9 [always] 
;;              10 [always] 
;;              11 [always] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3]
(code_label 97 133 98 13 70 (nil) [22 uses])
(note 98 97 99 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 99 98 100 13 (set (reg:SI 3 r3 [145])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [2 cp+0 S4 A64])) "uart.c":309:7 253 {*arm_movsi_insn}
     (nil))
(insn 100 99 101 13 (set (reg:SI 3 r3 [144])
        (plus:SI (reg:SI 3 r3 [145])
            (const_int 1 [0x1]))) "uart.c":309:7 7 {*arm_addsi3}
     (nil))
(insn 101 100 102 13 (set (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [2 cp+0 S4 A64])
        (reg:SI 3 r3 [144])) "uart.c":309:7 253 {*arm_movsi_insn}
     (nil))
(insn 102 101 103 13 (set (reg:SI 3 r3 [147])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [9 ip+0 S4 A32])) "uart.c":309:13 253 {*arm_movsi_insn}
     (nil))
(insn 103 102 104 13 (set (reg:SI 3 r3 [146])
        (plus:SI (reg:SI 3 r3 [147])
            (const_int 4 [0x4]))) "uart.c":309:13 7 {*arm_addsi3}
     (nil))
(insn 104 103 105 13 (set (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [9 ip+0 S4 A32])
        (reg:SI 3 r3 [146])) "uart.c":309:13 253 {*arm_movsi_insn}
     (nil))
;;  succ:       14 (FALLTHRU,DFS_BACK)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 14, loop depth 0, maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       13 (FALLTHRU,DFS_BACK)
;;              2 [always] 
;;              6 [always] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(code_label 105 104 106 14 67 (nil) [2 uses])
(note 106 105 107 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 107 106 108 14 (set (reg/f:SI 3 r3 [148])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [2 cp+0 S4 A64])) "uart.c":293:9 253 {*arm_movsi_insn}
     (nil))
(insn 108 107 110 14 (set (reg:SI 3 r3 [orig:125 _13 ] [125])
        (zero_extend:SI (mem:QI (reg/f:SI 3 r3 [148]) [0 *cp_15+0 S1 A8]))) "uart.c":293:9 175 {*arm_zero_extendqisi2}
     (nil))
(insn 110 108 111 14 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:125 _13 ] [125])
            (const_int 0 [0]))) "uart.c":293:9 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 111 110 112 14 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 109)
            (pc))) "uart.c":293:9 273 {arm_cond_branch}
     (nil)
 -> 109)
;;  succ:       3
;;              15 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 15, loop depth 0, maybe hot
;;  prev block 14, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 3 [r3]
(note 112 111 115 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 115 112 116 15 (clobber (reg/i:SI 0 r0)) "uart.c":311:1 -1
     (nil))
(insn 116 115 119 15 (clobber (reg:SI 3 r3 [orig:126 <retval> ] [126])) "uart.c":311:1 -1
     (nil))
(insn 119 116 114 15 (const_int 0 [0]) "uart.c":311:1 311 {nop}
     (nil))
(insn 114 119 117 15 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:126 <retval> ] [126])) "uart.c":311:1 253 {*arm_movsi_insn}
     (nil))
(insn 117 114 141 15 (use (reg/i:SI 0 r0)) "uart.c":311:1 -1
     (nil))
(note 141 117 142 15 NOTE_INSN_EPILOGUE_BEG)
(insn 142 141 143 15 (unspec_volatile [
            (const_int 0 [0])
        ] VUNSPEC_BLOCKAGE) "uart.c":311:1 -1
     (nil))
(insn/f 143 142 144 15 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 11 fp)
            (const_int -4 [0xfffffffffffffffc]))) "uart.c":311:1 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 13 sp)
            (plus:SI (reg/f:SI 11 fp)
                (const_int -4 [0xfffffffffffffffc])))
        (nil)))
(insn 144 143 145 15 (unspec:SI [
            (reg/f:SI 13 sp)
        ] UNSPEC_REGISTER_USE) "uart.c":311:1 -1
     (nil))
(insn/f 145 144 146 15 (parallel [
            (set/f (reg/f:SI 13 sp)
                (plus:SI (reg/f:SI 13 sp)
                    (const_int 8 [0x8])))
            (set/f (reg/f:SI 11 fp)
                (mem/c:SI (reg/f:SI 13 sp) [7  S4 A32]))
            (set/f (reg:SI 14 lr)
                (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                        (const_int 4 [0x4])) [7  S4 A32]))
        ]) "uart.c":311:1 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 13 sp)
            (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])))
        (expr_list:REG_CFA_RESTORE (reg:SI 14 lr)
            (expr_list:REG_CFA_RESTORE (reg/f:SI 11 fp)
                (nil)))))
(insn/f 146 145 147 15 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 16 [0x10]))) "uart.c":311:1 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 13 sp)
            (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])))
        (expr_list:REG_CFA_RESTORE (reg:SI 3 r3)
            (expr_list:REG_CFA_RESTORE (reg:SI 2 r2)
                (expr_list:REG_CFA_RESTORE (reg:SI 1 r1)
                    (expr_list:REG_CFA_RESTORE (reg:SI 0 r0)
                        (nil)))))))
(jump_insn 147 146 148 15 (simple_return) "uart.c":311:1 -1
     (nil)
 -> simple_return)
;;  succ:       EXIT [always] 
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp]

(barrier 148 147 134)
(note 134 148 0 NOTE_INSN_DELETED)

;; Function sgetline (sgetline, funcdef_no=15, decl_uid=4607, cgraph_uid=16, symbol_order=17)



sgetline

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 11 [fp] 13 [sp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  regs ever live 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={5d,5u} r1={2d} r2={5d,3u} r3={8d,7u} r11={3d,17u} r12={2d} r13={5d,18u} r14={2d,2u} r15={2d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={2d,1u} r101={1d} r102={1d,1u} r104={1d} r105={1d} r106={1d} 
;;    total ref usage 179{125d,54u,0e} in 32{31 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp]
;; lr  def 	 3 [r3]
(note 4 1 42 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 42 4 43 2 (parallel [
            (set (mem/c:BLK (pre_modify:SI (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -8 [0xfffffffffffffff8]))) [7  A8])
                (unspec:BLK [
                        (reg/f:SI 11 fp)
                    ] UNSPEC_PUSH_MULT))
            (use (reg:SI 14 lr))
        ]) "uart.c":314:1 -1
     (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                (set/f (reg/f:SI 13 sp)
                    (plus:SI (reg/f:SI 13 sp)
                        (const_int -8 [0xfffffffffffffff8])))
                (set/f (mem/c:SI (reg/f:SI 13 sp) [7  S4 A32])
                    (reg/f:SI 11 fp))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 4 [0x4])) [7  S4 A32])
                    (reg:SI 14 lr))
            ])
        (nil)))
(insn/f 43 42 44 2 (set (reg/f:SI 11 fp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 4 [0x4]))) "uart.c":314:1 -1
     (nil))
(insn/f 44 43 45 2 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -16 [0xfffffffffffffff0]))) "uart.c":314:1 -1
     (nil))
(insn 45 44 46 2 (set (mem:BLK (scratch) [0  A8])
        (unspec:BLK [
                (reg/f:SI 13 sp)
                (reg/f:SI 11 fp)
            ] UNSPEC_PRLG_STK)) "uart.c":314:1 -1
     (nil))
(note 46 45 2 2 NOTE_INSN_PROLOGUE_END)
(insn 2 46 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [2 s+0 S4 A32])
        (reg:SI 0 r0 [ s ])) "uart.c":314:1 253 {*arm_movsi_insn}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:SI 3 r3 [116])
        (symbol_ref:SI ("uart") [flags 0x2]  <var_decl 0x7f19cfd52ab0 uart>)) "uart.c":316:9 253 {*arm_movsi_insn}
     (nil))
(insn 7 6 39 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A32])
        (reg/f:SI 3 r3 [116])) "uart.c":316:9 253 {*arm_movsi_insn}
     (nil))
(jump_insn 39 7 40 2 (set (pc)
        (label_ref 16)) "uart.c":318:9 284 {*arm_jump}
     (nil)
 -> 16)
;;  succ:       4 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 40 39 23)
;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
(code_label 23 40 10 3 82 (nil) [1 uses])
(note 10 23 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg/f:SI 3 r3 [orig:113 s.6_1 ] [113])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [2 s+0 S4 A32])) "uart.c":319:7 253 {*arm_movsi_insn}
     (nil))
(insn 12 11 13 3 (set (reg:SI 2 r2 [117])
        (plus:SI (reg/f:SI 3 r3 [orig:113 s.6_1 ] [113])
            (const_int 1 [0x1]))) "uart.c":319:7 7 {*arm_addsi3}
     (nil))
(insn 13 12 14 3 (set (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [2 s+0 S4 A32])
        (reg:SI 2 r2 [117])) "uart.c":319:7 253 {*arm_movsi_insn}
     (nil))
(insn 14 13 15 3 (set (reg:QI 2 r2 [118])
        (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                (const_int -9 [0xfffffffffffffff7])) [0 c+0 S1 A8])) "uart.c":319:10 263 {*arm_movqi_insn}
     (nil))
(insn 15 14 16 3 (set (mem:QI (reg/f:SI 3 r3 [orig:113 s.6_1 ] [113]) [0 *s.6_1+0 S1 A8])
        (reg:QI 2 r2 [118])) "uart.c":319:10 263 {*arm_movqi_insn}
     (nil))
;;  succ:       4 (FALLTHRU,DFS_BACK)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU,DFS_BACK)
;;              2 [always] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(code_label 16 15 17 4 81 (nil) [1 uses])
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 4 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A32])) "uart.c":318:13 253 {*arm_movsi_insn}
     (nil))
(call_insn 19 18 20 4 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sgetc") [flags 0x3]  <function_decl 0x7f19cf077500 sgetc>) [0 sgetc S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "uart.c":318:13 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 20 19 22 4 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (reg:SI 0 r0)) "uart.c":318:13 253 {*arm_movsi_insn}
     (nil))
(insn 22 20 24 4 (set (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                (const_int -9 [0xfffffffffffffff7])) [0 c+0 S1 A8])
        (reg:QI 3 r3 [119])) "uart.c":318:12 263 {*arm_movqi_insn}
     (nil))
(insn 24 22 25 4 (set (reg:SI 3 r3 [120])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -9 [0xfffffffffffffff7])) [0 c+0 S1 A8]))) "uart.c":318:24 175 {*arm_zero_extendqisi2}
     (nil))
(insn 25 24 26 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [120])
            (const_int 13 [0xd]))) "uart.c":318:24 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 26 25 27 4 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) "uart.c":318:24 273 {arm_cond_branch}
     (nil)
 -> 23)
;;  succ:       3
;;              5 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3]
(note 27 26 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 5 (set (reg/f:SI 3 r3 [121])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [2 s+0 S4 A32])) "uart.c":321:5 253 {*arm_movsi_insn}
     (nil))
(insn 29 28 31 5 (set (reg:SI 2 r2 [122])
        (const_int 0 [0])) "uart.c":321:5 253 {*arm_movsi_insn}
     (nil))
(insn 31 29 34 5 (set (mem:QI (reg/f:SI 3 r3 [121]) [0 *s_3+0 S1 A8])
        (reg:QI 2 r2 [123])) "uart.c":321:5 263 {*arm_movqi_insn}
     (nil))
(insn 34 31 35 5 (clobber (reg/i:SI 0 r0)) "uart.c":322:1 -1
     (nil))
(insn 35 34 38 5 (clobber (reg:SI 3 r3 [orig:115 <retval> ] [115])) "uart.c":322:1 -1
     (nil))
(insn 38 35 33 5 (const_int 0 [0]) "uart.c":322:1 311 {nop}
     (nil))
(insn 33 38 36 5 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:115 <retval> ] [115])) "uart.c":322:1 253 {*arm_movsi_insn}
     (nil))
(insn 36 33 47 5 (use (reg/i:SI 0 r0)) "uart.c":322:1 -1
     (nil))
(note 47 36 48 5 NOTE_INSN_EPILOGUE_BEG)
(insn 48 47 49 5 (unspec_volatile [
            (const_int 0 [0])
        ] VUNSPEC_BLOCKAGE) "uart.c":322:1 -1
     (nil))
(insn/f 49 48 50 5 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 11 fp)
            (const_int -4 [0xfffffffffffffffc]))) "uart.c":322:1 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 13 sp)
            (plus:SI (reg/f:SI 11 fp)
                (const_int -4 [0xfffffffffffffffc])))
        (nil)))
(insn 50 49 51 5 (unspec:SI [
            (reg/f:SI 13 sp)
        ] UNSPEC_REGISTER_USE) "uart.c":322:1 -1
     (nil))
(jump_insn 51 50 52 5 (parallel [
            (return)
            (set/f (reg/f:SI 13 sp)
                (plus:SI (reg/f:SI 13 sp)
                    (const_int 8 [0x8])))
            (set/f (reg/f:SI 11 fp)
                (mem/c:SI (reg/f:SI 13 sp) [7  S4 A32]))
            (set/f (reg:SI 15 pc)
                (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                        (const_int 4 [0x4])) [7  S4 A32]))
        ]) "uart.c":322:1 -1
     (expr_list:REG_CFA_RESTORE (reg/f:SI 11 fp)
        (nil))
 -> return)
;;  succ:       EXIT [always] 
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp]

(barrier 52 51 41)
(note 41 52 0 NOTE_INSN_DELETED)

;; Function usgets (usgets, funcdef_no=16, decl_uid=4616, cgraph_uid=17, symbol_order=18)



usgets

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 11 [fp] 13 [sp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={6d,7u} r1={3d,1u} r2={6d,3u} r3={8d,6u} r11={3d,18u} r12={4d} r13={5d,19u} r14={3d,2u} r15={3d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={3d,1u} r101={2d} r102={1d,1u} r104={2d} r105={2d} r106={2d} 
;;    total ref usage 279{221d,58u,0e} in 31{29 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp]
;; lr  def 	
(note 5 1 46 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 46 5 47 2 (parallel [
            (set (mem/c:BLK (pre_modify:SI (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -8 [0xfffffffffffffff8]))) [7  A8])
                (unspec:BLK [
                        (reg/f:SI 11 fp)
                    ] UNSPEC_PUSH_MULT))
            (use (reg:SI 14 lr))
        ]) "uart.c":325:1 -1
     (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                (set/f (reg/f:SI 13 sp)
                    (plus:SI (reg/f:SI 13 sp)
                        (const_int -8 [0xfffffffffffffff8])))
                (set/f (mem/c:SI (reg/f:SI 13 sp) [7  S4 A32])
                    (reg/f:SI 11 fp))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 4 [0x4])) [7  S4 A32])
                    (reg:SI 14 lr))
            ])
        (nil)))
(insn/f 47 46 48 2 (set (reg/f:SI 11 fp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 4 [0x4]))) "uart.c":325:1 -1
     (nil))
(insn/f 48 47 49 2 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -16 [0xfffffffffffffff0]))) "uart.c":325:1 -1
     (nil))
(insn 49 48 50 2 (set (mem:BLK (scratch) [0  A8])
        (unspec:BLK [
                (reg/f:SI 13 sp)
                (reg/f:SI 11 fp)
            ] UNSPEC_PRLG_STK)) "uart.c":325:1 -1
     (nil))
(note 50 49 2 2 NOTE_INSN_PROLOGUE_END)
(insn 2 50 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [6 up+0 S4 A32])
        (reg:SI 0 r0 [ up ])) "uart.c":325:1 253 {*arm_movsi_insn}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -20 [0xffffffffffffffec])) [2 buf+0 S4 A32])
        (reg:SI 1 r1 [ buf ])) "uart.c":325:1 253 {*arm_movsi_insn}
     (nil))
(note 4 3 43 2 NOTE_INSN_FUNCTION_BEG)
(jump_insn 43 4 44 2 (set (pc)
        (label_ref 15)) "uart.c":328:8 284 {*arm_jump}
     (nil)
 -> 15)
;;  succ:       4 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 44 43 22)
;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
(code_label 22 44 9 3 87 (nil) [1 uses])
(note 9 22 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg/f:SI 3 r3 [orig:113 buf.7_1 ] [113])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -20 [0xffffffffffffffec])) [2 buf+0 S4 A32])) "uart.c":329:9 253 {*arm_movsi_insn}
     (nil))
(insn 11 10 12 3 (set (reg:SI 2 r2 [117])
        (plus:SI (reg/f:SI 3 r3 [orig:113 buf.7_1 ] [113])
            (const_int 1 [0x1]))) "uart.c":329:9 7 {*arm_addsi3}
     (nil))
(insn 12 11 13 3 (set (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -20 [0xffffffffffffffec])) [2 buf+0 S4 A32])
        (reg:SI 2 r2 [117])) "uart.c":329:9 253 {*arm_movsi_insn}
     (nil))
(insn 13 12 14 3 (set (reg:QI 2 r2 [118])
        (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                (const_int -5 [0xfffffffffffffffb])) [0 c+0 S1 A8])) "uart.c":329:12 263 {*arm_movqi_insn}
     (nil))
(insn 14 13 15 3 (set (mem:QI (reg/f:SI 3 r3 [orig:113 buf.7_1 ] [113]) [0 *buf.7_1+0 S1 A8])
        (reg:QI 2 r2 [118])) "uart.c":329:12 263 {*arm_movqi_insn}
     (nil))
;;  succ:       4 (FALLTHRU,DFS_BACK)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU,DFS_BACK)
;;              2 [always] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(code_label 15 14 16 4 86 (nil) [1 uses])
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [6 up+0 S4 A32])) "uart.c":328:12 253 {*arm_movsi_insn}
     (nil))
(call_insn 18 17 19 4 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sgetc") [flags 0x3]  <function_decl 0x7f19cf077500 sgetc>) [0 sgetc S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "uart.c":328:12 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 19 18 21 4 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (reg:SI 0 r0)) "uart.c":328:12 253 {*arm_movsi_insn}
     (nil))
(insn 21 19 23 4 (set (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                (const_int -5 [0xfffffffffffffffb])) [0 c+0 S1 A8])
        (reg:QI 3 r3 [119])) "uart.c":328:11 263 {*arm_movqi_insn}
     (nil))
(insn 23 21 24 4 (set (reg:SI 3 r3 [120])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -5 [0xfffffffffffffffb])) [0 c+0 S1 A8]))) "uart.c":328:23 175 {*arm_zero_extendqisi2}
     (nil))
(insn 24 23 25 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [120])
            (const_int 13 [0xd]))) "uart.c":328:23 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 25 24 26 4 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) "uart.c":328:23 273 {arm_cond_branch}
     (nil)
 -> 22)
;;  succ:       3
;;              5 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(note 26 25 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 5 (set (reg/f:SI 3 r3 [121])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -20 [0xffffffffffffffec])) [2 buf+0 S4 A32])) "uart.c":331:8 253 {*arm_movsi_insn}
     (nil))
(insn 28 27 30 5 (set (reg:SI 2 r2 [122])
        (const_int 0 [0])) "uart.c":331:8 253 {*arm_movsi_insn}
     (nil))
(insn 30 28 31 5 (set (mem:QI (reg/f:SI 3 r3 [121]) [0 *buf_3+0 S1 A8])
        (reg:QI 2 r2 [123])) "uart.c":331:8 263 {*arm_movqi_insn}
     (nil))
(insn 31 30 32 5 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -20 [0xffffffffffffffec])) [2 buf+0 S4 A32])) "uart.c":332:10 253 {*arm_movsi_insn}
     (nil))
(call_insn 32 31 33 5 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kstrlen") [flags 0x41]  <function_decl 0x7f19cf085100 kstrlen>) [0 kstrlen S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "uart.c":332:10 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 33 32 40 5 (set (reg:SI 3 r3 [orig:115 _12 ] [115])
        (reg:SI 0 r0)) "uart.c":332:10 253 {*arm_movsi_insn}
     (nil))
(insn 40 33 41 5 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:116 <retval> ] [116])) "uart.c":333:1 253 {*arm_movsi_insn}
     (nil))
(insn 41 40 51 5 (use (reg/i:SI 0 r0)) "uart.c":333:1 -1
     (nil))
(note 51 41 52 5 NOTE_INSN_EPILOGUE_BEG)
(insn 52 51 53 5 (unspec_volatile [
            (const_int 0 [0])
        ] VUNSPEC_BLOCKAGE) "uart.c":333:1 -1
     (nil))
(insn/f 53 52 54 5 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 11 fp)
            (const_int -4 [0xfffffffffffffffc]))) "uart.c":333:1 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 13 sp)
            (plus:SI (reg/f:SI 11 fp)
                (const_int -4 [0xfffffffffffffffc])))
        (nil)))
(insn 54 53 55 5 (unspec:SI [
            (reg/f:SI 13 sp)
        ] UNSPEC_REGISTER_USE) "uart.c":333:1 -1
     (nil))
(jump_insn 55 54 56 5 (parallel [
            (return)
            (set/f (reg/f:SI 13 sp)
                (plus:SI (reg/f:SI 13 sp)
                    (const_int 8 [0x8])))
            (set/f (reg/f:SI 11 fp)
                (mem/c:SI (reg/f:SI 13 sp) [7  S4 A32]))
            (set/f (reg:SI 15 pc)
                (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                        (const_int 4 [0x4])) [7  S4 A32]))
        ]) "uart.c":333:1 -1
     (expr_list:REG_CFA_RESTORE (reg/f:SI 11 fp)
        (nil))
 -> return)
;;  succ:       EXIT [always] 
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp]

(barrier 56 55 45)
(note 45 56 0 NOTE_INSN_DELETED)
