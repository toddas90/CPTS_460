
;; Function do_command (do_command, funcdef_no=0, decl_uid=4478, cgraph_uid=1, symbol_order=1)


3 basic blocks, 2 edges.
;; basic block 0, loop depth 0, maybe hot
;;  prev block (nil), next block 2, flags: (RTL)
;;  pred:      
;;  succ:       2 (FALLTHRU)

;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 cmd+0 S4 A32])
        (reg:SI 0 r0 [ cmd ])) "sdc.c":70:1 253 {*arm_movsi_insn}
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [1 arg+0 S4 A32])
        (reg:SI 1 r1 [ arg ])) "sdc.c":70:1 253 {*arm_movsi_insn}
     (nil))
(insn 4 3 5 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [1 resp+0 S4 A32])
        (reg:SI 2 r2 [ resp ])) "sdc.c":70:1 253 {*arm_movsi_insn}
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:SI 125)
        (symbol_ref:SI ("base") [flags 0x2]  <var_decl 0x7f2800e6a2d0 base>)) "sdc.c":71:17 253 {*arm_movsi_insn}
     (nil))
(insn 9 8 10 2 (set (reg:SI 113 [ base.0_1 ])
        (mem/c:SI (reg/f:SI 125) [1 base+0 S4 A32])) "sdc.c":71:17 253 {*arm_movsi_insn}
     (nil))
(insn 10 9 11 2 (set (reg:SI 114 [ _2 ])
        (plus:SI (reg:SI 113 [ base.0_1 ])
            (const_int 8 [0x8]))) "sdc.c":71:17 7 {*arm_addsi3}
     (nil))
(insn 11 10 12 2 (set (reg/f:SI 115 [ _3 ])
        (reg:SI 114 [ _2 ])) "sdc.c":71:4 253 {*arm_movsi_insn}
     (nil))
(insn 12 11 13 2 (set (reg:SI 116 [ arg.1_4 ])
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [1 arg+0 S4 A32])) "sdc.c":71:31 253 {*arm_movsi_insn}
     (nil))
(insn 13 12 14 2 (set (mem:SI (reg/f:SI 115 [ _3 ]) [1 *_3+0 S4 A32])
        (reg:SI 116 [ arg.1_4 ])) "sdc.c":71:29 253 {*arm_movsi_insn}
     (nil))
(insn 14 13 15 2 (set (reg:SI 126)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [1 resp+0 S4 A32])) "sdc.c":72:44 253 {*arm_movsi_insn}
     (nil))
(insn 15 14 16 2 (set (reg:SI 117 [ _5 ])
        (ashift:SI (reg:SI 126)
            (const_int 6 [0x6]))) "sdc.c":72:44 147 {*arm_shiftsi3}
     (nil))
(insn 16 15 17 2 (set (reg:SI 118 [ _6 ])
        (ior:SI (reg:SI 117 [ _5 ])
            (const_int 1024 [0x400]))) "sdc.c":72:37 106 {*iorsi3_insn}
     (nil))
(insn 17 16 18 2 (set (reg:SI 127)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 cmd+0 S4 A32])) "sdc.c":72:49 253 {*arm_movsi_insn}
     (nil))
(insn 18 17 19 2 (set (reg:SI 119 [ _7 ])
        (ior:SI (reg:SI 118 [ _6 ])
            (reg:SI 127))) "sdc.c":72:49 106 {*iorsi3_insn}
     (nil))
(insn 19 18 20 2 (set (reg/f:SI 128)
        (symbol_ref:SI ("base") [flags 0x2]  <var_decl 0x7f2800e6a2d0 base>)) "sdc.c":72:17 253 {*arm_movsi_insn}
     (nil))
(insn 20 19 21 2 (set (reg:SI 120 [ base.2_8 ])
        (mem/c:SI (reg/f:SI 128) [1 base+0 S4 A32])) "sdc.c":72:17 253 {*arm_movsi_insn}
     (nil))
(insn 21 20 22 2 (set (reg:SI 121 [ _9 ])
        (plus:SI (reg:SI 120 [ base.2_8 ])
            (const_int 12 [0xc]))) "sdc.c":72:17 7 {*arm_addsi3}
     (nil))
(insn 22 21 23 2 (set (reg/f:SI 122 [ _10 ])
        (reg:SI 121 [ _9 ])) "sdc.c":72:4 253 {*arm_movsi_insn}
     (nil))
(insn 23 22 24 2 (set (reg:SI 123 [ _11 ])
        (reg:SI 119 [ _7 ])) "sdc.c":72:49 253 {*arm_movsi_insn}
     (nil))
(insn 24 23 27 2 (set (mem:SI (reg/f:SI 122 [ _10 ]) [1 *_10+0 S4 A32])
        (reg:SI 123 [ _11 ])) "sdc.c":72:29 253 {*arm_movsi_insn}
     (nil))
(insn 27 24 28 2 (clobber (reg/i:SI 0 r0)) "sdc.c":74:1 -1
     (nil))
(insn 28 27 31 2 (clobber (reg:SI 124 [ <retval> ])) "sdc.c":74:1 -1
     (nil))
(insn 31 28 26 2 (const_int 0 [0]) "sdc.c":74:1 311 {nop}
     (nil))
(insn 26 31 29 2 (set (reg/i:SI 0 r0)
        (reg:SI 124 [ <retval> ])) "sdc.c":74:1 253 {*arm_movsi_insn}
     (nil))
(insn 29 26 0 2 (use (reg/i:SI 0 r0)) "sdc.c":74:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)

;; basic block 1, loop depth 0, maybe hot
;;  prev block 2, next block (nil), flags: (REACHABLE, RTL)
;;  pred:       2 [always]  (FALLTHRU)
;;  succ:      




try_optimize_cfg iteration 1

;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 cmd+0 S4 A32])
        (reg:SI 0 r0 [ cmd ])) "sdc.c":70:1 253 {*arm_movsi_insn}
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [1 arg+0 S4 A32])
        (reg:SI 1 r1 [ arg ])) "sdc.c":70:1 253 {*arm_movsi_insn}
     (nil))
(insn 4 3 5 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [1 resp+0 S4 A32])
        (reg:SI 2 r2 [ resp ])) "sdc.c":70:1 253 {*arm_movsi_insn}
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:SI 125)
        (symbol_ref:SI ("base") [flags 0x2]  <var_decl 0x7f2800e6a2d0 base>)) "sdc.c":71:17 253 {*arm_movsi_insn}
     (nil))
(insn 9 8 10 2 (set (reg:SI 113 [ base.0_1 ])
        (mem/c:SI (reg/f:SI 125) [1 base+0 S4 A32])) "sdc.c":71:17 253 {*arm_movsi_insn}
     (nil))
(insn 10 9 11 2 (set (reg:SI 114 [ _2 ])
        (plus:SI (reg:SI 113 [ base.0_1 ])
            (const_int 8 [0x8]))) "sdc.c":71:17 7 {*arm_addsi3}
     (nil))
(insn 11 10 12 2 (set (reg/f:SI 115 [ _3 ])
        (reg:SI 114 [ _2 ])) "sdc.c":71:4 253 {*arm_movsi_insn}
     (nil))
(insn 12 11 13 2 (set (reg:SI 116 [ arg.1_4 ])
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [1 arg+0 S4 A32])) "sdc.c":71:31 253 {*arm_movsi_insn}
     (nil))
(insn 13 12 14 2 (set (mem:SI (reg/f:SI 115 [ _3 ]) [1 *_3+0 S4 A32])
        (reg:SI 116 [ arg.1_4 ])) "sdc.c":71:29 253 {*arm_movsi_insn}
     (nil))
(insn 14 13 15 2 (set (reg:SI 126)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [1 resp+0 S4 A32])) "sdc.c":72:44 253 {*arm_movsi_insn}
     (nil))
(insn 15 14 16 2 (set (reg:SI 117 [ _5 ])
        (ashift:SI (reg:SI 126)
            (const_int 6 [0x6]))) "sdc.c":72:44 147 {*arm_shiftsi3}
     (nil))
(insn 16 15 17 2 (set (reg:SI 118 [ _6 ])
        (ior:SI (reg:SI 117 [ _5 ])
            (const_int 1024 [0x400]))) "sdc.c":72:37 106 {*iorsi3_insn}
     (nil))
(insn 17 16 18 2 (set (reg:SI 127)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 cmd+0 S4 A32])) "sdc.c":72:49 253 {*arm_movsi_insn}
     (nil))
(insn 18 17 19 2 (set (reg:SI 119 [ _7 ])
        (ior:SI (reg:SI 118 [ _6 ])
            (reg:SI 127))) "sdc.c":72:49 106 {*iorsi3_insn}
     (nil))
(insn 19 18 20 2 (set (reg/f:SI 128)
        (symbol_ref:SI ("base") [flags 0x2]  <var_decl 0x7f2800e6a2d0 base>)) "sdc.c":72:17 253 {*arm_movsi_insn}
     (nil))
(insn 20 19 21 2 (set (reg:SI 120 [ base.2_8 ])
        (mem/c:SI (reg/f:SI 128) [1 base+0 S4 A32])) "sdc.c":72:17 253 {*arm_movsi_insn}
     (nil))
(insn 21 20 22 2 (set (reg:SI 121 [ _9 ])
        (plus:SI (reg:SI 120 [ base.2_8 ])
            (const_int 12 [0xc]))) "sdc.c":72:17 7 {*arm_addsi3}
     (nil))
(insn 22 21 23 2 (set (reg/f:SI 122 [ _10 ])
        (reg:SI 121 [ _9 ])) "sdc.c":72:4 253 {*arm_movsi_insn}
     (nil))
(insn 23 22 24 2 (set (reg:SI 123 [ _11 ])
        (reg:SI 119 [ _7 ])) "sdc.c":72:49 253 {*arm_movsi_insn}
     (nil))
(insn 24 23 27 2 (set (mem:SI (reg/f:SI 122 [ _10 ]) [1 *_10+0 S4 A32])
        (reg:SI 123 [ _11 ])) "sdc.c":72:29 253 {*arm_movsi_insn}
     (nil))
(insn 27 24 28 2 (clobber (reg/i:SI 0 r0)) "sdc.c":74:1 -1
     (nil))
(insn 28 27 31 2 (clobber (reg:SI 124 [ <retval> ])) "sdc.c":74:1 -1
     (nil))
(insn 31 28 26 2 (const_int 0 [0]) "sdc.c":74:1 311 {nop}
     (nil))
(insn 26 31 29 2 (set (reg/i:SI 0 r0)
        (reg:SI 124 [ <retval> ])) "sdc.c":74:1 253 {*arm_movsi_insn}
     (nil))
(insn 29 26 0 2 (use (reg/i:SI 0 r0)) "sdc.c":74:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function sdc_handler (sdc_handler, funcdef_no=1, decl_uid=4488, cgraph_uid=2, symbol_order=10)


21 basic blocks, 30 edges.
;; basic block 0, loop depth 0, maybe hot
;;  prev block (nil), next block 2, flags: (RTL)
;;  pred:      
;;  succ:       2 (FALLTHRU)

;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 154)
        (symbol_ref:SI ("base") [flags 0x2]  <var_decl 0x7f2800e6a2d0 base>)) "sdc.c":94:26 253 {*arm_movsi_insn}
     (nil))
(insn 6 5 7 2 (set (reg:SI 113 [ base.3_1 ])
        (mem/c:SI (reg/f:SI 154) [1 base+0 S4 A32])) "sdc.c":94:26 253 {*arm_movsi_insn}
     (nil))
(insn 7 6 8 2 (set (reg:SI 114 [ _2 ])
        (plus:SI (reg:SI 113 [ base.3_1 ])
            (const_int 52 [0x34]))) "sdc.c":94:26 7 {*arm_addsi3}
     (nil))
(insn 8 7 9 2 (set (reg/f:SI 115 [ _3 ])
        (reg:SI 114 [ _2 ])) "sdc.c":94:13 253 {*arm_movsi_insn}
     (nil))
(insn 9 8 10 2 (set (reg:SI 155)
        (mem:SI (reg/f:SI 115 [ _3 ]) [1 *_3+0 S4 A32])) "sdc.c":94:10 253 {*arm_movsi_insn}
     (nil))
(insn 10 9 11 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [1 status+0 S4 A64])
        (reg:SI 155)) "sdc.c":94:10 253 {*arm_movsi_insn}
     (nil))
(insn 11 10 12 2 (set (reg/f:SI 156)
        (symbol_ref:SI ("color") [flags 0x40]  <var_decl 0x7f2801b4c480 color>)) "sdc.c":95:12 253 {*arm_movsi_insn}
     (nil))
(insn 12 11 13 2 (set (reg:SI 157)
        (mem/c:SI (reg/f:SI 156) [1 color+0 S4 A32])) "sdc.c":95:12 253 {*arm_movsi_insn}
     (nil))
(insn 13 12 14 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [1 oldcolor+0 S4 A32])
        (reg:SI 157)) "sdc.c":95:12 253 {*arm_movsi_insn}
     (nil))
(insn 14 13 15 2 (set (reg:SI 158)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [1 status+0 S4 A64])) "sdc.c":97:14 253 {*arm_movsi_insn}
     (nil))
(insn 15 14 16 2 (set (reg:SI 116 [ _4 ])
        (and:SI (reg:SI 158)
            (const_int 131072 [0x20000]))) "sdc.c":97:14 90 {*arm_andsi3_insn}
     (nil))
(insn 16 15 17 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 116 [ _4 ])
            (const_int 0 [0]))) "sdc.c":97:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 17 16 18 2 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 104)
            (pc))) "sdc.c":97:6 273 {arm_cond_branch}
     (nil)
 -> 104)
;;  succ:       3 (FALLTHRU)
;;              11

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 18 17 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 3 (set (reg/f:SI 159)
        (symbol_ref:SI ("color") [flags 0x40]  <var_decl 0x7f2801b4c480 color>)) "sdc.c":98:12 253 {*arm_movsi_insn}
     (nil))
(insn 20 19 21 3 (set (reg:SI 160)
        (const_int 2 [0x2])) "sdc.c":98:12 253 {*arm_movsi_insn}
     (nil))
(insn 21 20 22 3 (set (mem/c:SI (reg/f:SI 159) [1 color+0 S4 A32])
        (reg:SI 160)) "sdc.c":98:12 253 {*arm_movsi_insn}
     (nil))
(insn 22 21 23 3 (set (reg/f:SI 161)
        (symbol_ref:SI ("rxbuf") [flags 0x2]  <var_decl 0x7f2800e6a360 rxbuf>)) "sdc.c":100:9 253 {*arm_movsi_insn}
     (nil))
(insn 23 22 24 3 (set (reg/f:SI 162)
        (mem/f/c:SI (reg/f:SI 161) [3 rxbuf+0 S4 A32])) "sdc.c":100:9 253 {*arm_movsi_insn}
     (nil))
(insn 24 23 25 3 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A64])
        (reg/f:SI 162)) "sdc.c":100:9 253 {*arm_movsi_insn}
     (nil))
(insn 25 24 26 3 (set (reg:SI 164)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [1 status+0 S4 A64])) "sdc.c":101:17 253 {*arm_movsi_insn}
     (nil))
(insn 26 25 27 3 (set (reg:SI 163)
        (and:SI (reg:SI 164)
            (const_int 42 [0x2a]))) "sdc.c":101:17 90 {*arm_andsi3_insn}
     (nil))
(insn 27 26 28 3 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 status_err+0 S4 A32])
        (reg:SI 163)) "sdc.c":101:17 253 {*arm_movsi_insn}
     (nil))
(insn 28 27 29 3 (set (reg:SI 165)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 status_err+0 S4 A32])) "sdc.c":102:9 253 {*arm_movsi_insn}
     (nil))
(insn 29 28 30 3 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 165)
            (const_int 0 [0]))) "sdc.c":102:9 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 30 29 31 3 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 83)
            (pc))) "sdc.c":102:9 273 {arm_cond_branch}
     (nil)
 -> 83)
;;  succ:       4 (FALLTHRU)
;;              9

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       3 (FALLTHRU)
(note 31 30 32 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 4 (set (reg/f:SI 166)
        (symbol_ref:SI ("rxcount") [flags 0x2]  <var_decl 0x7f2800e6a480 rxcount>)) "sdc.c":102:22 253 {*arm_movsi_insn}
     (nil))
(insn 33 32 34 4 (set (reg:SI 117 [ rxcount.4_5 ])
        (mem/c:SI (reg/f:SI 166) [1 rxcount+0 S4 A32])) "sdc.c":102:22 253 {*arm_movsi_insn}
     (nil))
(insn 34 33 35 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 117 [ rxcount.4_5 ])
            (const_int 0 [0]))) "sdc.c":102:22 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 35 34 36 4 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 83)
            (pc))) "sdc.c":102:22 273 {arm_cond_branch}
     (nil)
 -> 83)
;;  succ:       5 (FALLTHRU)
;;              9

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 36 35 37 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 5 (set (reg:SI 167)
        (const_int 0 [0])) "sdc.c":104:16 253 {*arm_movsi_insn}
     (nil))
(insn 38 37 57 5 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
        (reg:SI 167)) "sdc.c":104:16 253 {*arm_movsi_insn}
     (nil))
;;  succ:       7 [always]  (FALLTHRU)

;; basic block 6, loop depth 1, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
(code_label 57 38 41 6 8 (nil) [1 uses])
(note 41 57 42 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 6 (set (reg/f:SI 168)
        (symbol_ref:SI ("base") [flags 0x2]  <var_decl 0x7f2800e6a2d0 base>)) "sdc.c":105:38 253 {*arm_movsi_insn}
     (nil))
(insn 43 42 44 6 (set (reg:SI 118 [ base.5_6 ])
        (mem/c:SI (reg/f:SI 168) [1 base+0 S4 A32])) "sdc.c":105:38 253 {*arm_movsi_insn}
     (nil))
(insn 44 43 45 6 (set (reg:SI 119 [ _7 ])
        (plus:SI (reg:SI 118 [ base.5_6 ])
            (const_int 128 [0x80]))) "sdc.c":105:38 7 {*arm_addsi3}
     (nil))
(insn 45 44 46 6 (set (reg/f:SI 120 [ _8 ])
        (reg:SI 119 [ _7 ])) "sdc.c":105:25 253 {*arm_movsi_insn}
     (nil))
(insn 46 45 47 6 (set (reg:SI 121 [ i.6_9 ])
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "sdc.c":105:17 253 {*arm_movsi_insn}
     (nil))
(insn 47 46 48 6 (set (reg:SI 122 [ _10 ])
        (ashift:SI (reg:SI 121 [ i.6_9 ])
            (const_int 2 [0x2]))) "sdc.c":105:17 147 {*arm_shiftsi3}
     (nil))
(insn 48 47 49 6 (set (reg:SI 169)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A64])) "sdc.c":105:17 253 {*arm_movsi_insn}
     (nil))
(insn 49 48 50 6 (set (reg/f:SI 123 [ _11 ])
        (plus:SI (reg:SI 169)
            (reg:SI 122 [ _10 ]))) "sdc.c":105:17 7 {*arm_addsi3}
     (nil))
(insn 50 49 51 6 (set (reg:SI 124 [ _12 ])
        (mem:SI (reg/f:SI 120 [ _8 ]) [1 *_8+0 S4 A32])) "sdc.c":105:24 253 {*arm_movsi_insn}
     (nil))
(insn 51 50 52 6 (set (mem:SI (reg/f:SI 123 [ _11 ]) [1 *_11+0 S4 A32])
        (reg:SI 124 [ _12 ])) "sdc.c":105:22 253 {*arm_movsi_insn}
     (nil))
(insn 52 51 53 6 (set (reg:SI 171)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "sdc.c":104:30 253 {*arm_movsi_insn}
     (nil))
(insn 53 52 54 6 (set (reg:SI 170)
        (plus:SI (reg:SI 171)
            (const_int 1 [0x1]))) "sdc.c":104:30 7 {*arm_addsi3}
     (nil))
(insn 54 53 55 6 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
        (reg:SI 170)) "sdc.c":104:30 253 {*arm_movsi_insn}
     (nil))
;;  succ:       7 (FALLTHRU,DFS_BACK)

;; basic block 7, loop depth 1, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 [always]  (FALLTHRU)
;;              6 (FALLTHRU,DFS_BACK)
(code_label 55 54 56 7 7 (nil) [0 uses])
(note 56 55 60 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 60 56 61 7 (set (reg:SI 172)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "sdc.c":104:23 253 {*arm_movsi_insn}
     (nil))
(insn 61 60 62 7 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 172)
            (const_int 15 [0xf]))) "sdc.c":104:23 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 62 61 63 7 (set (pc)
        (if_then_else (le (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 57)
            (pc))) "sdc.c":104:23 273 {arm_cond_branch}
     (nil)
 -> 57)
;;  succ:       6
;;              8 (FALLTHRU)

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
(note 63 62 64 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 8 (set (reg:SI 174)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A64])) "sdc.c":106:12 253 {*arm_movsi_insn}
     (nil))
(insn 65 64 66 8 (set (reg:SI 173)
        (plus:SI (reg:SI 174)
            (const_int 64 [0x40]))) "sdc.c":106:12 7 {*arm_addsi3}
     (nil))
(insn 66 65 67 8 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A64])
        (reg:SI 173)) "sdc.c":106:12 253 {*arm_movsi_insn}
     (nil))
(insn 67 66 68 8 (set (reg/f:SI 175)
        (symbol_ref:SI ("rxcount") [flags 0x2]  <var_decl 0x7f2800e6a480 rxcount>)) "sdc.c":107:17 253 {*arm_movsi_insn}
     (nil))
(insn 68 67 69 8 (set (reg:SI 125 [ rxcount.7_13 ])
        (mem/c:SI (reg/f:SI 175) [1 rxcount+0 S4 A32])) "sdc.c":107:17 253 {*arm_movsi_insn}
     (nil))
(insn 69 68 70 8 (set (reg:SI 126 [ _14 ])
        (plus:SI (reg:SI 125 [ rxcount.7_13 ])
            (const_int -64 [0xffffffffffffffc0]))) "sdc.c":107:17 7 {*arm_addsi3}
     (nil))
(insn 70 69 71 8 (set (reg/f:SI 176)
        (symbol_ref:SI ("rxcount") [flags 0x2]  <var_decl 0x7f2800e6a480 rxcount>)) "sdc.c":107:17 253 {*arm_movsi_insn}
     (nil))
(insn 71 70 72 8 (set (mem/c:SI (reg/f:SI 176) [1 rxcount+0 S4 A32])
        (reg:SI 126 [ _14 ])) "sdc.c":107:17 253 {*arm_movsi_insn}
     (nil))
(insn 72 71 73 8 (set (reg/f:SI 177)
        (symbol_ref:SI ("rxbuf") [flags 0x2]  <var_decl 0x7f2800e6a360 rxbuf>)) "sdc.c":108:15 253 {*arm_movsi_insn}
     (nil))
(insn 73 72 74 8 (set (reg/f:SI 127 [ rxbuf.8_15 ])
        (mem/f/c:SI (reg/f:SI 177) [3 rxbuf+0 S4 A32])) "sdc.c":108:15 253 {*arm_movsi_insn}
     (nil))
(insn 74 73 75 8 (set (reg/f:SI 128 [ _16 ])
        (plus:SI (reg/f:SI 127 [ rxbuf.8_15 ])
            (const_int 64 [0x40]))) "sdc.c":108:15 7 {*arm_addsi3}
     (nil))
(insn 75 74 76 8 (set (reg/f:SI 178)
        (symbol_ref:SI ("rxbuf") [flags 0x2]  <var_decl 0x7f2800e6a360 rxbuf>)) "sdc.c":108:15 253 {*arm_movsi_insn}
     (nil))
(insn 76 75 77 8 (set (mem/f/c:SI (reg/f:SI 178) [3 rxbuf+0 S4 A32])
        (reg/f:SI 128 [ _16 ])) "sdc.c":108:15 253 {*arm_movsi_insn}
     (nil))
(insn 77 76 78 8 (set (reg/f:SI 179)
        (symbol_ref:SI ("base") [flags 0x2]  <var_decl 0x7f2800e6a2d0 base>)) "sdc.c":109:25 253 {*arm_movsi_insn}
     (nil))
(insn 78 77 79 8 (set (reg:SI 129 [ base.9_17 ])
        (mem/c:SI (reg/f:SI 179) [1 base+0 S4 A32])) "sdc.c":109:25 253 {*arm_movsi_insn}
     (nil))
(insn 79 78 80 8 (set (reg:SI 130 [ _18 ])
        (plus:SI (reg:SI 129 [ base.9_17 ])
            (const_int 52 [0x34]))) "sdc.c":109:25 7 {*arm_addsi3}
     (nil))
(insn 80 79 81 8 (set (reg/f:SI 131 [ _19 ])
        (reg:SI 130 [ _18 ])) "sdc.c":109:12 253 {*arm_movsi_insn}
     (nil))
(insn 81 80 82 8 (set (reg:SI 180)
        (mem:SI (reg/f:SI 131 [ _19 ]) [1 *_19+0 S4 A32])) "sdc.c":109:9 253 {*arm_movsi_insn}
     (nil))
(insn 82 81 83 8 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [1 status+0 S4 A64])
        (reg:SI 180)) "sdc.c":109:9 253 {*arm_movsi_insn}
     (nil))
;;  succ:       9 (FALLTHRU)

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       3
;;              4
;;              8 (FALLTHRU)
(code_label 83 82 84 9 6 (nil) [2 uses])
(note 84 83 85 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 86 9 (set (reg/f:SI 181)
        (symbol_ref:SI ("color") [flags 0x40]  <var_decl 0x7f2801b4c480 color>)) "sdc.c":111:12 253 {*arm_movsi_insn}
     (nil))
(insn 86 85 87 9 (set (reg:SI 182)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [1 oldcolor+0 S4 A32])) "sdc.c":111:12 253 {*arm_movsi_insn}
     (nil))
(insn 87 86 88 9 (set (mem/c:SI (reg/f:SI 181) [1 color+0 S4 A32])
        (reg:SI 182)) "sdc.c":111:12 253 {*arm_movsi_insn}
     (nil))
(insn 88 87 89 9 (set (reg/f:SI 183)
        (symbol_ref:SI ("rxcount") [flags 0x2]  <var_decl 0x7f2800e6a480 rxcount>)) "sdc.c":112:18 253 {*arm_movsi_insn}
     (nil))
(insn 89 88 90 9 (set (reg:SI 132 [ rxcount.10_20 ])
        (mem/c:SI (reg/f:SI 183) [1 rxcount+0 S4 A32])) "sdc.c":112:18 253 {*arm_movsi_insn}
     (nil))
(insn 90 89 91 9 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 132 [ rxcount.10_20 ])
            (const_int 0 [0]))) "sdc.c":112:9 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 91 90 92 9 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 194)
            (pc))) "sdc.c":112:9 273 {arm_cond_branch}
     (nil)
 -> 194)
;;  succ:       10 (FALLTHRU)
;;              20

;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 (FALLTHRU)
(note 92 91 93 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 10 (set (reg:SI 2 r2)
        (const_int 21 [0x15])) "sdc.c":113:9 253 {*arm_movsi_insn}
     (nil))
(insn 94 93 95 10 (set (reg:SI 1 r1)
        (const_int 0 [0])) "sdc.c":113:9 253 {*arm_movsi_insn}
     (nil))
(insn 95 94 96 10 (set (reg:SI 0 r0)
        (const_int 12 [0xc])) "sdc.c":113:9 253 {*arm_movsi_insn}
     (nil))
(call_insn 96 95 97 10 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_command") [flags 0x3]  <function_decl 0x7f2800e61e00 do_command>) [0 do_command S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "sdc.c":113:9 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 97 96 98 10 (set (reg/f:SI 184)
        (symbol_ref:SI ("rxdone") [flags 0x2]  <var_decl 0x7f2800e6a5a0 rxdone>)) "sdc.c":114:16 253 {*arm_movsi_insn}
     (nil))
(insn 98 97 99 10 (set (reg:SI 185)
        (const_int 1 [0x1])) "sdc.c":114:16 253 {*arm_movsi_insn}
     (nil))
(insn 99 98 100 10 (set (mem/c:SI (reg/f:SI 184) [1 rxdone+0 S4 A32])
        (reg:SI 185)) "sdc.c":114:16 253 {*arm_movsi_insn}
     (nil))
(insn 100 99 101 10 (set (reg:SI 0 r0)
        (symbol_ref:SI ("rxsem") [flags 0x2]  <var_decl 0x7f2800e6a6c0 rxsem>)) "sdc.c":116:9 253 {*arm_movsi_insn}
     (nil))
(call_insn 101 100 104 10 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("V") [flags 0x41]  <function_decl 0x7f2800e73200 V>) [0 V S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "sdc.c":116:9 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
;;  succ:       20 [always]  (FALLTHRU)

;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
(code_label 104 101 105 11 5 (nil) [1 uses])
(note 105 104 106 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 106 105 107 11 (set (reg:SI 186)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [1 status+0 S4 A64])) "sdc.c":119:19 253 {*arm_movsi_insn}
     (nil))
(insn 107 106 108 11 (set (reg:SI 133 [ _21 ])
        (and:SI (reg:SI 186)
            (const_int 262144 [0x40000]))) "sdc.c":119:19 90 {*arm_andsi3_insn}
     (nil))
(insn 108 107 109 11 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 133 [ _21 ])
            (const_int 0 [0]))) "sdc.c":119:11 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 109 108 110 11 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 194)
            (pc))) "sdc.c":119:11 273 {arm_cond_branch}
     (nil)
 -> 194)
;;  succ:       12 (FALLTHRU)
;;              20

;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       11 (FALLTHRU)
(note 110 109 111 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 112 12 (set (reg/f:SI 187)
        (symbol_ref:SI ("color") [flags 0x40]  <var_decl 0x7f2801b4c480 color>)) "sdc.c":120:11 253 {*arm_movsi_insn}
     (nil))
(insn 112 111 113 12 (set (reg:SI 188)
        (const_int 3 [0x3])) "sdc.c":120:11 253 {*arm_movsi_insn}
     (nil))
(insn 113 112 114 12 (set (mem/c:SI (reg/f:SI 187) [1 color+0 S4 A32])
        (reg:SI 188)) "sdc.c":120:11 253 {*arm_movsi_insn}
     (nil))
(insn 114 113 115 12 (set (reg/f:SI 189)
        (symbol_ref:SI ("txbuf") [flags 0x2]  <var_decl 0x7f2800e6a3f0 txbuf>)) "sdc.c":122:8 253 {*arm_movsi_insn}
     (nil))
(insn 115 114 116 12 (set (reg/f:SI 190)
        (mem/f/c:SI (reg/f:SI 189) [3 txbuf+0 S4 A32])) "sdc.c":122:8 253 {*arm_movsi_insn}
     (nil))
(insn 116 115 117 12 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A64])
        (reg/f:SI 190)) "sdc.c":122:8 253 {*arm_movsi_insn}
     (nil))
(insn 117 116 118 12 (set (reg:SI 192)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [1 status+0 S4 A64])) "sdc.c":123:16 253 {*arm_movsi_insn}
     (nil))
(insn 118 117 119 12 (set (reg:SI 191)
        (and:SI (reg:SI 192)
            (const_int 10 [0xa]))) "sdc.c":123:16 90 {*arm_andsi3_insn}
     (nil))
(insn 119 118 120 12 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 status_err+0 S4 A32])
        (reg:SI 191)) "sdc.c":123:16 253 {*arm_movsi_insn}
     (nil))
(insn 120 119 121 12 (set (reg:SI 193)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 status_err+0 S4 A32])) "sdc.c":125:8 253 {*arm_movsi_insn}
     (nil))
(insn 121 120 122 12 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 193)
            (const_int 0 [0]))) "sdc.c":125:8 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 122 121 123 12 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 175)
            (pc))) "sdc.c":125:8 273 {arm_cond_branch}
     (nil)
 -> 175)
;;  succ:       13 (FALLTHRU)
;;              18

;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       12 (FALLTHRU)
(note 123 122 124 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 124 123 125 13 (set (reg/f:SI 194)
        (symbol_ref:SI ("txcount") [flags 0x2]  <var_decl 0x7f2800e6a510 txcount>)) "sdc.c":125:21 253 {*arm_movsi_insn}
     (nil))
(insn 125 124 126 13 (set (reg:SI 134 [ txcount.11_22 ])
        (mem/c:SI (reg/f:SI 194) [1 txcount+0 S4 A32])) "sdc.c":125:21 253 {*arm_movsi_insn}
     (nil))
(insn 126 125 127 13 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 134 [ txcount.11_22 ])
            (const_int 0 [0]))) "sdc.c":125:21 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 127 126 128 13 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 175)
            (pc))) "sdc.c":125:21 273 {arm_cond_branch}
     (nil)
 -> 175)
;;  succ:       14 (FALLTHRU)
;;              18

;; basic block 14, loop depth 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       13 (FALLTHRU)
(note 128 127 129 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 129 128 130 14 (set (reg:SI 195)
        (const_int 0 [0])) "sdc.c":127:15 253 {*arm_movsi_insn}
     (nil))
(insn 130 129 149 14 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
        (reg:SI 195)) "sdc.c":127:15 253 {*arm_movsi_insn}
     (nil))
;;  succ:       16 [always]  (FALLTHRU)

;; basic block 15, loop depth 1, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL)
;;  pred:       16
(code_label 149 130 133 15 12 (nil) [1 uses])
(note 133 149 134 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 134 133 135 15 (set (reg:SI 135 [ i.12_23 ])
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "sdc.c":128:41 253 {*arm_movsi_insn}
     (nil))
(insn 135 134 136 15 (set (reg:SI 136 [ _24 ])
        (ashift:SI (reg:SI 135 [ i.12_23 ])
            (const_int 2 [0x2]))) "sdc.c":128:41 147 {*arm_shiftsi3}
     (nil))
(insn 136 135 137 15 (set (reg:SI 196)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A64])) "sdc.c":128:41 253 {*arm_movsi_insn}
     (nil))
(insn 137 136 138 15 (set (reg/f:SI 137 [ _25 ])
        (plus:SI (reg:SI 196)
            (reg:SI 136 [ _24 ]))) "sdc.c":128:41 7 {*arm_addsi3}
     (nil))
(insn 138 137 139 15 (set (reg/f:SI 197)
        (symbol_ref:SI ("base") [flags 0x2]  <var_decl 0x7f2800e6a2d0 base>)) "sdc.c":128:26 253 {*arm_movsi_insn}
     (nil))
(insn 139 138 140 15 (set (reg:SI 138 [ base.13_26 ])
        (mem/c:SI (reg/f:SI 197) [1 base+0 S4 A32])) "sdc.c":128:26 253 {*arm_movsi_insn}
     (nil))
(insn 140 139 141 15 (set (reg:SI 139 [ _27 ])
        (plus:SI (reg:SI 138 [ base.13_26 ])
            (const_int 128 [0x80]))) "sdc.c":128:26 7 {*arm_addsi3}
     (nil))
(insn 141 140 142 15 (set (reg/f:SI 140 [ _28 ])
        (reg:SI 139 [ _27 ])) "sdc.c":128:13 253 {*arm_movsi_insn}
     (nil))
(insn 142 141 143 15 (set (reg:SI 141 [ _29 ])
        (mem:SI (reg/f:SI 137 [ _25 ]) [1 *_25+0 S4 A32])) "sdc.c":128:36 253 {*arm_movsi_insn}
     (nil))
(insn 143 142 144 15 (set (mem:SI (reg/f:SI 140 [ _28 ]) [1 *_28+0 S4 A32])
        (reg:SI 141 [ _29 ])) "sdc.c":128:34 253 {*arm_movsi_insn}
     (nil))
(insn 144 143 145 15 (set (reg:SI 199)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "sdc.c":127:29 253 {*arm_movsi_insn}
     (nil))
(insn 145 144 146 15 (set (reg:SI 198)
        (plus:SI (reg:SI 199)
            (const_int 1 [0x1]))) "sdc.c":127:29 7 {*arm_addsi3}
     (nil))
(insn 146 145 147 15 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
        (reg:SI 198)) "sdc.c":127:29 253 {*arm_movsi_insn}
     (nil))
;;  succ:       16 (FALLTHRU,DFS_BACK)

;; basic block 16, loop depth 1, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL)
;;  pred:       14 [always]  (FALLTHRU)
;;              15 (FALLTHRU,DFS_BACK)
(code_label 147 146 148 16 11 (nil) [0 uses])
(note 148 147 152 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 152 148 153 16 (set (reg:SI 200)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "sdc.c":127:22 253 {*arm_movsi_insn}
     (nil))
(insn 153 152 154 16 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 200)
            (const_int 15 [0xf]))) "sdc.c":127:22 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 154 153 155 16 (set (pc)
        (if_then_else (le (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 149)
            (pc))) "sdc.c":127:22 273 {arm_cond_branch}
     (nil)
 -> 149)
;;  succ:       15
;;              17 (FALLTHRU)

;; basic block 17, loop depth 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL)
;;  pred:       16 (FALLTHRU)
(note 155 154 156 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 156 155 157 17 (set (reg:SI 202)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A64])) "sdc.c":129:11 253 {*arm_movsi_insn}
     (nil))
(insn 157 156 158 17 (set (reg:SI 201)
        (plus:SI (reg:SI 202)
            (const_int 64 [0x40]))) "sdc.c":129:11 7 {*arm_addsi3}
     (nil))
(insn 158 157 159 17 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A64])
        (reg:SI 201)) "sdc.c":129:11 253 {*arm_movsi_insn}
     (nil))
(insn 159 158 160 17 (set (reg/f:SI 203)
        (symbol_ref:SI ("txcount") [flags 0x2]  <var_decl 0x7f2800e6a510 txcount>)) "sdc.c":130:16 253 {*arm_movsi_insn}
     (nil))
(insn 160 159 161 17 (set (reg:SI 142 [ txcount.14_30 ])
        (mem/c:SI (reg/f:SI 203) [1 txcount+0 S4 A32])) "sdc.c":130:16 253 {*arm_movsi_insn}
     (nil))
(insn 161 160 162 17 (set (reg:SI 143 [ _31 ])
        (plus:SI (reg:SI 142 [ txcount.14_30 ])
            (const_int -64 [0xffffffffffffffc0]))) "sdc.c":130:16 7 {*arm_addsi3}
     (nil))
(insn 162 161 163 17 (set (reg/f:SI 204)
        (symbol_ref:SI ("txcount") [flags 0x2]  <var_decl 0x7f2800e6a510 txcount>)) "sdc.c":130:16 253 {*arm_movsi_insn}
     (nil))
(insn 163 162 164 17 (set (mem/c:SI (reg/f:SI 204) [1 txcount+0 S4 A32])
        (reg:SI 143 [ _31 ])) "sdc.c":130:16 253 {*arm_movsi_insn}
     (nil))
(insn 164 163 165 17 (set (reg/f:SI 205)
        (symbol_ref:SI ("txbuf") [flags 0x2]  <var_decl 0x7f2800e6a3f0 txbuf>)) "sdc.c":131:14 253 {*arm_movsi_insn}
     (nil))
(insn 165 164 166 17 (set (reg/f:SI 144 [ txbuf.15_32 ])
        (mem/f/c:SI (reg/f:SI 205) [3 txbuf+0 S4 A32])) "sdc.c":131:14 253 {*arm_movsi_insn}
     (nil))
(insn 166 165 167 17 (set (reg/f:SI 145 [ _33 ])
        (plus:SI (reg/f:SI 144 [ txbuf.15_32 ])
            (const_int 64 [0x40]))) "sdc.c":131:14 7 {*arm_addsi3}
     (nil))
(insn 167 166 168 17 (set (reg/f:SI 206)
        (symbol_ref:SI ("txbuf") [flags 0x2]  <var_decl 0x7f2800e6a3f0 txbuf>)) "sdc.c":131:14 253 {*arm_movsi_insn}
     (nil))
(insn 168 167 169 17 (set (mem/f/c:SI (reg/f:SI 206) [3 txbuf+0 S4 A32])
        (reg/f:SI 145 [ _33 ])) "sdc.c":131:14 253 {*arm_movsi_insn}
     (nil))
(insn 169 168 170 17 (set (reg/f:SI 207)
        (symbol_ref:SI ("base") [flags 0x2]  <var_decl 0x7f2800e6a2d0 base>)) "sdc.c":132:31 253 {*arm_movsi_insn}
     (nil))
(insn 170 169 171 17 (set (reg:SI 146 [ base.16_34 ])
        (mem/c:SI (reg/f:SI 207) [1 base+0 S4 A32])) "sdc.c":132:31 253 {*arm_movsi_insn}
     (nil))
(insn 171 170 172 17 (set (reg:SI 147 [ _35 ])
        (plus:SI (reg:SI 146 [ base.16_34 ])
            (const_int 52 [0x34]))) "sdc.c":132:31 7 {*arm_addsi3}
     (nil))
(insn 172 171 173 17 (set (reg/f:SI 148 [ _36 ])
        (reg:SI 147 [ _35 ])) "sdc.c":132:18 253 {*arm_movsi_insn}
     (nil))
(insn 173 172 174 17 (set (reg:SI 208)
        (mem:SI (reg/f:SI 148 [ _36 ]) [1 *_36+0 S4 A32])) "sdc.c":132:15 253 {*arm_movsi_insn}
     (nil))
(insn 174 173 175 17 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [1 status+0 S4 A64])
        (reg:SI 208)) "sdc.c":132:15 253 {*arm_movsi_insn}
     (nil))
;;  succ:       18 (FALLTHRU)

;; basic block 18, loop depth 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL)
;;  pred:       12
;;              13
;;              17 (FALLTHRU)
(code_label 175 174 176 18 10 (nil) [2 uses])
(note 176 175 177 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 177 176 178 18 (set (reg/f:SI 209)
        (symbol_ref:SI ("color") [flags 0x40]  <var_decl 0x7f2801b4c480 color>)) "sdc.c":134:11 253 {*arm_movsi_insn}
     (nil))
(insn 178 177 179 18 (set (reg:SI 210)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [1 oldcolor+0 S4 A32])) "sdc.c":134:11 253 {*arm_movsi_insn}
     (nil))
(insn 179 178 180 18 (set (mem/c:SI (reg/f:SI 209) [1 color+0 S4 A32])
        (reg:SI 210)) "sdc.c":134:11 253 {*arm_movsi_insn}
     (nil))
(insn 180 179 181 18 (set (reg/f:SI 211)
        (symbol_ref:SI ("txcount") [flags 0x2]  <var_decl 0x7f2800e6a510 txcount>)) "sdc.c":135:17 253 {*arm_movsi_insn}
     (nil))
(insn 181 180 182 18 (set (reg:SI 149 [ txcount.17_37 ])
        (mem/c:SI (reg/f:SI 211) [1 txcount+0 S4 A32])) "sdc.c":135:17 253 {*arm_movsi_insn}
     (nil))
(insn 182 181 183 18 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 149 [ txcount.17_37 ])
            (const_int 0 [0]))) "sdc.c":135:8 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 183 182 184 18 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 194)
            (pc))) "sdc.c":135:8 273 {arm_cond_branch}
     (nil)
 -> 194)
;;  succ:       19 (FALLTHRU)
;;              20

;; basic block 19, loop depth 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL)
;;  pred:       18 (FALLTHRU)
(note 184 183 185 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 185 184 186 19 (set (reg:SI 2 r2)
        (const_int 21 [0x15])) "sdc.c":136:8 253 {*arm_movsi_insn}
     (nil))
(insn 186 185 187 19 (set (reg:SI 1 r1)
        (const_int 0 [0])) "sdc.c":136:8 253 {*arm_movsi_insn}
     (nil))
(insn 187 186 188 19 (set (reg:SI 0 r0)
        (const_int 12 [0xc])) "sdc.c":136:8 253 {*arm_movsi_insn}
     (nil))
(call_insn 188 187 189 19 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_command") [flags 0x3]  <function_decl 0x7f2800e61e00 do_command>) [0 do_command S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "sdc.c":136:8 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 189 188 190 19 (set (reg/f:SI 212)
        (symbol_ref:SI ("txdone") [flags 0x2]  <var_decl 0x7f2800e6a630 txdone>)) "sdc.c":137:15 253 {*arm_movsi_insn}
     (nil))
(insn 190 189 191 19 (set (reg:SI 213)
        (const_int 1 [0x1])) "sdc.c":137:15 253 {*arm_movsi_insn}
     (nil))
(insn 191 190 192 19 (set (mem/c:SI (reg/f:SI 212) [1 txdone+0 S4 A32])
        (reg:SI 213)) "sdc.c":137:15 253 {*arm_movsi_insn}
     (nil))
(insn 192 191 193 19 (set (reg:SI 0 r0)
        (symbol_ref:SI ("txsem") [flags 0x2]  <var_decl 0x7f2800e6a750 txsem>)) "sdc.c":138:8 253 {*arm_movsi_insn}
     (nil))
(call_insn 193 192 194 19 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("V") [flags 0x41]  <function_decl 0x7f2800e73200 V>) [0 V S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "sdc.c":138:8 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
;;  succ:       20 (FALLTHRU)

;; basic block 20, loop depth 0, maybe hot
;;  prev block 19, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 [always]  (FALLTHRU)
;;              11
;;              18
;;              19 (FALLTHRU)
;;              9
(code_label 194 193 195 20 9 (nil) [3 uses])
(note 195 194 196 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 196 195 197 20 (set (reg/f:SI 214)
        (symbol_ref:SI ("base") [flags 0x2]  <var_decl 0x7f2800e6a2d0 base>)) "sdc.c":142:17 253 {*arm_movsi_insn}
     (nil))
(insn 197 196 198 20 (set (reg:SI 150 [ base.18_38 ])
        (mem/c:SI (reg/f:SI 214) [1 base+0 S4 A32])) "sdc.c":142:17 253 {*arm_movsi_insn}
     (nil))
(insn 198 197 199 20 (set (reg:SI 151 [ _39 ])
        (plus:SI (reg:SI 150 [ base.18_38 ])
            (const_int 56 [0x38]))) "sdc.c":142:17 7 {*arm_addsi3}
     (nil))
(insn 199 198 200 20 (set (reg/f:SI 152 [ _40 ])
        (reg:SI 151 [ _39 ])) "sdc.c":142:4 253 {*arm_movsi_insn}
     (nil))
(insn 200 199 201 20 (set (reg:SI 215)
        (const_int -1 [0xffffffffffffffff])) "sdc.c":142:33 253 {*arm_movsi_insn}
     (nil))
(insn 201 200 204 20 (set (mem:SI (reg/f:SI 152 [ _40 ]) [1 *_40+0 S4 A32])
        (reg:SI 215)) "sdc.c":142:33 253 {*arm_movsi_insn}
     (nil))
(insn 204 201 205 20 (clobber (reg/i:SI 0 r0)) "sdc.c":144:1 -1
     (nil))
(insn 205 204 208 20 (clobber (reg:SI 153 [ <retval> ])) "sdc.c":144:1 -1
     (nil))
(insn 208 205 203 20 (const_int 0 [0]) "sdc.c":144:1 311 {nop}
     (nil))
(insn 203 208 206 20 (set (reg/i:SI 0 r0)
        (reg:SI 153 [ <retval> ])) "sdc.c":144:1 253 {*arm_movsi_insn}
     (nil))
(insn 206 203 0 20 (use (reg/i:SI 0 r0)) "sdc.c":144:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)

;; basic block 1, loop depth 0, maybe hot
;;  prev block 20, next block (nil), flags: (REACHABLE, RTL)
;;  pred:       20 [always]  (FALLTHRU)
;;  succ:      




try_optimize_cfg iteration 1

;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 154)
        (symbol_ref:SI ("base") [flags 0x2]  <var_decl 0x7f2800e6a2d0 base>)) "sdc.c":94:26 253 {*arm_movsi_insn}
     (nil))
(insn 6 5 7 2 (set (reg:SI 113 [ base.3_1 ])
        (mem/c:SI (reg/f:SI 154) [1 base+0 S4 A32])) "sdc.c":94:26 253 {*arm_movsi_insn}
     (nil))
(insn 7 6 8 2 (set (reg:SI 114 [ _2 ])
        (plus:SI (reg:SI 113 [ base.3_1 ])
            (const_int 52 [0x34]))) "sdc.c":94:26 7 {*arm_addsi3}
     (nil))
(insn 8 7 9 2 (set (reg/f:SI 115 [ _3 ])
        (reg:SI 114 [ _2 ])) "sdc.c":94:13 253 {*arm_movsi_insn}
     (nil))
(insn 9 8 10 2 (set (reg:SI 155)
        (mem:SI (reg/f:SI 115 [ _3 ]) [1 *_3+0 S4 A32])) "sdc.c":94:10 253 {*arm_movsi_insn}
     (nil))
(insn 10 9 11 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [1 status+0 S4 A64])
        (reg:SI 155)) "sdc.c":94:10 253 {*arm_movsi_insn}
     (nil))
(insn 11 10 12 2 (set (reg/f:SI 156)
        (symbol_ref:SI ("color") [flags 0x40]  <var_decl 0x7f2801b4c480 color>)) "sdc.c":95:12 253 {*arm_movsi_insn}
     (nil))
(insn 12 11 13 2 (set (reg:SI 157)
        (mem/c:SI (reg/f:SI 156) [1 color+0 S4 A32])) "sdc.c":95:12 253 {*arm_movsi_insn}
     (nil))
(insn 13 12 14 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [1 oldcolor+0 S4 A32])
        (reg:SI 157)) "sdc.c":95:12 253 {*arm_movsi_insn}
     (nil))
(insn 14 13 15 2 (set (reg:SI 158)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [1 status+0 S4 A64])) "sdc.c":97:14 253 {*arm_movsi_insn}
     (nil))
(insn 15 14 16 2 (set (reg:SI 116 [ _4 ])
        (and:SI (reg:SI 158)
            (const_int 131072 [0x20000]))) "sdc.c":97:14 90 {*arm_andsi3_insn}
     (nil))
(insn 16 15 17 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 116 [ _4 ])
            (const_int 0 [0]))) "sdc.c":97:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 17 16 18 2 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 104)
            (pc))) "sdc.c":97:6 273 {arm_cond_branch}
     (nil)
 -> 104)
;;  succ:       3 (FALLTHRU)
;;              11

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 18 17 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 3 (set (reg/f:SI 159)
        (symbol_ref:SI ("color") [flags 0x40]  <var_decl 0x7f2801b4c480 color>)) "sdc.c":98:12 253 {*arm_movsi_insn}
     (nil))
(insn 20 19 21 3 (set (reg:SI 160)
        (const_int 2 [0x2])) "sdc.c":98:12 253 {*arm_movsi_insn}
     (nil))
(insn 21 20 22 3 (set (mem/c:SI (reg/f:SI 159) [1 color+0 S4 A32])
        (reg:SI 160)) "sdc.c":98:12 253 {*arm_movsi_insn}
     (nil))
(insn 22 21 23 3 (set (reg/f:SI 161)
        (symbol_ref:SI ("rxbuf") [flags 0x2]  <var_decl 0x7f2800e6a360 rxbuf>)) "sdc.c":100:9 253 {*arm_movsi_insn}
     (nil))
(insn 23 22 24 3 (set (reg/f:SI 162)
        (mem/f/c:SI (reg/f:SI 161) [3 rxbuf+0 S4 A32])) "sdc.c":100:9 253 {*arm_movsi_insn}
     (nil))
(insn 24 23 25 3 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A64])
        (reg/f:SI 162)) "sdc.c":100:9 253 {*arm_movsi_insn}
     (nil))
(insn 25 24 26 3 (set (reg:SI 164)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [1 status+0 S4 A64])) "sdc.c":101:17 253 {*arm_movsi_insn}
     (nil))
(insn 26 25 27 3 (set (reg:SI 163)
        (and:SI (reg:SI 164)
            (const_int 42 [0x2a]))) "sdc.c":101:17 90 {*arm_andsi3_insn}
     (nil))
(insn 27 26 28 3 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 status_err+0 S4 A32])
        (reg:SI 163)) "sdc.c":101:17 253 {*arm_movsi_insn}
     (nil))
(insn 28 27 29 3 (set (reg:SI 165)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 status_err+0 S4 A32])) "sdc.c":102:9 253 {*arm_movsi_insn}
     (nil))
(insn 29 28 30 3 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 165)
            (const_int 0 [0]))) "sdc.c":102:9 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 30 29 31 3 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 83)
            (pc))) "sdc.c":102:9 273 {arm_cond_branch}
     (nil)
 -> 83)
;;  succ:       4 (FALLTHRU)
;;              9

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       3 (FALLTHRU)
(note 31 30 32 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 4 (set (reg/f:SI 166)
        (symbol_ref:SI ("rxcount") [flags 0x2]  <var_decl 0x7f2800e6a480 rxcount>)) "sdc.c":102:22 253 {*arm_movsi_insn}
     (nil))
(insn 33 32 34 4 (set (reg:SI 117 [ rxcount.4_5 ])
        (mem/c:SI (reg/f:SI 166) [1 rxcount+0 S4 A32])) "sdc.c":102:22 253 {*arm_movsi_insn}
     (nil))
(insn 34 33 35 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 117 [ rxcount.4_5 ])
            (const_int 0 [0]))) "sdc.c":102:22 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 35 34 36 4 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 83)
            (pc))) "sdc.c":102:22 273 {arm_cond_branch}
     (nil)
 -> 83)
;;  succ:       5 (FALLTHRU)
;;              9

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 36 35 37 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 5 (set (reg:SI 167)
        (const_int 0 [0])) "sdc.c":104:16 253 {*arm_movsi_insn}
     (nil))
(insn 38 37 57 5 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
        (reg:SI 167)) "sdc.c":104:16 253 {*arm_movsi_insn}
     (nil))
;;  succ:       7 [always]  (FALLTHRU)

;; basic block 6, loop depth 1, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
(code_label 57 38 41 6 8 (nil) [1 uses])
(note 41 57 42 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 6 (set (reg/f:SI 168)
        (symbol_ref:SI ("base") [flags 0x2]  <var_decl 0x7f2800e6a2d0 base>)) "sdc.c":105:38 253 {*arm_movsi_insn}
     (nil))
(insn 43 42 44 6 (set (reg:SI 118 [ base.5_6 ])
        (mem/c:SI (reg/f:SI 168) [1 base+0 S4 A32])) "sdc.c":105:38 253 {*arm_movsi_insn}
     (nil))
(insn 44 43 45 6 (set (reg:SI 119 [ _7 ])
        (plus:SI (reg:SI 118 [ base.5_6 ])
            (const_int 128 [0x80]))) "sdc.c":105:38 7 {*arm_addsi3}
     (nil))
(insn 45 44 46 6 (set (reg/f:SI 120 [ _8 ])
        (reg:SI 119 [ _7 ])) "sdc.c":105:25 253 {*arm_movsi_insn}
     (nil))
(insn 46 45 47 6 (set (reg:SI 121 [ i.6_9 ])
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "sdc.c":105:17 253 {*arm_movsi_insn}
     (nil))
(insn 47 46 48 6 (set (reg:SI 122 [ _10 ])
        (ashift:SI (reg:SI 121 [ i.6_9 ])
            (const_int 2 [0x2]))) "sdc.c":105:17 147 {*arm_shiftsi3}
     (nil))
(insn 48 47 49 6 (set (reg:SI 169)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A64])) "sdc.c":105:17 253 {*arm_movsi_insn}
     (nil))
(insn 49 48 50 6 (set (reg/f:SI 123 [ _11 ])
        (plus:SI (reg:SI 169)
            (reg:SI 122 [ _10 ]))) "sdc.c":105:17 7 {*arm_addsi3}
     (nil))
(insn 50 49 51 6 (set (reg:SI 124 [ _12 ])
        (mem:SI (reg/f:SI 120 [ _8 ]) [1 *_8+0 S4 A32])) "sdc.c":105:24 253 {*arm_movsi_insn}
     (nil))
(insn 51 50 52 6 (set (mem:SI (reg/f:SI 123 [ _11 ]) [1 *_11+0 S4 A32])
        (reg:SI 124 [ _12 ])) "sdc.c":105:22 253 {*arm_movsi_insn}
     (nil))
(insn 52 51 53 6 (set (reg:SI 171)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "sdc.c":104:30 253 {*arm_movsi_insn}
     (nil))
(insn 53 52 54 6 (set (reg:SI 170)
        (plus:SI (reg:SI 171)
            (const_int 1 [0x1]))) "sdc.c":104:30 7 {*arm_addsi3}
     (nil))
(insn 54 53 55 6 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
        (reg:SI 170)) "sdc.c":104:30 253 {*arm_movsi_insn}
     (nil))
;;  succ:       7 (FALLTHRU,DFS_BACK)

;; basic block 7, loop depth 1, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 [always]  (FALLTHRU)
;;              6 (FALLTHRU,DFS_BACK)
(code_label 55 54 56 7 7 (nil) [0 uses])
(note 56 55 60 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 60 56 61 7 (set (reg:SI 172)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "sdc.c":104:23 253 {*arm_movsi_insn}
     (nil))
(insn 61 60 62 7 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 172)
            (const_int 15 [0xf]))) "sdc.c":104:23 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 62 61 63 7 (set (pc)
        (if_then_else (le (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 57)
            (pc))) "sdc.c":104:23 273 {arm_cond_branch}
     (nil)
 -> 57)
;;  succ:       6
;;              8 (FALLTHRU)

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
(note 63 62 64 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 8 (set (reg:SI 174)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A64])) "sdc.c":106:12 253 {*arm_movsi_insn}
     (nil))
(insn 65 64 66 8 (set (reg:SI 173)
        (plus:SI (reg:SI 174)
            (const_int 64 [0x40]))) "sdc.c":106:12 7 {*arm_addsi3}
     (nil))
(insn 66 65 67 8 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A64])
        (reg:SI 173)) "sdc.c":106:12 253 {*arm_movsi_insn}
     (nil))
(insn 67 66 68 8 (set (reg/f:SI 175)
        (symbol_ref:SI ("rxcount") [flags 0x2]  <var_decl 0x7f2800e6a480 rxcount>)) "sdc.c":107:17 253 {*arm_movsi_insn}
     (nil))
(insn 68 67 69 8 (set (reg:SI 125 [ rxcount.7_13 ])
        (mem/c:SI (reg/f:SI 175) [1 rxcount+0 S4 A32])) "sdc.c":107:17 253 {*arm_movsi_insn}
     (nil))
(insn 69 68 70 8 (set (reg:SI 126 [ _14 ])
        (plus:SI (reg:SI 125 [ rxcount.7_13 ])
            (const_int -64 [0xffffffffffffffc0]))) "sdc.c":107:17 7 {*arm_addsi3}
     (nil))
(insn 70 69 71 8 (set (reg/f:SI 176)
        (symbol_ref:SI ("rxcount") [flags 0x2]  <var_decl 0x7f2800e6a480 rxcount>)) "sdc.c":107:17 253 {*arm_movsi_insn}
     (nil))
(insn 71 70 72 8 (set (mem/c:SI (reg/f:SI 176) [1 rxcount+0 S4 A32])
        (reg:SI 126 [ _14 ])) "sdc.c":107:17 253 {*arm_movsi_insn}
     (nil))
(insn 72 71 73 8 (set (reg/f:SI 177)
        (symbol_ref:SI ("rxbuf") [flags 0x2]  <var_decl 0x7f2800e6a360 rxbuf>)) "sdc.c":108:15 253 {*arm_movsi_insn}
     (nil))
(insn 73 72 74 8 (set (reg/f:SI 127 [ rxbuf.8_15 ])
        (mem/f/c:SI (reg/f:SI 177) [3 rxbuf+0 S4 A32])) "sdc.c":108:15 253 {*arm_movsi_insn}
     (nil))
(insn 74 73 75 8 (set (reg/f:SI 128 [ _16 ])
        (plus:SI (reg/f:SI 127 [ rxbuf.8_15 ])
            (const_int 64 [0x40]))) "sdc.c":108:15 7 {*arm_addsi3}
     (nil))
(insn 75 74 76 8 (set (reg/f:SI 178)
        (symbol_ref:SI ("rxbuf") [flags 0x2]  <var_decl 0x7f2800e6a360 rxbuf>)) "sdc.c":108:15 253 {*arm_movsi_insn}
     (nil))
(insn 76 75 77 8 (set (mem/f/c:SI (reg/f:SI 178) [3 rxbuf+0 S4 A32])
        (reg/f:SI 128 [ _16 ])) "sdc.c":108:15 253 {*arm_movsi_insn}
     (nil))
(insn 77 76 78 8 (set (reg/f:SI 179)
        (symbol_ref:SI ("base") [flags 0x2]  <var_decl 0x7f2800e6a2d0 base>)) "sdc.c":109:25 253 {*arm_movsi_insn}
     (nil))
(insn 78 77 79 8 (set (reg:SI 129 [ base.9_17 ])
        (mem/c:SI (reg/f:SI 179) [1 base+0 S4 A32])) "sdc.c":109:25 253 {*arm_movsi_insn}
     (nil))
(insn 79 78 80 8 (set (reg:SI 130 [ _18 ])
        (plus:SI (reg:SI 129 [ base.9_17 ])
            (const_int 52 [0x34]))) "sdc.c":109:25 7 {*arm_addsi3}
     (nil))
(insn 80 79 81 8 (set (reg/f:SI 131 [ _19 ])
        (reg:SI 130 [ _18 ])) "sdc.c":109:12 253 {*arm_movsi_insn}
     (nil))
(insn 81 80 82 8 (set (reg:SI 180)
        (mem:SI (reg/f:SI 131 [ _19 ]) [1 *_19+0 S4 A32])) "sdc.c":109:9 253 {*arm_movsi_insn}
     (nil))
(insn 82 81 83 8 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [1 status+0 S4 A64])
        (reg:SI 180)) "sdc.c":109:9 253 {*arm_movsi_insn}
     (nil))
;;  succ:       9 (FALLTHRU)

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       3
;;              4
;;              8 (FALLTHRU)
(code_label 83 82 84 9 6 (nil) [2 uses])
(note 84 83 85 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 86 9 (set (reg/f:SI 181)
        (symbol_ref:SI ("color") [flags 0x40]  <var_decl 0x7f2801b4c480 color>)) "sdc.c":111:12 253 {*arm_movsi_insn}
     (nil))
(insn 86 85 87 9 (set (reg:SI 182)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [1 oldcolor+0 S4 A32])) "sdc.c":111:12 253 {*arm_movsi_insn}
     (nil))
(insn 87 86 88 9 (set (mem/c:SI (reg/f:SI 181) [1 color+0 S4 A32])
        (reg:SI 182)) "sdc.c":111:12 253 {*arm_movsi_insn}
     (nil))
(insn 88 87 89 9 (set (reg/f:SI 183)
        (symbol_ref:SI ("rxcount") [flags 0x2]  <var_decl 0x7f2800e6a480 rxcount>)) "sdc.c":112:18 253 {*arm_movsi_insn}
     (nil))
(insn 89 88 90 9 (set (reg:SI 132 [ rxcount.10_20 ])
        (mem/c:SI (reg/f:SI 183) [1 rxcount+0 S4 A32])) "sdc.c":112:18 253 {*arm_movsi_insn}
     (nil))
(insn 90 89 91 9 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 132 [ rxcount.10_20 ])
            (const_int 0 [0]))) "sdc.c":112:9 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 91 90 92 9 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 194)
            (pc))) "sdc.c":112:9 273 {arm_cond_branch}
     (nil)
 -> 194)
;;  succ:       10 (FALLTHRU)
;;              20

;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 (FALLTHRU)
(note 92 91 93 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 10 (set (reg:SI 2 r2)
        (const_int 21 [0x15])) "sdc.c":113:9 253 {*arm_movsi_insn}
     (nil))
(insn 94 93 95 10 (set (reg:SI 1 r1)
        (const_int 0 [0])) "sdc.c":113:9 253 {*arm_movsi_insn}
     (nil))
(insn 95 94 96 10 (set (reg:SI 0 r0)
        (const_int 12 [0xc])) "sdc.c":113:9 253 {*arm_movsi_insn}
     (nil))
(call_insn 96 95 97 10 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_command") [flags 0x3]  <function_decl 0x7f2800e61e00 do_command>) [0 do_command S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "sdc.c":113:9 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 97 96 98 10 (set (reg/f:SI 184)
        (symbol_ref:SI ("rxdone") [flags 0x2]  <var_decl 0x7f2800e6a5a0 rxdone>)) "sdc.c":114:16 253 {*arm_movsi_insn}
     (nil))
(insn 98 97 99 10 (set (reg:SI 185)
        (const_int 1 [0x1])) "sdc.c":114:16 253 {*arm_movsi_insn}
     (nil))
(insn 99 98 100 10 (set (mem/c:SI (reg/f:SI 184) [1 rxdone+0 S4 A32])
        (reg:SI 185)) "sdc.c":114:16 253 {*arm_movsi_insn}
     (nil))
(insn 100 99 101 10 (set (reg:SI 0 r0)
        (symbol_ref:SI ("rxsem") [flags 0x2]  <var_decl 0x7f2800e6a6c0 rxsem>)) "sdc.c":116:9 253 {*arm_movsi_insn}
     (nil))
(call_insn 101 100 104 10 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("V") [flags 0x41]  <function_decl 0x7f2800e73200 V>) [0 V S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "sdc.c":116:9 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
;;  succ:       20 [always]  (FALLTHRU)

;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
(code_label 104 101 105 11 5 (nil) [1 uses])
(note 105 104 106 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 106 105 107 11 (set (reg:SI 186)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [1 status+0 S4 A64])) "sdc.c":119:19 253 {*arm_movsi_insn}
     (nil))
(insn 107 106 108 11 (set (reg:SI 133 [ _21 ])
        (and:SI (reg:SI 186)
            (const_int 262144 [0x40000]))) "sdc.c":119:19 90 {*arm_andsi3_insn}
     (nil))
(insn 108 107 109 11 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 133 [ _21 ])
            (const_int 0 [0]))) "sdc.c":119:11 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 109 108 110 11 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 194)
            (pc))) "sdc.c":119:11 273 {arm_cond_branch}
     (nil)
 -> 194)
;;  succ:       12 (FALLTHRU)
;;              20

;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       11 (FALLTHRU)
(note 110 109 111 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 112 12 (set (reg/f:SI 187)
        (symbol_ref:SI ("color") [flags 0x40]  <var_decl 0x7f2801b4c480 color>)) "sdc.c":120:11 253 {*arm_movsi_insn}
     (nil))
(insn 112 111 113 12 (set (reg:SI 188)
        (const_int 3 [0x3])) "sdc.c":120:11 253 {*arm_movsi_insn}
     (nil))
(insn 113 112 114 12 (set (mem/c:SI (reg/f:SI 187) [1 color+0 S4 A32])
        (reg:SI 188)) "sdc.c":120:11 253 {*arm_movsi_insn}
     (nil))
(insn 114 113 115 12 (set (reg/f:SI 189)
        (symbol_ref:SI ("txbuf") [flags 0x2]  <var_decl 0x7f2800e6a3f0 txbuf>)) "sdc.c":122:8 253 {*arm_movsi_insn}
     (nil))
(insn 115 114 116 12 (set (reg/f:SI 190)
        (mem/f/c:SI (reg/f:SI 189) [3 txbuf+0 S4 A32])) "sdc.c":122:8 253 {*arm_movsi_insn}
     (nil))
(insn 116 115 117 12 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A64])
        (reg/f:SI 190)) "sdc.c":122:8 253 {*arm_movsi_insn}
     (nil))
(insn 117 116 118 12 (set (reg:SI 192)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [1 status+0 S4 A64])) "sdc.c":123:16 253 {*arm_movsi_insn}
     (nil))
(insn 118 117 119 12 (set (reg:SI 191)
        (and:SI (reg:SI 192)
            (const_int 10 [0xa]))) "sdc.c":123:16 90 {*arm_andsi3_insn}
     (nil))
(insn 119 118 120 12 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 status_err+0 S4 A32])
        (reg:SI 191)) "sdc.c":123:16 253 {*arm_movsi_insn}
     (nil))
(insn 120 119 121 12 (set (reg:SI 193)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 status_err+0 S4 A32])) "sdc.c":125:8 253 {*arm_movsi_insn}
     (nil))
(insn 121 120 122 12 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 193)
            (const_int 0 [0]))) "sdc.c":125:8 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 122 121 123 12 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 175)
            (pc))) "sdc.c":125:8 273 {arm_cond_branch}
     (nil)
 -> 175)
;;  succ:       13 (FALLTHRU)
;;              18

;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       12 (FALLTHRU)
(note 123 122 124 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 124 123 125 13 (set (reg/f:SI 194)
        (symbol_ref:SI ("txcount") [flags 0x2]  <var_decl 0x7f2800e6a510 txcount>)) "sdc.c":125:21 253 {*arm_movsi_insn}
     (nil))
(insn 125 124 126 13 (set (reg:SI 134 [ txcount.11_22 ])
        (mem/c:SI (reg/f:SI 194) [1 txcount+0 S4 A32])) "sdc.c":125:21 253 {*arm_movsi_insn}
     (nil))
(insn 126 125 127 13 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 134 [ txcount.11_22 ])
            (const_int 0 [0]))) "sdc.c":125:21 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 127 126 128 13 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 175)
            (pc))) "sdc.c":125:21 273 {arm_cond_branch}
     (nil)
 -> 175)
;;  succ:       14 (FALLTHRU)
;;              18

;; basic block 14, loop depth 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       13 (FALLTHRU)
(note 128 127 129 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 129 128 130 14 (set (reg:SI 195)
        (const_int 0 [0])) "sdc.c":127:15 253 {*arm_movsi_insn}
     (nil))
(insn 130 129 149 14 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
        (reg:SI 195)) "sdc.c":127:15 253 {*arm_movsi_insn}
     (nil))
;;  succ:       16 [always]  (FALLTHRU)

;; basic block 15, loop depth 1, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL)
;;  pred:       16
(code_label 149 130 133 15 12 (nil) [1 uses])
(note 133 149 134 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 134 133 135 15 (set (reg:SI 135 [ i.12_23 ])
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "sdc.c":128:41 253 {*arm_movsi_insn}
     (nil))
(insn 135 134 136 15 (set (reg:SI 136 [ _24 ])
        (ashift:SI (reg:SI 135 [ i.12_23 ])
            (const_int 2 [0x2]))) "sdc.c":128:41 147 {*arm_shiftsi3}
     (nil))
(insn 136 135 137 15 (set (reg:SI 196)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A64])) "sdc.c":128:41 253 {*arm_movsi_insn}
     (nil))
(insn 137 136 138 15 (set (reg/f:SI 137 [ _25 ])
        (plus:SI (reg:SI 196)
            (reg:SI 136 [ _24 ]))) "sdc.c":128:41 7 {*arm_addsi3}
     (nil))
(insn 138 137 139 15 (set (reg/f:SI 197)
        (symbol_ref:SI ("base") [flags 0x2]  <var_decl 0x7f2800e6a2d0 base>)) "sdc.c":128:26 253 {*arm_movsi_insn}
     (nil))
(insn 139 138 140 15 (set (reg:SI 138 [ base.13_26 ])
        (mem/c:SI (reg/f:SI 197) [1 base+0 S4 A32])) "sdc.c":128:26 253 {*arm_movsi_insn}
     (nil))
(insn 140 139 141 15 (set (reg:SI 139 [ _27 ])
        (plus:SI (reg:SI 138 [ base.13_26 ])
            (const_int 128 [0x80]))) "sdc.c":128:26 7 {*arm_addsi3}
     (nil))
(insn 141 140 142 15 (set (reg/f:SI 140 [ _28 ])
        (reg:SI 139 [ _27 ])) "sdc.c":128:13 253 {*arm_movsi_insn}
     (nil))
(insn 142 141 143 15 (set (reg:SI 141 [ _29 ])
        (mem:SI (reg/f:SI 137 [ _25 ]) [1 *_25+0 S4 A32])) "sdc.c":128:36 253 {*arm_movsi_insn}
     (nil))
(insn 143 142 144 15 (set (mem:SI (reg/f:SI 140 [ _28 ]) [1 *_28+0 S4 A32])
        (reg:SI 141 [ _29 ])) "sdc.c":128:34 253 {*arm_movsi_insn}
     (nil))
(insn 144 143 145 15 (set (reg:SI 199)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "sdc.c":127:29 253 {*arm_movsi_insn}
     (nil))
(insn 145 144 146 15 (set (reg:SI 198)
        (plus:SI (reg:SI 199)
            (const_int 1 [0x1]))) "sdc.c":127:29 7 {*arm_addsi3}
     (nil))
(insn 146 145 147 15 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
        (reg:SI 198)) "sdc.c":127:29 253 {*arm_movsi_insn}
     (nil))
;;  succ:       16 (FALLTHRU,DFS_BACK)

;; basic block 16, loop depth 1, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL)
;;  pred:       14 [always]  (FALLTHRU)
;;              15 (FALLTHRU,DFS_BACK)
(code_label 147 146 148 16 11 (nil) [0 uses])
(note 148 147 152 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 152 148 153 16 (set (reg:SI 200)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "sdc.c":127:22 253 {*arm_movsi_insn}
     (nil))
(insn 153 152 154 16 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 200)
            (const_int 15 [0xf]))) "sdc.c":127:22 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 154 153 155 16 (set (pc)
        (if_then_else (le (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 149)
            (pc))) "sdc.c":127:22 273 {arm_cond_branch}
     (nil)
 -> 149)
;;  succ:       15
;;              17 (FALLTHRU)

;; basic block 17, loop depth 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL)
;;  pred:       16 (FALLTHRU)
(note 155 154 156 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 156 155 157 17 (set (reg:SI 202)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A64])) "sdc.c":129:11 253 {*arm_movsi_insn}
     (nil))
(insn 157 156 158 17 (set (reg:SI 201)
        (plus:SI (reg:SI 202)
            (const_int 64 [0x40]))) "sdc.c":129:11 7 {*arm_addsi3}
     (nil))
(insn 158 157 159 17 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 up+0 S4 A64])
        (reg:SI 201)) "sdc.c":129:11 253 {*arm_movsi_insn}
     (nil))
(insn 159 158 160 17 (set (reg/f:SI 203)
        (symbol_ref:SI ("txcount") [flags 0x2]  <var_decl 0x7f2800e6a510 txcount>)) "sdc.c":130:16 253 {*arm_movsi_insn}
     (nil))
(insn 160 159 161 17 (set (reg:SI 142 [ txcount.14_30 ])
        (mem/c:SI (reg/f:SI 203) [1 txcount+0 S4 A32])) "sdc.c":130:16 253 {*arm_movsi_insn}
     (nil))
(insn 161 160 162 17 (set (reg:SI 143 [ _31 ])
        (plus:SI (reg:SI 142 [ txcount.14_30 ])
            (const_int -64 [0xffffffffffffffc0]))) "sdc.c":130:16 7 {*arm_addsi3}
     (nil))
(insn 162 161 163 17 (set (reg/f:SI 204)
        (symbol_ref:SI ("txcount") [flags 0x2]  <var_decl 0x7f2800e6a510 txcount>)) "sdc.c":130:16 253 {*arm_movsi_insn}
     (nil))
(insn 163 162 164 17 (set (mem/c:SI (reg/f:SI 204) [1 txcount+0 S4 A32])
        (reg:SI 143 [ _31 ])) "sdc.c":130:16 253 {*arm_movsi_insn}
     (nil))
(insn 164 163 165 17 (set (reg/f:SI 205)
        (symbol_ref:SI ("txbuf") [flags 0x2]  <var_decl 0x7f2800e6a3f0 txbuf>)) "sdc.c":131:14 253 {*arm_movsi_insn}
     (nil))
(insn 165 164 166 17 (set (reg/f:SI 144 [ txbuf.15_32 ])
        (mem/f/c:SI (reg/f:SI 205) [3 txbuf+0 S4 A32])) "sdc.c":131:14 253 {*arm_movsi_insn}
     (nil))
(insn 166 165 167 17 (set (reg/f:SI 145 [ _33 ])
        (plus:SI (reg/f:SI 144 [ txbuf.15_32 ])
            (const_int 64 [0x40]))) "sdc.c":131:14 7 {*arm_addsi3}
     (nil))
(insn 167 166 168 17 (set (reg/f:SI 206)
        (symbol_ref:SI ("txbuf") [flags 0x2]  <var_decl 0x7f2800e6a3f0 txbuf>)) "sdc.c":131:14 253 {*arm_movsi_insn}
     (nil))
(insn 168 167 169 17 (set (mem/f/c:SI (reg/f:SI 206) [3 txbuf+0 S4 A32])
        (reg/f:SI 145 [ _33 ])) "sdc.c":131:14 253 {*arm_movsi_insn}
     (nil))
(insn 169 168 170 17 (set (reg/f:SI 207)
        (symbol_ref:SI ("base") [flags 0x2]  <var_decl 0x7f2800e6a2d0 base>)) "sdc.c":132:31 253 {*arm_movsi_insn}
     (nil))
(insn 170 169 171 17 (set (reg:SI 146 [ base.16_34 ])
        (mem/c:SI (reg/f:SI 207) [1 base+0 S4 A32])) "sdc.c":132:31 253 {*arm_movsi_insn}
     (nil))
(insn 171 170 172 17 (set (reg:SI 147 [ _35 ])
        (plus:SI (reg:SI 146 [ base.16_34 ])
            (const_int 52 [0x34]))) "sdc.c":132:31 7 {*arm_addsi3}
     (nil))
(insn 172 171 173 17 (set (reg/f:SI 148 [ _36 ])
        (reg:SI 147 [ _35 ])) "sdc.c":132:18 253 {*arm_movsi_insn}
     (nil))
(insn 173 172 174 17 (set (reg:SI 208)
        (mem:SI (reg/f:SI 148 [ _36 ]) [1 *_36+0 S4 A32])) "sdc.c":132:15 253 {*arm_movsi_insn}
     (nil))
(insn 174 173 175 17 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [1 status+0 S4 A64])
        (reg:SI 208)) "sdc.c":132:15 253 {*arm_movsi_insn}
     (nil))
;;  succ:       18 (FALLTHRU)

;; basic block 18, loop depth 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL)
;;  pred:       12
;;              13
;;              17 (FALLTHRU)
(code_label 175 174 176 18 10 (nil) [2 uses])
(note 176 175 177 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 177 176 178 18 (set (reg/f:SI 209)
        (symbol_ref:SI ("color") [flags 0x40]  <var_decl 0x7f2801b4c480 color>)) "sdc.c":134:11 253 {*arm_movsi_insn}
     (nil))
(insn 178 177 179 18 (set (reg:SI 210)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [1 oldcolor+0 S4 A32])) "sdc.c":134:11 253 {*arm_movsi_insn}
     (nil))
(insn 179 178 180 18 (set (mem/c:SI (reg/f:SI 209) [1 color+0 S4 A32])
        (reg:SI 210)) "sdc.c":134:11 253 {*arm_movsi_insn}
     (nil))
(insn 180 179 181 18 (set (reg/f:SI 211)
        (symbol_ref:SI ("txcount") [flags 0x2]  <var_decl 0x7f2800e6a510 txcount>)) "sdc.c":135:17 253 {*arm_movsi_insn}
     (nil))
(insn 181 180 182 18 (set (reg:SI 149 [ txcount.17_37 ])
        (mem/c:SI (reg/f:SI 211) [1 txcount+0 S4 A32])) "sdc.c":135:17 253 {*arm_movsi_insn}
     (nil))
(insn 182 181 183 18 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 149 [ txcount.17_37 ])
            (const_int 0 [0]))) "sdc.c":135:8 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 183 182 184 18 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 194)
            (pc))) "sdc.c":135:8 273 {arm_cond_branch}
     (nil)
 -> 194)
;;  succ:       19 (FALLTHRU)
;;              20

;; basic block 19, loop depth 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL)
;;  pred:       18 (FALLTHRU)
(note 184 183 185 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 185 184 186 19 (set (reg:SI 2 r2)
        (const_int 21 [0x15])) "sdc.c":136:8 253 {*arm_movsi_insn}
     (nil))
(insn 186 185 187 19 (set (reg:SI 1 r1)
        (const_int 0 [0])) "sdc.c":136:8 253 {*arm_movsi_insn}
     (nil))
(insn 187 186 188 19 (set (reg:SI 0 r0)
        (const_int 12 [0xc])) "sdc.c":136:8 253 {*arm_movsi_insn}
     (nil))
(call_insn 188 187 189 19 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_command") [flags 0x3]  <function_decl 0x7f2800e61e00 do_command>) [0 do_command S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "sdc.c":136:8 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 189 188 190 19 (set (reg/f:SI 212)
        (symbol_ref:SI ("txdone") [flags 0x2]  <var_decl 0x7f2800e6a630 txdone>)) "sdc.c":137:15 253 {*arm_movsi_insn}
     (nil))
(insn 190 189 191 19 (set (reg:SI 213)
        (const_int 1 [0x1])) "sdc.c":137:15 253 {*arm_movsi_insn}
     (nil))
(insn 191 190 192 19 (set (mem/c:SI (reg/f:SI 212) [1 txdone+0 S4 A32])
        (reg:SI 213)) "sdc.c":137:15 253 {*arm_movsi_insn}
     (nil))
(insn 192 191 193 19 (set (reg:SI 0 r0)
        (symbol_ref:SI ("txsem") [flags 0x2]  <var_decl 0x7f2800e6a750 txsem>)) "sdc.c":138:8 253 {*arm_movsi_insn}
     (nil))
(call_insn 193 192 194 19 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("V") [flags 0x41]  <function_decl 0x7f2800e73200 V>) [0 V S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "sdc.c":138:8 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
;;  succ:       20 (FALLTHRU)

;; basic block 20, loop depth 0, maybe hot
;;  prev block 19, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 [always]  (FALLTHRU)
;;              11
;;              18
;;              19 (FALLTHRU)
;;              9
(code_label 194 193 195 20 9 (nil) [3 uses])
(note 195 194 196 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 196 195 197 20 (set (reg/f:SI 214)
        (symbol_ref:SI ("base") [flags 0x2]  <var_decl 0x7f2800e6a2d0 base>)) "sdc.c":142:17 253 {*arm_movsi_insn}
     (nil))
(insn 197 196 198 20 (set (reg:SI 150 [ base.18_38 ])
        (mem/c:SI (reg/f:SI 214) [1 base+0 S4 A32])) "sdc.c":142:17 253 {*arm_movsi_insn}
     (nil))
(insn 198 197 199 20 (set (reg:SI 151 [ _39 ])
        (plus:SI (reg:SI 150 [ base.18_38 ])
            (const_int 56 [0x38]))) "sdc.c":142:17 7 {*arm_addsi3}
     (nil))
(insn 199 198 200 20 (set (reg/f:SI 152 [ _40 ])
        (reg:SI 151 [ _39 ])) "sdc.c":142:4 253 {*arm_movsi_insn}
     (nil))
(insn 200 199 201 20 (set (reg:SI 215)
        (const_int -1 [0xffffffffffffffff])) "sdc.c":142:33 253 {*arm_movsi_insn}
     (nil))
(insn 201 200 204 20 (set (mem:SI (reg/f:SI 152 [ _40 ]) [1 *_40+0 S4 A32])
        (reg:SI 215)) "sdc.c":142:33 253 {*arm_movsi_insn}
     (nil))
(insn 204 201 205 20 (clobber (reg/i:SI 0 r0)) "sdc.c":144:1 -1
     (nil))
(insn 205 204 208 20 (clobber (reg:SI 153 [ <retval> ])) "sdc.c":144:1 -1
     (nil))
(insn 208 205 203 20 (const_int 0 [0]) "sdc.c":144:1 311 {nop}
     (nil))
(insn 203 208 206 20 (set (reg/i:SI 0 r0)
        (reg:SI 153 [ <retval> ])) "sdc.c":144:1 253 {*arm_movsi_insn}
     (nil))
(insn 206 203 0 20 (use (reg/i:SI 0 r0)) "sdc.c":144:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function sdc_init (sdc_init, funcdef_no=2, decl_uid=4506, cgraph_uid=3, symbol_order=11)


3 basic blocks, 2 edges.
;; basic block 0, loop depth 0, maybe hot
;;  prev block (nil), next block 2, flags: (RTL)
;;  pred:      
;;  succ:       2 (FALLTHRU)

;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 124)
        (const_int 1164378112 [0x45670000])) "sdc.c":148:7 253 {*arm_movsi_insn}
     (nil))
(insn 6 5 7 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 RCA+0 S4 A32])
        (reg:SI 124)) "sdc.c":148:7 253 {*arm_movsi_insn}
     (nil))
(insn 7 6 8 2 (set (reg/f:SI 125)
        (symbol_ref:SI ("base") [flags 0x2]  <var_decl 0x7f2800e6a2d0 base>)) "sdc.c":149:11 253 {*arm_movsi_insn}
     (nil))
(insn 8 7 9 2 (set (reg:SI 126)
        (const_int 268455936 [0x10005000])) "sdc.c":149:11 253 {*arm_movsi_insn}
     (nil))
(insn 9 8 10 2 (set (mem/c:SI (reg/f:SI 125) [1 base+0 S4 A32])
        (reg:SI 126)) "sdc.c":149:11 253 {*arm_movsi_insn}
     (nil))
(insn 10 9 11 2 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x7f2800e83480 *.LC0>)) "sdc.c":150:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 11 10 12 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kprintf") [flags 0x41]  <function_decl 0x7f2800e73700 kprintf>) [0 kprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "sdc.c":150:3 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 12 11 13 2 (set (reg/f:SI 127)
        (symbol_ref:SI ("base") [flags 0x2]  <var_decl 0x7f2800e6a2d0 base>)) "sdc.c":151:4 253 {*arm_movsi_insn}
     (nil))
(insn 13 12 14 2 (set (reg:SI 113 [ base.19_1 ])
        (mem/c:SI (reg/f:SI 127) [1 base+0 S4 A32])) "sdc.c":151:4 253 {*arm_movsi_insn}
     (nil))
(insn 14 13 15 2 (set (reg/f:SI 114 [ base.20_2 ])
        (reg:SI 113 [ base.19_1 ])) "sdc.c":151:4 253 {*arm_movsi_insn}
     (nil))
(insn 15 14 16 2 (set (reg:SI 128)
        (const_int 191 [0xbf])) "sdc.c":151:26 253 {*arm_movsi_insn}
     (nil))
(insn 16 15 17 2 (set (mem:SI (reg/f:SI 114 [ base.20_2 ]) [1 *base.20_2+0 S4 A32])
        (reg:SI 128)) "sdc.c":151:26 253 {*arm_movsi_insn}
     (nil))
(insn 17 16 18 2 (set (reg/f:SI 129)
        (symbol_ref:SI ("base") [flags 0x2]  <var_decl 0x7f2800e6a2d0 base>)) "sdc.c":152:17 253 {*arm_movsi_insn}
     (nil))
(insn 18 17 19 2 (set (reg:SI 115 [ base.21_3 ])
        (mem/c:SI (reg/f:SI 129) [1 base+0 S4 A32])) "sdc.c":152:17 253 {*arm_movsi_insn}
     (nil))
(insn 19 18 20 2 (set (reg:SI 116 [ _4 ])
        (plus:SI (reg:SI 115 [ base.21_3 ])
            (const_int 4 [0x4]))) "sdc.c":152:17 7 {*arm_addsi3}
     (nil))
(insn 20 19 21 2 (set (reg/f:SI 117 [ _5 ])
        (reg:SI 116 [ _4 ])) "sdc.c":152:4 253 {*arm_movsi_insn}
     (nil))
(insn 21 20 22 2 (set (reg:SI 130)
        (const_int 198 [0xc6])) "sdc.c":152:26 253 {*arm_movsi_insn}
     (nil))
(insn 22 21 23 2 (set (mem:SI (reg/f:SI 117 [ _5 ]) [1 *_5+0 S4 A32])
        (reg:SI 130)) "sdc.c":152:26 253 {*arm_movsi_insn}
     (nil))
(insn 23 22 24 2 (set (reg:SI 2 r2)
        (const_int 0 [0])) "sdc.c":155:3 253 {*arm_movsi_insn}
     (nil))
(insn 24 23 25 2 (set (reg:SI 1 r1)
        (const_int 0 [0])) "sdc.c":155:3 253 {*arm_movsi_insn}
     (nil))
(insn 25 24 26 2 (set (reg:SI 0 r0)
        (const_int 0 [0])) "sdc.c":155:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 26 25 27 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_command") [flags 0x3]  <function_decl 0x7f2800e61e00 do_command>) [0 do_command S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "sdc.c":155:3 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 27 26 28 2 (set (reg:SI 2 r2)
        (const_int 21 [0x15])) "sdc.c":156:3 253 {*arm_movsi_insn}
     (nil))
(insn 28 27 29 2 (set (reg:SI 1 r1)
        (const_int 0 [0])) "sdc.c":156:3 253 {*arm_movsi_insn}
     (nil))
(insn 29 28 30 2 (set (reg:SI 0 r0)
        (const_int 55 [0x37])) "sdc.c":156:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 30 29 31 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_command") [flags 0x3]  <function_decl 0x7f2800e61e00 do_command>) [0 do_command S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "sdc.c":156:3 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 31 30 32 2 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) "sdc.c":158:3 253 {*arm_movsi_insn}
     (nil))
(insn 32 31 33 2 (set (reg:SI 1 r1)
        (const_int 65535 [0xffff])) "sdc.c":158:3 253 {*arm_movsi_insn}
     (nil))
(insn 33 32 34 2 (set (reg:SI 0 r0)
        (const_int 41 [0x29])) "sdc.c":158:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 34 33 35 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_command") [flags 0x3]  <function_decl 0x7f2800e61e00 do_command>) [0 do_command S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "sdc.c":158:3 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 35 34 36 2 (set (reg:SI 2 r2)
        (const_int 7 [0x7])) "sdc.c":159:3 253 {*arm_movsi_insn}
     (nil))
(insn 36 35 37 2 (set (reg:SI 1 r1)
        (const_int 0 [0])) "sdc.c":159:3 253 {*arm_movsi_insn}
     (nil))
(insn 37 36 38 2 (set (reg:SI 0 r0)
        (const_int 2 [0x2])) "sdc.c":159:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 38 37 39 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_command") [flags 0x3]  <function_decl 0x7f2800e61e00 do_command>) [0 do_command S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "sdc.c":159:3 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 39 38 40 2 (set (reg:SI 118 [ RCA.22_6 ])
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 RCA+0 S4 A32])) "sdc.c":160:3 253 {*arm_movsi_insn}
     (nil))
(insn 40 39 41 2 (set (reg:SI 2 r2)
        (const_int 21 [0x15])) "sdc.c":160:3 253 {*arm_movsi_insn}
     (nil))
(insn 41 40 42 2 (set (reg:SI 1 r1)
        (reg:SI 118 [ RCA.22_6 ])) "sdc.c":160:3 253 {*arm_movsi_insn}
     (nil))
(insn 42 41 43 2 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) "sdc.c":160:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 43 42 44 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_command") [flags 0x3]  <function_decl 0x7f2800e61e00 do_command>) [0 do_command S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "sdc.c":160:3 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 44 43 45 2 (set (reg:SI 119 [ RCA.23_7 ])
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 RCA+0 S4 A32])) "sdc.c":161:3 253 {*arm_movsi_insn}
     (nil))
(insn 45 44 46 2 (set (reg:SI 2 r2)
        (const_int 21 [0x15])) "sdc.c":161:3 253 {*arm_movsi_insn}
     (nil))
(insn 46 45 47 2 (set (reg:SI 1 r1)
        (reg:SI 119 [ RCA.23_7 ])) "sdc.c":161:3 253 {*arm_movsi_insn}
     (nil))
(insn 47 46 48 2 (set (reg:SI 0 r0)
        (const_int 7 [0x7])) "sdc.c":161:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 48 47 49 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_command") [flags 0x3]  <function_decl 0x7f2800e61e00 do_command>) [0 do_command S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "sdc.c":161:3 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 49 48 50 2 (set (reg:SI 2 r2)
        (const_int 21 [0x15])) "sdc.c":162:3 253 {*arm_movsi_insn}
     (nil))
(insn 50 49 51 2 (set (reg:SI 1 r1)
        (const_int 512 [0x200])) "sdc.c":162:3 253 {*arm_movsi_insn}
     (nil))
(insn 51 50 52 2 (set (reg:SI 0 r0)
        (const_int 16 [0x10])) "sdc.c":162:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 52 51 53 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_command") [flags 0x3]  <function_decl 0x7f2800e61e00 do_command>) [0 do_command S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "sdc.c":162:3 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 53 52 54 2 (set (reg/f:SI 131)
        (symbol_ref:SI ("base") [flags 0x2]  <var_decl 0x7f2800e6a2d0 base>)) "sdc.c":165:17 253 {*arm_movsi_insn}
     (nil))
(insn 54 53 55 2 (set (reg:SI 120 [ base.24_8 ])
        (mem/c:SI (reg/f:SI 131) [1 base+0 S4 A32])) "sdc.c":165:17 253 {*arm_movsi_insn}
     (nil))
(insn 55 54 56 2 (set (reg:SI 121 [ _9 ])
        (plus:SI (reg:SI 120 [ base.24_8 ])
            (const_int 60 [0x3c]))) "sdc.c":165:17 7 {*arm_addsi3}
     (nil))
(insn 56 55 57 2 (set (reg/f:SI 122 [ _10 ])
        (reg:SI 121 [ _9 ])) "sdc.c":165:4 253 {*arm_movsi_insn}
     (nil))
(insn 57 56 58 2 (set (reg:SI 132)
        (const_int 393216 [0x60000])) "sdc.c":165:26 253 {*arm_movsi_insn}
     (nil))
(insn 58 57 59 2 (set (mem:SI (reg/f:SI 122 [ _10 ]) [1 *_10+0 S4 A32])
        (reg:SI 132)) "sdc.c":165:26 253 {*arm_movsi_insn}
     (nil))
(insn 59 58 60 2 (set (reg/f:SI 133)
        (symbol_ref:SI ("rxsem") [flags 0x2]  <var_decl 0x7f2800e6a6c0 rxsem>)) "sdc.c":167:15 253 {*arm_movsi_insn}
     (nil))
(insn 60 59 61 2 (set (reg:SI 134)
        (const_int 0 [0])) "sdc.c":167:15 253 {*arm_movsi_insn}
     (nil))
(insn 61 60 62 2 (set (mem/c:SI (reg/f:SI 133) [1 rxsem.value+0 S4 A32])
        (reg:SI 134)) "sdc.c":167:15 253 {*arm_movsi_insn}
     (nil))
(insn 62 61 63 2 (set (reg/f:SI 135)
        (symbol_ref:SI ("rxsem") [flags 0x2]  <var_decl 0x7f2800e6a6c0 rxsem>)) "sdc.c":168:15 253 {*arm_movsi_insn}
     (nil))
(insn 63 62 64 2 (set (reg:SI 136)
        (const_int 0 [0])) "sdc.c":168:15 253 {*arm_movsi_insn}
     (nil))
(insn 64 63 65 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 135)
                (const_int 4 [0x4])) [5 rxsem.queue+0 S4 A32])
        (reg:SI 136)) "sdc.c":168:15 253 {*arm_movsi_insn}
     (nil))
(insn 65 64 66 2 (set (reg/f:SI 137)
        (symbol_ref:SI ("txsem") [flags 0x2]  <var_decl 0x7f2800e6a750 txsem>)) "sdc.c":169:15 253 {*arm_movsi_insn}
     (nil))
(insn 66 65 67 2 (set (reg:SI 138)
        (const_int 0 [0])) "sdc.c":169:15 253 {*arm_movsi_insn}
     (nil))
(insn 67 66 68 2 (set (mem/c:SI (reg/f:SI 137) [1 txsem.value+0 S4 A32])
        (reg:SI 138)) "sdc.c":169:15 253 {*arm_movsi_insn}
     (nil))
(insn 68 67 69 2 (set (reg/f:SI 139)
        (symbol_ref:SI ("txsem") [flags 0x2]  <var_decl 0x7f2800e6a750 txsem>)) "sdc.c":170:15 253 {*arm_movsi_insn}
     (nil))
(insn 69 68 70 2 (set (reg:SI 140)
        (const_int 0 [0])) "sdc.c":170:15 253 {*arm_movsi_insn}
     (nil))
(insn 70 69 71 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 139)
                (const_int 4 [0x4])) [5 txsem.queue+0 S4 A32])
        (reg:SI 140)) "sdc.c":170:15 253 {*arm_movsi_insn}
     (nil))
(insn 71 70 72 2 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x7f2800e83510 *.LC1>)) "sdc.c":172:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 72 71 75 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kprintf") [flags 0x41]  <function_decl 0x7f2800e73700 kprintf>) [0 kprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "sdc.c":172:3 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 75 72 76 2 (clobber (reg/i:SI 0 r0)) "sdc.c":173:1 -1
     (nil))
(insn 76 75 79 2 (clobber (reg:SI 123 [ <retval> ])) "sdc.c":173:1 -1
     (nil))
(insn 79 76 74 2 (const_int 0 [0]) "sdc.c":173:1 311 {nop}
     (nil))
(insn 74 79 77 2 (set (reg/i:SI 0 r0)
        (reg:SI 123 [ <retval> ])) "sdc.c":173:1 253 {*arm_movsi_insn}
     (nil))
(insn 77 74 0 2 (use (reg/i:SI 0 r0)) "sdc.c":173:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)

;; basic block 1, loop depth 0, maybe hot
;;  prev block 2, next block (nil), flags: (REACHABLE, RTL)
;;  pred:       2 [always]  (FALLTHRU)
;;  succ:      




try_optimize_cfg iteration 1

;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 124)
        (const_int 1164378112 [0x45670000])) "sdc.c":148:7 253 {*arm_movsi_insn}
     (nil))
(insn 6 5 7 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 RCA+0 S4 A32])
        (reg:SI 124)) "sdc.c":148:7 253 {*arm_movsi_insn}
     (nil))
(insn 7 6 8 2 (set (reg/f:SI 125)
        (symbol_ref:SI ("base") [flags 0x2]  <var_decl 0x7f2800e6a2d0 base>)) "sdc.c":149:11 253 {*arm_movsi_insn}
     (nil))
(insn 8 7 9 2 (set (reg:SI 126)
        (const_int 268455936 [0x10005000])) "sdc.c":149:11 253 {*arm_movsi_insn}
     (nil))
(insn 9 8 10 2 (set (mem/c:SI (reg/f:SI 125) [1 base+0 S4 A32])
        (reg:SI 126)) "sdc.c":149:11 253 {*arm_movsi_insn}
     (nil))
(insn 10 9 11 2 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x7f2800e83480 *.LC0>)) "sdc.c":150:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 11 10 12 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kprintf") [flags 0x41]  <function_decl 0x7f2800e73700 kprintf>) [0 kprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "sdc.c":150:3 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 12 11 13 2 (set (reg/f:SI 127)
        (symbol_ref:SI ("base") [flags 0x2]  <var_decl 0x7f2800e6a2d0 base>)) "sdc.c":151:4 253 {*arm_movsi_insn}
     (nil))
(insn 13 12 14 2 (set (reg:SI 113 [ base.19_1 ])
        (mem/c:SI (reg/f:SI 127) [1 base+0 S4 A32])) "sdc.c":151:4 253 {*arm_movsi_insn}
     (nil))
(insn 14 13 15 2 (set (reg/f:SI 114 [ base.20_2 ])
        (reg:SI 113 [ base.19_1 ])) "sdc.c":151:4 253 {*arm_movsi_insn}
     (nil))
(insn 15 14 16 2 (set (reg:SI 128)
        (const_int 191 [0xbf])) "sdc.c":151:26 253 {*arm_movsi_insn}
     (nil))
(insn 16 15 17 2 (set (mem:SI (reg/f:SI 114 [ base.20_2 ]) [1 *base.20_2+0 S4 A32])
        (reg:SI 128)) "sdc.c":151:26 253 {*arm_movsi_insn}
     (nil))
(insn 17 16 18 2 (set (reg/f:SI 129)
        (symbol_ref:SI ("base") [flags 0x2]  <var_decl 0x7f2800e6a2d0 base>)) "sdc.c":152:17 253 {*arm_movsi_insn}
     (nil))
(insn 18 17 19 2 (set (reg:SI 115 [ base.21_3 ])
        (mem/c:SI (reg/f:SI 129) [1 base+0 S4 A32])) "sdc.c":152:17 253 {*arm_movsi_insn}
     (nil))
(insn 19 18 20 2 (set (reg:SI 116 [ _4 ])
        (plus:SI (reg:SI 115 [ base.21_3 ])
            (const_int 4 [0x4]))) "sdc.c":152:17 7 {*arm_addsi3}
     (nil))
(insn 20 19 21 2 (set (reg/f:SI 117 [ _5 ])
        (reg:SI 116 [ _4 ])) "sdc.c":152:4 253 {*arm_movsi_insn}
     (nil))
(insn 21 20 22 2 (set (reg:SI 130)
        (const_int 198 [0xc6])) "sdc.c":152:26 253 {*arm_movsi_insn}
     (nil))
(insn 22 21 23 2 (set (mem:SI (reg/f:SI 117 [ _5 ]) [1 *_5+0 S4 A32])
        (reg:SI 130)) "sdc.c":152:26 253 {*arm_movsi_insn}
     (nil))
(insn 23 22 24 2 (set (reg:SI 2 r2)
        (const_int 0 [0])) "sdc.c":155:3 253 {*arm_movsi_insn}
     (nil))
(insn 24 23 25 2 (set (reg:SI 1 r1)
        (const_int 0 [0])) "sdc.c":155:3 253 {*arm_movsi_insn}
     (nil))
(insn 25 24 26 2 (set (reg:SI 0 r0)
        (const_int 0 [0])) "sdc.c":155:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 26 25 27 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_command") [flags 0x3]  <function_decl 0x7f2800e61e00 do_command>) [0 do_command S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "sdc.c":155:3 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 27 26 28 2 (set (reg:SI 2 r2)
        (const_int 21 [0x15])) "sdc.c":156:3 253 {*arm_movsi_insn}
     (nil))
(insn 28 27 29 2 (set (reg:SI 1 r1)
        (const_int 0 [0])) "sdc.c":156:3 253 {*arm_movsi_insn}
     (nil))
(insn 29 28 30 2 (set (reg:SI 0 r0)
        (const_int 55 [0x37])) "sdc.c":156:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 30 29 31 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_command") [flags 0x3]  <function_decl 0x7f2800e61e00 do_command>) [0 do_command S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "sdc.c":156:3 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 31 30 32 2 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) "sdc.c":158:3 253 {*arm_movsi_insn}
     (nil))
(insn 32 31 33 2 (set (reg:SI 1 r1)
        (const_int 65535 [0xffff])) "sdc.c":158:3 253 {*arm_movsi_insn}
     (nil))
(insn 33 32 34 2 (set (reg:SI 0 r0)
        (const_int 41 [0x29])) "sdc.c":158:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 34 33 35 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_command") [flags 0x3]  <function_decl 0x7f2800e61e00 do_command>) [0 do_command S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "sdc.c":158:3 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 35 34 36 2 (set (reg:SI 2 r2)
        (const_int 7 [0x7])) "sdc.c":159:3 253 {*arm_movsi_insn}
     (nil))
(insn 36 35 37 2 (set (reg:SI 1 r1)
        (const_int 0 [0])) "sdc.c":159:3 253 {*arm_movsi_insn}
     (nil))
(insn 37 36 38 2 (set (reg:SI 0 r0)
        (const_int 2 [0x2])) "sdc.c":159:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 38 37 39 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_command") [flags 0x3]  <function_decl 0x7f2800e61e00 do_command>) [0 do_command S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "sdc.c":159:3 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 39 38 40 2 (set (reg:SI 118 [ RCA.22_6 ])
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 RCA+0 S4 A32])) "sdc.c":160:3 253 {*arm_movsi_insn}
     (nil))
(insn 40 39 41 2 (set (reg:SI 2 r2)
        (const_int 21 [0x15])) "sdc.c":160:3 253 {*arm_movsi_insn}
     (nil))
(insn 41 40 42 2 (set (reg:SI 1 r1)
        (reg:SI 118 [ RCA.22_6 ])) "sdc.c":160:3 253 {*arm_movsi_insn}
     (nil))
(insn 42 41 43 2 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) "sdc.c":160:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 43 42 44 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_command") [flags 0x3]  <function_decl 0x7f2800e61e00 do_command>) [0 do_command S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "sdc.c":160:3 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 44 43 45 2 (set (reg:SI 119 [ RCA.23_7 ])
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 RCA+0 S4 A32])) "sdc.c":161:3 253 {*arm_movsi_insn}
     (nil))
(insn 45 44 46 2 (set (reg:SI 2 r2)
        (const_int 21 [0x15])) "sdc.c":161:3 253 {*arm_movsi_insn}
     (nil))
(insn 46 45 47 2 (set (reg:SI 1 r1)
        (reg:SI 119 [ RCA.23_7 ])) "sdc.c":161:3 253 {*arm_movsi_insn}
     (nil))
(insn 47 46 48 2 (set (reg:SI 0 r0)
        (const_int 7 [0x7])) "sdc.c":161:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 48 47 49 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_command") [flags 0x3]  <function_decl 0x7f2800e61e00 do_command>) [0 do_command S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "sdc.c":161:3 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 49 48 50 2 (set (reg:SI 2 r2)
        (const_int 21 [0x15])) "sdc.c":162:3 253 {*arm_movsi_insn}
     (nil))
(insn 50 49 51 2 (set (reg:SI 1 r1)
        (const_int 512 [0x200])) "sdc.c":162:3 253 {*arm_movsi_insn}
     (nil))
(insn 51 50 52 2 (set (reg:SI 0 r0)
        (const_int 16 [0x10])) "sdc.c":162:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 52 51 53 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_command") [flags 0x3]  <function_decl 0x7f2800e61e00 do_command>) [0 do_command S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "sdc.c":162:3 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 53 52 54 2 (set (reg/f:SI 131)
        (symbol_ref:SI ("base") [flags 0x2]  <var_decl 0x7f2800e6a2d0 base>)) "sdc.c":165:17 253 {*arm_movsi_insn}
     (nil))
(insn 54 53 55 2 (set (reg:SI 120 [ base.24_8 ])
        (mem/c:SI (reg/f:SI 131) [1 base+0 S4 A32])) "sdc.c":165:17 253 {*arm_movsi_insn}
     (nil))
(insn 55 54 56 2 (set (reg:SI 121 [ _9 ])
        (plus:SI (reg:SI 120 [ base.24_8 ])
            (const_int 60 [0x3c]))) "sdc.c":165:17 7 {*arm_addsi3}
     (nil))
(insn 56 55 57 2 (set (reg/f:SI 122 [ _10 ])
        (reg:SI 121 [ _9 ])) "sdc.c":165:4 253 {*arm_movsi_insn}
     (nil))
(insn 57 56 58 2 (set (reg:SI 132)
        (const_int 393216 [0x60000])) "sdc.c":165:26 253 {*arm_movsi_insn}
     (nil))
(insn 58 57 59 2 (set (mem:SI (reg/f:SI 122 [ _10 ]) [1 *_10+0 S4 A32])
        (reg:SI 132)) "sdc.c":165:26 253 {*arm_movsi_insn}
     (nil))
(insn 59 58 60 2 (set (reg/f:SI 133)
        (symbol_ref:SI ("rxsem") [flags 0x2]  <var_decl 0x7f2800e6a6c0 rxsem>)) "sdc.c":167:15 253 {*arm_movsi_insn}
     (nil))
(insn 60 59 61 2 (set (reg:SI 134)
        (const_int 0 [0])) "sdc.c":167:15 253 {*arm_movsi_insn}
     (nil))
(insn 61 60 62 2 (set (mem/c:SI (reg/f:SI 133) [1 rxsem.value+0 S4 A32])
        (reg:SI 134)) "sdc.c":167:15 253 {*arm_movsi_insn}
     (nil))
(insn 62 61 63 2 (set (reg/f:SI 135)
        (symbol_ref:SI ("rxsem") [flags 0x2]  <var_decl 0x7f2800e6a6c0 rxsem>)) "sdc.c":168:15 253 {*arm_movsi_insn}
     (nil))
(insn 63 62 64 2 (set (reg:SI 136)
        (const_int 0 [0])) "sdc.c":168:15 253 {*arm_movsi_insn}
     (nil))
(insn 64 63 65 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 135)
                (const_int 4 [0x4])) [5 rxsem.queue+0 S4 A32])
        (reg:SI 136)) "sdc.c":168:15 253 {*arm_movsi_insn}
     (nil))
(insn 65 64 66 2 (set (reg/f:SI 137)
        (symbol_ref:SI ("txsem") [flags 0x2]  <var_decl 0x7f2800e6a750 txsem>)) "sdc.c":169:15 253 {*arm_movsi_insn}
     (nil))
(insn 66 65 67 2 (set (reg:SI 138)
        (const_int 0 [0])) "sdc.c":169:15 253 {*arm_movsi_insn}
     (nil))
(insn 67 66 68 2 (set (mem/c:SI (reg/f:SI 137) [1 txsem.value+0 S4 A32])
        (reg:SI 138)) "sdc.c":169:15 253 {*arm_movsi_insn}
     (nil))
(insn 68 67 69 2 (set (reg/f:SI 139)
        (symbol_ref:SI ("txsem") [flags 0x2]  <var_decl 0x7f2800e6a750 txsem>)) "sdc.c":170:15 253 {*arm_movsi_insn}
     (nil))
(insn 69 68 70 2 (set (reg:SI 140)
        (const_int 0 [0])) "sdc.c":170:15 253 {*arm_movsi_insn}
     (nil))
(insn 70 69 71 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 139)
                (const_int 4 [0x4])) [5 txsem.queue+0 S4 A32])
        (reg:SI 140)) "sdc.c":170:15 253 {*arm_movsi_insn}
     (nil))
(insn 71 70 72 2 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x7f2800e83510 *.LC1>)) "sdc.c":172:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 72 71 75 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kprintf") [flags 0x41]  <function_decl 0x7f2800e73700 kprintf>) [0 kprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "sdc.c":172:3 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 75 72 76 2 (clobber (reg/i:SI 0 r0)) "sdc.c":173:1 -1
     (nil))
(insn 76 75 79 2 (clobber (reg:SI 123 [ <retval> ])) "sdc.c":173:1 -1
     (nil))
(insn 79 76 74 2 (const_int 0 [0]) "sdc.c":173:1 311 {nop}
     (nil))
(insn 74 79 77 2 (set (reg/i:SI 0 r0)
        (reg:SI 123 [ <retval> ])) "sdc.c":173:1 253 {*arm_movsi_insn}
     (nil))
(insn 77 74 0 2 (use (reg/i:SI 0 r0)) "sdc.c":173:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function getblock (getblock, funcdef_no=3, decl_uid=4513, cgraph_uid=4, symbol_order=12)


7 basic blocks, 8 edges.
;; basic block 0, loop depth 0, maybe hot
;;  prev block (nil), next block 2, flags: (RTL)
;;  pred:      
;;  succ:       2 (FALLTHRU)

;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [1 blk+0 S4 A32])
        (reg:SI 0 r0 [ blk ])) "sdc.c":176:1 253 {*arm_movsi_insn}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [3 buf+0 S4 A32])
        (reg:SI 1 r1 [ buf ])) "sdc.c":176:1 253 {*arm_movsi_insn}
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:SI 129)
        (symbol_ref:SI ("rxbuf") [flags 0x2]  <var_decl 0x7f2800e6a360 rxbuf>)) "sdc.c":180:9 253 {*arm_movsi_insn}
     (nil))
(insn 8 7 9 2 (set (reg/f:SI 130)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [3 buf+0 S4 A32])) "sdc.c":180:9 253 {*arm_movsi_insn}
     (nil))
(insn 9 8 10 2 (set (mem/f/c:SI (reg/f:SI 129) [3 rxbuf+0 S4 A32])
        (reg/f:SI 130)) "sdc.c":180:9 253 {*arm_movsi_insn}
     (nil))
(insn 10 9 11 2 (set (reg/f:SI 131)
        (symbol_ref:SI ("rxcount") [flags 0x2]  <var_decl 0x7f2800e6a480 rxcount>)) "sdc.c":180:24 253 {*arm_movsi_insn}
     (nil))
(insn 11 10 12 2 (set (reg:SI 132)
        (const_int 1024 [0x400])) "sdc.c":180:24 253 {*arm_movsi_insn}
     (nil))
(insn 12 11 13 2 (set (mem/c:SI (reg/f:SI 131) [1 rxcount+0 S4 A32])
        (reg:SI 132)) "sdc.c":180:24 253 {*arm_movsi_insn}
     (nil))
(insn 13 12 14 2 (set (reg/f:SI 133)
        (symbol_ref:SI ("rxsem") [flags 0x2]  <var_decl 0x7f2800e6a6c0 rxsem>)) "sdc.c":181:15 253 {*arm_movsi_insn}
     (nil))
(insn 14 13 15 2 (set (reg:SI 134)
        (const_int 0 [0])) "sdc.c":181:15 253 {*arm_movsi_insn}
     (nil))
(insn 15 14 16 2 (set (mem/c:SI (reg/f:SI 133) [1 rxsem.value+0 S4 A32])
        (reg:SI 134)) "sdc.c":181:15 253 {*arm_movsi_insn}
     (nil))
(insn 16 15 17 2 (set (reg/f:SI 135)
        (symbol_ref:SI ("rxsem") [flags 0x2]  <var_decl 0x7f2800e6a6c0 rxsem>)) "sdc.c":182:15 253 {*arm_movsi_insn}
     (nil))
(insn 17 16 18 2 (set (reg:SI 136)
        (const_int 0 [0])) "sdc.c":182:15 253 {*arm_movsi_insn}
     (nil))
(insn 18 17 19 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 135)
                (const_int 4 [0x4])) [5 rxsem.queue+0 S4 A32])
        (reg:SI 136)) "sdc.c":182:15 253 {*arm_movsi_insn}
     (nil))
(insn 19 18 20 2 (set (reg/f:SI 137)
        (symbol_ref:SI ("rxdone") [flags 0x2]  <var_decl 0x7f2800e6a5a0 rxdone>)) "sdc.c":183:10 253 {*arm_movsi_insn}
     (nil))
(insn 20 19 21 2 (set (reg:SI 138)
        (const_int 0 [0])) "sdc.c":183:10 253 {*arm_movsi_insn}
     (nil))
(insn 21 20 22 2 (set (mem/c:SI (reg/f:SI 137) [1 rxdone+0 S4 A32])
        (reg:SI 138)) "sdc.c":183:10 253 {*arm_movsi_insn}
     (nil))
(insn 22 21 23 2 (set (reg/f:SI 139)
        (symbol_ref:SI ("base") [flags 0x2]  <var_decl 0x7f2800e6a2d0 base>)) "sdc.c":185:17 253 {*arm_movsi_insn}
     (nil))
(insn 23 22 24 2 (set (reg:SI 113 [ base.25_1 ])
        (mem/c:SI (reg/f:SI 139) [1 base+0 S4 A32])) "sdc.c":185:17 253 {*arm_movsi_insn}
     (nil))
(insn 24 23 25 2 (set (reg:SI 114 [ _2 ])
        (plus:SI (reg:SI 113 [ base.25_1 ])
            (const_int 36 [0x24]))) "sdc.c":185:17 7 {*arm_addsi3}
     (nil))
(insn 25 24 26 2 (set (reg/f:SI 115 [ _3 ])
        (reg:SI 114 [ _2 ])) "sdc.c":185:4 253 {*arm_movsi_insn}
     (nil))
(insn 26 25 27 2 (set (reg:SI 140)
        (const_int -65536 [0xffffffffffff0000])) "sdc.c":185:30 253 {*arm_movsi_insn}
     (nil))
(insn 27 26 28 2 (set (mem:SI (reg/f:SI 115 [ _3 ]) [1 *_3+0 S4 A32])
        (reg:SI 140)) "sdc.c":185:30 253 {*arm_movsi_insn}
     (nil))
(insn 28 27 29 2 (set (reg/f:SI 141)
        (symbol_ref:SI ("base") [flags 0x2]  <var_decl 0x7f2800e6a2d0 base>)) "sdc.c":187:17 253 {*arm_movsi_insn}
     (nil))
(insn 29 28 30 2 (set (reg:SI 116 [ base.26_4 ])
        (mem/c:SI (reg/f:SI 141) [1 base+0 S4 A32])) "sdc.c":187:17 253 {*arm_movsi_insn}
     (nil))
(insn 30 29 31 2 (set (reg:SI 117 [ _5 ])
        (plus:SI (reg:SI 116 [ base.26_4 ])
            (const_int 40 [0x28]))) "sdc.c":187:17 7 {*arm_addsi3}
     (nil))
(insn 31 30 32 2 (set (reg/f:SI 118 [ _6 ])
        (reg:SI 117 [ _5 ])) "sdc.c":187:4 253 {*arm_movsi_insn}
     (nil))
(insn 32 31 33 2 (set (reg:SI 142)
        (const_int 1024 [0x400])) "sdc.c":187:31 253 {*arm_movsi_insn}
     (nil))
(insn 33 32 34 2 (set (mem:SI (reg/f:SI 118 [ _6 ]) [1 *_6+0 S4 A32])
        (reg:SI 142)) "sdc.c":187:31 253 {*arm_movsi_insn}
     (nil))
(insn 34 33 35 2 (set (reg:SI 143)
        (const_int 18 [0x12])) "sdc.c":189:7 253 {*arm_movsi_insn}
     (nil))
(insn 35 34 36 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [1 cmd+0 S4 A64])
        (reg:SI 143)) "sdc.c":189:7 253 {*arm_movsi_insn}
     (nil))
(insn 36 35 37 2 (set (reg:SI 144)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [1 blk+0 S4 A32])) "sdc.c":190:17 253 {*arm_movsi_insn}
     (nil))
(insn 37 36 38 2 (set (reg:SI 119 [ _7 ])
        (ashift:SI (reg:SI 144)
            (const_int 10 [0xa]))) "sdc.c":190:17 147 {*arm_shiftsi3}
     (nil))
(insn 38 37 39 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 arg+0 S4 A32])
        (reg:SI 119 [ _7 ])) "sdc.c":190:7 253 {*arm_movsi_insn}
     (nil))
(insn 39 38 40 2 (set (reg:SI 120 [ cmd.27_8 ])
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [1 cmd+0 S4 A64])) "sdc.c":191:3 253 {*arm_movsi_insn}
     (nil))
(insn 40 39 41 2 (set (reg:SI 121 [ arg.28_9 ])
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 arg+0 S4 A32])) "sdc.c":191:3 253 {*arm_movsi_insn}
     (nil))
(insn 41 40 42 2 (set (reg:SI 2 r2)
        (const_int 21 [0x15])) "sdc.c":191:3 253 {*arm_movsi_insn}
     (nil))
(insn 42 41 43 2 (set (reg:SI 1 r1)
        (reg:SI 121 [ arg.28_9 ])) "sdc.c":191:3 253 {*arm_movsi_insn}
     (nil))
(insn 43 42 44 2 (set (reg:SI 0 r0)
        (reg:SI 120 [ cmd.27_8 ])) "sdc.c":191:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 44 43 45 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_command") [flags 0x3]  <function_decl 0x7f2800e61e00 do_command>) [0 do_command S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "sdc.c":191:3 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 45 44 46 2 (set (reg/f:SI 145)
        (symbol_ref:SI ("base") [flags 0x2]  <var_decl 0x7f2800e6a2d0 base>)) "sdc.c":195:17 253 {*arm_movsi_insn}
     (nil))
(insn 46 45 47 2 (set (reg:SI 122 [ base.29_10 ])
        (mem/c:SI (reg/f:SI 145) [1 base+0 S4 A32])) "sdc.c":195:17 253 {*arm_movsi_insn}
     (nil))
(insn 47 46 48 2 (set (reg:SI 123 [ _11 ])
        (plus:SI (reg:SI 122 [ base.29_10 ])
            (const_int 44 [0x2c]))) "sdc.c":195:17 7 {*arm_addsi3}
     (nil))
(insn 48 47 49 2 (set (reg/f:SI 124 [ _12 ])
        (reg:SI 123 [ _11 ])) "sdc.c":195:4 253 {*arm_movsi_insn}
     (nil))
(insn 49 48 50 2 (set (reg:SI 146)
        (const_int 147 [0x93])) "sdc.c":195:29 253 {*arm_movsi_insn}
     (nil))
(insn 50 49 51 2 (set (mem:SI (reg/f:SI 124 [ _12 ]) [1 *_12+0 S4 A32])
        (reg:SI 146)) "sdc.c":195:29 253 {*arm_movsi_insn}
     (nil))
(insn 51 50 52 2 (set (reg/f:SI 147)
        (symbol_ref:SI ("running") [flags 0x40]  <var_decl 0x7f2801b4c7e0 running>)) "sdc.c":198:14 253 {*arm_movsi_insn}
     (nil))
(insn 52 51 53 2 (set (reg/f:SI 125 [ running.30_13 ])
        (mem/f/c:SI (reg/f:SI 147) [5 running+0 S4 A32])) "sdc.c":198:14 253 {*arm_movsi_insn}
     (nil))
(insn 53 52 54 2 (set (reg:SI 126 [ _14 ])
        (mem:SI (plus:SI (reg/f:SI 125 [ running.30_13 ])
                (const_int 24 [0x18])) [1 running.30_13->pid+0 S4 A32])) "sdc.c":198:14 253 {*arm_movsi_insn}
     (nil))
(insn 54 53 55 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 126 [ _14 ])
            (const_int 0 [0]))) "sdc.c":198:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 55 54 56 2 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 61)
            (pc))) "sdc.c":198:6 273 {arm_cond_branch}
     (nil)
 -> 61)
;;  succ:       3 (FALLTHRU)
;;              4

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 56 55 57 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 3 (set (reg:SI 0 r0)
        (symbol_ref:SI ("rxsem") [flags 0x2]  <var_decl 0x7f2800e6a6c0 rxsem>)) "sdc.c":199:6 253 {*arm_movsi_insn}
     (nil))
(call_insn 58 57 61 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("P") [flags 0x41]  <function_decl 0x7f2800e73b00 P>) [0 P S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "sdc.c":199:6 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
;;  succ:       6 [always]  (FALLTHRU)

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
(code_label 61 58 62 4 19 (nil) [1 uses])
(note 62 61 66 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       5 (FALLTHRU)

;; basic block 5, loop depth 1, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
;;              5 (DFS_BACK)
(code_label 66 62 63 5 21 (nil) [1 uses])
(note 63 66 64 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 5 (set (reg/f:SI 148)
        (symbol_ref:SI ("rxdone") [flags 0x2]  <var_decl 0x7f2800e6a5a0 rxdone>)) "sdc.c":201:17 253 {*arm_movsi_insn}
     (nil))
(insn 65 64 67 5 (set (reg:SI 127 [ rxdone.31_15 ])
        (mem/c:SI (reg/f:SI 148) [1 rxdone+0 S4 A32])) "sdc.c":201:17 253 {*arm_movsi_insn}
     (nil))
(insn 67 65 68 5 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 127 [ rxdone.31_15 ])
            (const_int 0 [0]))) "sdc.c":201:17 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 68 67 69 5 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 66)
            (pc))) "sdc.c":201:17 273 {arm_cond_branch}
     (nil)
 -> 66)
;;  succ:       5 (DFS_BACK)
;;              6 (FALLTHRU)

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 [always]  (FALLTHRU)
;;              5 (FALLTHRU)
(code_label 69 68 70 6 20 (nil) [0 uses])
(note 70 69 73 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 73 70 74 6 (clobber (reg/i:SI 0 r0)) "sdc.c":204:1 -1
     (nil))
(insn 74 73 77 6 (clobber (reg:SI 128 [ <retval> ])) "sdc.c":204:1 -1
     (nil))
(insn 77 74 72 6 (const_int 0 [0]) "sdc.c":204:1 311 {nop}
     (nil))
(insn 72 77 75 6 (set (reg/i:SI 0 r0)
        (reg:SI 128 [ <retval> ])) "sdc.c":204:1 253 {*arm_movsi_insn}
     (nil))
(insn 75 72 0 6 (use (reg/i:SI 0 r0)) "sdc.c":204:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)

;; basic block 1, loop depth 0, maybe hot
;;  prev block 6, next block (nil), flags: (REACHABLE, RTL)
;;  pred:       6 [always]  (FALLTHRU)
;;  succ:      




try_optimize_cfg iteration 1

;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [1 blk+0 S4 A32])
        (reg:SI 0 r0 [ blk ])) "sdc.c":176:1 253 {*arm_movsi_insn}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [3 buf+0 S4 A32])
        (reg:SI 1 r1 [ buf ])) "sdc.c":176:1 253 {*arm_movsi_insn}
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:SI 129)
        (symbol_ref:SI ("rxbuf") [flags 0x2]  <var_decl 0x7f2800e6a360 rxbuf>)) "sdc.c":180:9 253 {*arm_movsi_insn}
     (nil))
(insn 8 7 9 2 (set (reg/f:SI 130)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [3 buf+0 S4 A32])) "sdc.c":180:9 253 {*arm_movsi_insn}
     (nil))
(insn 9 8 10 2 (set (mem/f/c:SI (reg/f:SI 129) [3 rxbuf+0 S4 A32])
        (reg/f:SI 130)) "sdc.c":180:9 253 {*arm_movsi_insn}
     (nil))
(insn 10 9 11 2 (set (reg/f:SI 131)
        (symbol_ref:SI ("rxcount") [flags 0x2]  <var_decl 0x7f2800e6a480 rxcount>)) "sdc.c":180:24 253 {*arm_movsi_insn}
     (nil))
(insn 11 10 12 2 (set (reg:SI 132)
        (const_int 1024 [0x400])) "sdc.c":180:24 253 {*arm_movsi_insn}
     (nil))
(insn 12 11 13 2 (set (mem/c:SI (reg/f:SI 131) [1 rxcount+0 S4 A32])
        (reg:SI 132)) "sdc.c":180:24 253 {*arm_movsi_insn}
     (nil))
(insn 13 12 14 2 (set (reg/f:SI 133)
        (symbol_ref:SI ("rxsem") [flags 0x2]  <var_decl 0x7f2800e6a6c0 rxsem>)) "sdc.c":181:15 253 {*arm_movsi_insn}
     (nil))
(insn 14 13 15 2 (set (reg:SI 134)
        (const_int 0 [0])) "sdc.c":181:15 253 {*arm_movsi_insn}
     (nil))
(insn 15 14 16 2 (set (mem/c:SI (reg/f:SI 133) [1 rxsem.value+0 S4 A32])
        (reg:SI 134)) "sdc.c":181:15 253 {*arm_movsi_insn}
     (nil))
(insn 16 15 17 2 (set (reg/f:SI 135)
        (symbol_ref:SI ("rxsem") [flags 0x2]  <var_decl 0x7f2800e6a6c0 rxsem>)) "sdc.c":182:15 253 {*arm_movsi_insn}
     (nil))
(insn 17 16 18 2 (set (reg:SI 136)
        (const_int 0 [0])) "sdc.c":182:15 253 {*arm_movsi_insn}
     (nil))
(insn 18 17 19 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 135)
                (const_int 4 [0x4])) [5 rxsem.queue+0 S4 A32])
        (reg:SI 136)) "sdc.c":182:15 253 {*arm_movsi_insn}
     (nil))
(insn 19 18 20 2 (set (reg/f:SI 137)
        (symbol_ref:SI ("rxdone") [flags 0x2]  <var_decl 0x7f2800e6a5a0 rxdone>)) "sdc.c":183:10 253 {*arm_movsi_insn}
     (nil))
(insn 20 19 21 2 (set (reg:SI 138)
        (const_int 0 [0])) "sdc.c":183:10 253 {*arm_movsi_insn}
     (nil))
(insn 21 20 22 2 (set (mem/c:SI (reg/f:SI 137) [1 rxdone+0 S4 A32])
        (reg:SI 138)) "sdc.c":183:10 253 {*arm_movsi_insn}
     (nil))
(insn 22 21 23 2 (set (reg/f:SI 139)
        (symbol_ref:SI ("base") [flags 0x2]  <var_decl 0x7f2800e6a2d0 base>)) "sdc.c":185:17 253 {*arm_movsi_insn}
     (nil))
(insn 23 22 24 2 (set (reg:SI 113 [ base.25_1 ])
        (mem/c:SI (reg/f:SI 139) [1 base+0 S4 A32])) "sdc.c":185:17 253 {*arm_movsi_insn}
     (nil))
(insn 24 23 25 2 (set (reg:SI 114 [ _2 ])
        (plus:SI (reg:SI 113 [ base.25_1 ])
            (const_int 36 [0x24]))) "sdc.c":185:17 7 {*arm_addsi3}
     (nil))
(insn 25 24 26 2 (set (reg/f:SI 115 [ _3 ])
        (reg:SI 114 [ _2 ])) "sdc.c":185:4 253 {*arm_movsi_insn}
     (nil))
(insn 26 25 27 2 (set (reg:SI 140)
        (const_int -65536 [0xffffffffffff0000])) "sdc.c":185:30 253 {*arm_movsi_insn}
     (nil))
(insn 27 26 28 2 (set (mem:SI (reg/f:SI 115 [ _3 ]) [1 *_3+0 S4 A32])
        (reg:SI 140)) "sdc.c":185:30 253 {*arm_movsi_insn}
     (nil))
(insn 28 27 29 2 (set (reg/f:SI 141)
        (symbol_ref:SI ("base") [flags 0x2]  <var_decl 0x7f2800e6a2d0 base>)) "sdc.c":187:17 253 {*arm_movsi_insn}
     (nil))
(insn 29 28 30 2 (set (reg:SI 116 [ base.26_4 ])
        (mem/c:SI (reg/f:SI 141) [1 base+0 S4 A32])) "sdc.c":187:17 253 {*arm_movsi_insn}
     (nil))
(insn 30 29 31 2 (set (reg:SI 117 [ _5 ])
        (plus:SI (reg:SI 116 [ base.26_4 ])
            (const_int 40 [0x28]))) "sdc.c":187:17 7 {*arm_addsi3}
     (nil))
(insn 31 30 32 2 (set (reg/f:SI 118 [ _6 ])
        (reg:SI 117 [ _5 ])) "sdc.c":187:4 253 {*arm_movsi_insn}
     (nil))
(insn 32 31 33 2 (set (reg:SI 142)
        (const_int 1024 [0x400])) "sdc.c":187:31 253 {*arm_movsi_insn}
     (nil))
(insn 33 32 34 2 (set (mem:SI (reg/f:SI 118 [ _6 ]) [1 *_6+0 S4 A32])
        (reg:SI 142)) "sdc.c":187:31 253 {*arm_movsi_insn}
     (nil))
(insn 34 33 35 2 (set (reg:SI 143)
        (const_int 18 [0x12])) "sdc.c":189:7 253 {*arm_movsi_insn}
     (nil))
(insn 35 34 36 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [1 cmd+0 S4 A64])
        (reg:SI 143)) "sdc.c":189:7 253 {*arm_movsi_insn}
     (nil))
(insn 36 35 37 2 (set (reg:SI 144)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [1 blk+0 S4 A32])) "sdc.c":190:17 253 {*arm_movsi_insn}
     (nil))
(insn 37 36 38 2 (set (reg:SI 119 [ _7 ])
        (ashift:SI (reg:SI 144)
            (const_int 10 [0xa]))) "sdc.c":190:17 147 {*arm_shiftsi3}
     (nil))
(insn 38 37 39 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 arg+0 S4 A32])
        (reg:SI 119 [ _7 ])) "sdc.c":190:7 253 {*arm_movsi_insn}
     (nil))
(insn 39 38 40 2 (set (reg:SI 120 [ cmd.27_8 ])
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [1 cmd+0 S4 A64])) "sdc.c":191:3 253 {*arm_movsi_insn}
     (nil))
(insn 40 39 41 2 (set (reg:SI 121 [ arg.28_9 ])
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 arg+0 S4 A32])) "sdc.c":191:3 253 {*arm_movsi_insn}
     (nil))
(insn 41 40 42 2 (set (reg:SI 2 r2)
        (const_int 21 [0x15])) "sdc.c":191:3 253 {*arm_movsi_insn}
     (nil))
(insn 42 41 43 2 (set (reg:SI 1 r1)
        (reg:SI 121 [ arg.28_9 ])) "sdc.c":191:3 253 {*arm_movsi_insn}
     (nil))
(insn 43 42 44 2 (set (reg:SI 0 r0)
        (reg:SI 120 [ cmd.27_8 ])) "sdc.c":191:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 44 43 45 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_command") [flags 0x3]  <function_decl 0x7f2800e61e00 do_command>) [0 do_command S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "sdc.c":191:3 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 45 44 46 2 (set (reg/f:SI 145)
        (symbol_ref:SI ("base") [flags 0x2]  <var_decl 0x7f2800e6a2d0 base>)) "sdc.c":195:17 253 {*arm_movsi_insn}
     (nil))
(insn 46 45 47 2 (set (reg:SI 122 [ base.29_10 ])
        (mem/c:SI (reg/f:SI 145) [1 base+0 S4 A32])) "sdc.c":195:17 253 {*arm_movsi_insn}
     (nil))
(insn 47 46 48 2 (set (reg:SI 123 [ _11 ])
        (plus:SI (reg:SI 122 [ base.29_10 ])
            (const_int 44 [0x2c]))) "sdc.c":195:17 7 {*arm_addsi3}
     (nil))
(insn 48 47 49 2 (set (reg/f:SI 124 [ _12 ])
        (reg:SI 123 [ _11 ])) "sdc.c":195:4 253 {*arm_movsi_insn}
     (nil))
(insn 49 48 50 2 (set (reg:SI 146)
        (const_int 147 [0x93])) "sdc.c":195:29 253 {*arm_movsi_insn}
     (nil))
(insn 50 49 51 2 (set (mem:SI (reg/f:SI 124 [ _12 ]) [1 *_12+0 S4 A32])
        (reg:SI 146)) "sdc.c":195:29 253 {*arm_movsi_insn}
     (nil))
(insn 51 50 52 2 (set (reg/f:SI 147)
        (symbol_ref:SI ("running") [flags 0x40]  <var_decl 0x7f2801b4c7e0 running>)) "sdc.c":198:14 253 {*arm_movsi_insn}
     (nil))
(insn 52 51 53 2 (set (reg/f:SI 125 [ running.30_13 ])
        (mem/f/c:SI (reg/f:SI 147) [5 running+0 S4 A32])) "sdc.c":198:14 253 {*arm_movsi_insn}
     (nil))
(insn 53 52 54 2 (set (reg:SI 126 [ _14 ])
        (mem:SI (plus:SI (reg/f:SI 125 [ running.30_13 ])
                (const_int 24 [0x18])) [1 running.30_13->pid+0 S4 A32])) "sdc.c":198:14 253 {*arm_movsi_insn}
     (nil))
(insn 54 53 55 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 126 [ _14 ])
            (const_int 0 [0]))) "sdc.c":198:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 55 54 56 2 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 61)
            (pc))) "sdc.c":198:6 273 {arm_cond_branch}
     (nil)
 -> 61)
;;  succ:       3 (FALLTHRU)
;;              4

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 56 55 57 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 3 (set (reg:SI 0 r0)
        (symbol_ref:SI ("rxsem") [flags 0x2]  <var_decl 0x7f2800e6a6c0 rxsem>)) "sdc.c":199:6 253 {*arm_movsi_insn}
     (nil))
(call_insn 58 57 61 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("P") [flags 0x41]  <function_decl 0x7f2800e73b00 P>) [0 P S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "sdc.c":199:6 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
;;  succ:       6 [always]  (FALLTHRU)

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
(code_label 61 58 62 4 19 (nil) [1 uses])
(note 62 61 66 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       5 (FALLTHRU)

;; basic block 5, loop depth 1, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
;;              5 (DFS_BACK)
(code_label 66 62 63 5 21 (nil) [1 uses])
(note 63 66 64 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 5 (set (reg/f:SI 148)
        (symbol_ref:SI ("rxdone") [flags 0x2]  <var_decl 0x7f2800e6a5a0 rxdone>)) "sdc.c":201:17 253 {*arm_movsi_insn}
     (nil))
(insn 65 64 67 5 (set (reg:SI 127 [ rxdone.31_15 ])
        (mem/c:SI (reg/f:SI 148) [1 rxdone+0 S4 A32])) "sdc.c":201:17 253 {*arm_movsi_insn}
     (nil))
(insn 67 65 68 5 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 127 [ rxdone.31_15 ])
            (const_int 0 [0]))) "sdc.c":201:17 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 68 67 69 5 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 66)
            (pc))) "sdc.c":201:17 273 {arm_cond_branch}
     (nil)
 -> 66)
;;  succ:       5 (DFS_BACK)
;;              6 (FALLTHRU)

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 [always]  (FALLTHRU)
;;              5 (FALLTHRU)
(code_label 69 68 70 6 20 (nil) [0 uses])
(note 70 69 73 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 73 70 74 6 (clobber (reg/i:SI 0 r0)) "sdc.c":204:1 -1
     (nil))
(insn 74 73 77 6 (clobber (reg:SI 128 [ <retval> ])) "sdc.c":204:1 -1
     (nil))
(insn 77 74 72 6 (const_int 0 [0]) "sdc.c":204:1 311 {nop}
     (nil))
(insn 72 77 75 6 (set (reg/i:SI 0 r0)
        (reg:SI 128 [ <retval> ])) "sdc.c":204:1 253 {*arm_movsi_insn}
     (nil))
(insn 75 72 0 6 (use (reg/i:SI 0 r0)) "sdc.c":204:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function putblock (putblock, funcdef_no=4, decl_uid=4524, cgraph_uid=5, symbol_order=13)


7 basic blocks, 8 edges.
;; basic block 0, loop depth 0, maybe hot
;;  prev block (nil), next block 2, flags: (RTL)
;;  pred:      
;;  succ:       2 (FALLTHRU)

;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [1 blk+0 S4 A32])
        (reg:SI 0 r0 [ blk ])) "sdc.c":207:1 253 {*arm_movsi_insn}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [3 buf+0 S4 A32])
        (reg:SI 1 r1 [ buf ])) "sdc.c":207:1 253 {*arm_movsi_insn}
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:SI 129)
        (symbol_ref:SI ("txbuf") [flags 0x2]  <var_decl 0x7f2800e6a3f0 txbuf>)) "sdc.c":211:9 253 {*arm_movsi_insn}
     (nil))
(insn 8 7 9 2 (set (reg/f:SI 130)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [3 buf+0 S4 A32])) "sdc.c":211:9 253 {*arm_movsi_insn}
     (nil))
(insn 9 8 10 2 (set (mem/f/c:SI (reg/f:SI 129) [3 txbuf+0 S4 A32])
        (reg/f:SI 130)) "sdc.c":211:9 253 {*arm_movsi_insn}
     (nil))
(insn 10 9 11 2 (set (reg/f:SI 131)
        (symbol_ref:SI ("txcount") [flags 0x2]  <var_decl 0x7f2800e6a510 txcount>)) "sdc.c":211:24 253 {*arm_movsi_insn}
     (nil))
(insn 11 10 12 2 (set (reg:SI 132)
        (const_int 1024 [0x400])) "sdc.c":211:24 253 {*arm_movsi_insn}
     (nil))
(insn 12 11 13 2 (set (mem/c:SI (reg/f:SI 131) [1 txcount+0 S4 A32])
        (reg:SI 132)) "sdc.c":211:24 253 {*arm_movsi_insn}
     (nil))
(insn 13 12 14 2 (set (reg/f:SI 133)
        (symbol_ref:SI ("txsem") [flags 0x2]  <var_decl 0x7f2800e6a750 txsem>)) "sdc.c":212:15 253 {*arm_movsi_insn}
     (nil))
(insn 14 13 15 2 (set (reg:SI 134)
        (const_int 0 [0])) "sdc.c":212:15 253 {*arm_movsi_insn}
     (nil))
(insn 15 14 16 2 (set (mem/c:SI (reg/f:SI 133) [1 txsem.value+0 S4 A32])
        (reg:SI 134)) "sdc.c":212:15 253 {*arm_movsi_insn}
     (nil))
(insn 16 15 17 2 (set (reg/f:SI 135)
        (symbol_ref:SI ("txsem") [flags 0x2]  <var_decl 0x7f2800e6a750 txsem>)) "sdc.c":213:15 253 {*arm_movsi_insn}
     (nil))
(insn 17 16 18 2 (set (reg:SI 136)
        (const_int 0 [0])) "sdc.c":213:15 253 {*arm_movsi_insn}
     (nil))
(insn 18 17 19 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 135)
                (const_int 4 [0x4])) [5 txsem.queue+0 S4 A32])
        (reg:SI 136)) "sdc.c":213:15 253 {*arm_movsi_insn}
     (nil))
(insn 19 18 20 2 (set (reg/f:SI 137)
        (symbol_ref:SI ("txdone") [flags 0x2]  <var_decl 0x7f2800e6a630 txdone>)) "sdc.c":214:10 253 {*arm_movsi_insn}
     (nil))
(insn 20 19 21 2 (set (reg:SI 138)
        (const_int 0 [0])) "sdc.c":214:10 253 {*arm_movsi_insn}
     (nil))
(insn 21 20 22 2 (set (mem/c:SI (reg/f:SI 137) [1 txdone+0 S4 A32])
        (reg:SI 138)) "sdc.c":214:10 253 {*arm_movsi_insn}
     (nil))
(insn 22 21 23 2 (set (reg/f:SI 139)
        (symbol_ref:SI ("base") [flags 0x2]  <var_decl 0x7f2800e6a2d0 base>)) "sdc.c":216:17 253 {*arm_movsi_insn}
     (nil))
(insn 23 22 24 2 (set (reg:SI 113 [ base.32_1 ])
        (mem/c:SI (reg/f:SI 139) [1 base+0 S4 A32])) "sdc.c":216:17 253 {*arm_movsi_insn}
     (nil))
(insn 24 23 25 2 (set (reg:SI 114 [ _2 ])
        (plus:SI (reg:SI 113 [ base.32_1 ])
            (const_int 36 [0x24]))) "sdc.c":216:17 7 {*arm_addsi3}
     (nil))
(insn 25 24 26 2 (set (reg/f:SI 115 [ _3 ])
        (reg:SI 114 [ _2 ])) "sdc.c":216:4 253 {*arm_movsi_insn}
     (nil))
(insn 26 25 27 2 (set (reg:SI 140)
        (const_int -65536 [0xffffffffffff0000])) "sdc.c":216:30 253 {*arm_movsi_insn}
     (nil))
(insn 27 26 28 2 (set (mem:SI (reg/f:SI 115 [ _3 ]) [1 *_3+0 S4 A32])
        (reg:SI 140)) "sdc.c":216:30 253 {*arm_movsi_insn}
     (nil))
(insn 28 27 29 2 (set (reg/f:SI 141)
        (symbol_ref:SI ("base") [flags 0x2]  <var_decl 0x7f2800e6a2d0 base>)) "sdc.c":217:17 253 {*arm_movsi_insn}
     (nil))
(insn 29 28 30 2 (set (reg:SI 116 [ base.33_4 ])
        (mem/c:SI (reg/f:SI 141) [1 base+0 S4 A32])) "sdc.c":217:17 253 {*arm_movsi_insn}
     (nil))
(insn 30 29 31 2 (set (reg:SI 117 [ _5 ])
        (plus:SI (reg:SI 116 [ base.33_4 ])
            (const_int 40 [0x28]))) "sdc.c":217:17 7 {*arm_addsi3}
     (nil))
(insn 31 30 32 2 (set (reg/f:SI 118 [ _6 ])
        (reg:SI 117 [ _5 ])) "sdc.c":217:4 253 {*arm_movsi_insn}
     (nil))
(insn 32 31 33 2 (set (reg:SI 142)
        (const_int 1024 [0x400])) "sdc.c":217:31 253 {*arm_movsi_insn}
     (nil))
(insn 33 32 34 2 (set (mem:SI (reg/f:SI 118 [ _6 ]) [1 *_6+0 S4 A32])
        (reg:SI 142)) "sdc.c":217:31 253 {*arm_movsi_insn}
     (nil))
(insn 34 33 35 2 (set (reg:SI 143)
        (const_int 25 [0x19])) "sdc.c":219:7 253 {*arm_movsi_insn}
     (nil))
(insn 35 34 36 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [1 cmd+0 S4 A64])
        (reg:SI 143)) "sdc.c":219:7 253 {*arm_movsi_insn}
     (nil))
(insn 36 35 37 2 (set (reg:SI 144)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [1 blk+0 S4 A32])) "sdc.c":220:22 253 {*arm_movsi_insn}
     (nil))
(insn 37 36 38 2 (set (reg:SI 119 [ _7 ])
        (ashift:SI (reg:SI 144)
            (const_int 10 [0xa]))) "sdc.c":220:22 147 {*arm_shiftsi3}
     (nil))
(insn 38 37 39 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 arg+0 S4 A32])
        (reg:SI 119 [ _7 ])) "sdc.c":220:7 253 {*arm_movsi_insn}
     (nil))
(insn 39 38 40 2 (set (reg:SI 120 [ cmd.34_8 ])
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [1 cmd+0 S4 A64])) "sdc.c":221:3 253 {*arm_movsi_insn}
     (nil))
(insn 40 39 41 2 (set (reg:SI 121 [ arg.35_9 ])
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 arg+0 S4 A32])) "sdc.c":221:3 253 {*arm_movsi_insn}
     (nil))
(insn 41 40 42 2 (set (reg:SI 2 r2)
        (const_int 21 [0x15])) "sdc.c":221:3 253 {*arm_movsi_insn}
     (nil))
(insn 42 41 43 2 (set (reg:SI 1 r1)
        (reg:SI 121 [ arg.35_9 ])) "sdc.c":221:3 253 {*arm_movsi_insn}
     (nil))
(insn 43 42 44 2 (set (reg:SI 0 r0)
        (reg:SI 120 [ cmd.34_8 ])) "sdc.c":221:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 44 43 45 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_command") [flags 0x3]  <function_decl 0x7f2800e61e00 do_command>) [0 do_command S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "sdc.c":221:3 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 45 44 46 2 (set (reg/f:SI 145)
        (symbol_ref:SI ("base") [flags 0x2]  <var_decl 0x7f2800e6a2d0 base>)) "sdc.c":225:17 253 {*arm_movsi_insn}
     (nil))
(insn 46 45 47 2 (set (reg:SI 122 [ base.36_10 ])
        (mem/c:SI (reg/f:SI 145) [1 base+0 S4 A32])) "sdc.c":225:17 253 {*arm_movsi_insn}
     (nil))
(insn 47 46 48 2 (set (reg:SI 123 [ _11 ])
        (plus:SI (reg:SI 122 [ base.36_10 ])
            (const_int 44 [0x2c]))) "sdc.c":225:17 7 {*arm_addsi3}
     (nil))
(insn 48 47 49 2 (set (reg/f:SI 124 [ _12 ])
        (reg:SI 123 [ _11 ])) "sdc.c":225:4 253 {*arm_movsi_insn}
     (nil))
(insn 49 48 50 2 (set (reg:SI 146)
        (const_int 145 [0x91])) "sdc.c":225:29 253 {*arm_movsi_insn}
     (nil))
(insn 50 49 51 2 (set (mem:SI (reg/f:SI 124 [ _12 ]) [1 *_12+0 S4 A32])
        (reg:SI 146)) "sdc.c":225:29 253 {*arm_movsi_insn}
     (nil))
(insn 51 50 52 2 (set (reg/f:SI 147)
        (symbol_ref:SI ("running") [flags 0x40]  <var_decl 0x7f2801b4c7e0 running>)) "sdc.c":228:14 253 {*arm_movsi_insn}
     (nil))
(insn 52 51 53 2 (set (reg/f:SI 125 [ running.37_13 ])
        (mem/f/c:SI (reg/f:SI 147) [5 running+0 S4 A32])) "sdc.c":228:14 253 {*arm_movsi_insn}
     (nil))
(insn 53 52 54 2 (set (reg:SI 126 [ _14 ])
        (mem:SI (plus:SI (reg/f:SI 125 [ running.37_13 ])
                (const_int 24 [0x18])) [1 running.37_13->pid+0 S4 A32])) "sdc.c":228:14 253 {*arm_movsi_insn}
     (nil))
(insn 54 53 55 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 126 [ _14 ])
            (const_int 0 [0]))) "sdc.c":228:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 55 54 56 2 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 61)
            (pc))) "sdc.c":228:6 273 {arm_cond_branch}
     (nil)
 -> 61)
;;  succ:       3 (FALLTHRU)
;;              4

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 56 55 57 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 3 (set (reg:SI 0 r0)
        (symbol_ref:SI ("txsem") [flags 0x2]  <var_decl 0x7f2800e6a750 txsem>)) "sdc.c":229:6 253 {*arm_movsi_insn}
     (nil))
(call_insn 58 57 61 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("P") [flags 0x41]  <function_decl 0x7f2800e73b00 P>) [0 P S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "sdc.c":229:6 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
;;  succ:       6 [always]  (FALLTHRU)

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
(code_label 61 58 62 4 26 (nil) [1 uses])
(note 62 61 66 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       5 (FALLTHRU)

;; basic block 5, loop depth 1, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
;;              5 (DFS_BACK)
(code_label 66 62 63 5 28 (nil) [1 uses])
(note 63 66 64 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 5 (set (reg/f:SI 148)
        (symbol_ref:SI ("txdone") [flags 0x2]  <var_decl 0x7f2800e6a630 txdone>)) "sdc.c":231:17 253 {*arm_movsi_insn}
     (nil))
(insn 65 64 67 5 (set (reg:SI 127 [ txdone.38_15 ])
        (mem/c:SI (reg/f:SI 148) [1 txdone+0 S4 A32])) "sdc.c":231:17 253 {*arm_movsi_insn}
     (nil))
(insn 67 65 68 5 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 127 [ txdone.38_15 ])
            (const_int 0 [0]))) "sdc.c":231:17 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 68 67 69 5 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 66)
            (pc))) "sdc.c":231:17 273 {arm_cond_branch}
     (nil)
 -> 66)
;;  succ:       5 (DFS_BACK)
;;              6 (FALLTHRU)

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 [always]  (FALLTHRU)
;;              5 (FALLTHRU)
(code_label 69 68 70 6 27 (nil) [0 uses])
(note 70 69 73 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 73 70 74 6 (clobber (reg/i:SI 0 r0)) "sdc.c":233:1 -1
     (nil))
(insn 74 73 77 6 (clobber (reg:SI 128 [ <retval> ])) "sdc.c":233:1 -1
     (nil))
(insn 77 74 72 6 (const_int 0 [0]) "sdc.c":233:1 311 {nop}
     (nil))
(insn 72 77 75 6 (set (reg/i:SI 0 r0)
        (reg:SI 128 [ <retval> ])) "sdc.c":233:1 253 {*arm_movsi_insn}
     (nil))
(insn 75 72 0 6 (use (reg/i:SI 0 r0)) "sdc.c":233:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)

;; basic block 1, loop depth 0, maybe hot
;;  prev block 6, next block (nil), flags: (REACHABLE, RTL)
;;  pred:       6 [always]  (FALLTHRU)
;;  succ:      




try_optimize_cfg iteration 1

;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [1 blk+0 S4 A32])
        (reg:SI 0 r0 [ blk ])) "sdc.c":207:1 253 {*arm_movsi_insn}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [3 buf+0 S4 A32])
        (reg:SI 1 r1 [ buf ])) "sdc.c":207:1 253 {*arm_movsi_insn}
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:SI 129)
        (symbol_ref:SI ("txbuf") [flags 0x2]  <var_decl 0x7f2800e6a3f0 txbuf>)) "sdc.c":211:9 253 {*arm_movsi_insn}
     (nil))
(insn 8 7 9 2 (set (reg/f:SI 130)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [3 buf+0 S4 A32])) "sdc.c":211:9 253 {*arm_movsi_insn}
     (nil))
(insn 9 8 10 2 (set (mem/f/c:SI (reg/f:SI 129) [3 txbuf+0 S4 A32])
        (reg/f:SI 130)) "sdc.c":211:9 253 {*arm_movsi_insn}
     (nil))
(insn 10 9 11 2 (set (reg/f:SI 131)
        (symbol_ref:SI ("txcount") [flags 0x2]  <var_decl 0x7f2800e6a510 txcount>)) "sdc.c":211:24 253 {*arm_movsi_insn}
     (nil))
(insn 11 10 12 2 (set (reg:SI 132)
        (const_int 1024 [0x400])) "sdc.c":211:24 253 {*arm_movsi_insn}
     (nil))
(insn 12 11 13 2 (set (mem/c:SI (reg/f:SI 131) [1 txcount+0 S4 A32])
        (reg:SI 132)) "sdc.c":211:24 253 {*arm_movsi_insn}
     (nil))
(insn 13 12 14 2 (set (reg/f:SI 133)
        (symbol_ref:SI ("txsem") [flags 0x2]  <var_decl 0x7f2800e6a750 txsem>)) "sdc.c":212:15 253 {*arm_movsi_insn}
     (nil))
(insn 14 13 15 2 (set (reg:SI 134)
        (const_int 0 [0])) "sdc.c":212:15 253 {*arm_movsi_insn}
     (nil))
(insn 15 14 16 2 (set (mem/c:SI (reg/f:SI 133) [1 txsem.value+0 S4 A32])
        (reg:SI 134)) "sdc.c":212:15 253 {*arm_movsi_insn}
     (nil))
(insn 16 15 17 2 (set (reg/f:SI 135)
        (symbol_ref:SI ("txsem") [flags 0x2]  <var_decl 0x7f2800e6a750 txsem>)) "sdc.c":213:15 253 {*arm_movsi_insn}
     (nil))
(insn 17 16 18 2 (set (reg:SI 136)
        (const_int 0 [0])) "sdc.c":213:15 253 {*arm_movsi_insn}
     (nil))
(insn 18 17 19 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 135)
                (const_int 4 [0x4])) [5 txsem.queue+0 S4 A32])
        (reg:SI 136)) "sdc.c":213:15 253 {*arm_movsi_insn}
     (nil))
(insn 19 18 20 2 (set (reg/f:SI 137)
        (symbol_ref:SI ("txdone") [flags 0x2]  <var_decl 0x7f2800e6a630 txdone>)) "sdc.c":214:10 253 {*arm_movsi_insn}
     (nil))
(insn 20 19 21 2 (set (reg:SI 138)
        (const_int 0 [0])) "sdc.c":214:10 253 {*arm_movsi_insn}
     (nil))
(insn 21 20 22 2 (set (mem/c:SI (reg/f:SI 137) [1 txdone+0 S4 A32])
        (reg:SI 138)) "sdc.c":214:10 253 {*arm_movsi_insn}
     (nil))
(insn 22 21 23 2 (set (reg/f:SI 139)
        (symbol_ref:SI ("base") [flags 0x2]  <var_decl 0x7f2800e6a2d0 base>)) "sdc.c":216:17 253 {*arm_movsi_insn}
     (nil))
(insn 23 22 24 2 (set (reg:SI 113 [ base.32_1 ])
        (mem/c:SI (reg/f:SI 139) [1 base+0 S4 A32])) "sdc.c":216:17 253 {*arm_movsi_insn}
     (nil))
(insn 24 23 25 2 (set (reg:SI 114 [ _2 ])
        (plus:SI (reg:SI 113 [ base.32_1 ])
            (const_int 36 [0x24]))) "sdc.c":216:17 7 {*arm_addsi3}
     (nil))
(insn 25 24 26 2 (set (reg/f:SI 115 [ _3 ])
        (reg:SI 114 [ _2 ])) "sdc.c":216:4 253 {*arm_movsi_insn}
     (nil))
(insn 26 25 27 2 (set (reg:SI 140)
        (const_int -65536 [0xffffffffffff0000])) "sdc.c":216:30 253 {*arm_movsi_insn}
     (nil))
(insn 27 26 28 2 (set (mem:SI (reg/f:SI 115 [ _3 ]) [1 *_3+0 S4 A32])
        (reg:SI 140)) "sdc.c":216:30 253 {*arm_movsi_insn}
     (nil))
(insn 28 27 29 2 (set (reg/f:SI 141)
        (symbol_ref:SI ("base") [flags 0x2]  <var_decl 0x7f2800e6a2d0 base>)) "sdc.c":217:17 253 {*arm_movsi_insn}
     (nil))
(insn 29 28 30 2 (set (reg:SI 116 [ base.33_4 ])
        (mem/c:SI (reg/f:SI 141) [1 base+0 S4 A32])) "sdc.c":217:17 253 {*arm_movsi_insn}
     (nil))
(insn 30 29 31 2 (set (reg:SI 117 [ _5 ])
        (plus:SI (reg:SI 116 [ base.33_4 ])
            (const_int 40 [0x28]))) "sdc.c":217:17 7 {*arm_addsi3}
     (nil))
(insn 31 30 32 2 (set (reg/f:SI 118 [ _6 ])
        (reg:SI 117 [ _5 ])) "sdc.c":217:4 253 {*arm_movsi_insn}
     (nil))
(insn 32 31 33 2 (set (reg:SI 142)
        (const_int 1024 [0x400])) "sdc.c":217:31 253 {*arm_movsi_insn}
     (nil))
(insn 33 32 34 2 (set (mem:SI (reg/f:SI 118 [ _6 ]) [1 *_6+0 S4 A32])
        (reg:SI 142)) "sdc.c":217:31 253 {*arm_movsi_insn}
     (nil))
(insn 34 33 35 2 (set (reg:SI 143)
        (const_int 25 [0x19])) "sdc.c":219:7 253 {*arm_movsi_insn}
     (nil))
(insn 35 34 36 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [1 cmd+0 S4 A64])
        (reg:SI 143)) "sdc.c":219:7 253 {*arm_movsi_insn}
     (nil))
(insn 36 35 37 2 (set (reg:SI 144)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [1 blk+0 S4 A32])) "sdc.c":220:22 253 {*arm_movsi_insn}
     (nil))
(insn 37 36 38 2 (set (reg:SI 119 [ _7 ])
        (ashift:SI (reg:SI 144)
            (const_int 10 [0xa]))) "sdc.c":220:22 147 {*arm_shiftsi3}
     (nil))
(insn 38 37 39 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 arg+0 S4 A32])
        (reg:SI 119 [ _7 ])) "sdc.c":220:7 253 {*arm_movsi_insn}
     (nil))
(insn 39 38 40 2 (set (reg:SI 120 [ cmd.34_8 ])
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [1 cmd+0 S4 A64])) "sdc.c":221:3 253 {*arm_movsi_insn}
     (nil))
(insn 40 39 41 2 (set (reg:SI 121 [ arg.35_9 ])
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 arg+0 S4 A32])) "sdc.c":221:3 253 {*arm_movsi_insn}
     (nil))
(insn 41 40 42 2 (set (reg:SI 2 r2)
        (const_int 21 [0x15])) "sdc.c":221:3 253 {*arm_movsi_insn}
     (nil))
(insn 42 41 43 2 (set (reg:SI 1 r1)
        (reg:SI 121 [ arg.35_9 ])) "sdc.c":221:3 253 {*arm_movsi_insn}
     (nil))
(insn 43 42 44 2 (set (reg:SI 0 r0)
        (reg:SI 120 [ cmd.34_8 ])) "sdc.c":221:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 44 43 45 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_command") [flags 0x3]  <function_decl 0x7f2800e61e00 do_command>) [0 do_command S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "sdc.c":221:3 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 45 44 46 2 (set (reg/f:SI 145)
        (symbol_ref:SI ("base") [flags 0x2]  <var_decl 0x7f2800e6a2d0 base>)) "sdc.c":225:17 253 {*arm_movsi_insn}
     (nil))
(insn 46 45 47 2 (set (reg:SI 122 [ base.36_10 ])
        (mem/c:SI (reg/f:SI 145) [1 base+0 S4 A32])) "sdc.c":225:17 253 {*arm_movsi_insn}
     (nil))
(insn 47 46 48 2 (set (reg:SI 123 [ _11 ])
        (plus:SI (reg:SI 122 [ base.36_10 ])
            (const_int 44 [0x2c]))) "sdc.c":225:17 7 {*arm_addsi3}
     (nil))
(insn 48 47 49 2 (set (reg/f:SI 124 [ _12 ])
        (reg:SI 123 [ _11 ])) "sdc.c":225:4 253 {*arm_movsi_insn}
     (nil))
(insn 49 48 50 2 (set (reg:SI 146)
        (const_int 145 [0x91])) "sdc.c":225:29 253 {*arm_movsi_insn}
     (nil))
(insn 50 49 51 2 (set (mem:SI (reg/f:SI 124 [ _12 ]) [1 *_12+0 S4 A32])
        (reg:SI 146)) "sdc.c":225:29 253 {*arm_movsi_insn}
     (nil))
(insn 51 50 52 2 (set (reg/f:SI 147)
        (symbol_ref:SI ("running") [flags 0x40]  <var_decl 0x7f2801b4c7e0 running>)) "sdc.c":228:14 253 {*arm_movsi_insn}
     (nil))
(insn 52 51 53 2 (set (reg/f:SI 125 [ running.37_13 ])
        (mem/f/c:SI (reg/f:SI 147) [5 running+0 S4 A32])) "sdc.c":228:14 253 {*arm_movsi_insn}
     (nil))
(insn 53 52 54 2 (set (reg:SI 126 [ _14 ])
        (mem:SI (plus:SI (reg/f:SI 125 [ running.37_13 ])
                (const_int 24 [0x18])) [1 running.37_13->pid+0 S4 A32])) "sdc.c":228:14 253 {*arm_movsi_insn}
     (nil))
(insn 54 53 55 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 126 [ _14 ])
            (const_int 0 [0]))) "sdc.c":228:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 55 54 56 2 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 61)
            (pc))) "sdc.c":228:6 273 {arm_cond_branch}
     (nil)
 -> 61)
;;  succ:       3 (FALLTHRU)
;;              4

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 56 55 57 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 3 (set (reg:SI 0 r0)
        (symbol_ref:SI ("txsem") [flags 0x2]  <var_decl 0x7f2800e6a750 txsem>)) "sdc.c":229:6 253 {*arm_movsi_insn}
     (nil))
(call_insn 58 57 61 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("P") [flags 0x41]  <function_decl 0x7f2800e73b00 P>) [0 P S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "sdc.c":229:6 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
;;  succ:       6 [always]  (FALLTHRU)

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
(code_label 61 58 62 4 26 (nil) [1 uses])
(note 62 61 66 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       5 (FALLTHRU)

;; basic block 5, loop depth 1, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
;;              5 (DFS_BACK)
(code_label 66 62 63 5 28 (nil) [1 uses])
(note 63 66 64 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 5 (set (reg/f:SI 148)
        (symbol_ref:SI ("txdone") [flags 0x2]  <var_decl 0x7f2800e6a630 txdone>)) "sdc.c":231:17 253 {*arm_movsi_insn}
     (nil))
(insn 65 64 67 5 (set (reg:SI 127 [ txdone.38_15 ])
        (mem/c:SI (reg/f:SI 148) [1 txdone+0 S4 A32])) "sdc.c":231:17 253 {*arm_movsi_insn}
     (nil))
(insn 67 65 68 5 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 127 [ txdone.38_15 ])
            (const_int 0 [0]))) "sdc.c":231:17 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 68 67 69 5 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 66)
            (pc))) "sdc.c":231:17 273 {arm_cond_branch}
     (nil)
 -> 66)
;;  succ:       5 (DFS_BACK)
;;              6 (FALLTHRU)

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 [always]  (FALLTHRU)
;;              5 (FALLTHRU)
(code_label 69 68 70 6 27 (nil) [0 uses])
(note 70 69 73 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 73 70 74 6 (clobber (reg/i:SI 0 r0)) "sdc.c":233:1 -1
     (nil))
(insn 74 73 77 6 (clobber (reg:SI 128 [ <retval> ])) "sdc.c":233:1 -1
     (nil))
(insn 77 74 72 6 (const_int 0 [0]) "sdc.c":233:1 311 {nop}
     (nil))
(insn 72 77 75 6 (set (reg/i:SI 0 r0)
        (reg:SI 128 [ <retval> ])) "sdc.c":233:1 253 {*arm_movsi_insn}
     (nil))
(insn 75 72 0 6 (use (reg/i:SI 0 r0)) "sdc.c":233:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)

