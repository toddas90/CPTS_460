
;; Function timer0_handler (timer0_handler, funcdef_no=0, decl_uid=4520, cgraph_uid=1, symbol_order=11)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 37 n_edges 53 count 37 (    1)
;; 5 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 34 35 27 28 29 30 31 32 36 33
;;
;; Loop 4
;;  header 26, latch 25
;;  depth 1, outer 0
;;  nodes: 26 25 24
;;
;; Loop 3
;;  header 21, latch 20
;;  depth 1, outer 0
;;  nodes: 21 20 16 17 18 19
;;
;; Loop 2
;;  header 14, latch 13
;;  depth 1, outer 0
;;  nodes: 14 13
;;
;; Loop 1
;;  header 11, latch 10
;;  depth 1, outer 0
;;  nodes: 11 10
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 9 27 }
;; 9 succs { 11 }
;; 10 succs { 11 }
;; 11 succs { 10 12 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 13 15 }
;; 15 succs { 21 }
;; 16 succs { 17 20 }
;; 17 succs { 18 20 }
;; 18 succs { 19 20 }
;; 19 succs { 20 }
;; 20 succs { 21 }
;; 21 succs { 16 22 }
;; 22 succs { 23 27 }
;; 23 succs { 26 }
;; 24 succs { 25 35 }
;; 25 succs { 26 }
;; 26 succs { 24 34 }
;; 34 succs { 27 }
;; 35 succs { 27 }
;; 27 succs { 28 29 }
;; 28 succs { 29 }
;; 29 succs { 30 36 }
;; 30 succs { 31 36 }
;; 31 succs { 32 36 }
;; 32 succs { 36 }
;; 36 succs { 33 }
;; 33 succs { 1 }
Removing SCRATCH to p348 in insn #124 (nop 3)
rescanning insn with uid = 124.
Removing SCRATCH to p349 in insn #143 (nop 3)
rescanning insn with uid = 143.
Removing SCRATCH to p350 in insn #156 (nop 3)
rescanning insn with uid = 156.
Removing SCRATCH to p351 in insn #175 (nop 3)
rescanning insn with uid = 175.
Removing SCRATCH to p352 in insn #188 (nop 3)
rescanning insn with uid = 188.
Removing SCRATCH to p353 in insn #207 (nop 3)
rescanning insn with uid = 207.
Building IRA IR
verify found no changes in insn with uid = 108.
verify found no changes in insn with uid = 231.
verify found no changes in insn with uid = 281.
verify found no changes in insn with uid = 290.
verify found no changes in insn with uid = 302.
verify found no changes in insn with uid = 307.
verify found no changes in insn with uid = 327.
verify found no changes in insn with uid = 351.
verify found no changes in insn with uid = 366.
verify found no changes in insn with uid = 397.
verify found no changes in insn with uid = 400.
verify found no changes in insn with uid = 433.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 37 n_edges 53 count 37 (    1)

Pass 0 for finding pseudo/allocno costs

    r353: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a103 (r353,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r352: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a118 (r352,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r351: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a131 (r351,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r350: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a146 (r350,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r349: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a159 (r349,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r348: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a174 (r348,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r347: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r347,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r346: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r346,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r345: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r345,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r344: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r344,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r343: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r343,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r342: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r342,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r341: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r341,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r340: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r340,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r339: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r339,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r338: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r338,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r337: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r337,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r336: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r336,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r335: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r335,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r334: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r334,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r333: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r333,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r332: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r332,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r331: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r331,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r330: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r330,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r329: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r329,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r328: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r328,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r327: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r327,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r326: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r326,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r325: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r325,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r324: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r324,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r323: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r323,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r322: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r322,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r321: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r321,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r320: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r320,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r319: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r319,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r318: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r318,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r317: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r317,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r316: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r316,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r315: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r315,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r314: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r314,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r313: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r313,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r312: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r312,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r311: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r311,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r310: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r310,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r309: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r309,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r308: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a73 (r308,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r307: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a75 (r307,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r306: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a77 (r306,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r305: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a76 (r305,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r304: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a79 (r304,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r303: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a78 (r303,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r302: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a80 (r302,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r301: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r301,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r300: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a82 (r300,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r299: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a84 (r299,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r298: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a83 (r298,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r297: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a87 (r297,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r296: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a89 (r296,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r295: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a88 (r295,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r294: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a90 (r294,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r293: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a91 (r293,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r292: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a93 (r292,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r291: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a92 (r291,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r290: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a95 (r290,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r289: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a98 (r289,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r288: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a99 (r288,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r287: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a102 (r287,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r286: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a101 (r286,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r285: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a104 (r285,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r284: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a106 (r284,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r283: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a105 (r283,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r282: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a108 (r282,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r281: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a113 (r281,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r280: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a111 (r280,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r279: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a114 (r279,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r278: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a115 (r278,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r277: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a117 (r277,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r276: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a116 (r276,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r275: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a119 (r275,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r274: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a121 (r274,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r273: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a120 (r273,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r272: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a123 (r272,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r271: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a126 (r271,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r270: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a127 (r270,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r269: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a130 (r269,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r268: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a129 (r268,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r267: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a132 (r267,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r266: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a134 (r266,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r265: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a133 (r265,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r264: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a136 (r264,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r263: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a141 (r263,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r262: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a139 (r262,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r261: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a142 (r261,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r260: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a143 (r260,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r259: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a145 (r259,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r258: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a144 (r258,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r257: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a147 (r257,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r256: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a149 (r256,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r255: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a148 (r255,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r254: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a151 (r254,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r253: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a154 (r253,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r252: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a155 (r252,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r251: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a158 (r251,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r250: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a157 (r250,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r249: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a160 (r249,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r248: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a162 (r248,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r247: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a161 (r247,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r246: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a164 (r246,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r245: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a169 (r245,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r244: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a167 (r244,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r243: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a170 (r243,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r242: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a171 (r242,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r241: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a173 (r241,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r240: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a172 (r240,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r239: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a175 (r239,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r238: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a176 (r238,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r237: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a178 (r237,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r236: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a177 (r236,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r235: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a181 (r235,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r234: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a183 (r234,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r233: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a182 (r233,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r232: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a184 (r232,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r231: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a185 (r231,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r230: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a187 (r230,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r229: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a186 (r229,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r228: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a188 (r228,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r227: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a190 (r227,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r226: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a192 (r226,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r225: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a193 (r225,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r224: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a196 (r224,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r223: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a198 (r223,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r222: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a197 (r222,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r221: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a200 (r221,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r220: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a201 (r220,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r219: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a204 (r219,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r218: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a206 (r218,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r217: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a205 (r217,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r216: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a208 (r216,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r215: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a209 (r215,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r214: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a212 (r214,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r213: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a214 (r213,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r212: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a213 (r212,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r211: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a216 (r211,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r210: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a217 (r210,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r209: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a220 (r209,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r208: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a223 (r208,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r207: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a226 (r207,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r206: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a229 (r206,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r205: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a232 (r205,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r204: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a235 (r204,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r203: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a237 (r203,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r202: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a236 (r202,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r201: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a238 (r201,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r200: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a240 (r200,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r199: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r199,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r198: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r198,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r197: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r197,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r196: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r196,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r195: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r195,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r194: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r194,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r193: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r193,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r192: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r192,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r191: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r191,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r190: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r190,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r189: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r189,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r188: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r188,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r187: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r187,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r186: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r186,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r185: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r185,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r184: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r184,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r183: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r183,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r182: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r182,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r181: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r181,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r180: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r180,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r179: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r179,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r178,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r177: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r177,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r176,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r175: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r175,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r174,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r173,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r172,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r171,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r170,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r169: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r169,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r168,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r167,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a72 (r166,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a74 (r165,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a86 (r164,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a85 (r163,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a94 (r162,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a96 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a97 (r160,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a100 (r159,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a107 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a109 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a110 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a112 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a122 (r154,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a124 (r153,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a125 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a128 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a135 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a137 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a138 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a140 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a150 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a152 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a153 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a156 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a163 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a165 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a166 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a168 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a180 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a179 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a189 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a191 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a194 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a195 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a199 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a202 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a203 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a207 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a210 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a211 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a215 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a218 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a219 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a221 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a222 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a224 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a225 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a227 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a228 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a230 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a231 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a233 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a234 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a239 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r346,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a1(r347,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a2(r197,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:20000
  a3(r199,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:20000
  a4(r198,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a5(r345,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a6(r196,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a7(r344,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a8(r195,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a9(r194,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a10(r343,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a11(r193,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a12(r342,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a13(r192,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a14(r191,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a15(r341,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a16(r340,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a17(r190,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a18(r339,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a19(r187,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:30000
  a20(r189,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a21(r188,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a22(r338,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a23(r186,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a24(r185,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a25(r337,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a26(r336,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a27(r335,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a28(r334,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a29(r333,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a30(r184,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a31(r332,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a32(r182,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a33(r183,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a34(r180,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a35(r181,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a36(r331,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a37(r179,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a38(r178,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a39(r330,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a40(r177,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:20000
  a41(r176,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a42(r329,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a43(r175,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a44(r328,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a45(r327,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a46(r174,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a47(r173,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a48(r326,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a49(r325,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a50(r324,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a51(r172,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a52(r323,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a53(r322,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a54(r320,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a55(r321,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a56(r171,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:20000
  a57(r319,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a58(r317,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a59(r318,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a60(r315,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a61(r316,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a62(r313,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a63(r314,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a64(r170,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a65(r312,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a66(r169,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:20000
  a67(r311,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a68(r310,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a69(r168,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a70(r167,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a71(r309,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a72(r166,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a73(r308,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a74(r165,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a75(r307,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a76(r305,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a77(r306,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a78(r303,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:142000
  a79(r304,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a80(r302,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:41000
  a81(r301,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a82(r300,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a83(r298,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a84(r299,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a85(r163,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:20000
  a86(r164,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:20000
  a87(r297,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a88(r295,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a89(r296,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a90(r294,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a91(r293,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a92(r291,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a93(r292,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a94(r162,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a95(r290,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a96(r161,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a97(r160,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a98(r289,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a99(r288,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a100(r159,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:30000
  a101(r286,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a102(r287,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a103(r353,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:10000
  a104(r285,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a105(r283,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a106(r284,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a107(r158,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a108(r282,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a109(r157,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a110(r156,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:41000
  a111(r280,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:62000
  a112(r155,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:40000
  a113(r281,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a114(r279,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a115(r278,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a116(r276,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a117(r277,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a118(r352,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:10000
  a119(r275,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a120(r273,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a121(r274,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a122(r154,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a123(r272,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a124(r153,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a125(r152,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a126(r271,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a127(r270,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a128(r151,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:30000
  a129(r268,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a130(r269,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a131(r351,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:10000
  a132(r267,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a133(r265,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a134(r266,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a135(r150,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a136(r264,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a137(r149,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a138(r148,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:41000
  a139(r262,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:62000
  a140(r147,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:40000
  a141(r263,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a142(r261,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a143(r260,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a144(r258,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a145(r259,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a146(r350,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:10000
  a147(r257,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a148(r255,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a149(r256,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a150(r146,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a151(r254,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a152(r145,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a153(r144,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a154(r253,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a155(r252,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a156(r143,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:30000
  a157(r250,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a158(r251,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a159(r349,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:10000
  a160(r249,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a161(r247,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a162(r248,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a163(r142,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a164(r246,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a165(r141,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a166(r140,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:41000
  a167(r244,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:62000
  a168(r139,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:40000
  a169(r245,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a170(r243,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a171(r242,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a172(r240,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a173(r241,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a174(r348,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:10000
  a175(r239,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a176(r238,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a177(r236,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a178(r237,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a179(r137,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:20000
  a180(r138,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:20000
  a181(r235,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a182(r233,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a183(r234,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a184(r232,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a185(r231,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a186(r229,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a187(r230,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a188(r228,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a189(r136,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a190(r227,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a191(r135,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a192(r226,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a193(r225,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a194(r134,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a195(r133,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a196(r224,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a197(r222,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a198(r223,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a199(r132,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a200(r221,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a201(r220,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a202(r131,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a203(r130,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a204(r219,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a205(r217,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a206(r218,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a207(r129,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a208(r216,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a209(r215,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a210(r128,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a211(r127,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a212(r214,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a213(r212,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a214(r213,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a215(r126,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a216(r211,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a217(r210,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a218(r125,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a219(r124,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a220(r209,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a221(r123,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a222(r122,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a223(r208,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a224(r121,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a225(r120,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a226(r207,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a227(r119,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a228(r118,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a229(r206,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a230(r117,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a231(r116,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a232(r205,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a233(r115,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a234(r114,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a235(r204,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a236(r202,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a237(r203,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a238(r201,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a239(r113,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a240(r200,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000

   Insn 462(l0): point = 1
   Insn 443(l0): point = 4
   Insn 436(l0): point = 6
   Insn 435(l0): point = 8
   Insn 434(l0): point = 10
   Insn 433(l0): point = 12
   Insn 432(l0): point = 14
   Insn 431(l0): point = 16
   Insn 430(l0): point = 18
   Insn 429(l0): point = 20
   Insn 428(l0): point = 22
   Insn 427(l0): point = 24
   Insn 426(l0): point = 26
   Insn 425(l0): point = 28
   Insn 424(l0): point = 30
   Insn 422(l0): point = 33
   Insn 421(l0): point = 35
   Insn 420(l0): point = 37
   Insn 419(l0): point = 39
   Insn 418(l0): point = 41
   Insn 416(l0): point = 44
   Insn 415(l0): point = 46
   Insn 414(l0): point = 48
   Insn 413(l0): point = 50
   Insn 411(l0): point = 53
   Insn 410(l0): point = 55
   Insn 407(l0): point = 57
   Insn 406(l0): point = 59
   Insn 405(l0): point = 61
   Insn 404(l0): point = 63
   Insn 403(l0): point = 65
   Insn 402(l0): point = 67
   Insn 401(l0): point = 69
   Insn 400(l0): point = 71
   Insn 399(l0): point = 73
   Insn 398(l0): point = 75
   Insn 397(l0): point = 77
   Insn 394(l0): point = 80
   Insn 393(l0): point = 82
   Insn 392(l0): point = 84
   Insn 391(l0): point = 86
   Insn 390(l0): point = 88
   Insn 388(l0): point = 91
   Insn 387(l0): point = 93
   Insn 386(l0): point = 95
   Insn 385(l0): point = 97
   Insn 384(l0): point = 99
   Insn 457(l0): point = 102
   Insn 453(l0): point = 105
   Insn 344(l0): point = 108
   Insn 343(l0): point = 110
   Insn 340(l0): point = 112
   Insn 339(l0): point = 114
   Insn 338(l0): point = 116
   Insn 337(l0): point = 118
   Insn 336(l0): point = 120
   Insn 335(l0): point = 122
   Insn 334(l0): point = 124
   Insn 381(l0): point = 127
   Insn 380(l0): point = 129
   Insn 379(l0): point = 131
   Insn 369(l0): point = 134
   Insn 368(l0): point = 136
   Insn 367(l0): point = 138
   Insn 366(l0): point = 140
   Insn 365(l0): point = 142
   Insn 364(l0): point = 144
   Insn 363(l0): point = 146
   Insn 362(l0): point = 148
   Insn 361(l0): point = 150
   Insn 360(l0): point = 152
   Insn 359(l0): point = 154
   Insn 358(l0): point = 156
   Insn 357(l0): point = 158
   Insn 356(l0): point = 160
   Insn 355(l0): point = 162
   Insn 354(l0): point = 164
   Insn 353(l0): point = 166
   Insn 352(l0): point = 168
   Insn 351(l0): point = 170
   Insn 350(l0): point = 172
   Insn 349(l0): point = 174
   Insn 348(l0): point = 176
   Insn 347(l0): point = 178
   Insn 346(l0): point = 180
   Insn 450(l0): point = 183
   Insn 330(l0): point = 185
   Insn 329(l0): point = 187
   Insn 328(l0): point = 189
   Insn 327(l0): point = 191
   Insn 325(l0): point = 194
   Insn 324(l0): point = 196
   Insn 323(l0): point = 198
   Insn 322(l0): point = 200
   Insn 265(l0): point = 203
   Insn 264(l0): point = 205
   Insn 263(l0): point = 207
   Insn 262(l0): point = 209
   Insn 261(l0): point = 211
   Insn 260(l0): point = 213
   Insn 259(l0): point = 215
   Insn 258(l0): point = 217
   Insn 257(l0): point = 219
   Insn 256(l0): point = 221
   Insn 255(l0): point = 223
   Insn 254(l0): point = 225
   Insn 253(l0): point = 227
   Insn 252(l0): point = 229
   Insn 251(l0): point = 231
   Insn 250(l0): point = 233
   Insn 249(l0): point = 235
   Insn 320(l0): point = 238
   Insn 319(l0): point = 240
   Insn 318(l0): point = 242
   Insn 312(l0): point = 245
   Insn 311(l0): point = 247
   Insn 310(l0): point = 249
   Insn 270(l0): point = 252
   Insn 269(l0): point = 254
   Insn 268(l0): point = 256
   Insn 267(l0): point = 258
   Insn 287(l0): point = 261
   Insn 286(l0): point = 263
   Insn 283(l0): point = 265
   Insn 282(l0): point = 267
   Insn 281(l0): point = 269
   Insn 280(l0): point = 271
   Insn 279(l0): point = 273
   Insn 278(l0): point = 275
   Insn 277(l0): point = 277
   Insn 276(l0): point = 279
   Insn 275(l0): point = 281
   Insn 274(l0): point = 283
   Insn 273(l0): point = 285
   Insn 272(l0): point = 287
   Insn 307(l0): point = 290
   Insn 306(l0): point = 292
   Insn 305(l0): point = 294
   Insn 304(l0): point = 296
   Insn 303(l0): point = 298
   Insn 302(l0): point = 300
   Insn 301(l0): point = 302
   Insn 300(l0): point = 304
   Insn 299(l0): point = 306
   Insn 298(l0): point = 308
   Insn 297(l0): point = 310
   Insn 296(l0): point = 312
   Insn 295(l0): point = 314
   Insn 294(l0): point = 316
   Insn 293(l0): point = 318
   Insn 292(l0): point = 320
   Insn 291(l0): point = 322
   Insn 290(l0): point = 324
   Insn 289(l0): point = 326
   Insn 448(l0): point = 329
   Insn 245(l0): point = 331
   Insn 244(l0): point = 333
   Insn 234(l0): point = 336
   Insn 233(l0): point = 338
   Insn 232(l0): point = 340
   Insn 231(l0): point = 342
   Insn 230(l0): point = 344
   Insn 229(l0): point = 346
   Insn 228(l0): point = 348
   Insn 227(l0): point = 350
   Insn 226(l0): point = 352
   Insn 225(l0): point = 354
   Insn 224(l0): point = 356
   Insn 223(l0): point = 358
   Insn 222(l0): point = 360
   Insn 242(l0): point = 363
   Insn 241(l0): point = 365
   Insn 240(l0): point = 367
   Insn 446(l0): point = 370
   Insn 218(l0): point = 372
   Insn 217(l0): point = 374
   Insn 216(l0): point = 376
   Insn 215(l0): point = 378
   Insn 214(l0): point = 380
   Insn 213(l0): point = 382
   Insn 212(l0): point = 384
   Insn 211(l0): point = 386
   Insn 210(l0): point = 388
   Insn 209(l0): point = 390
   Insn 208(l0): point = 392
   Insn 207(l0): point = 394
   Insn 206(l0): point = 399
   Insn 205(l0): point = 401
   Insn 204(l0): point = 403
   Insn 203(l0): point = 405
   Insn 202(l0): point = 407
   Insn 201(l0): point = 409
   Insn 200(l0): point = 411
   Insn 199(l0): point = 413
   Insn 198(l0): point = 415
   Insn 197(l0): point = 417
   Insn 196(l0): point = 419
   Insn 195(l0): point = 421
   Insn 194(l0): point = 423
   Insn 193(l0): point = 425
   Insn 192(l0): point = 427
   Insn 191(l0): point = 429
   Insn 190(l0): point = 431
   Insn 189(l0): point = 433
   Insn 188(l0): point = 435
   Insn 187(l0): point = 440
   Insn 186(l0): point = 442
   Insn 185(l0): point = 444
   Insn 184(l0): point = 446
   Insn 183(l0): point = 448
   Insn 182(l0): point = 450
   Insn 181(l0): point = 452
   Insn 180(l0): point = 454
   Insn 179(l0): point = 456
   Insn 178(l0): point = 458
   Insn 177(l0): point = 460
   Insn 176(l0): point = 462
   Insn 175(l0): point = 464
   Insn 174(l0): point = 469
   Insn 173(l0): point = 471
   Insn 172(l0): point = 473
   Insn 171(l0): point = 475
   Insn 170(l0): point = 477
   Insn 169(l0): point = 479
   Insn 168(l0): point = 481
   Insn 167(l0): point = 483
   Insn 166(l0): point = 485
   Insn 165(l0): point = 487
   Insn 164(l0): point = 489
   Insn 163(l0): point = 491
   Insn 162(l0): point = 493
   Insn 161(l0): point = 495
   Insn 160(l0): point = 497
   Insn 159(l0): point = 499
   Insn 158(l0): point = 501
   Insn 157(l0): point = 503
   Insn 156(l0): point = 505
   Insn 155(l0): point = 510
   Insn 154(l0): point = 512
   Insn 153(l0): point = 514
   Insn 152(l0): point = 516
   Insn 151(l0): point = 518
   Insn 150(l0): point = 520
   Insn 149(l0): point = 522
   Insn 148(l0): point = 524
   Insn 147(l0): point = 526
   Insn 146(l0): point = 528
   Insn 145(l0): point = 530
   Insn 144(l0): point = 532
   Insn 143(l0): point = 534
   Insn 142(l0): point = 539
   Insn 141(l0): point = 541
   Insn 140(l0): point = 543
   Insn 139(l0): point = 545
   Insn 138(l0): point = 547
   Insn 137(l0): point = 549
   Insn 136(l0): point = 551
   Insn 135(l0): point = 553
   Insn 134(l0): point = 555
   Insn 133(l0): point = 557
   Insn 132(l0): point = 559
   Insn 131(l0): point = 561
   Insn 130(l0): point = 563
   Insn 129(l0): point = 565
   Insn 128(l0): point = 567
   Insn 127(l0): point = 569
   Insn 126(l0): point = 571
   Insn 125(l0): point = 573
   Insn 124(l0): point = 575
   Insn 123(l0): point = 580
   Insn 122(l0): point = 582
   Insn 121(l0): point = 584
   Insn 111(l0): point = 587
   Insn 110(l0): point = 589
   Insn 109(l0): point = 591
   Insn 108(l0): point = 593
   Insn 107(l0): point = 595
   Insn 106(l0): point = 597
   Insn 105(l0): point = 599
   Insn 104(l0): point = 601
   Insn 103(l0): point = 603
   Insn 102(l0): point = 605
   Insn 101(l0): point = 607
   Insn 100(l0): point = 609
   Insn 99(l0): point = 611
   Insn 119(l0): point = 614
   Insn 118(l0): point = 616
   Insn 117(l0): point = 618
   Insn 444(l0): point = 621
   Insn 95(l0): point = 623
   Insn 94(l0): point = 625
   Insn 93(l0): point = 627
   Insn 92(l0): point = 629
   Insn 91(l0): point = 631
   Insn 90(l0): point = 633
   Insn 89(l0): point = 635
   Insn 88(l0): point = 637
   Insn 87(l0): point = 639
   Insn 85(l0): point = 642
   Insn 84(l0): point = 644
   Insn 83(l0): point = 646
   Insn 82(l0): point = 648
   Insn 79(l0): point = 651
   Insn 78(l0): point = 653
   Insn 77(l0): point = 655
   Insn 76(l0): point = 657
   Insn 75(l0): point = 659
   Insn 74(l0): point = 661
   Insn 73(l0): point = 663
   Insn 72(l0): point = 665
   Insn 70(l0): point = 668
   Insn 69(l0): point = 670
   Insn 68(l0): point = 672
   Insn 67(l0): point = 674
   Insn 64(l0): point = 677
   Insn 63(l0): point = 679
   Insn 62(l0): point = 681
   Insn 61(l0): point = 683
   Insn 60(l0): point = 685
   Insn 59(l0): point = 687
   Insn 58(l0): point = 689
   Insn 57(l0): point = 691
   Insn 55(l0): point = 694
   Insn 54(l0): point = 696
   Insn 53(l0): point = 698
   Insn 52(l0): point = 700
   Insn 49(l0): point = 703
   Insn 48(l0): point = 705
   Insn 47(l0): point = 707
   Insn 46(l0): point = 709
   Insn 45(l0): point = 711
   Insn 44(l0): point = 713
   Insn 43(l0): point = 715
   Insn 42(l0): point = 717
   Insn 40(l0): point = 720
   Insn 39(l0): point = 722
   Insn 38(l0): point = 724
   Insn 37(l0): point = 726
   Insn 36(l0): point = 728
   Insn 35(l0): point = 730
   Insn 34(l0): point = 732
   Insn 33(l0): point = 734
   Insn 32(l0): point = 736
   Insn 31(l0): point = 738
   Insn 30(l0): point = 740
   Insn 29(l0): point = 742
   Insn 28(l0): point = 744
   Insn 27(l0): point = 746
   Insn 26(l0): point = 748
   Insn 25(l0): point = 750
   Insn 24(l0): point = 752
   Insn 23(l0): point = 754
   Insn 22(l0): point = 756
   Insn 21(l0): point = 758
   Insn 20(l0): point = 760
   Insn 19(l0): point = 762
   Insn 18(l0): point = 764
   Insn 17(l0): point = 766
   Insn 16(l0): point = 768
   Insn 15(l0): point = 770
   Insn 14(l0): point = 772
   Insn 13(l0): point = 774
   Insn 12(l0): point = 776
   Insn 11(l0): point = 778
   Insn 10(l0): point = 780
   Insn 9(l0): point = 782
   Insn 8(l0): point = 784
   Insn 7(l0): point = 786
   Insn 6(l0): point = 788
   Insn 5(l0): point = 790
 a0(r346): [7..10]
 a1(r347): [7..8]
 a2(r197): [17..26]
 a3(r199): [19..20]
 a4(r198): [21..22]
 a5(r345): [23..24]
 a6(r196): [27..28]
 a7(r344): [29..30]
 a8(r195): [36..37]
 a9(r194): [38..39]
 a10(r343): [40..41]
 a11(r193): [47..48]
 a12(r342): [49..50]
 a13(r192): [56..57]
 a14(r191): [58..59]
 a15(r341): [60..61]
 a16(r340): [64..65]
 a17(r190): [64..67]
 a18(r339): [68..69]
 a19(r187): [81..86]
 a20(r189): [81..82]
 a21(r188): [83..84]
 a22(r338): [87..88]
 a23(r186): [94..95]
 a24(r185): [96..97]
 a25(r337): [98..99]
 a26(r336): [130..131]
 a27(r335): [135..136]
 a28(r334): [137..138]
 a29(r333): [145..146]
 a30(r184): [145..148]
 a31(r332): [149..150]
 a32(r182): [153..156]
 a33(r183): [153..154]
 a34(r180): [155..162]
 a35(r181): [157..158]
 a36(r331): [159..160]
 a37(r179): [163..164]
 a38(r178): [165..166]
 a39(r330): [167..168]
 a40(r177): [175..176]
 a41(r176): [177..178]
 a42(r329): [179..180]
 a43(r175): [111..112]
 a44(r328): [113..114]
 a45(r327): [117..118]
 a46(r174): [117..120]
 a47(r173): [121..122]
 a48(r326): [123..124]
 a49(r325): [186..187]
 a50(r324): [188..189]
 a51(r172): [197..198]
 a52(r323): [199..200]
 a53(r322): [241..242]
 a54(r320): [246..247]
 a55(r321): [248..249]
 a56(r171): [295..296]
 a57(r319): [297..298]
 a58(r317): [307..310]
 a59(r318): [307..308]
 a60(r315): [313..316]
 a61(r316): [313..314]
 a62(r313): [319..322]
 a63(r314): [319..320]
 a64(r170): [264..265]
 a65(r312): [266..267]
 a66(r169): [274..275]
 a67(r311): [276..277]
 a68(r310): [280..281]
 a69(r168): [280..283]
 a70(r167): [284..285]
 a71(r309): [286..287]
 a72(r166): [255..256]
 a73(r308): [257..258]
 a74(r165): [206..207]
 a75(r307): [208..209]
 a76(r305): [212..213]
 a77(r306): [214..215]
 a78(r303): [220..233] [214..217]
 a79(r304): [218..219]
 a80(r302): [222..235]
 a81(r301): [332..333]
 a82(r300): [366..367]
 a83(r298): [337..338]
 a84(r299): [339..340]
 a85(r163): [345..354]
 a86(r164): [349..350]
 a87(r297): [351..352]
 a88(r295): [355..356]
 a89(r296): [357..358]
 a90(r294): [357..360]
 a91(r293): [373..374]
 a92(r291): [377..380]
 a93(r292): [377..378]
 a94(r162): [379..382]
 a95(r290): [383..384]
 a96(r161): [385..386]
 a97(r160): [387..388]
 a98(r289): [389..390]
 a99(r288): [389..392]
 a100(r159): [391..401]
 a101(r286): [393..394]
 a102(r287): [395..399]
 a103(r353): [396..397] [394..394]
 a104(r285): [402..403]
 a105(r283): [406..409]
 a106(r284): [406..407]
 a107(r158): [408..411]
 a108(r282): [412..413]
 a109(r157): [414..415]
 a110(r156): [424..429] [416..417]
 a111(r280): [422..427] [418..419]
 a112(r155): [418..442]
 a113(r281): [420..421]
 a114(r279): [430..431]
 a115(r278): [430..433]
 a116(r276): [434..435]
 a117(r277): [436..440]
 a118(r352): [437..438] [435..435]
 a119(r275): [443..444]
 a120(r273): [447..450]
 a121(r274): [447..448]
 a122(r154): [449..452]
 a123(r272): [453..454]
 a124(r153): [455..456]
 a125(r152): [457..458]
 a126(r271): [459..460]
 a127(r270): [459..462]
 a128(r151): [461..471]
 a129(r268): [463..464]
 a130(r269): [465..469]
 a131(r351): [466..467] [464..464]
 a132(r267): [472..473]
 a133(r265): [476..479]
 a134(r266): [476..477]
 a135(r150): [478..481]
 a136(r264): [482..483]
 a137(r149): [484..485]
 a138(r148): [494..499] [486..487]
 a139(r262): [492..497] [488..489]
 a140(r147): [488..512]
 a141(r263): [490..491]
 a142(r261): [500..501]
 a143(r260): [500..503]
 a144(r258): [504..505]
 a145(r259): [506..510]
 a146(r350): [507..508] [505..505]
 a147(r257): [513..514]
 a148(r255): [517..520]
 a149(r256): [517..518]
 a150(r146): [519..522]
 a151(r254): [523..524]
 a152(r145): [525..526]
 a153(r144): [527..528]
 a154(r253): [529..530]
 a155(r252): [529..532]
 a156(r143): [531..541]
 a157(r250): [533..534]
 a158(r251): [535..539]
 a159(r349): [536..537] [534..534]
 a160(r249): [542..543]
 a161(r247): [546..549]
 a162(r248): [546..547]
 a163(r142): [548..551]
 a164(r246): [552..553]
 a165(r141): [554..555]
 a166(r140): [564..569] [556..557]
 a167(r244): [562..567] [558..559]
 a168(r139): [558..582]
 a169(r245): [560..561]
 a170(r243): [570..571]
 a171(r242): [570..573]
 a172(r240): [574..575]
 a173(r241): [576..580]
 a174(r348): [577..578] [575..575]
 a175(r239): [583..584]
 a176(r238): [617..618]
 a177(r236): [588..589]
 a178(r237): [590..591]
 a179(r137): [596..605]
 a180(r138): [600..601]
 a181(r235): [602..603]
 a182(r233): [606..607]
 a183(r234): [608..609]
 a184(r232): [608..611]
 a185(r231): [624..625]
 a186(r229): [628..631]
 a187(r230): [628..629]
 a188(r228): [634..635]
 a189(r136): [634..637]
 a190(r227): [638..639]
 a191(r135): [645..646]
 a192(r226): [647..648]
 a193(r225): [652..653]
 a194(r134): [652..655]
 a195(r133): [656..657]
 a196(r224): [658..659]
 a197(r222): [662..665]
 a198(r223): [662..663]
 a199(r132): [671..672]
 a200(r221): [673..674]
 a201(r220): [678..679]
 a202(r131): [678..681]
 a203(r130): [682..683]
 a204(r219): [684..685]
 a205(r217): [688..691]
 a206(r218): [688..689]
 a207(r129): [697..698]
 a208(r216): [699..700]
 a209(r215): [704..705]
 a210(r128): [704..707]
 a211(r127): [708..709]
 a212(r214): [710..711]
 a213(r212): [714..717]
 a214(r213): [714..715]
 a215(r126): [723..724]
 a216(r211): [725..726]
 a217(r210): [729..730]
 a218(r125): [729..732]
 a219(r124): [733..734]
 a220(r209): [735..736]
 a221(r123): [739..740]
 a222(r122): [741..742]
 a223(r208): [743..744]
 a224(r121): [747..748]
 a225(r120): [749..750]
 a226(r207): [751..752]
 a227(r119): [755..756]
 a228(r118): [757..758]
 a229(r206): [759..760]
 a230(r117): [763..764]
 a231(r116): [765..766]
 a232(r205): [767..768]
 a233(r115): [771..772]
 a234(r114): [773..774]
 a235(r204): [775..776]
 a236(r202): [779..782]
 a237(r203): [779..780]
 a238(r201): [785..786]
 a239(r113): [785..788]
 a240(r200): [789..790]
Compressing live ranges: from 793 to 392 - 49%
Ranges after the compression:
 a0(r346): [0..1]
 a1(r347): [0..1]
 a2(r197): [2..7]
 a3(r199): [2..3]
 a4(r198): [4..5]
 a5(r345): [6..7]
 a6(r196): [8..9]
 a7(r344): [10..11]
 a8(r195): [12..13]
 a9(r194): [14..15]
 a10(r343): [16..17]
 a11(r193): [18..19]
 a12(r342): [20..21]
 a13(r192): [22..23]
 a14(r191): [24..25]
 a15(r341): [26..27]
 a16(r340): [28..29]
 a17(r190): [28..29]
 a18(r339): [30..31]
 a19(r187): [32..35]
 a20(r189): [32..33]
 a21(r188): [34..35]
 a22(r338): [36..37]
 a23(r186): [38..39]
 a24(r185): [40..41]
 a25(r337): [42..43]
 a26(r336): [54..55]
 a27(r335): [56..57]
 a28(r334): [58..59]
 a29(r333): [60..61]
 a30(r184): [60..61]
 a31(r332): [62..63]
 a32(r182): [64..67]
 a33(r183): [64..65]
 a34(r180): [66..71]
 a35(r181): [68..69]
 a36(r331): [70..71]
 a37(r179): [72..73]
 a38(r178): [74..75]
 a39(r330): [76..77]
 a40(r177): [78..79]
 a41(r176): [80..81]
 a42(r329): [82..83]
 a43(r175): [44..45]
 a44(r328): [46..47]
 a45(r327): [48..49]
 a46(r174): [48..49]
 a47(r173): [50..51]
 a48(r326): [52..53]
 a49(r325): [84..85]
 a50(r324): [86..87]
 a51(r172): [88..89]
 a52(r323): [90..91]
 a53(r322): [104..105]
 a54(r320): [106..107]
 a55(r321): [108..109]
 a56(r171): [128..129]
 a57(r319): [130..131]
 a58(r317): [132..133]
 a59(r318): [132..133]
 a60(r315): [134..135]
 a61(r316): [134..135]
 a62(r313): [136..137]
 a63(r314): [136..137]
 a64(r170): [114..115]
 a65(r312): [116..117]
 a66(r169): [118..119]
 a67(r311): [120..121]
 a68(r310): [122..123]
 a69(r168): [122..123]
 a70(r167): [124..125]
 a71(r309): [126..127]
 a72(r166): [110..111]
 a73(r308): [112..113]
 a74(r165): [92..93]
 a75(r307): [94..95]
 a76(r305): [96..97]
 a77(r306): [98..99]
 a78(r303): [102..103] [98..99]
 a79(r304): [100..101]
 a80(r302): [102..103]
 a81(r301): [138..139]
 a82(r300): [152..153]
 a83(r298): [140..141]
 a84(r299): [142..143]
 a85(r163): [144..147]
 a86(r164): [144..145]
 a87(r297): [146..147]
 a88(r295): [148..149]
 a89(r296): [150..151]
 a90(r294): [150..151]
 a91(r293): [154..155]
 a92(r291): [156..159]
 a93(r292): [156..157]
 a94(r162): [158..159]
 a95(r290): [160..161]
 a96(r161): [162..163]
 a97(r160): [164..165]
 a98(r289): [166..167]
 a99(r288): [166..169]
 a100(r159): [168..173]
 a101(r286): [170..171]
 a102(r287): [172..173]
 a103(r353): [171..173]
 a104(r285): [174..175]
 a105(r283): [176..179]
 a106(r284): [176..177]
 a107(r158): [178..179]
 a108(r282): [180..181]
 a109(r157): [182..183]
 a110(r156): [190..191] [184..185]
 a111(r280): [190..191] [186..187]
 a112(r155): [186..197]
 a113(r281): [188..189]
 a114(r279): [192..193]
 a115(r278): [192..193]
 a116(r276): [194..195]
 a117(r277): [196..197]
 a118(r352): [195..197]
 a119(r275): [198..199]
 a120(r273): [200..203]
 a121(r274): [200..201]
 a122(r154): [202..203]
 a123(r272): [204..205]
 a124(r153): [206..207]
 a125(r152): [208..209]
 a126(r271): [210..211]
 a127(r270): [210..213]
 a128(r151): [212..217]
 a129(r268): [214..215]
 a130(r269): [216..217]
 a131(r351): [215..217]
 a132(r267): [218..219]
 a133(r265): [220..223]
 a134(r266): [220..221]
 a135(r150): [222..223]
 a136(r264): [224..225]
 a137(r149): [226..227]
 a138(r148): [234..235] [228..229]
 a139(r262): [234..235] [230..231]
 a140(r147): [230..241]
 a141(r263): [232..233]
 a142(r261): [236..237]
 a143(r260): [236..237]
 a144(r258): [238..239]
 a145(r259): [240..241]
 a146(r350): [239..241]
 a147(r257): [242..243]
 a148(r255): [244..247]
 a149(r256): [244..245]
 a150(r146): [246..247]
 a151(r254): [248..249]
 a152(r145): [250..251]
 a153(r144): [252..253]
 a154(r253): [254..255]
 a155(r252): [254..257]
 a156(r143): [256..261]
 a157(r250): [258..259]
 a158(r251): [260..261]
 a159(r349): [259..261]
 a160(r249): [262..263]
 a161(r247): [264..267]
 a162(r248): [264..265]
 a163(r142): [266..267]
 a164(r246): [268..269]
 a165(r141): [270..271]
 a166(r140): [278..279] [272..273]
 a167(r244): [278..279] [274..275]
 a168(r139): [274..285]
 a169(r245): [276..277]
 a170(r243): [280..281]
 a171(r242): [280..281]
 a172(r240): [282..283]
 a173(r241): [284..285]
 a174(r348): [283..285]
 a175(r239): [286..287]
 a176(r238): [300..301]
 a177(r236): [288..289]
 a178(r237): [290..291]
 a179(r137): [292..295]
 a180(r138): [292..293]
 a181(r235): [294..295]
 a182(r233): [296..297]
 a183(r234): [298..299]
 a184(r232): [298..299]
 a185(r231): [302..303]
 a186(r229): [304..305]
 a187(r230): [304..305]
 a188(r228): [306..307]
 a189(r136): [306..307]
 a190(r227): [308..309]
 a191(r135): [310..311]
 a192(r226): [312..313]
 a193(r225): [314..315]
 a194(r134): [314..315]
 a195(r133): [316..317]
 a196(r224): [318..319]
 a197(r222): [320..321]
 a198(r223): [320..321]
 a199(r132): [322..323]
 a200(r221): [324..325]
 a201(r220): [326..327]
 a202(r131): [326..327]
 a203(r130): [328..329]
 a204(r219): [330..331]
 a205(r217): [332..333]
 a206(r218): [332..333]
 a207(r129): [334..335]
 a208(r216): [336..337]
 a209(r215): [338..339]
 a210(r128): [338..339]
 a211(r127): [340..341]
 a212(r214): [342..343]
 a213(r212): [344..345]
 a214(r213): [344..345]
 a215(r126): [346..347]
 a216(r211): [348..349]
 a217(r210): [350..351]
 a218(r125): [350..351]
 a219(r124): [352..353]
 a220(r209): [354..355]
 a221(r123): [356..357]
 a222(r122): [358..359]
 a223(r208): [360..361]
 a224(r121): [362..363]
 a225(r120): [364..365]
 a226(r207): [366..367]
 a227(r119): [368..369]
 a228(r118): [370..371]
 a229(r206): [372..373]
 a230(r117): [374..375]
 a231(r116): [376..377]
 a232(r205): [378..379]
 a233(r115): [380..381]
 a234(r114): [382..383]
 a235(r204): [384..385]
 a236(r202): [386..387]
 a237(r203): [386..387]
 a238(r201): [388..389]
 a239(r113): [388..389]
 a240(r200): [390..391]
  regions=1, blocks=37, points=392
    allocnos=241 (big 0), copies=0, conflicts=0, ranges=248
Disposition:
  239:r113 l0     3  234:r114 l0     3  233:r115 l0     3  231:r116 l0     3
  230:r117 l0     3  228:r118 l0     3  227:r119 l0     3  225:r120 l0     3
  224:r121 l0     3  222:r122 l0     3  221:r123 l0     3  219:r124 l0     3
  218:r125 l0     3  215:r126 l0     3  211:r127 l0     3  210:r128 l0     3
  207:r129 l0     3  203:r130 l0     3  202:r131 l0     3  199:r132 l0     3
  195:r133 l0     3  194:r134 l0     3  191:r135 l0     3  189:r136 l0     3
  179:r137 l0     0  180:r138 l0     3  168:r139 l0     1  166:r140 l0     2
  165:r141 l0     3  163:r142 l0     2  156:r143 l0     3  153:r144 l0     3
  152:r145 l0     3  150:r146 l0     2  140:r147 l0     1  138:r148 l0     2
  137:r149 l0     3  135:r150 l0     2  128:r151 l0     3  125:r152 l0     3
  124:r153 l0     3  122:r154 l0     2  112:r155 l0     1  110:r156 l0     2
  109:r157 l0     3  107:r158 l0     2  100:r159 l0     3   97:r160 l0     3
   96:r161 l0     3   94:r162 l0     2   85:r163 l0     0   86:r164 l0     3
   74:r165 l0     3   72:r166 l0     3   70:r167 l0     3   69:r168 l0     2
   66:r169 l0     3   64:r170 l0     3   56:r171 l0     3   51:r172 l0     3
   47:r173 l0     3   46:r174 l0     2   43:r175 l0     3   41:r176 l0     3
   40:r177 l0     3   38:r178 l0     3   37:r179 l0     3   34:r180 l0     2
   35:r181 l0     3   32:r182 l0     3   33:r183 l0     2   30:r184 l0     3
   24:r185 l0     3   23:r186 l0     3   19:r187 l0     3   21:r188 l0     2
   20:r189 l0     2   17:r190 l0     3   14:r191 l0     3   13:r192 l0     3
   11:r193 l0     3    9:r194 l0     3    8:r195 l0     3    6:r196 l0     3
    2:r197 l0     1    4:r198 l0     3    3:r199 l0     3  240:r200 l0     3
  238:r201 l0     2  236:r202 l0     3  237:r203 l0     2  235:r204 l0     3
  232:r205 l0     3  229:r206 l0     3  226:r207 l0     3  223:r208 l0     3
  220:r209 l0     3  217:r210 l0     2  216:r211 l0     3  213:r212 l0     3
  214:r213 l0     2  212:r214 l0     3  209:r215 l0     2  208:r216 l0     3
  205:r217 l0     3  206:r218 l0     2  204:r219 l0     3  201:r220 l0     2
  200:r221 l0     3  197:r222 l0     3  198:r223 l0     2  196:r224 l0     3
  193:r225 l0     2  192:r226 l0     3  190:r227 l0     3  188:r228 l0     2
  186:r229 l0     3  187:r230 l0     2  185:r231 l0     3  184:r232 l0     2
  182:r233 l0     3  183:r234 l0     3  181:r235 l0     3  177:r236 l0     3
  178:r237 l0     3  176:r238 l0     3  175:r239 l0     3  172:r240 l0     3
  173:r241 l0     3  171:r242 l0     2  170:r243 l0     3  167:r244 l0     3
  169:r245 l0     3  164:r246 l0     3  161:r247 l0     3  162:r248 l0     2
  160:r249 l0     3  157:r250 l0     2  158:r251 l0     2  155:r252 l0     2
  154:r253 l0     3  151:r254 l0     3  148:r255 l0     3  149:r256 l0     2
  147:r257 l0     3  144:r258 l0     3  145:r259 l0     3  143:r260 l0     2
  142:r261 l0     3  139:r262 l0     3  141:r263 l0     3  136:r264 l0     3
  133:r265 l0     3  134:r266 l0     2  132:r267 l0     3  129:r268 l0     2
  130:r269 l0     2  127:r270 l0     2  126:r271 l0     3  123:r272 l0     3
  120:r273 l0     3  121:r274 l0     2  119:r275 l0     3  116:r276 l0     3
  117:r277 l0     3  115:r278 l0     2  114:r279 l0     3  111:r280 l0     3
  113:r281 l0     3  108:r282 l0     3  105:r283 l0     3  106:r284 l0     2
  104:r285 l0     3  101:r286 l0     2  102:r287 l0     2   99:r288 l0     2
   98:r289 l0     3   95:r290 l0     3   92:r291 l0     3   93:r292 l0     2
   91:r293 l0     3   90:r294 l0     2   88:r295 l0     3   89:r296 l0     3
   87:r297 l0     3   83:r298 l0     3   84:r299 l0     3   82:r300 l0     3
   81:r301 l0     3   80:r302 l0     2   78:r303 l0     3   79:r304 l0     3
   76:r305 l0     3   77:r306 l0     2   75:r307 l0     3   73:r308 l0     3
   71:r309 l0     3   68:r310 l0     3   67:r311 l0     3   65:r312 l0     3
   62:r313 l0     3   63:r314 l0     2   60:r315 l0     3   61:r316 l0     2
   58:r317 l0     3   59:r318 l0     2   57:r319 l0     3   54:r320 l0     3
   55:r321 l0     3   53:r322 l0     3   52:r323 l0     3   50:r324 l0     3
   49:r325 l0     3   48:r326 l0     3   45:r327 l0     3   44:r328 l0     3
   42:r329 l0     3   39:r330 l0     3   36:r331 l0     3   31:r332 l0     3
   29:r333 l0     2   28:r334 l0     3   27:r335 l0     3   26:r336 l0     3
   25:r337 l0     3   22:r338 l0     3   18:r339 l0     3   16:r340 l0     2
   15:r341 l0     3   12:r342 l0     3   10:r343 l0     3    7:r344 l0     3
    5:r345 l0     3    0:r346 l0     3    1:r347 l0     2  174:r348 l0     2
  159:r349 l0     1  146:r350 l0     2  131:r351 l0     1  118:r352 l0     2
  103:r353 l0     1
+++Costs: overall 18000, reg 18000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


timer0_handler

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 102 [sfp] 103 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={23d,11u} r1={20d,7u} r2={16d,3u} r3={13d} r11={1d,36u} r12={24d} r13={1d,48u} r14={13d} r15={12d} r16={12d} r17={12d} r18={12d} r19={12d} r20={12d} r21={12d} r22={12d} r23={12d} r24={12d} r25={12d} r26={12d} r27={12d} r28={12d} r29={12d} r30={12d} r31={12d} r32={12d} r33={12d} r34={12d} r35={12d} r36={12d} r37={12d} r38={12d} r39={12d} r40={12d} r41={12d} r42={12d} r43={12d} r44={12d} r45={12d} r46={12d} r47={12d} r48={12d} r49={12d} r50={12d} r51={12d} r52={12d} r53={12d} r54={12d} r55={12d} r56={12d} r57={12d} r58={12d} r59={12d} r60={12d} r61={12d} r62={12d} r63={12d} r64={12d} r65={12d} r66={12d} r67={12d} r68={12d} r69={12d} r70={12d} r71={12d} r72={12d} r73={12d} r74={12d} r75={12d} r76={12d} r77={12d} r78={12d} r79={12d} r80={12d} r81={12d} r82={12d} r83={12d} r84={12d} r85={12d} r86={12d} r87={12d} r88={12d} r89={12d} r90={12d} r91={12d} r92={12d} r93={12d} r94={12d} r95={12d} r96={12d} r97={12d} r98={12d} r99={12d} r100={29d,17u} r101={12d} r102={1d,84u} r103={1d,35u} r104={12d} r105={12d} r106={12d} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,3u,1e} r140={2d,3u,1e} r141={1d,1u} r142={1d,1u} r143={1d,2u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,3u,1e} r148={2d,3u,1e} r149={1d,1u} r150={1d,1u} r151={1d,2u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,3u,1e} r156={2d,3u,1e} r157={1d,1u} r158={1d,1u} r159={1d,2u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,2u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d,1u} r231={1d,1u} r232={1d,1u} r233={1d,1u} r234={1d,1u} r235={1d,1u} r236={1d,1u} r237={1d,1u} r238={1d,1u} r239={1d,1u} r240={1d,1u} r241={1d,1u} r242={1d,1u} r243={1d,1u} r244={4d,4u} r245={1d,1u} r246={1d,1u} r247={1d,1u} r248={1d,1u} r249={1d,1u} r250={1d,1u} r251={1d,1u} r252={1d,1u} r253={1d,1u} r254={1d,1u} r255={1d,1u} r256={1d,1u} r257={1d,1u} r258={1d,1u} r259={1d,1u} r260={1d,1u} r261={1d,1u} r262={4d,4u} r263={1d,1u} r264={1d,1u} r265={1d,1u} r266={1d,1u} r267={1d,1u} r268={1d,1u} r269={1d,1u} r270={1d,1u} r271={1d,1u} r272={1d,1u} r273={1d,1u} r274={1d,1u} r275={1d,1u} r276={1d,1u} r277={1d,1u} r278={1d,1u} r279={1d,1u} r280={4d,4u} r281={1d,1u} r282={1d,1u} r283={1d,1u} r284={1d,1u} r285={1d,1u} r286={1d,1u} r287={1d,1u} r288={1d,1u} r289={1d,1u} r290={1d,1u} r291={1d,1u} r292={1d,1u} r293={1d,1u} r294={1d,1u} r295={1d,1u} r296={1d,1u} r297={1d,1u} r298={1d,1u} r299={1d,1u} r300={1d,1u} r301={1d,1u} r302={1d,4u,3e} r303={8d,8u} r304={1d,1u} r305={1d,1u} r306={1d,1u} r307={1d,1u} r308={1d,1u} r309={1d,1u} r310={1d,1u} r311={1d,1u} r312={1d,1u} r313={1d,1u} r314={1d,1u} r315={1d,1u} r316={1d,1u} r317={1d,1u} r318={1d,1u} r319={1d,1u} r320={1d,1u} r321={1d,1u} r322={1d,1u} r323={1d,1u} r324={1d,1u} r325={1d,1u} r326={1d,1u} r327={1d,1u} r328={1d,1u} r329={1d,1u} r330={1d,1u} r331={1d,1u} r332={1d,1u} r333={1d,1u} r334={1d,1u} r335={1d,1u} r336={1d,1u} r337={1d,1u} r338={1d,1u} r339={1d,1u} r340={1d,1u} r341={1d,1u} r342={1d,1u} r343={1d,1u} r344={1d,1u} r345={1d,1u} r346={1d,1u} r347={1d,1u} r348={1d} r349={1d} r350={1d} r351={1d} r352={1d} r353={1d} 
;;    total ref usage 1990{1470d,511u,9e} in 370{358 regular + 12 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 113 114 115 116 117 118 119 120 121 122 123 124 125 126 200 201 202 203 204 205 206 207 208 209 210 211
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 200)
        (symbol_ref:SI ("color") [flags 0x40]  <var_decl 0x7f50612f5480 color>)) "timer.c":76:14 253 {*arm_movsi_insn}
     (nil))
(insn 6 5 7 2 (set (reg:SI 113 [ color.0_1 ])
        (mem/c:SI (reg/f:SI 200) [2 color+0 S4 A32])) "timer.c":76:14 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 200)
        (nil)))
(insn 7 6 8 2 (set (reg/f:SI 201)
        (symbol_ref:SI ("oldcolor") [flags 0x2]  <var_decl 0x7f50606126c0 oldcolor>)) "timer.c":76:14 253 {*arm_movsi_insn}
     (nil))
(insn 8 7 9 2 (set (mem/c:SI (reg/f:SI 201) [2 oldcolor+0 S4 A32])
        (reg:SI 113 [ color.0_1 ])) "timer.c":76:14 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 201)
        (expr_list:REG_DEAD (reg:SI 113 [ color.0_1 ])
            (nil))))
(insn 9 8 10 2 (set (reg/f:SI 202)
        (symbol_ref:SI ("color") [flags 0x40]  <var_decl 0x7f50612f5480 color>)) "timer.c":77:11 253 {*arm_movsi_insn}
     (nil))
(insn 10 9 11 2 (set (reg:SI 203)
        (const_int 1 [0x1])) "timer.c":77:11 253 {*arm_movsi_insn}
     (nil))
(insn 11 10 12 2 (set (mem/c:SI (reg/f:SI 202) [2 color+0 S4 A32])
        (reg:SI 203)) "timer.c":77:11 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 203)
        (expr_list:REG_DEAD (reg/f:SI 202)
            (nil))))
(insn 12 11 13 2 (set (reg/f:SI 204)
        (symbol_ref:SI ("tp") [flags 0x2]  <var_decl 0x7f5060612000 tp>)) "timer.c":79:13 253 {*arm_movsi_insn}
     (nil))
(insn 13 12 14 2 (set (reg/f:SI 114 [ _2 ])
        (mem/f/c:SI (reg/f:SI 204) [1 tp[0]+0 S4 A32])) "timer.c":79:13 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 204)
        (nil)))
(insn 14 13 15 2 (set (reg:SI 115 [ _3 ])
        (mem/v:SI (plus:SI (reg/f:SI 114 [ _2 ])
                (const_int 16 [0x10])) [2 _2->RIS+0 S4 A32])) "timer.c":79:16 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 114 [ _2 ])
        (nil)))
(insn 15 14 16 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -28 [0xffffffffffffffe4])) [2 ris+0 S4 A32])
        (reg:SI 115 [ _3 ])) "timer.c":79:9 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 115 [ _3 ])
        (nil)))
(insn 16 15 17 2 (set (reg/f:SI 205)
        (symbol_ref:SI ("tp") [flags 0x2]  <var_decl 0x7f5060612000 tp>)) "timer.c":80:13 253 {*arm_movsi_insn}
     (nil))
(insn 17 16 18 2 (set (reg/f:SI 116 [ _4 ])
        (mem/f/c:SI (reg/f:SI 205) [1 tp[0]+0 S4 A32])) "timer.c":80:13 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 205)
        (nil)))
(insn 18 17 19 2 (set (reg:SI 117 [ _5 ])
        (mem/v:SI (plus:SI (reg/f:SI 116 [ _4 ])
                (const_int 20 [0x14])) [2 _4->MIS+0 S4 A32])) "timer.c":80:16 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 116 [ _4 ])
        (nil)))
(insn 19 18 20 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -24 [0xffffffffffffffe8])) [2 mis+0 S4 A64])
        (reg:SI 117 [ _5 ])) "timer.c":80:9 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 117 [ _5 ])
        (nil)))
(insn 20 19 21 2 (set (reg/f:SI 206)
        (symbol_ref:SI ("tp") [flags 0x2]  <var_decl 0x7f5060612000 tp>)) "timer.c":81:15 253 {*arm_movsi_insn}
     (nil))
(insn 21 20 22 2 (set (reg/f:SI 118 [ _6 ])
        (mem/f/c:SI (reg/f:SI 206) [1 tp[0]+0 S4 A32])) "timer.c":81:15 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 206)
        (nil)))
(insn 22 21 23 2 (set (reg:SI 119 [ _7 ])
        (mem/v:SI (plus:SI (reg/f:SI 118 [ _6 ])
                (const_int 4 [0x4])) [2 _6->VALUE+0 S4 A32])) "timer.c":81:18 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 118 [ _6 ])
        (nil)))
(insn 23 22 24 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -20 [0xffffffffffffffec])) [2 value+0 S4 A32])
        (reg:SI 119 [ _7 ])) "timer.c":81:11 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 119 [ _7 ])
        (nil)))
(insn 24 23 25 2 (set (reg/f:SI 207)
        (symbol_ref:SI ("tp") [flags 0x2]  <var_decl 0x7f5060612000 tp>)) "timer.c":82:15 253 {*arm_movsi_insn}
     (nil))
(insn 25 24 26 2 (set (reg/f:SI 120 [ _8 ])
        (mem/f/c:SI (reg/f:SI 207) [1 tp[0]+0 S4 A32])) "timer.c":82:15 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 207)
        (nil)))
(insn 26 25 27 2 (set (reg:SI 121 [ _9 ])
        (mem/v:SI (reg/f:SI 120 [ _8 ]) [2 _8->LOAD+0 S4 A32])) "timer.c":82:18 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 120 [ _8 ])
        (nil)))
(insn 27 26 28 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [2 load+0 S4 A64])
        (reg:SI 121 [ _9 ])) "timer.c":82:11 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 121 [ _9 ])
        (nil)))
(insn 28 27 29 2 (set (reg/f:SI 208)
        (symbol_ref:SI ("tp") [flags 0x2]  <var_decl 0x7f5060612000 tp>)) "timer.c":83:13 253 {*arm_movsi_insn}
     (nil))
(insn 29 28 30 2 (set (reg/f:SI 122 [ _10 ])
        (mem/f/c:SI (reg/f:SI 208) [1 tp[0]+0 S4 A32])) "timer.c":83:13 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 208)
        (nil)))
(insn 30 29 31 2 (set (reg:SI 123 [ _11 ])
        (mem/v:SI (plus:SI (reg/f:SI 122 [ _10 ])
                (const_int 24 [0x18])) [2 _10->BGLOAD+0 S4 A32])) "timer.c":83:16 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 122 [ _10 ])
        (nil)))
(insn 31 30 32 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [2 bload+0 S4 A32])
        (reg:SI 123 [ _11 ])) "timer.c":83:10 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 123 [ _11 ])
        (nil)))
(insn 32 31 33 2 (set (reg/f:SI 209)
        (symbol_ref:SI ("tick") [flags 0x2]  <var_decl 0x7f5060612630 tick>)) "timer.c":85:9 253 {*arm_movsi_insn}
     (nil))
(insn 33 32 34 2 (set (reg:SI 124 [ tick.1_12 ])
        (mem/c:SI (reg/f:SI 209) [2 tick+0 S4 A32])) "timer.c":85:9 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 209)
        (nil)))
(insn 34 33 35 2 (set (reg:SI 125 [ _13 ])
        (plus:SI (reg:SI 124 [ tick.1_12 ])
            (const_int 1 [0x1]))) "timer.c":85:9 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 124 [ tick.1_12 ])
        (nil)))
(insn 35 34 36 2 (set (reg/f:SI 210)
        (symbol_ref:SI ("tick") [flags 0x2]  <var_decl 0x7f5060612630 tick>)) "timer.c":85:9 253 {*arm_movsi_insn}
     (nil))
(insn 36 35 37 2 (set (mem/c:SI (reg/f:SI 210) [2 tick+0 S4 A32])
        (reg:SI 125 [ _13 ])) "timer.c":85:9 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 210)
        (expr_list:REG_DEAD (reg:SI 125 [ _13 ])
            (nil))))
(insn 37 36 38 2 (set (reg/f:SI 211)
        (symbol_ref:SI ("tick") [flags 0x2]  <var_decl 0x7f5060612630 tick>)) "timer.c":86:14 253 {*arm_movsi_insn}
     (nil))
(insn 38 37 39 2 (set (reg:SI 126 [ tick.2_14 ])
        (mem/c:SI (reg/f:SI 211) [2 tick+0 S4 A32])) "timer.c":86:14 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 211)
        (nil)))
(insn 39 38 40 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 126 [ tick.2_14 ])
            (const_int 16 [0x10]))) "timer.c":86:8 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 126 [ tick.2_14 ])
        (nil)))
(jump_insn 40 39 41 2 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 50)
            (pc))) "timer.c":86:8 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (nil))
 -> 50)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 127 128 212 213 214 215
(note 41 40 42 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 3 (set (reg/f:SI 212)
        (symbol_ref:SI ("tick") [flags 0x2]  <var_decl 0x7f5060612630 tick>)) "timer.c":87:11 253 {*arm_movsi_insn}
     (nil))
(insn 43 42 44 3 (set (reg:SI 213)
        (const_int 0 [0])) "timer.c":87:11 253 {*arm_movsi_insn}
     (nil))
(insn 44 43 45 3 (set (mem/c:SI (reg/f:SI 212) [2 tick+0 S4 A32])
        (reg:SI 213)) "timer.c":87:11 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 213)
        (expr_list:REG_DEAD (reg/f:SI 212)
            (nil))))
(insn 45 44 46 3 (set (reg/f:SI 214)
        (symbol_ref:SI ("ss") [flags 0x40]  <var_decl 0x7f50606125a0 ss>)) "timer.c":87:17 253 {*arm_movsi_insn}
     (nil))
(insn 46 45 47 3 (set (reg:SI 127 [ ss.3_15 ])
        (mem/c:SI (reg/f:SI 214) [2 ss+0 S4 A32])) "timer.c":87:17 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 214)
        (nil)))
(insn 47 46 48 3 (set (reg:SI 128 [ _16 ])
        (plus:SI (reg:SI 127 [ ss.3_15 ])
            (const_int 1 [0x1]))) "timer.c":87:17 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 127 [ ss.3_15 ])
        (nil)))
(insn 48 47 49 3 (set (reg/f:SI 215)
        (symbol_ref:SI ("ss") [flags 0x40]  <var_decl 0x7f50606125a0 ss>)) "timer.c":87:17 253 {*arm_movsi_insn}
     (nil))
(insn 49 48 50 3 (set (mem/c:SI (reg/f:SI 215) [2 ss+0 S4 A32])
        (reg:SI 128 [ _16 ])) "timer.c":87:17 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 215)
        (expr_list:REG_DEAD (reg:SI 128 [ _16 ])
            (nil))))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       2
;;              3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 129 216
(code_label 50 49 51 4 2 (nil) [1 uses])
(note 51 50 52 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 4 (set (reg/f:SI 216)
        (symbol_ref:SI ("ss") [flags 0x40]  <var_decl 0x7f50606125a0 ss>)) "timer.c":89:11 253 {*arm_movsi_insn}
     (nil))
(insn 53 52 54 4 (set (reg:SI 129 [ ss.4_17 ])
        (mem/c:SI (reg/f:SI 216) [2 ss+0 S4 A32])) "timer.c":89:11 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 216)
        (nil)))
(insn 54 53 55 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 129 [ ss.4_17 ])
            (const_int 60 [0x3c]))) "timer.c":89:8 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 129 [ ss.4_17 ])
        (nil)))
(jump_insn 55 54 56 4 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 65)
            (pc))) "timer.c":89:8 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (nil))
 -> 65)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 130 131 217 218 219 220
(note 56 55 57 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 5 (set (reg/f:SI 217)
        (symbol_ref:SI ("ss") [flags 0x40]  <var_decl 0x7f50606125a0 ss>)) "timer.c":90:10 253 {*arm_movsi_insn}
     (nil))
(insn 58 57 59 5 (set (reg:SI 218)
        (const_int 0 [0])) "timer.c":90:10 253 {*arm_movsi_insn}
     (nil))
(insn 59 58 60 5 (set (mem/c:SI (reg/f:SI 217) [2 ss+0 S4 A32])
        (reg:SI 218)) "timer.c":90:10 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 218)
        (expr_list:REG_DEAD (reg/f:SI 217)
            (nil))))
(insn 60 59 61 5 (set (reg/f:SI 219)
        (symbol_ref:SI ("mm") [flags 0x40]  <var_decl 0x7f5060612510 mm>)) "timer.c":90:17 253 {*arm_movsi_insn}
     (nil))
(insn 61 60 62 5 (set (reg:SI 130 [ mm.5_18 ])
        (mem/c:SI (reg/f:SI 219) [2 mm+0 S4 A32])) "timer.c":90:17 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 219)
        (nil)))
(insn 62 61 63 5 (set (reg:SI 131 [ _19 ])
        (plus:SI (reg:SI 130 [ mm.5_18 ])
            (const_int 1 [0x1]))) "timer.c":90:17 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 130 [ mm.5_18 ])
        (nil)))
(insn 63 62 64 5 (set (reg/f:SI 220)
        (symbol_ref:SI ("mm") [flags 0x40]  <var_decl 0x7f5060612510 mm>)) "timer.c":90:17 253 {*arm_movsi_insn}
     (nil))
(insn 64 63 65 5 (set (mem/c:SI (reg/f:SI 220) [2 mm+0 S4 A32])
        (reg:SI 131 [ _19 ])) "timer.c":90:17 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 220)
        (expr_list:REG_DEAD (reg:SI 131 [ _19 ])
            (nil))))
;;  succ:       6 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       4
;;              5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 132 221
(code_label 65 64 66 6 3 (nil) [1 uses])
(note 66 65 67 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 6 (set (reg/f:SI 221)
        (symbol_ref:SI ("mm") [flags 0x40]  <var_decl 0x7f5060612510 mm>)) "timer.c":92:12 253 {*arm_movsi_insn}
     (nil))
(insn 68 67 69 6 (set (reg:SI 132 [ mm.6_20 ])
        (mem/c:SI (reg/f:SI 221) [2 mm+0 S4 A32])) "timer.c":92:12 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 221)
        (nil)))
(insn 69 68 70 6 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 132 [ mm.6_20 ])
            (const_int 60 [0x3c]))) "timer.c":92:8 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 132 [ mm.6_20 ])
        (nil)))
(jump_insn 70 69 71 6 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 80)
            (pc))) "timer.c":92:8 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (nil))
 -> 80)
;;  succ:       7 (FALLTHRU)
;;              8
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 133 134 222 223 224 225
(note 71 70 72 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 7 (set (reg/f:SI 222)
        (symbol_ref:SI ("mm") [flags 0x40]  <var_decl 0x7f5060612510 mm>)) "timer.c":93:12 253 {*arm_movsi_insn}
     (nil))
(insn 73 72 74 7 (set (reg:SI 223)
        (const_int 0 [0])) "timer.c":93:12 253 {*arm_movsi_insn}
     (nil))
(insn 74 73 75 7 (set (mem/c:SI (reg/f:SI 222) [2 mm+0 S4 A32])
        (reg:SI 223)) "timer.c":93:12 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 223)
        (expr_list:REG_DEAD (reg/f:SI 222)
            (nil))))
(insn 75 74 76 7 (set (reg/f:SI 224)
        (symbol_ref:SI ("hh") [flags 0x40]  <var_decl 0x7f5060612480 hh>)) "timer.c":94:4 253 {*arm_movsi_insn}
     (nil))
(insn 76 75 77 7 (set (reg:SI 133 [ hh.7_21 ])
        (mem/c:SI (reg/f:SI 224) [2 hh+0 S4 A32])) "timer.c":94:4 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 224)
        (nil)))
(insn 77 76 78 7 (set (reg:SI 134 [ _22 ])
        (plus:SI (reg:SI 133 [ hh.7_21 ])
            (const_int 1 [0x1]))) "timer.c":94:4 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 133 [ hh.7_21 ])
        (nil)))
(insn 78 77 79 7 (set (reg/f:SI 225)
        (symbol_ref:SI ("hh") [flags 0x40]  <var_decl 0x7f5060612480 hh>)) "timer.c":94:4 253 {*arm_movsi_insn}
     (nil))
(insn 79 78 80 7 (set (mem/c:SI (reg/f:SI 225) [2 hh+0 S4 A32])
        (reg:SI 134 [ _22 ])) "timer.c":94:4 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 225)
        (expr_list:REG_DEAD (reg:SI 134 [ _22 ])
            (nil))))
;;  succ:       8 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       6
;;              7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 135 226
(code_label 80 79 81 8 4 (nil) [1 uses])
(note 81 80 82 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 8 (set (reg/f:SI 226)
        (symbol_ref:SI ("tick") [flags 0x2]  <var_decl 0x7f5060612630 tick>)) "timer.c":96:13 253 {*arm_movsi_insn}
     (nil))
(insn 83 82 84 8 (set (reg:SI 135 [ tick.8_23 ])
        (mem/c:SI (reg/f:SI 226) [2 tick+0 S4 A32])) "timer.c":96:13 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 226)
        (nil)))
(insn 84 83 85 8 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 135 [ tick.8_23 ])
            (const_int 0 [0]))) "timer.c":96:8 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 135 [ tick.8_23 ])
        (nil)))
(jump_insn 85 84 86 8 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 382)
            (pc))) "timer.c":96:8 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (nil))
 -> 382)
;;  succ:       9 (FALLTHRU)
;;              27
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 136 227 228 229 230 231
(note 86 85 87 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 88 9 (set (reg/f:SI 227)
        (symbol_ref:SI ("color") [flags 0x40]  <var_decl 0x7f50612f5480 color>)) "timer.c":97:16 253 {*arm_movsi_insn}
     (nil))
(insn 88 87 89 9 (set (reg:SI 136 [ color.9_24 ])
        (mem/c:SI (reg/f:SI 227) [2 color+0 S4 A32])) "timer.c":97:16 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 227)
        (nil)))
(insn 89 88 90 9 (set (reg/f:SI 228)
        (symbol_ref:SI ("oldcolor") [flags 0x2]  <var_decl 0x7f50606126c0 oldcolor>)) "timer.c":97:16 253 {*arm_movsi_insn}
     (nil))
(insn 90 89 91 9 (set (mem/c:SI (reg/f:SI 228) [2 oldcolor+0 S4 A32])
        (reg:SI 136 [ color.9_24 ])) "timer.c":97:16 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 228)
        (expr_list:REG_DEAD (reg:SI 136 [ color.9_24 ])
            (nil))))
(insn 91 90 92 9 (set (reg/f:SI 229)
        (symbol_ref:SI ("color") [flags 0x40]  <var_decl 0x7f50612f5480 color>)) "timer.c":98:13 253 {*arm_movsi_insn}
     (nil))
(insn 92 91 93 9 (set (reg:SI 230)
        (const_int 1 [0x1])) "timer.c":98:13 253 {*arm_movsi_insn}
     (nil))
(insn 93 92 94 9 (set (mem/c:SI (reg/f:SI 229) [2 color+0 S4 A32])
        (reg:SI 230)) "timer.c":98:13 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 230)
        (expr_list:REG_DEAD (reg/f:SI 229)
            (nil))))
(insn 94 93 95 9 (set (reg:SI 231)
        (const_int 0 [0])) "timer.c":99:13 253 {*arm_movsi_insn}
     (nil))
(insn 95 94 444 9 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -36 [0xffffffffffffffdc])) [2 i+0 S4 A32])
        (reg:SI 231)) "timer.c":99:13 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 231)
        (nil)))
(jump_insn 444 95 445 9 (set (pc)
        (label_ref 112)) "timer.c":99:7 284 {*arm_jump}
     (nil)
 -> 112)
;;  succ:       11 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

(barrier 445 444 114)
;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       11
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 137 138 232 233 234 235 236 237
(code_label 114 445 98 10 7 (nil) [1 uses])
(note 98 114 99 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 99 98 100 10 (set (reg/f:SI 232)
        (symbol_ref:SI ("clock") [flags 0x2]  <var_decl 0x7f5060612360 clock>)) "timer.c":100:11 253 {*arm_movsi_insn}
     (nil))
(insn 100 99 101 10 (set (reg:SI 234)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -36 [0xffffffffffffffdc])) [2 i+0 S4 A32])) "timer.c":100:11 253 {*arm_movsi_insn}
     (nil))
(insn 101 100 102 10 (set (reg/f:SI 233)
        (plus:SI (reg/f:SI 232)
            (reg:SI 234))) "timer.c":100:11 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 234)
        (expr_list:REG_DEAD (reg/f:SI 232)
            (nil))))
(insn 102 101 103 10 (set (reg:SI 137 [ _25 ])
        (zero_extend:SI (mem:QI (reg/f:SI 233) [0 clock[i_88]+0 S1 A8]))) "timer.c":100:11 175 {*arm_zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 233)
        (nil)))
(insn 103 102 104 10 (set (reg:SI 235)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -36 [0xffffffffffffffdc])) [2 i+0 S4 A32])) "timer.c":100:11 253 {*arm_movsi_insn}
     (nil))
(insn 104 103 105 10 (set (reg:SI 138 [ _26 ])
        (plus:SI (reg:SI 235)
            (const_int 70 [0x46]))) "timer.c":100:11 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 235)
        (nil)))
(insn 105 104 106 10 (set (reg:SI 2 r2)
        (reg:SI 138 [ _26 ])) "timer.c":100:11 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 138 [ _26 ])
        (nil)))
(insn 106 105 107 10 (set (reg:SI 1 r1)
        (const_int 0 [0])) "timer.c":100:11 253 {*arm_movsi_insn}
     (nil))
(insn 107 106 108 10 (set (reg:SI 0 r0)
        (reg:SI 137 [ _25 ])) "timer.c":100:11 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 137 [ _25 ])
        (nil)))
(call_insn 108 107 109 10 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("unkpchar") [flags 0x41]  <function_decl 0x7f506060aa00 unkpchar>) [0 unkpchar S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":100:11 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 109 108 110 10 (set (reg:SI 237)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -36 [0xffffffffffffffdc])) [2 i+0 S4 A32])) "timer.c":99:23 253 {*arm_movsi_insn}
     (nil))
(insn 110 109 111 10 (set (reg:SI 236)
        (plus:SI (reg:SI 237)
            (const_int 1 [0x1]))) "timer.c":99:23 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 237)
        (nil)))
(insn 111 110 112 10 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -36 [0xffffffffffffffdc])) [2 i+0 S4 A32])
        (reg:SI 236)) "timer.c":99:23 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 236)
        (nil)))
;;  succ:       11 (FALLTHRU,DFS_BACK)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       10 (FALLTHRU,DFS_BACK)
;;              9 [always] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 238
(code_label 112 111 113 11 6 (nil) [1 uses])
(note 113 112 117 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 117 113 118 11 (set (reg:SI 238)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -36 [0xffffffffffffffdc])) [2 i+0 S4 A32])) "timer.c":99:18 253 {*arm_movsi_insn}
     (nil))
(insn 118 117 119 11 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 238)
            (const_int 7 [0x7]))) "timer.c":99:18 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 238)
        (nil)))
(jump_insn 119 118 120 11 (set (pc)
        (if_then_else (le (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 114)
            (pc))) "timer.c":99:18 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (nil))
 -> 114)
;;  succ:       10
;;              12 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 348 349 350 351 352 353
(note 120 119 121 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 121 120 122 12 (set (reg/f:SI 239)
        (symbol_ref:SI ("ss") [flags 0x40]  <var_decl 0x7f50606125a0 ss>)) "timer.c":103:23 253 {*arm_movsi_insn}
     (nil))
(insn 122 121 123 12 (set (reg:SI 139 [ ss.10_27 ])
        (mem/c:SI (reg/f:SI 239) [2 ss+0 S4 A32])) "timer.c":103:23 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 239)
        (nil)))
(insn 123 122 124 12 (set (reg:SI 241)
        (const_int 1717986919 [0x66666667])) "timer.c":103:23 253 {*arm_movsi_insn}
     (nil))
(insn 124 123 125 12 (parallel [
            (set (reg:SI 240)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 139 [ ss.10_27 ]))
                            (sign_extend:DI (reg:SI 241)))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 348))
        ]) "timer.c":103:23 71 {*smull_high}
     (expr_list:REG_DEAD (reg:SI 241)
        (expr_list:REG_UNUSED (reg:SI 348)
            (nil))))
(insn 125 124 126 12 (set (reg:SI 242)
        (ashiftrt:SI (reg:SI 240)
            (const_int 2 [0x2]))) "timer.c":103:23 147 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 240)
        (nil)))
(insn 126 125 127 12 (set (reg:SI 243)
        (ashiftrt:SI (reg:SI 139 [ ss.10_27 ])
            (const_int 31 [0x1f]))) "timer.c":103:23 147 {*arm_shiftsi3}
     (nil))
(insn 127 126 128 12 (set (reg:SI 140 [ _28 ])
        (minus:SI (reg:SI 242)
            (reg:SI 243))) "timer.c":103:23 45 {*arm_subsi3_insn}
     (expr_list:REG_DEAD (reg:SI 243)
        (expr_list:REG_DEAD (reg:SI 242)
            (expr_list:REG_EQUAL (div:SI (reg:SI 139 [ ss.10_27 ])
                    (const_int 10 [0xa]))
                (nil)))))
(insn 128 127 129 12 (set (reg:SI 244)
        (reg:SI 140 [ _28 ])) "timer.c":103:23 253 {*arm_movsi_insn}
     (nil))
(insn 129 128 130 12 (set (reg:SI 244)
        (ashift:SI (reg:SI 244)
            (const_int 2 [0x2]))) "timer.c":103:23 147 {*arm_shiftsi3}
     (nil))
(insn 130 129 131 12 (set (reg:SI 244)
        (plus:SI (reg:SI 244)
            (reg:SI 140 [ _28 ]))) "timer.c":103:23 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 140 [ _28 ])
        (expr_list:REG_EQUAL (mult:SI (reg:SI 140 [ _28 ])
                (const_int 5 [0x5]))
            (nil))))
(insn 131 130 132 12 (set (reg:SI 245)
        (ashift:SI (reg:SI 244)
            (const_int 1 [0x1]))) "timer.c":103:23 147 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 244)
        (nil)))
(insn 132 131 133 12 (set (reg:SI 244)
        (reg:SI 245)) "timer.c":103:23 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 245)
        (nil)))
(insn 133 132 134 12 (set (reg:SI 140 [ _28 ])
        (minus:SI (reg:SI 139 [ ss.10_27 ])
            (reg:SI 244))) "timer.c":103:23 45 {*arm_subsi3_insn}
     (expr_list:REG_DEAD (reg:SI 244)
        (expr_list:REG_DEAD (reg:SI 139 [ ss.10_27 ])
            (nil))))
(insn 134 133 135 12 (set (reg:SI 141 [ _29 ])
        (and:SI (reg:SI 140 [ _28 ])
            (const_int 255 [0xff]))) "timer.c":103:19 90 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 140 [ _28 ])
        (nil)))
(insn 135 134 136 12 (set (reg:SI 246)
        (plus:SI (reg:SI 141 [ _29 ])
            (const_int 48 [0x30]))) "timer.c":103:19 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 141 [ _29 ])
        (nil)))
(insn 136 135 137 12 (set (reg:SI 142 [ _30 ])
        (and:SI (reg:SI 246)
            (const_int 255 [0xff]))) "timer.c":103:19 90 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 246)
        (nil)))
(insn 137 136 138 12 (set (reg/f:SI 247)
        (symbol_ref:SI ("clock") [flags 0x2]  <var_decl 0x7f5060612360 clock>)) "timer.c":103:15 253 {*arm_movsi_insn}
     (nil))
(insn 138 137 139 12 (set (reg:QI 248)
        (subreg/s/v:QI (reg:SI 142 [ _30 ]) 0)) "timer.c":103:15 263 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:SI 142 [ _30 ])
        (nil)))
(insn 139 138 140 12 (set (mem/c:QI (plus:SI (reg/f:SI 247)
                (const_int 7 [0x7])) [0 clock[7]+0 S1 A8])
        (reg:QI 248)) "timer.c":103:15 263 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:QI 248)
        (expr_list:REG_DEAD (reg/f:SI 247)
            (nil))))
(insn 140 139 141 12 (set (reg/f:SI 249)
        (symbol_ref:SI ("ss") [flags 0x40]  <var_decl 0x7f50606125a0 ss>)) "timer.c":103:45 253 {*arm_movsi_insn}
     (nil))
(insn 141 140 142 12 (set (reg:SI 143 [ ss.11_31 ])
        (mem/c:SI (reg/f:SI 249) [2 ss+0 S4 A32])) "timer.c":103:45 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 249)
        (nil)))
(insn 142 141 143 12 (set (reg:SI 251)
        (const_int 1717986919 [0x66666667])) "timer.c":103:45 253 {*arm_movsi_insn}
     (nil))
(insn 143 142 144 12 (parallel [
            (set (reg:SI 250)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 143 [ ss.11_31 ]))
                            (sign_extend:DI (reg:SI 251)))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 349))
        ]) "timer.c":103:45 71 {*smull_high}
     (expr_list:REG_DEAD (reg:SI 251)
        (expr_list:REG_UNUSED (reg:SI 349)
            (nil))))
(insn 144 143 145 12 (set (reg:SI 252)
        (ashiftrt:SI (reg:SI 250)
            (const_int 2 [0x2]))) "timer.c":103:45 147 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 250)
        (nil)))
(insn 145 144 146 12 (set (reg:SI 253)
        (ashiftrt:SI (reg:SI 143 [ ss.11_31 ])
            (const_int 31 [0x1f]))) "timer.c":103:45 147 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 143 [ ss.11_31 ])
        (nil)))
(insn 146 145 147 12 (set (reg:SI 144 [ _32 ])
        (minus:SI (reg:SI 252)
            (reg:SI 253))) "timer.c":103:45 45 {*arm_subsi3_insn}
     (expr_list:REG_DEAD (reg:SI 253)
        (expr_list:REG_DEAD (reg:SI 252)
            (nil))))
(insn 147 146 148 12 (set (reg:SI 145 [ _33 ])
        (and:SI (reg:SI 144 [ _32 ])
            (const_int 255 [0xff]))) "timer.c":103:41 90 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 144 [ _32 ])
        (nil)))
(insn 148 147 149 12 (set (reg:SI 254)
        (plus:SI (reg:SI 145 [ _33 ])
            (const_int 48 [0x30]))) "timer.c":103:41 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 145 [ _33 ])
        (nil)))
(insn 149 148 150 12 (set (reg:SI 146 [ _34 ])
        (and:SI (reg:SI 254)
            (const_int 255 [0xff]))) "timer.c":103:41 90 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 254)
        (nil)))
(insn 150 149 151 12 (set (reg/f:SI 255)
        (symbol_ref:SI ("clock") [flags 0x2]  <var_decl 0x7f5060612360 clock>)) "timer.c":103:37 253 {*arm_movsi_insn}
     (nil))
(insn 151 150 152 12 (set (reg:QI 256)
        (subreg/s/v:QI (reg:SI 146 [ _34 ]) 0)) "timer.c":103:37 263 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:SI 146 [ _34 ])
        (nil)))
(insn 152 151 153 12 (set (mem/c:QI (plus:SI (reg/f:SI 255)
                (const_int 6 [0x6])) [0 clock[6]+0 S1 A16])
        (reg:QI 256)) "timer.c":103:37 263 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:QI 256)
        (expr_list:REG_DEAD (reg/f:SI 255)
            (nil))))
(insn 153 152 154 12 (set (reg/f:SI 257)
        (symbol_ref:SI ("mm") [flags 0x40]  <var_decl 0x7f5060612510 mm>)) "timer.c":104:23 253 {*arm_movsi_insn}
     (nil))
(insn 154 153 155 12 (set (reg:SI 147 [ mm.12_35 ])
        (mem/c:SI (reg/f:SI 257) [2 mm+0 S4 A32])) "timer.c":104:23 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 257)
        (nil)))
(insn 155 154 156 12 (set (reg:SI 259)
        (const_int 1717986919 [0x66666667])) "timer.c":104:23 253 {*arm_movsi_insn}
     (nil))
(insn 156 155 157 12 (parallel [
            (set (reg:SI 258)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 147 [ mm.12_35 ]))
                            (sign_extend:DI (reg:SI 259)))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 350))
        ]) "timer.c":104:23 71 {*smull_high}
     (expr_list:REG_DEAD (reg:SI 259)
        (expr_list:REG_UNUSED (reg:SI 350)
            (nil))))
(insn 157 156 158 12 (set (reg:SI 260)
        (ashiftrt:SI (reg:SI 258)
            (const_int 2 [0x2]))) "timer.c":104:23 147 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 258)
        (nil)))
(insn 158 157 159 12 (set (reg:SI 261)
        (ashiftrt:SI (reg:SI 147 [ mm.12_35 ])
            (const_int 31 [0x1f]))) "timer.c":104:23 147 {*arm_shiftsi3}
     (nil))
(insn 159 158 160 12 (set (reg:SI 148 [ _36 ])
        (minus:SI (reg:SI 260)
            (reg:SI 261))) "timer.c":104:23 45 {*arm_subsi3_insn}
     (expr_list:REG_DEAD (reg:SI 261)
        (expr_list:REG_DEAD (reg:SI 260)
            (expr_list:REG_EQUAL (div:SI (reg:SI 147 [ mm.12_35 ])
                    (const_int 10 [0xa]))
                (nil)))))
(insn 160 159 161 12 (set (reg:SI 262)
        (reg:SI 148 [ _36 ])) "timer.c":104:23 253 {*arm_movsi_insn}
     (nil))
(insn 161 160 162 12 (set (reg:SI 262)
        (ashift:SI (reg:SI 262)
            (const_int 2 [0x2]))) "timer.c":104:23 147 {*arm_shiftsi3}
     (nil))
(insn 162 161 163 12 (set (reg:SI 262)
        (plus:SI (reg:SI 262)
            (reg:SI 148 [ _36 ]))) "timer.c":104:23 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 148 [ _36 ])
        (expr_list:REG_EQUAL (mult:SI (reg:SI 148 [ _36 ])
                (const_int 5 [0x5]))
            (nil))))
(insn 163 162 164 12 (set (reg:SI 263)
        (ashift:SI (reg:SI 262)
            (const_int 1 [0x1]))) "timer.c":104:23 147 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 262)
        (nil)))
(insn 164 163 165 12 (set (reg:SI 262)
        (reg:SI 263)) "timer.c":104:23 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 263)
        (nil)))
(insn 165 164 166 12 (set (reg:SI 148 [ _36 ])
        (minus:SI (reg:SI 147 [ mm.12_35 ])
            (reg:SI 262))) "timer.c":104:23 45 {*arm_subsi3_insn}
     (expr_list:REG_DEAD (reg:SI 262)
        (expr_list:REG_DEAD (reg:SI 147 [ mm.12_35 ])
            (nil))))
(insn 166 165 167 12 (set (reg:SI 149 [ _37 ])
        (and:SI (reg:SI 148 [ _36 ])
            (const_int 255 [0xff]))) "timer.c":104:19 90 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 148 [ _36 ])
        (nil)))
(insn 167 166 168 12 (set (reg:SI 264)
        (plus:SI (reg:SI 149 [ _37 ])
            (const_int 48 [0x30]))) "timer.c":104:19 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 149 [ _37 ])
        (nil)))
(insn 168 167 169 12 (set (reg:SI 150 [ _38 ])
        (and:SI (reg:SI 264)
            (const_int 255 [0xff]))) "timer.c":104:19 90 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 264)
        (nil)))
(insn 169 168 170 12 (set (reg/f:SI 265)
        (symbol_ref:SI ("clock") [flags 0x2]  <var_decl 0x7f5060612360 clock>)) "timer.c":104:15 253 {*arm_movsi_insn}
     (nil))
(insn 170 169 171 12 (set (reg:QI 266)
        (subreg/s/v:QI (reg:SI 150 [ _38 ]) 0)) "timer.c":104:15 263 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:SI 150 [ _38 ])
        (nil)))
(insn 171 170 172 12 (set (mem/c:QI (plus:SI (reg/f:SI 265)
                (const_int 4 [0x4])) [0 clock[4]+0 S1 A32])
        (reg:QI 266)) "timer.c":104:15 263 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:QI 266)
        (expr_list:REG_DEAD (reg/f:SI 265)
            (nil))))
(insn 172 171 173 12 (set (reg/f:SI 267)
        (symbol_ref:SI ("mm") [flags 0x40]  <var_decl 0x7f5060612510 mm>)) "timer.c":104:45 253 {*arm_movsi_insn}
     (nil))
(insn 173 172 174 12 (set (reg:SI 151 [ mm.13_39 ])
        (mem/c:SI (reg/f:SI 267) [2 mm+0 S4 A32])) "timer.c":104:45 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 267)
        (nil)))
(insn 174 173 175 12 (set (reg:SI 269)
        (const_int 1717986919 [0x66666667])) "timer.c":104:45 253 {*arm_movsi_insn}
     (nil))
(insn 175 174 176 12 (parallel [
            (set (reg:SI 268)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 151 [ mm.13_39 ]))
                            (sign_extend:DI (reg:SI 269)))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 351))
        ]) "timer.c":104:45 71 {*smull_high}
     (expr_list:REG_DEAD (reg:SI 269)
        (expr_list:REG_UNUSED (reg:SI 351)
            (nil))))
(insn 176 175 177 12 (set (reg:SI 270)
        (ashiftrt:SI (reg:SI 268)
            (const_int 2 [0x2]))) "timer.c":104:45 147 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 268)
        (nil)))
(insn 177 176 178 12 (set (reg:SI 271)
        (ashiftrt:SI (reg:SI 151 [ mm.13_39 ])
            (const_int 31 [0x1f]))) "timer.c":104:45 147 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 151 [ mm.13_39 ])
        (nil)))
(insn 178 177 179 12 (set (reg:SI 152 [ _40 ])
        (minus:SI (reg:SI 270)
            (reg:SI 271))) "timer.c":104:45 45 {*arm_subsi3_insn}
     (expr_list:REG_DEAD (reg:SI 271)
        (expr_list:REG_DEAD (reg:SI 270)
            (nil))))
(insn 179 178 180 12 (set (reg:SI 153 [ _41 ])
        (and:SI (reg:SI 152 [ _40 ])
            (const_int 255 [0xff]))) "timer.c":104:41 90 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 152 [ _40 ])
        (nil)))
(insn 180 179 181 12 (set (reg:SI 272)
        (plus:SI (reg:SI 153 [ _41 ])
            (const_int 48 [0x30]))) "timer.c":104:41 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 153 [ _41 ])
        (nil)))
(insn 181 180 182 12 (set (reg:SI 154 [ _42 ])
        (and:SI (reg:SI 272)
            (const_int 255 [0xff]))) "timer.c":104:41 90 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 272)
        (nil)))
(insn 182 181 183 12 (set (reg/f:SI 273)
        (symbol_ref:SI ("clock") [flags 0x2]  <var_decl 0x7f5060612360 clock>)) "timer.c":104:37 253 {*arm_movsi_insn}
     (nil))
(insn 183 182 184 12 (set (reg:QI 274)
        (subreg/s/v:QI (reg:SI 154 [ _42 ]) 0)) "timer.c":104:37 263 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:SI 154 [ _42 ])
        (nil)))
(insn 184 183 185 12 (set (mem/c:QI (plus:SI (reg/f:SI 273)
                (const_int 3 [0x3])) [0 clock[3]+0 S1 A8])
        (reg:QI 274)) "timer.c":104:37 263 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:QI 274)
        (expr_list:REG_DEAD (reg/f:SI 273)
            (nil))))
(insn 185 184 186 12 (set (reg/f:SI 275)
        (symbol_ref:SI ("hh") [flags 0x40]  <var_decl 0x7f5060612480 hh>)) "timer.c":105:23 253 {*arm_movsi_insn}
     (nil))
(insn 186 185 187 12 (set (reg:SI 155 [ hh.14_43 ])
        (mem/c:SI (reg/f:SI 275) [2 hh+0 S4 A32])) "timer.c":105:23 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 275)
        (nil)))
(insn 187 186 188 12 (set (reg:SI 277)
        (const_int 1717986919 [0x66666667])) "timer.c":105:23 253 {*arm_movsi_insn}
     (nil))
(insn 188 187 189 12 (parallel [
            (set (reg:SI 276)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 155 [ hh.14_43 ]))
                            (sign_extend:DI (reg:SI 277)))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 352))
        ]) "timer.c":105:23 71 {*smull_high}
     (expr_list:REG_DEAD (reg:SI 277)
        (expr_list:REG_UNUSED (reg:SI 352)
            (nil))))
(insn 189 188 190 12 (set (reg:SI 278)
        (ashiftrt:SI (reg:SI 276)
            (const_int 2 [0x2]))) "timer.c":105:23 147 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 276)
        (nil)))
(insn 190 189 191 12 (set (reg:SI 279)
        (ashiftrt:SI (reg:SI 155 [ hh.14_43 ])
            (const_int 31 [0x1f]))) "timer.c":105:23 147 {*arm_shiftsi3}
     (nil))
(insn 191 190 192 12 (set (reg:SI 156 [ _44 ])
        (minus:SI (reg:SI 278)
            (reg:SI 279))) "timer.c":105:23 45 {*arm_subsi3_insn}
     (expr_list:REG_DEAD (reg:SI 279)
        (expr_list:REG_DEAD (reg:SI 278)
            (expr_list:REG_EQUAL (div:SI (reg:SI 155 [ hh.14_43 ])
                    (const_int 10 [0xa]))
                (nil)))))
(insn 192 191 193 12 (set (reg:SI 280)
        (reg:SI 156 [ _44 ])) "timer.c":105:23 253 {*arm_movsi_insn}
     (nil))
(insn 193 192 194 12 (set (reg:SI 280)
        (ashift:SI (reg:SI 280)
            (const_int 2 [0x2]))) "timer.c":105:23 147 {*arm_shiftsi3}
     (nil))
(insn 194 193 195 12 (set (reg:SI 280)
        (plus:SI (reg:SI 280)
            (reg:SI 156 [ _44 ]))) "timer.c":105:23 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 156 [ _44 ])
        (expr_list:REG_EQUAL (mult:SI (reg:SI 156 [ _44 ])
                (const_int 5 [0x5]))
            (nil))))
(insn 195 194 196 12 (set (reg:SI 281)
        (ashift:SI (reg:SI 280)
            (const_int 1 [0x1]))) "timer.c":105:23 147 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 280)
        (nil)))
(insn 196 195 197 12 (set (reg:SI 280)
        (reg:SI 281)) "timer.c":105:23 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 281)
        (nil)))
(insn 197 196 198 12 (set (reg:SI 156 [ _44 ])
        (minus:SI (reg:SI 155 [ hh.14_43 ])
            (reg:SI 280))) "timer.c":105:23 45 {*arm_subsi3_insn}
     (expr_list:REG_DEAD (reg:SI 280)
        (expr_list:REG_DEAD (reg:SI 155 [ hh.14_43 ])
            (nil))))
(insn 198 197 199 12 (set (reg:SI 157 [ _45 ])
        (and:SI (reg:SI 156 [ _44 ])
            (const_int 255 [0xff]))) "timer.c":105:19 90 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 156 [ _44 ])
        (nil)))
(insn 199 198 200 12 (set (reg:SI 282)
        (plus:SI (reg:SI 157 [ _45 ])
            (const_int 48 [0x30]))) "timer.c":105:19 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 157 [ _45 ])
        (nil)))
(insn 200 199 201 12 (set (reg:SI 158 [ _46 ])
        (and:SI (reg:SI 282)
            (const_int 255 [0xff]))) "timer.c":105:19 90 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 282)
        (nil)))
(insn 201 200 202 12 (set (reg/f:SI 283)
        (symbol_ref:SI ("clock") [flags 0x2]  <var_decl 0x7f5060612360 clock>)) "timer.c":105:15 253 {*arm_movsi_insn}
     (nil))
(insn 202 201 203 12 (set (reg:QI 284)
        (subreg/s/v:QI (reg:SI 158 [ _46 ]) 0)) "timer.c":105:15 263 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:SI 158 [ _46 ])
        (nil)))
(insn 203 202 204 12 (set (mem/c:QI (plus:SI (reg/f:SI 283)
                (const_int 1 [0x1])) [0 clock[1]+0 S1 A8])
        (reg:QI 284)) "timer.c":105:15 263 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:QI 284)
        (expr_list:REG_DEAD (reg/f:SI 283)
            (nil))))
(insn 204 203 205 12 (set (reg/f:SI 285)
        (symbol_ref:SI ("hh") [flags 0x40]  <var_decl 0x7f5060612480 hh>)) "timer.c":105:45 253 {*arm_movsi_insn}
     (nil))
(insn 205 204 206 12 (set (reg:SI 159 [ hh.15_47 ])
        (mem/c:SI (reg/f:SI 285) [2 hh+0 S4 A32])) "timer.c":105:45 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 285)
        (nil)))
(insn 206 205 207 12 (set (reg:SI 287)
        (const_int 1717986919 [0x66666667])) "timer.c":105:45 253 {*arm_movsi_insn}
     (nil))
(insn 207 206 208 12 (parallel [
            (set (reg:SI 286)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 159 [ hh.15_47 ]))
                            (sign_extend:DI (reg:SI 287)))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 353))
        ]) "timer.c":105:45 71 {*smull_high}
     (expr_list:REG_DEAD (reg:SI 287)
        (expr_list:REG_UNUSED (reg:SI 353)
            (nil))))
(insn 208 207 209 12 (set (reg:SI 288)
        (ashiftrt:SI (reg:SI 286)
            (const_int 2 [0x2]))) "timer.c":105:45 147 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 286)
        (nil)))
(insn 209 208 210 12 (set (reg:SI 289)
        (ashiftrt:SI (reg:SI 159 [ hh.15_47 ])
            (const_int 31 [0x1f]))) "timer.c":105:45 147 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 159 [ hh.15_47 ])
        (nil)))
(insn 210 209 211 12 (set (reg:SI 160 [ _48 ])
        (minus:SI (reg:SI 288)
            (reg:SI 289))) "timer.c":105:45 45 {*arm_subsi3_insn}
     (expr_list:REG_DEAD (reg:SI 289)
        (expr_list:REG_DEAD (reg:SI 288)
            (nil))))
(insn 211 210 212 12 (set (reg:SI 161 [ _49 ])
        (and:SI (reg:SI 160 [ _48 ])
            (const_int 255 [0xff]))) "timer.c":105:41 90 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 160 [ _48 ])
        (nil)))
(insn 212 211 213 12 (set (reg:SI 290)
        (plus:SI (reg:SI 161 [ _49 ])
            (const_int 48 [0x30]))) "timer.c":105:41 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 161 [ _49 ])
        (nil)))
(insn 213 212 214 12 (set (reg:SI 162 [ _50 ])
        (and:SI (reg:SI 290)
            (const_int 255 [0xff]))) "timer.c":105:41 90 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 290)
        (nil)))
(insn 214 213 215 12 (set (reg/f:SI 291)
        (symbol_ref:SI ("clock") [flags 0x2]  <var_decl 0x7f5060612360 clock>)) "timer.c":105:37 253 {*arm_movsi_insn}
     (nil))
(insn 215 214 216 12 (set (reg:QI 292)
        (subreg/s/v:QI (reg:SI 162 [ _50 ]) 0)) "timer.c":105:37 263 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:SI 162 [ _50 ])
        (nil)))
(insn 216 215 217 12 (set (mem/c:QI (reg/f:SI 291) [0 clock[0]+0 S1 A32])
        (reg:QI 292)) "timer.c":105:37 263 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:QI 292)
        (expr_list:REG_DEAD (reg/f:SI 291)
            (nil))))
(insn 217 216 218 12 (set (reg:SI 293)
        (const_int 0 [0])) "timer.c":107:13 253 {*arm_movsi_insn}
     (nil))
(insn 218 217 446 12 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -36 [0xffffffffffffffdc])) [2 i+0 S4 A32])
        (reg:SI 293)) "timer.c":107:13 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 293)
        (nil)))
(jump_insn 446 218 447 12 (set (pc)
        (label_ref 235)) "timer.c":107:7 284 {*arm_jump}
     (nil)
 -> 235)
;;  succ:       14 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

(barrier 447 446 237)
;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 14, flags: (RTL)
;;  pred:       14
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 163 164 294 295 296 297 298 299
(code_label 237 447 221 13 9 (nil) [1 uses])
(note 221 237 222 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 222 221 223 13 (set (reg/f:SI 294)
        (symbol_ref:SI ("clock") [flags 0x2]  <var_decl 0x7f5060612360 clock>)) "timer.c":108:9 253 {*arm_movsi_insn}
     (nil))
(insn 223 222 224 13 (set (reg:SI 296)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -36 [0xffffffffffffffdc])) [2 i+0 S4 A32])) "timer.c":108:9 253 {*arm_movsi_insn}
     (nil))
(insn 224 223 225 13 (set (reg/f:SI 295)
        (plus:SI (reg/f:SI 294)
            (reg:SI 296))) "timer.c":108:9 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 296)
        (expr_list:REG_DEAD (reg/f:SI 294)
            (nil))))
(insn 225 224 226 13 (set (reg:SI 163 [ _51 ])
        (zero_extend:SI (mem:QI (reg/f:SI 295) [0 clock[i_89]+0 S1 A8]))) "timer.c":108:9 175 {*arm_zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 295)
        (nil)))
(insn 226 225 227 13 (set (reg:SI 297)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -36 [0xffffffffffffffdc])) [2 i+0 S4 A32])) "timer.c":108:9 253 {*arm_movsi_insn}
     (nil))
(insn 227 226 228 13 (set (reg:SI 164 [ _52 ])
        (plus:SI (reg:SI 297)
            (const_int 70 [0x46]))) "timer.c":108:9 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 297)
        (nil)))
(insn 228 227 229 13 (set (reg:SI 2 r2)
        (reg:SI 164 [ _52 ])) "timer.c":108:9 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 164 [ _52 ])
        (nil)))
(insn 229 228 230 13 (set (reg:SI 1 r1)
        (const_int 0 [0])) "timer.c":108:9 253 {*arm_movsi_insn}
     (nil))
(insn 230 229 231 13 (set (reg:SI 0 r0)
        (reg:SI 163 [ _51 ])) "timer.c":108:9 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 163 [ _51 ])
        (nil)))
(call_insn 231 230 232 13 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kpchar") [flags 0x41]  <function_decl 0x7f506060a900 kpchar>) [0 kpchar S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":108:9 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 232 231 233 13 (set (reg:SI 299)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -36 [0xffffffffffffffdc])) [2 i+0 S4 A32])) "timer.c":107:23 253 {*arm_movsi_insn}
     (nil))
(insn 233 232 234 13 (set (reg:SI 298)
        (plus:SI (reg:SI 299)
            (const_int 1 [0x1]))) "timer.c":107:23 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 299)
        (nil)))
(insn 234 233 235 13 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -36 [0xffffffffffffffdc])) [2 i+0 S4 A32])
        (reg:SI 298)) "timer.c":107:23 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 298)
        (nil)))
;;  succ:       14 (FALLTHRU,DFS_BACK)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 14, loop depth 0, maybe hot
;;  prev block 13, next block 15, flags: (RTL)
;;  pred:       13 (FALLTHRU,DFS_BACK)
;;              12 [always] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 300
(code_label 235 234 236 14 8 (nil) [1 uses])
(note 236 235 240 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 240 236 241 14 (set (reg:SI 300)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -36 [0xffffffffffffffdc])) [2 i+0 S4 A32])) "timer.c":107:18 253 {*arm_movsi_insn}
     (nil))
(insn 241 240 242 14 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 300)
            (const_int 7 [0x7]))) "timer.c":107:18 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 300)
        (nil)))
(jump_insn 242 241 243 14 (set (pc)
        (if_then_else (le (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 237)
            (pc))) "timer.c":107:18 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (nil))
 -> 237)
;;  succ:       13
;;              15 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 15, loop depth 0, maybe hot
;;  prev block 14, next block 16, flags: (RTL)
;;  pred:       14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 301
(note 243 242 244 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 244 243 245 15 (set (reg:SI 301)
        (const_int 1 [0x1])) "timer.c":111:14 253 {*arm_movsi_insn}
     (nil))
(insn 245 244 448 15 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -36 [0xffffffffffffffdc])) [2 i+0 S4 A32])
        (reg:SI 301)) "timer.c":111:14 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 301)
        (nil)))
(jump_insn 448 245 449 15 (set (pc)
        (label_ref 313)) "timer.c":111:8 284 {*arm_jump}
     (nil)
 -> 313)
;;  succ:       21 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

(barrier 449 448 315)
;; basic block 16, loop depth 0, maybe hot
;;  prev block 15, next block 17, flags: (RTL)
;;  pred:       21
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 165 302 303 304 305 306 307
(code_label 315 449 248 16 12 (nil) [1 uses])
(note 248 315 249 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 249 248 250 16 (set (reg:SI 302)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -36 [0xffffffffffffffdc])) [2 i+0 S4 A32])) "timer.c":112:12 253 {*arm_movsi_insn}
     (nil))
(insn 250 249 251 16 (set (reg:SI 303)
        (reg:SI 302)) "timer.c":112:12 253 {*arm_movsi_insn}
     (nil))
(insn 251 250 252 16 (set (reg:SI 303)
        (ashift:SI (reg:SI 303)
            (const_int 6 [0x6]))) "timer.c":112:12 147 {*arm_shiftsi3}
     (nil))
(insn 252 251 253 16 (set (reg:SI 303)
        (plus:SI (reg:SI 303)
            (reg:SI 302))) "timer.c":112:12 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 302)
            (const_int 65 [0x41]))
        (nil)))
(insn 253 252 254 16 (set (reg:SI 303)
        (ashift:SI (reg:SI 303)
            (const_int 1 [0x1]))) "timer.c":112:12 147 {*arm_shiftsi3}
     (nil))
(insn 254 253 255 16 (set (reg:SI 303)
        (plus:SI (reg:SI 303)
            (reg:SI 302))) "timer.c":112:12 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 302)
            (const_int 131 [0x83]))
        (nil)))
(insn 255 254 256 16 (set (reg:SI 303)
        (ashift:SI (reg:SI 303)
            (const_int 3 [0x3]))) "timer.c":112:12 147 {*arm_shiftsi3}
     (nil))
(insn 256 255 257 16 (set (reg:SI 303)
        (minus:SI (reg:SI 303)
            (reg:SI 302))) "timer.c":112:12 45 {*arm_subsi3_insn}
     (expr_list:REG_DEAD (reg:SI 302)
        (expr_list:REG_EQUAL (mult:SI (reg:SI 302)
                (const_int 1047 [0x417]))
            (nil))))
(insn 257 256 258 16 (set (reg:SI 304)
        (ashift:SI (reg:SI 303)
            (const_int 2 [0x2]))) "timer.c":112:12 147 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 303)
        (nil)))
(insn 258 257 259 16 (set (reg:SI 303)
        (reg:SI 304)) "timer.c":112:12 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 304)
        (nil)))
(insn 259 258 260 16 (set (reg:SI 306)
        (symbol_ref:SI ("proc") [flags 0x40]  <var_decl 0x7f50612f55a0 proc>)) "timer.c":112:12 253 {*arm_movsi_insn}
     (nil))
(insn 260 259 261 16 (set (reg:SI 305)
        (plus:SI (reg:SI 303)
            (reg:SI 306))) "timer.c":112:12 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 306)
        (expr_list:REG_DEAD (reg:SI 303)
            (nil))))
(insn 261 260 262 16 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 p+0 S4 A64])
        (reg:SI 305)) "timer.c":112:12 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 305)
        (nil)))
(insn 262 261 263 16 (set (reg/f:SI 307)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 p+0 S4 A64])) "timer.c":113:8 253 {*arm_movsi_insn}
     (nil))
(insn 263 262 264 16 (set (reg:SI 165 [ _53 ])
        (mem:SI (plus:SI (reg/f:SI 307)
                (const_int 28 [0x1c])) [2 p_137->status+0 S4 A32])) "timer.c":113:8 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 307)
        (nil)))
(insn 264 263 265 16 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 165 [ _53 ])
            (const_int 2 [0x2]))) "timer.c":113:6 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 165 [ _53 ])
        (nil)))
(jump_insn 265 264 266 16 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 308)
            (pc))) "timer.c":113:6 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (nil))
 -> 308)
;;  succ:       17 (FALLTHRU)
;;              20
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 17, loop depth 0, maybe hot
;;  prev block 16, next block 18, flags: (RTL)
;;  pred:       16 (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 166 308
(note 266 265 267 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 267 266 268 17 (set (reg/f:SI 308)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 p+0 S4 A64])) "timer.c":113:28 253 {*arm_movsi_insn}
     (nil))
(insn 268 267 269 17 (set (reg:SI 166 [ _54 ])
        (mem:SI (plus:SI (reg/f:SI 308)
                (const_int 44 [0x2c])) [2 p_137->event+0 S4 A32])) "timer.c":113:28 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 308)
        (nil)))
(insn 269 268 270 17 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 166 [ _54 ])
            (const_int 5 [0x5]))) "timer.c":113:24 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 166 [ _54 ])
        (nil)))
(jump_insn 270 269 271 17 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 308)
            (pc))) "timer.c":113:24 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (nil))
 -> 308)
;;  succ:       18 (FALLTHRU)
;;              20
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 18, loop depth 0, maybe hot
;;  prev block 17, next block 19, flags: (RTL)
;;  pred:       17 (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 167 168 169 170 309 310 311 312
(note 271 270 272 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 272 271 273 18 (set (reg/f:SI 309)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 p+0 S4 A64])) "timer.c":114:6 253 {*arm_movsi_insn}
     (nil))
(insn 273 272 274 18 (set (reg:SI 167 [ _55 ])
        (mem:SI (plus:SI (reg/f:SI 309)
                (const_int 68 [0x44])) [2 p_137->pause+0 S4 A32])) "timer.c":114:6 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 309)
        (nil)))
(insn 274 273 275 18 (set (reg:SI 168 [ _56 ])
        (plus:SI (reg:SI 167 [ _55 ])
            (const_int -1 [0xffffffffffffffff]))) "timer.c":114:13 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 167 [ _55 ])
        (nil)))
(insn 275 274 276 18 (set (reg/f:SI 310)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 p+0 S4 A64])) "timer.c":114:13 253 {*arm_movsi_insn}
     (nil))
(insn 276 275 277 18 (set (mem:SI (plus:SI (reg/f:SI 310)
                (const_int 68 [0x44])) [2 p_137->pause+0 S4 A32])
        (reg:SI 168 [ _56 ])) "timer.c":114:13 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 310)
        (expr_list:REG_DEAD (reg:SI 168 [ _56 ])
            (nil))))
(insn 277 276 278 18 (set (reg/f:SI 311)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 p+0 S4 A64])) "timer.c":115:12 253 {*arm_movsi_insn}
     (nil))
(insn 278 277 279 18 (set (reg:SI 169 [ _57 ])
        (mem:SI (plus:SI (reg/f:SI 311)
                (const_int 68 [0x44])) [2 p_137->pause+0 S4 A32])) "timer.c":115:12 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 311)
        (nil)))
(insn 279 278 280 18 (set (reg:SI 1 r1)
        (reg:SI 169 [ _57 ])) "timer.c":115:12 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 169 [ _57 ])
        (nil)))
(insn 280 279 281 18 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x7f50606435a0 *.LC1>)) "timer.c":115:12 253 {*arm_movsi_insn}
     (nil))
(call_insn 281 280 282 18 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kprintf") [flags 0x41]  <function_decl 0x7f506060a700 kprintf>) [0 kprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":115:12 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 282 281 283 18 (set (reg/f:SI 312)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 p+0 S4 A64])) "timer.c":116:17 253 {*arm_movsi_insn}
     (nil))
(insn 283 282 286 18 (set (reg:SI 170 [ _58 ])
        (mem:SI (plus:SI (reg/f:SI 312)
                (const_int 68 [0x44])) [2 p_137->pause+0 S4 A32])) "timer.c":116:17 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 312)
        (nil)))
(insn 286 283 287 18 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 170 [ _58 ])
            (const_int 0 [0]))) "timer.c":116:15 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 170 [ _58 ])
        (nil)))
(jump_insn 287 286 288 18 (set (pc)
        (if_then_else (gt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 308)
            (pc))) "timer.c":116:15 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (nil))
 -> 308)
;;  succ:       19 (FALLTHRU)
;;              20
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 19, loop depth 0, maybe hot
;;  prev block 18, next block 20, flags: (RTL)
;;  pred:       18 (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 171 313 314 315 316 317 318 319
(note 288 287 289 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 289 288 290 19 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 p+0 S4 A64])) "timer.c":121:14 253 {*arm_movsi_insn}
     (nil))
(call_insn 290 289 291 19 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("outSleep") [flags 0x41]  <function_decl 0x7f506060ad00 outSleep>) [0 outSleep S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":121:14 291 {*call_value_symbol}
     (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 291 290 292 19 (set (reg/f:SI 313)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 p+0 S4 A64])) "timer.c":122:24 253 {*arm_movsi_insn}
     (nil))
(insn 292 291 293 19 (set (reg:SI 314)
        (const_int 1 [0x1])) "timer.c":122:24 253 {*arm_movsi_insn}
     (nil))
(insn 293 292 294 19 (set (mem:SI (plus:SI (reg/f:SI 313)
                (const_int 28 [0x1c])) [2 p_137->status+0 S4 A32])
        (reg:SI 314)) "timer.c":122:24 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 314)
        (expr_list:REG_DEAD (reg/f:SI 313)
            (nil))))
(insn 294 293 295 19 (set (reg/f:SI 315)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 p+0 S4 A64])) "timer.c":123:23 253 {*arm_movsi_insn}
     (nil))
(insn 295 294 296 19 (set (reg:SI 316)
        (const_int 0 [0])) "timer.c":123:23 253 {*arm_movsi_insn}
     (nil))
(insn 296 295 297 19 (set (mem:SI (plus:SI (reg/f:SI 315)
                (const_int 44 [0x2c])) [2 p_137->event+0 S4 A32])
        (reg:SI 316)) "timer.c":123:23 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 316)
        (expr_list:REG_DEAD (reg/f:SI 315)
            (nil))))
(insn 297 296 298 19 (set (reg/f:SI 317)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 p+0 S4 A64])) "timer.c":124:26 253 {*arm_movsi_insn}
     (nil))
(insn 298 297 299 19 (set (reg:SI 318)
        (const_int 128 [0x80])) "timer.c":124:26 253 {*arm_movsi_insn}
     (nil))
(insn 299 298 300 19 (set (mem:SI (plus:SI (reg/f:SI 317)
                (const_int 32 [0x20])) [2 p_137->priority+0 S4 A32])
        (reg:SI 318)) "timer.c":124:26 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 318)
        (expr_list:REG_DEAD (reg/f:SI 317)
            (nil))))
(insn 300 299 301 19 (set (reg:SI 1 r1)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 p+0 S4 A64])) "timer.c":125:7 253 {*arm_movsi_insn}
     (nil))
(insn 301 300 302 19 (set (reg:SI 0 r0)
        (symbol_ref:SI ("readyQueue") [flags 0x40]  <var_decl 0x7f50612f56c0 readyQueue>)) "timer.c":125:7 253 {*arm_movsi_insn}
     (nil))
(call_insn 302 301 303 19 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("enqueue") [flags 0x41]  <function_decl 0x7f506060a000 enqueue>) [0 enqueue S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":125:7 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 303 302 304 19 (set (reg/f:SI 319)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 p+0 S4 A64])) "timer.c":127:14 253 {*arm_movsi_insn}
     (nil))
(insn 304 303 305 19 (set (reg:SI 171 [ _59 ])
        (mem:SI (plus:SI (reg/f:SI 319)
                (const_int 24 [0x18])) [2 p_137->pid+0 S4 A32])) "timer.c":127:14 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 319)
        (nil)))
(insn 305 304 306 19 (set (reg:SI 1 r1)
        (reg:SI 171 [ _59 ])) "timer.c":127:14 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 171 [ _59 ])
        (nil)))
(insn 306 305 307 19 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC2") [flags 0x2]  <var_decl 0x7f5060643630 *.LC2>)) "timer.c":127:14 253 {*arm_movsi_insn}
     (nil))
(call_insn 307 306 308 19 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kprintf") [flags 0x41]  <function_decl 0x7f506060a700 kprintf>) [0 kprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":127:14 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
;;  succ:       20 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 20, loop depth 0, maybe hot
;;  prev block 19, next block 21, flags: (RTL)
;;  pred:       16
;;              17
;;              18
;;              19 (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 320 321
(code_label 308 307 309 20 11 (nil) [3 uses])
(note 309 308 310 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 310 309 311 20 (set (reg:SI 321)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -36 [0xffffffffffffffdc])) [2 i+0 S4 A32])) "timer.c":111:28 253 {*arm_movsi_insn}
     (nil))
(insn 311 310 312 20 (set (reg:SI 320)
        (plus:SI (reg:SI 321)
            (const_int 1 [0x1]))) "timer.c":111:28 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 321)
        (nil)))
(insn 312 311 313 20 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -36 [0xffffffffffffffdc])) [2 i+0 S4 A32])
        (reg:SI 320)) "timer.c":111:28 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 320)
        (nil)))
;;  succ:       21 (FALLTHRU,DFS_BACK)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 21, loop depth 0, maybe hot
;;  prev block 20, next block 22, flags: (RTL)
;;  pred:       20 (FALLTHRU,DFS_BACK)
;;              15 [always] 
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 322
(code_label 313 312 314 21 10 (nil) [1 uses])
(note 314 313 318 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 318 314 319 21 (set (reg:SI 322)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -36 [0xffffffffffffffdc])) [2 i+0 S4 A32])) "timer.c":111:19 253 {*arm_movsi_insn}
     (nil))
(insn 319 318 320 21 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 322)
            (const_int 63 [0x3f]))) "timer.c":111:19 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 322)
        (nil)))
(jump_insn 320 319 321 21 (set (pc)
        (if_then_else (le (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 315)
            (pc))) "timer.c":111:19 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (nil))
 -> 315)
;;  succ:       16
;;              22 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 22, loop depth 0, maybe hot
;;  prev block 21, next block 23, flags: (RTL)
;;  pred:       21 (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 172 323
(note 321 320 322 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 322 321 323 22 (set (reg/f:SI 323)
        (symbol_ref:SI ("tq") [flags 0x2]  <var_decl 0x7f50606127e0 tq>)) "timer.c":134:11 253 {*arm_movsi_insn}
     (nil))
(insn 323 322 324 22 (set (reg/f:SI 172 [ tq.16_60 ])
        (mem/f/c:SI (reg/f:SI 323) [5 tq+0 S4 A32])) "timer.c":134:11 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 323)
        (nil)))
(insn 324 323 325 22 (set (reg:CC 100 cc)
        (compare:CC (reg/f:SI 172 [ tq.16_60 ])
            (const_int 0 [0]))) "timer.c":134:10 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 172 [ tq.16_60 ])
        (nil)))
(jump_insn 325 324 326 22 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 382)
            (pc))) "timer.c":134:10 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (nil))
 -> 382)
;;  succ:       23 (FALLTHRU)
;;              27
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 23, loop depth 0, maybe hot
;;  prev block 22, next block 24, flags: (RTL)
;;  pred:       22 (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 324 325
(note 326 325 327 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(call_insn 327 326 328 23 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printTQ") [flags 0x3]  <function_decl 0x7f506060af00 printTQ>) [0 printTQ S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":135:4 291 {*call_value_symbol}
     (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 328 327 329 23 (set (reg/f:SI 324)
        (symbol_ref:SI ("tq") [flags 0x2]  <var_decl 0x7f50606127e0 tq>)) "timer.c":136:15 253 {*arm_movsi_insn}
     (nil))
(insn 329 328 330 23 (set (reg/f:SI 325)
        (mem/f/c:SI (reg/f:SI 324) [5 tq+0 S4 A32])) "timer.c":136:15 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 324)
        (nil)))
(insn 330 329 450 23 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -32 [0xffffffffffffffe0])) [5 tqq+0 S4 A64])
        (reg/f:SI 325)) "timer.c":136:15 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 325)
        (nil)))
(jump_insn 450 330 451 23 (set (pc)
        (label_ref 376)) "timer.c":137:17 284 {*arm_jump}
     (nil)
 -> 376)
;;  succ:       26 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

(barrier 451 450 378)
;; basic block 24, loop depth 0, maybe hot
;;  prev block 23, next block 25, flags: (RTL)
;;  pred:       26
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 173 174 175 326 327 328
(code_label 378 451 333 24 15 (nil) [1 uses])
(note 333 378 334 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 334 333 335 24 (set (reg/f:SI 326)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -32 [0xffffffffffffffe0])) [5 tqq+0 S4 A64])) "timer.c":138:17 253 {*arm_movsi_insn}
     (nil))
(insn 335 334 336 24 (set (reg:SI 173 [ _61 ])
        (mem:SI (plus:SI (reg/f:SI 326)
                (const_int 4 [0x4])) [2 tqq_91->time+0 S4 A32])) "timer.c":138:17 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 326)
        (nil)))
(insn 336 335 337 24 (set (reg:SI 174 [ _62 ])
        (plus:SI (reg:SI 173 [ _61 ])
            (const_int -1 [0xffffffffffffffff]))) "timer.c":138:23 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 173 [ _61 ])
        (nil)))
(insn 337 336 338 24 (set (reg/f:SI 327)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -32 [0xffffffffffffffe0])) [5 tqq+0 S4 A64])) "timer.c":138:23 253 {*arm_movsi_insn}
     (nil))
(insn 338 337 339 24 (set (mem:SI (plus:SI (reg/f:SI 327)
                (const_int 4 [0x4])) [2 tqq_91->time+0 S4 A32])
        (reg:SI 174 [ _62 ])) "timer.c":138:23 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 327)
        (expr_list:REG_DEAD (reg:SI 174 [ _62 ])
            (nil))))
(insn 339 338 340 24 (set (reg/f:SI 328)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -32 [0xffffffffffffffe0])) [5 tqq+0 S4 A64])) "timer.c":139:21 253 {*arm_movsi_insn}
     (nil))
(insn 340 339 343 24 (set (reg:SI 175 [ _63 ])
        (mem:SI (plus:SI (reg/f:SI 328)
                (const_int 4 [0x4])) [2 tqq_91->time+0 S4 A32])) "timer.c":139:21 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 328)
        (nil)))
(insn 343 340 344 24 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 175 [ _63 ])
            (const_int 0 [0]))) "timer.c":139:17 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 175 [ _63 ])
        (nil)))
(jump_insn 344 343 345 24 (set (pc)
        (if_then_else (gt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 456)
            (pc))) "timer.c":139:17 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (nil))
 -> 456)
;;  succ:       25 (FALLTHRU)
;;              35
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 25, loop depth 0, maybe hot
;;  prev block 24, next block 26, flags: (RTL)
;;  pred:       24 (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 176 177 178 179 180 181 182 183 184 329 330 331 332 333 334 335
(note 345 344 346 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 346 345 347 25 (set (reg/f:SI 329)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -32 [0xffffffffffffffe0])) [5 tqq+0 S4 A64])) "timer.c":140:44 253 {*arm_movsi_insn}
     (nil))
(insn 347 346 348 25 (set (reg/f:SI 176 [ _64 ])
        (mem/f:SI (plus:SI (reg/f:SI 329)
                (const_int 8 [0x8])) [6 tqq_91->who+0 S4 A32])) "timer.c":140:44 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 329)
        (nil)))
(insn 348 347 349 25 (set (reg:SI 177 [ _65 ])
        (mem:SI (plus:SI (reg/f:SI 176 [ _64 ])
                (const_int 24 [0x18])) [2 _64->pid+0 S4 A32])) "timer.c":140:9 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 176 [ _64 ])
        (nil)))
(insn 349 348 350 25 (set (reg:SI 1 r1)
        (reg:SI 177 [ _65 ])) "timer.c":140:9 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 177 [ _65 ])
        (nil)))
(insn 350 349 351 25 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC3") [flags 0x2]  <var_decl 0x7f50606436c0 *.LC3>)) "timer.c":140:9 253 {*arm_movsi_insn}
     (nil))
(call_insn 351 350 352 25 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kprintf") [flags 0x41]  <function_decl 0x7f506060a700 kprintf>) [0 kprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":140:9 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 352 351 353 25 (set (reg/f:SI 330)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -32 [0xffffffffffffffe0])) [5 tqq+0 S4 A64])) "timer.c":141:21 253 {*arm_movsi_insn}
     (nil))
(insn 353 352 354 25 (set (reg/f:SI 178 [ _66 ])
        (mem/f:SI (plus:SI (reg/f:SI 330)
                (const_int 8 [0x8])) [6 tqq_91->who+0 S4 A32])) "timer.c":141:21 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 330)
        (nil)))
(insn 354 353 355 25 (set (reg/f:SI 179 [ _67 ])
        (mem/f:SI (plus:SI (reg/f:SI 178 [ _66 ])
                (const_int 84 [0x54])) [11 _66->res+0 S4 A32])) "timer.c":141:26 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 178 [ _66 ])
        (nil)))
(insn 355 354 356 25 (set (reg:SI 180 [ _68 ])
        (mem:SI (plus:SI (reg/f:SI 179 [ _67 ])
                (const_int 92 [0x5c])) [2 _67->signal+0 S4 A32])) "timer.c":141:40 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 179 [ _67 ])
        (nil)))
(insn 356 355 357 25 (set (reg/f:SI 331)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -32 [0xffffffffffffffe0])) [5 tqq+0 S4 A64])) "timer.c":141:21 253 {*arm_movsi_insn}
     (nil))
(insn 357 356 358 25 (set (reg/f:SI 181 [ _69 ])
        (mem/f:SI (plus:SI (reg/f:SI 331)
                (const_int 8 [0x8])) [6 tqq_91->who+0 S4 A32])) "timer.c":141:21 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 331)
        (nil)))
(insn 358 357 359 25 (set (reg/f:SI 182 [ _70 ])
        (mem/f:SI (plus:SI (reg/f:SI 181 [ _69 ])
                (const_int 84 [0x54])) [11 _69->res+0 S4 A32])) "timer.c":141:26 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 181 [ _69 ])
        (nil)))
(insn 359 358 360 25 (set (reg:SI 183 [ _71 ])
        (ior:SI (reg:SI 180 [ _68 ])
            (const_int 16384 [0x4000]))) "timer.c":141:40 106 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg:SI 180 [ _68 ])
        (nil)))
(insn 360 359 361 25 (set (mem:SI (plus:SI (reg/f:SI 182 [ _70 ])
                (const_int 92 [0x5c])) [2 _70->signal+0 S4 A32])
        (reg:SI 183 [ _71 ])) "timer.c":141:40 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 183 [ _71 ])
        (expr_list:REG_DEAD (reg/f:SI 182 [ _70 ])
            (nil))))
(insn 361 360 362 25 (set (reg/f:SI 332)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -32 [0xffffffffffffffe0])) [5 tqq+0 S4 A64])) "timer.c":144:26 253 {*arm_movsi_insn}
     (nil))
(insn 362 361 363 25 (set (reg/f:SI 184 [ _72 ])
        (mem/f:SI (reg/f:SI 332) [5 tqq_91->next+0 S4 A32])) "timer.c":144:26 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 332)
        (nil)))
(insn 363 362 364 25 (set (reg/f:SI 333)
        (symbol_ref:SI ("tq") [flags 0x2]  <var_decl 0x7f50606127e0 tq>)) "timer.c":144:21 253 {*arm_movsi_insn}
     (nil))
(insn 364 363 365 25 (set (mem/f/c:SI (reg/f:SI 333) [5 tq+0 S4 A32])
        (reg/f:SI 184 [ _72 ])) "timer.c":144:21 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 333)
        (expr_list:REG_DEAD (reg/f:SI 184 [ _72 ])
            (nil))))
(insn 365 364 366 25 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -32 [0xffffffffffffffe0])) [5 tqq+0 S4 A64])) "timer.c":145:18 253 {*arm_movsi_insn}
     (nil))
(call_insn 366 365 367 25 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("put_tnode") [flags 0x3]  <function_decl 0x7f506061b000 put_tnode>) [0 put_tnode S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":145:18 291 {*call_value_symbol}
     (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 367 366 368 25 (set (reg/f:SI 334)
        (symbol_ref:SI ("tq") [flags 0x2]  <var_decl 0x7f50606127e0 tq>)) "timer.c":146:22 253 {*arm_movsi_insn}
     (nil))
(insn 368 367 369 25 (set (reg/f:SI 335)
        (mem/f/c:SI (reg/f:SI 334) [5 tq+0 S4 A32])) "timer.c":146:22 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 334)
        (nil)))
(insn 369 368 376 25 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -32 [0xffffffffffffffe0])) [5 tqq+0 S4 A64])
        (reg/f:SI 335)) "timer.c":146:22 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 335)
        (nil)))
;;  succ:       26 [always]  (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 26, loop depth 0, maybe hot
;;  prev block 25, next block 34, flags: (RTL)
;;  pred:       25 [always]  (FALLTHRU)
;;              23 [always] 
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 336
(code_label 376 369 377 26 13 (nil) [1 uses])
(note 377 376 379 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 379 377 380 26 (set (reg:SI 336)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -32 [0xffffffffffffffe0])) [5 tqq+0 S4 A64])) "timer.c":137:18 253 {*arm_movsi_insn}
     (nil))
(insn 380 379 381 26 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 336)
            (const_int 0 [0]))) "timer.c":137:18 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 336)
        (nil)))
(jump_insn 381 380 452 26 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 378)
            (pc))) "timer.c":137:18 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (nil))
 -> 378)
;;  succ:       24
;;              34 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 34, loop depth 0, maybe hot
;;  prev block 26, next block 35, flags: (RTL)
;;  pred:       26 (FALLTHRU)
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 452 381 453 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(jump_insn 453 452 454 34 (set (pc)
        (label_ref 382)) 284 {*arm_jump}
     (nil)
 -> 382)
;;  succ:       27 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

(barrier 454 453 456)
;; basic block 35, loop depth 0, maybe hot
;;  prev block 34, next block 27, flags: (RTL)
;;  pred:       24
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(code_label 456 454 455 35 19 (nil) [1 uses])
(note 455 456 457 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 457 455 382 35 (const_int 0 [0]) "timer.c":150:20 311 {nop}
     (nil))
;;  succ:       27 [always]  (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 27, loop depth 0, maybe hot
;;  prev block 35, next block 28, flags: (RTL)
;;  pred:       8
;;              22
;;              35 [always]  (FALLTHRU)
;;              34 [always] 
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 185 186 337
(code_label 382 457 383 27 5 (nil) [3 uses])
(note 383 382 384 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 384 383 385 27 (set (reg/f:SI 337)
        (symbol_ref:SI ("running") [flags 0x40]  <var_decl 0x7f50612f57e0 running>)) "timer.c":156:16 253 {*arm_movsi_insn}
     (nil))
(insn 385 384 386 27 (set (reg/f:SI 185 [ running.17_73 ])
        (mem/f/c:SI (reg/f:SI 337) [6 running+0 S4 A32])) "timer.c":156:16 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 337)
        (nil)))
(insn 386 385 387 27 (set (reg:SI 186 [ _74 ])
        (mem:SI (plus:SI (reg/f:SI 185 [ running.17_73 ])
                (const_int 24 [0x18])) [2 running.17_73->pid+0 S4 A32])) "timer.c":156:16 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 185 [ running.17_73 ])
        (nil)))
(insn 387 386 388 27 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 186 [ _74 ])
            (const_int 0 [0]))) "timer.c":156:8 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 186 [ _74 ])
        (nil)))
(jump_insn 388 387 389 27 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 395)
            (pc))) "timer.c":156:8 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (nil))
 -> 395)
;;  succ:       28 (FALLTHRU)
;;              29
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 28, loop depth 0, maybe hot
;;  prev block 27, next block 29, flags: (RTL)
;;  pred:       27 (FALLTHRU)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 187 188 189 338
(note 389 388 390 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 390 389 391 28 (set (reg/f:SI 338)
        (symbol_ref:SI ("running") [flags 0x40]  <var_decl 0x7f50612f57e0 running>)) "timer.c":157:15 253 {*arm_movsi_insn}
     (nil))
(insn 391 390 392 28 (set (reg/f:SI 187 [ running.18_75 ])
        (mem/f/c:SI (reg/f:SI 338) [6 running+0 S4 A32])) "timer.c":157:15 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 338)
        (nil)))
(insn 392 391 393 28 (set (reg:SI 188 [ _76 ])
        (mem:SI (plus:SI (reg/f:SI 187 [ running.18_75 ])
                (const_int 56 [0x38])) [2 running.18_75->time+0 S4 A32])) "timer.c":157:15 253 {*arm_movsi_insn}
     (nil))
(insn 393 392 394 28 (set (reg:SI 189 [ _77 ])
        (plus:SI (reg:SI 188 [ _76 ])
            (const_int -1 [0xffffffffffffffff]))) "timer.c":157:21 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 188 [ _76 ])
        (nil)))
(insn 394 393 395 28 (set (mem:SI (plus:SI (reg/f:SI 187 [ running.18_75 ])
                (const_int 56 [0x38])) [2 running.18_75->time+0 S4 A32])
        (reg:SI 189 [ _77 ])) "timer.c":157:21 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 189 [ _77 ])
        (expr_list:REG_DEAD (reg/f:SI 187 [ running.18_75 ])
            (nil))))
;;  succ:       29 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 29, loop depth 0, maybe hot
;;  prev block 28, next block 30, flags: (RTL)
;;  pred:       27
;;              28 (FALLTHRU)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 190 191 192 339 340 341
(code_label 395 394 396 29 16 (nil) [1 uses])
(note 396 395 397 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(call_insn 397 396 398 29 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("get_spsr") [flags 0x41]  <function_decl 0x7f506061b300 get_spsr>) [0 get_spsr S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":159:12 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 398 397 399 29 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 spsr+0 S4 A32])
        (reg:SI 0 r0)) "timer.c":159:12 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(insn 399 398 400 29 (set (reg:SI 0 r0)
        (const_int 0 [0])) "timer.c":167:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 400 399 401 29 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("timer_clearInterrupt") [flags 0x3]  <function_decl 0x7f506061b400 timer_clearInterrupt>) [0 timer_clearInterrupt S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":167:3 291 {*call_value_symbol}
     (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 401 400 402 29 (set (reg/f:SI 339)
        (symbol_ref:SI ("oldcolor") [flags 0x2]  <var_decl 0x7f50606126c0 oldcolor>)) "timer.c":168:9 253 {*arm_movsi_insn}
     (nil))
(insn 402 401 403 29 (set (reg:SI 190 [ oldcolor.19_78 ])
        (mem/c:SI (reg/f:SI 339) [2 oldcolor+0 S4 A32])) "timer.c":168:9 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 339)
        (nil)))
(insn 403 402 404 29 (set (reg/f:SI 340)
        (symbol_ref:SI ("color") [flags 0x40]  <var_decl 0x7f50612f5480 color>)) "timer.c":168:9 253 {*arm_movsi_insn}
     (nil))
(insn 404 403 405 29 (set (mem/c:SI (reg/f:SI 340) [2 color+0 S4 A32])
        (reg:SI 190 [ oldcolor.19_78 ])) "timer.c":168:9 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 340)
        (expr_list:REG_DEAD (reg:SI 190 [ oldcolor.19_78 ])
            (nil))))
(insn 405 404 406 29 (set (reg/f:SI 341)
        (symbol_ref:SI ("running") [flags 0x40]  <var_decl 0x7f50612f57e0 running>)) "timer.c":170:14 253 {*arm_movsi_insn}
     (nil))
(insn 406 405 407 29 (set (reg/f:SI 191 [ running.20_79 ])
        (mem/f/c:SI (reg/f:SI 341) [6 running+0 S4 A32])) "timer.c":170:14 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 341)
        (nil)))
(insn 407 406 410 29 (set (reg:SI 192 [ _80 ])
        (mem:SI (plus:SI (reg/f:SI 191 [ running.20_79 ])
                (const_int 56 [0x38])) [2 running.20_79->time+0 S4 A32])) "timer.c":170:14 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 191 [ running.20_79 ])
        (nil)))
(insn 410 407 411 29 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 192 [ _80 ])
            (const_int 0 [0]))) "timer.c":170:6 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 192 [ _80 ])
        (nil)))
(jump_insn 411 410 412 29 (set (pc)
        (if_then_else (gt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 461)
            (pc))) "timer.c":170:6 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (nil))
 -> 461)
;;  succ:       30 (FALLTHRU)
;;              36
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 30, loop depth 0, maybe hot
;;  prev block 29, next block 31, flags: (RTL)
;;  pred:       29 (FALLTHRU)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 193 342
(note 412 411 413 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 413 412 414 30 (set (reg:SI 342)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 spsr+0 S4 A32])) "timer.c":170:35 253 {*arm_movsi_insn}
     (nil))
(insn 414 413 415 30 (set (reg:SI 193 [ _81 ])
        (and:SI (reg:SI 342)
            (const_int 31 [0x1f]))) "timer.c":170:35 90 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 342)
        (nil)))
(insn 415 414 416 30 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 193 [ _81 ])
            (const_int 16 [0x10]))) "timer.c":170:26 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 193 [ _81 ])
        (nil)))
(jump_insn 416 415 417 30 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 461)
            (pc))) "timer.c":170:26 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (nil))
 -> 461)
;;  succ:       31 (FALLTHRU)
;;              36
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 31, loop depth 0, maybe hot
;;  prev block 30, next block 32, flags: (RTL)
;;  pred:       30 (FALLTHRU)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 194 195 343
(note 417 416 418 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 418 417 419 31 (set (reg/f:SI 343)
        (symbol_ref:SI ("readyQueue") [flags 0x40]  <var_decl 0x7f50612f56c0 readyQueue>)) "timer.c":170:63 253 {*arm_movsi_insn}
     (nil))
(insn 419 418 420 31 (set (reg/f:SI 194 [ readyQueue.21_82 ])
        (mem/f/c:SI (reg/f:SI 343) [6 readyQueue+0 S4 A32])) "timer.c":170:63 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 343)
        (nil)))
(insn 420 419 421 31 (set (reg:SI 195 [ _83 ])
        (mem:SI (plus:SI (reg/f:SI 194 [ readyQueue.21_82 ])
                (const_int 24 [0x18])) [2 readyQueue.21_82->pid+0 S4 A32])) "timer.c":170:63 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 194 [ readyQueue.21_82 ])
        (nil)))
(insn 421 420 422 31 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 195 [ _83 ])
            (const_int 0 [0]))) "timer.c":170:50 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 195 [ _83 ])
        (nil)))
(jump_insn 422 421 423 31 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 461)
            (pc))) "timer.c":170:50 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (nil))
 -> 461)
;;  succ:       32 (FALLTHRU)
;;              36
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 32, loop depth 0, maybe hot
;;  prev block 31, next block 36, flags: (RTL)
;;  pred:       31 (FALLTHRU)
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 196 197 198 199 344 345 346 347
(note 423 422 424 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 424 423 425 32 (set (reg/f:SI 344)
        (symbol_ref:SI ("running") [flags 0x40]  <var_decl 0x7f50612f57e0 running>)) "timer.c":171:54 253 {*arm_movsi_insn}
     (nil))
(insn 425 424 426 32 (set (reg/f:SI 196 [ running.22_84 ])
        (mem/f/c:SI (reg/f:SI 344) [6 running+0 S4 A32])) "timer.c":171:54 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 344)
        (nil)))
(insn 426 425 427 32 (set (reg:SI 197 [ _85 ])
        (mem:SI (plus:SI (reg/f:SI 196 [ running.22_84 ])
                (const_int 24 [0x18])) [2 running.22_84->pid+0 S4 A32])) "timer.c":171:5 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 196 [ running.22_84 ])
        (nil)))
(insn 427 426 428 32 (set (reg/f:SI 345)
        (symbol_ref:SI ("readyQueue") [flags 0x40]  <var_decl 0x7f50612f56c0 readyQueue>)) "timer.c":171:71 253 {*arm_movsi_insn}
     (nil))
(insn 428 427 429 32 (set (reg/f:SI 198 [ readyQueue.23_86 ])
        (mem/f/c:SI (reg/f:SI 345) [6 readyQueue+0 S4 A32])) "timer.c":171:71 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 345)
        (nil)))
(insn 429 428 430 32 (set (reg:SI 199 [ _87 ])
        (mem:SI (plus:SI (reg/f:SI 198 [ readyQueue.23_86 ])
                (const_int 24 [0x18])) [2 readyQueue.23_86->pid+0 S4 A32])) "timer.c":171:5 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 198 [ readyQueue.23_86 ])
        (nil)))
(insn 430 429 431 32 (set (reg:SI 2 r2)
        (reg:SI 199 [ _87 ])) "timer.c":171:5 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 199 [ _87 ])
        (nil)))
(insn 431 430 432 32 (set (reg:SI 1 r1)
        (reg:SI 197 [ _85 ])) "timer.c":171:5 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 197 [ _85 ])
        (nil)))
(insn 432 431 433 32 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC4") [flags 0x2]  <var_decl 0x7f5060643750 *.LC4>)) "timer.c":171:5 253 {*arm_movsi_insn}
     (nil))
(call_insn 433 432 434 32 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kprintf") [flags 0x41]  <function_decl 0x7f506060a700 kprintf>) [0 kprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":171:5 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 434 433 435 32 (set (reg/f:SI 346)
        (symbol_ref:SI ("swflag") [flags 0x40]  <var_decl 0x7f506060d5a0 swflag>)) "timer.c":172:12 253 {*arm_movsi_insn}
     (nil))
(insn 435 434 436 32 (set (reg:SI 347)
        (const_int 1 [0x1])) "timer.c":172:12 253 {*arm_movsi_insn}
     (nil))
(insn 436 435 443 32 (set (mem/v/c:SI (reg/f:SI 346) [2 swflag+0 S4 A32])
        (reg:SI 347)) "timer.c":172:12 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 347)
        (expr_list:REG_DEAD (reg/f:SI 346)
            (nil))))
(insn 443 436 461 32 (const_int 0 [0]) "timer.c":175:3 311 {nop}
     (nil))
;;  succ:       36 [always]  (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 36, loop depth 0, maybe hot
;;  prev block 32, next block 33, flags: (RTL)
;;  pred:       29
;;              31
;;              32 [always]  (FALLTHRU)
;;              30
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(code_label 461 443 460 36 20 (nil) [3 uses])
(note 460 461 462 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 462 460 441 36 (const_int 0 [0]) "timer.c":175:3 311 {nop}
     (nil))
;;  succ:       33 [always]  (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 33, loop depth 0, maybe hot
;;  prev block 36, next block 1, flags: (RTL)
;;  pred:       36 [always]  (FALLTHRU)
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(code_label 441 462 442 33 1 (nil) [0 uses])
(note 442 441 0 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]


;; Function timer_init (timer_init, funcdef_no=1, decl_uid=4558, cgraph_uid=2, symbol_order=12)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 10 n_edges 11 count 10 (    1)
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;;
;; Loop 2
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 6 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 6.
verify found no changes in insn with uid = 73.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r181: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r181,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r180: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r180,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r179: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r179,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r178,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r177: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r177,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r176,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r175: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r175,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r174,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r173,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r172,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r171,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r170,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r169: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r169,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r168,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r167,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r166,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r165,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r164,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r163,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r162,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r160,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r159,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r154,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r153,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r180,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a1(r181,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a2(r178,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a3(r179,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a4(r177,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a5(r175,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a6(r176,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a7(r174,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a8(r123,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a9(r172,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:62000
  a10(r170,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a11(r173,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a12(r171,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:21000
  a13(r169,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a14(r167,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:62000
  a15(r168,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a16(r122,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:21000
  a17(r166,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a18(r165,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a19(r163,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a20(r164,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a21(r162,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a22(r121,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a23(r161,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a24(r160,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a25(r120,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a26(r159,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a27(r157,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a28(r158,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a29(r156,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a30(r154,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a31(r155,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a32(r119,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a33(r153,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a34(r151,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a35(r152,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a36(r118,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a37(r150,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a38(r148,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a39(r149,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a40(r117,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a41(r147,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a42(r145,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a43(r146,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a44(r116,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a45(r144,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a46(r142,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a47(r143,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a48(r115,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a49(r141,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a50(r139,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a51(r140,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a52(r114,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a53(r138,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a54(r136,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a55(r137,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a56(r113,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a57(r135,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a58(r133,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a59(r134,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a60(r132,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a61(r130,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a62(r131,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a63(r128,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a64(r129,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a65(r126,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a66(r127,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a67(r124,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a68(r125,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000

   Insn 136(l0): point = 0
   Insn 128(l0): point = 3
   Insn 127(l0): point = 5
   Insn 126(l0): point = 7
   Insn 125(l0): point = 9
   Insn 124(l0): point = 11
   Insn 123(l0): point = 13
   Insn 113(l0): point = 16
   Insn 112(l0): point = 18
   Insn 111(l0): point = 20
   Insn 110(l0): point = 22
   Insn 109(l0): point = 24
   Insn 108(l0): point = 26
   Insn 107(l0): point = 28
   Insn 106(l0): point = 30
   Insn 105(l0): point = 32
   Insn 104(l0): point = 34
   Insn 103(l0): point = 36
   Insn 102(l0): point = 38
   Insn 101(l0): point = 40
   Insn 100(l0): point = 42
   Insn 99(l0): point = 44
   Insn 98(l0): point = 46
   Insn 97(l0): point = 48
   Insn 96(l0): point = 50
   Insn 95(l0): point = 52
   Insn 94(l0): point = 54
   Insn 93(l0): point = 56
   Insn 121(l0): point = 59
   Insn 120(l0): point = 61
   Insn 119(l0): point = 63
   Insn 133(l0): point = 66
   Insn 89(l0): point = 68
   Insn 88(l0): point = 70
   Insn 87(l0): point = 72
   Insn 86(l0): point = 74
   Insn 85(l0): point = 76
   Insn 84(l0): point = 78
   Insn 83(l0): point = 80
   Insn 82(l0): point = 82
   Insn 81(l0): point = 84
   Insn 80(l0): point = 86
   Insn 79(l0): point = 88
   Insn 78(l0): point = 90
   Insn 77(l0): point = 92
   Insn 76(l0): point = 94
   Insn 75(l0): point = 96
   Insn 74(l0): point = 98
   Insn 73(l0): point = 100
   Insn 72(l0): point = 102
   Insn 71(l0): point = 104
   Insn 61(l0): point = 107
   Insn 60(l0): point = 109
   Insn 59(l0): point = 111
   Insn 58(l0): point = 113
   Insn 57(l0): point = 115
   Insn 56(l0): point = 117
   Insn 55(l0): point = 119
   Insn 54(l0): point = 121
   Insn 53(l0): point = 123
   Insn 52(l0): point = 125
   Insn 51(l0): point = 127
   Insn 50(l0): point = 129
   Insn 49(l0): point = 131
   Insn 48(l0): point = 133
   Insn 47(l0): point = 135
   Insn 46(l0): point = 137
   Insn 45(l0): point = 139
   Insn 44(l0): point = 141
   Insn 43(l0): point = 143
   Insn 42(l0): point = 145
   Insn 41(l0): point = 147
   Insn 40(l0): point = 149
   Insn 39(l0): point = 151
   Insn 38(l0): point = 153
   Insn 37(l0): point = 155
   Insn 36(l0): point = 157
   Insn 35(l0): point = 159
   Insn 34(l0): point = 161
   Insn 33(l0): point = 163
   Insn 32(l0): point = 165
   Insn 31(l0): point = 167
   Insn 30(l0): point = 169
   Insn 29(l0): point = 171
   Insn 28(l0): point = 173
   Insn 27(l0): point = 175
   Insn 26(l0): point = 177
   Insn 25(l0): point = 179
   Insn 24(l0): point = 181
   Insn 69(l0): point = 184
   Insn 68(l0): point = 186
   Insn 67(l0): point = 188
   Insn 131(l0): point = 191
   Insn 20(l0): point = 193
   Insn 19(l0): point = 195
   Insn 18(l0): point = 197
   Insn 17(l0): point = 199
   Insn 16(l0): point = 201
   Insn 15(l0): point = 203
   Insn 14(l0): point = 205
   Insn 13(l0): point = 207
   Insn 12(l0): point = 209
   Insn 11(l0): point = 211
   Insn 10(l0): point = 213
   Insn 9(l0): point = 215
   Insn 8(l0): point = 217
   Insn 7(l0): point = 219
   Insn 6(l0): point = 221
   Insn 5(l0): point = 223
 a0(r180): [4..7]
 a1(r181): [4..5]
 a2(r178): [10..13]
 a3(r179): [10..11]
 a4(r177): [62..63]
 a5(r175): [17..18]
 a6(r176): [19..20]
 a7(r174): [23..24]
 a8(r123): [23..40]
 a9(r172): [29..34] [25..26]
 a10(r170): [25..38]
 a11(r173): [27..28]
 a12(r171): [31..36]
 a13(r169): [41..42]
 a14(r167): [47..52] [41..44]
 a15(r168): [45..46]
 a16(r122): [49..54]
 a17(r166): [55..56]
 a18(r165): [69..70]
 a19(r163): [73..76]
 a20(r164): [73..74]
 a21(r162): [79..80]
 a22(r121): [79..82]
 a23(r161): [83..84]
 a24(r160): [87..88]
 a25(r120): [87..90]
 a26(r159): [91..92]
 a27(r157): [95..98]
 a28(r158): [95..96]
 a29(r156): [187..188]
 a30(r154): [108..109]
 a31(r155): [110..111]
 a32(r119): [114..117]
 a33(r153): [114..115]
 a34(r151): [118..121]
 a35(r152): [118..119]
 a36(r118): [124..127]
 a37(r150): [124..125]
 a38(r148): [128..131]
 a39(r149): [128..129]
 a40(r117): [134..137]
 a41(r147): [134..135]
 a42(r145): [138..141]
 a43(r146): [138..139]
 a44(r116): [144..147]
 a45(r144): [144..145]
 a46(r142): [148..151]
 a47(r143): [148..149]
 a48(r115): [154..157]
 a49(r141): [154..155]
 a50(r139): [158..161]
 a51(r140): [158..159]
 a52(r114): [164..167]
 a53(r138): [164..165]
 a54(r136): [168..171]
 a55(r137): [168..169]
 a56(r113): [174..177]
 a57(r135): [174..175]
 a58(r133): [178..181]
 a59(r134): [178..179]
 a60(r132): [194..195]
 a61(r130): [198..201]
 a62(r131): [198..199]
 a63(r128): [204..207]
 a64(r129): [204..205]
 a65(r126): [210..213]
 a66(r127): [210..211]
 a67(r124): [216..219]
 a68(r125): [216..217]
Compressing live ranges: from 226 to 84 - 37%
Ranges after the compression:
 a0(r180): [0..1]
 a1(r181): [0..1]
 a2(r178): [2..3]
 a3(r179): [2..3]
 a4(r177): [24..25]
 a5(r175): [4..5]
 a6(r176): [6..7]
 a7(r174): [8..9]
 a8(r123): [8..15]
 a9(r172): [14..15] [10..11]
 a10(r170): [10..15]
 a11(r173): [12..13]
 a12(r171): [14..15]
 a13(r169): [16..17]
 a14(r167): [20..21] [16..17]
 a15(r168): [18..19]
 a16(r122): [20..21]
 a17(r166): [22..23]
 a18(r165): [26..27]
 a19(r163): [28..29]
 a20(r164): [28..29]
 a21(r162): [30..31]
 a22(r121): [30..31]
 a23(r161): [32..33]
 a24(r160): [34..35]
 a25(r120): [34..35]
 a26(r159): [36..37]
 a27(r157): [38..39]
 a28(r158): [38..39]
 a29(r156): [72..73]
 a30(r154): [40..41]
 a31(r155): [42..43]
 a32(r119): [44..45]
 a33(r153): [44..45]
 a34(r151): [46..47]
 a35(r152): [46..47]
 a36(r118): [48..49]
 a37(r150): [48..49]
 a38(r148): [50..51]
 a39(r149): [50..51]
 a40(r117): [52..53]
 a41(r147): [52..53]
 a42(r145): [54..55]
 a43(r146): [54..55]
 a44(r116): [56..57]
 a45(r144): [56..57]
 a46(r142): [58..59]
 a47(r143): [58..59]
 a48(r115): [60..61]
 a49(r141): [60..61]
 a50(r139): [62..63]
 a51(r140): [62..63]
 a52(r114): [64..65]
 a53(r138): [64..65]
 a54(r136): [66..67]
 a55(r137): [66..67]
 a56(r113): [68..69]
 a57(r135): [68..69]
 a58(r133): [70..71]
 a59(r134): [70..71]
 a60(r132): [74..75]
 a61(r130): [76..77]
 a62(r131): [76..77]
 a63(r128): [78..79]
 a64(r129): [78..79]
 a65(r126): [80..81]
 a66(r127): [80..81]
 a67(r124): [82..83]
 a68(r125): [82..83]
  regions=1, blocks=10, points=84
    allocnos=69 (big 0), copies=0, conflicts=0, ranges=71
Disposition:
   56:r113 l0     3   52:r114 l0     3   48:r115 l0     3   44:r116 l0     3
   40:r117 l0     3   36:r118 l0     3   32:r119 l0     3   25:r120 l0     3
   22:r121 l0     3   16:r122 l0     2    8:r123 l0     1   67:r124 l0     3
   68:r125 l0     2   65:r126 l0     3   66:r127 l0     2   63:r128 l0     3
   64:r129 l0     2   61:r130 l0     3   62:r131 l0     2   60:r132 l0     3
   58:r133 l0     2   59:r134 l0     3   57:r135 l0     2   54:r136 l0     2
   55:r137 l0     3   53:r138 l0     2   50:r139 l0     2   51:r140 l0     3
   49:r141 l0     2   46:r142 l0     2   47:r143 l0     3   45:r144 l0     2
   42:r145 l0     2   43:r146 l0     3   41:r147 l0     2   38:r148 l0     2
   39:r149 l0     3   37:r150 l0     2   34:r151 l0     2   35:r152 l0     3
   33:r153 l0     2   30:r154 l0     3   31:r155 l0     3   29:r156 l0     3
   27:r157 l0     3   28:r158 l0     2   26:r159 l0     3   24:r160 l0     2
   23:r161 l0     3   21:r162 l0     2   19:r163 l0     3   20:r164 l0     2
   18:r165 l0     3   17:r166 l0     3   14:r167 l0     3   15:r168 l0     3
   13:r169 l0     2   10:r170 l0     0   12:r171 l0     2    9:r172 l0     3
   11:r173 l0     3    7:r174 l0     3    5:r175 l0     3    6:r176 l0     3
    4:r177 l0     3    2:r178 l0     3    3:r179 l0     2    0:r180 l0     3
    1:r181 l0     2
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


timer_init

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 102 [sfp] 103 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={5d,2u} r1={4d,1u} r2={3d} r3={3d} r11={1d,9u} r12={4d} r13={1d,11u} r14={3d} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={4d,2u} r101={2d} r102={1d,26u} r103={1d,8u} r104={2d} r105={2d} r106={2d} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,2u,1e} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={4d,4u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,2u,1e} r172={4d,4u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} 
;;    total ref usage 421{283d,136u,2e} in 109{107 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 124 125 126 127 128 129 130 131 132
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC5") [flags 0x2]  <var_decl 0x7f50606437e0 *.LC5>)) "timer.c":181:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 6 5 7 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kprintf") [flags 0x41]  <function_decl 0x7f506060a700 kprintf>) [0 kprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":181:3 291 {*call_value_symbol}
     (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 7 6 8 2 (set (reg/f:SI 124)
        (symbol_ref:SI ("tp") [flags 0x2]  <var_decl 0x7f5060612000 tp>)) "timer.c":184:9 253 {*arm_movsi_insn}
     (nil))
(insn 8 7 9 2 (set (reg:SI 125)
        (const_int 270409728 [0x101e2000])) "timer.c":184:9 253 {*arm_movsi_insn}
     (nil))
(insn 9 8 10 2 (set (mem/f/c:SI (reg/f:SI 124) [1 tp[0]+0 S4 A32])
        (reg:SI 125)) "timer.c":184:9 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 125)
        (expr_list:REG_DEAD (reg/f:SI 124)
            (nil))))
(insn 10 9 11 2 (set (reg/f:SI 126)
        (symbol_ref:SI ("tp") [flags 0x2]  <var_decl 0x7f5060612000 tp>)) "timer.c":185:9 253 {*arm_movsi_insn}
     (nil))
(insn 11 10 12 2 (set (reg:SI 127)
        (const_int 270409760 [0x101e2020])) "timer.c":185:9 253 {*arm_movsi_insn}
     (nil))
(insn 12 11 13 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 126)
                (const_int 4 [0x4])) [1 tp[1]+0 S4 A32])
        (reg:SI 127)) "timer.c":185:9 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 127)
        (expr_list:REG_DEAD (reg/f:SI 126)
            (nil))))
(insn 13 12 14 2 (set (reg/f:SI 128)
        (symbol_ref:SI ("tp") [flags 0x2]  <var_decl 0x7f5060612000 tp>)) "timer.c":186:9 253 {*arm_movsi_insn}
     (nil))
(insn 14 13 15 2 (set (reg:SI 129)
        (const_int 270413824 [0x101e3000])) "timer.c":186:9 253 {*arm_movsi_insn}
     (nil))
(insn 15 14 16 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 128)
                (const_int 8 [0x8])) [1 tp[2]+0 S4 A32])
        (reg:SI 129)) "timer.c":186:9 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 129)
        (expr_list:REG_DEAD (reg/f:SI 128)
            (nil))))
(insn 16 15 17 2 (set (reg/f:SI 130)
        (symbol_ref:SI ("tp") [flags 0x2]  <var_decl 0x7f5060612000 tp>)) "timer.c":187:9 253 {*arm_movsi_insn}
     (nil))
(insn 17 16 18 2 (set (reg:SI 131)
        (const_int 270413856 [0x101e3020])) "timer.c":187:9 253 {*arm_movsi_insn}
     (nil))
(insn 18 17 19 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 130)
                (const_int 12 [0xc])) [1 tp[3]+0 S4 A32])
        (reg:SI 131)) "timer.c":187:9 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 131)
        (expr_list:REG_DEAD (reg/f:SI 130)
            (nil))))
(insn 19 18 20 2 (set (reg:SI 132)
        (const_int 0 [0])) "timer.c":190:9 253 {*arm_movsi_insn}
     (nil))
(insn 20 19 131 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])
        (reg:SI 132)) "timer.c":190:9 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 132)
        (nil)))
(jump_insn 131 20 132 2 (set (pc)
        (label_ref 62)) "timer.c":190:3 284 {*arm_jump}
     (nil)
 -> 62)
;;  succ:       4 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

(barrier 132 131 64)
;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       4
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 113 114 115 116 117 118 119 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155
(code_label 64 132 23 3 25 (nil) [1 uses])
(note 23 64 24 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 3 (set (reg/f:SI 133)
        (symbol_ref:SI ("tp") [flags 0x2]  <var_decl 0x7f5060612000 tp>)) "timer.c":191:7 253 {*arm_movsi_insn}
     (nil))
(insn 25 24 26 3 (set (reg:SI 134)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])) "timer.c":191:7 253 {*arm_movsi_insn}
     (nil))
(insn 26 25 27 3 (set (reg/f:SI 113 [ _1 ])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 134)
                    (const_int 4 [0x4]))
                (reg/f:SI 133)) [1 tp[i_12]+0 S4 A32])) "timer.c":191:7 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 134)
        (expr_list:REG_DEAD (reg/f:SI 133)
            (nil))))
(insn 27 26 28 3 (set (reg:SI 135)
        (const_int 0 [0])) "timer.c":191:17 253 {*arm_movsi_insn}
     (nil))
(insn 28 27 29 3 (set (mem/v:SI (reg/f:SI 113 [ _1 ]) [2 _1->LOAD+0 S4 A32])
        (reg:SI 135)) "timer.c":191:17 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 135)
        (expr_list:REG_DEAD (reg/f:SI 113 [ _1 ])
            (nil))))
(insn 29 28 30 3 (set (reg/f:SI 136)
        (symbol_ref:SI ("tp") [flags 0x2]  <var_decl 0x7f5060612000 tp>)) "timer.c":192:7 253 {*arm_movsi_insn}
     (nil))
(insn 30 29 31 3 (set (reg:SI 137)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])) "timer.c":192:7 253 {*arm_movsi_insn}
     (nil))
(insn 31 30 32 3 (set (reg/f:SI 114 [ _2 ])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 137)
                    (const_int 4 [0x4]))
                (reg/f:SI 136)) [1 tp[i_12]+0 S4 A32])) "timer.c":192:7 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 137)
        (expr_list:REG_DEAD (reg/f:SI 136)
            (nil))))
(insn 32 31 33 3 (set (reg:SI 138)
        (const_int -1 [0xffffffffffffffff])) "timer.c":192:17 253 {*arm_movsi_insn}
     (nil))
(insn 33 32 34 3 (set (mem/v:SI (plus:SI (reg/f:SI 114 [ _2 ])
                (const_int 4 [0x4])) [2 _2->VALUE+0 S4 A32])
        (reg:SI 138)) "timer.c":192:17 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 138)
        (expr_list:REG_DEAD (reg/f:SI 114 [ _2 ])
            (nil))))
(insn 34 33 35 3 (set (reg/f:SI 139)
        (symbol_ref:SI ("tp") [flags 0x2]  <var_decl 0x7f5060612000 tp>)) "timer.c":195:7 253 {*arm_movsi_insn}
     (nil))
(insn 35 34 36 3 (set (reg:SI 140)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])) "timer.c":195:7 253 {*arm_movsi_insn}
     (nil))
(insn 36 35 37 3 (set (reg/f:SI 115 [ _3 ])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 140)
                    (const_int 4 [0x4]))
                (reg/f:SI 139)) [1 tp[i_12]+0 S4 A32])) "timer.c":195:7 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 140)
        (expr_list:REG_DEAD (reg/f:SI 139)
            (nil))))
(insn 37 36 38 3 (set (reg:SI 141)
        (const_int 0 [0])) "timer.c":195:17 253 {*arm_movsi_insn}
     (nil))
(insn 38 37 39 3 (set (mem/v:SI (plus:SI (reg/f:SI 115 [ _3 ])
                (const_int 16 [0x10])) [2 _3->RIS+0 S4 A32])
        (reg:SI 141)) "timer.c":195:17 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 141)
        (expr_list:REG_DEAD (reg/f:SI 115 [ _3 ])
            (nil))))
(insn 39 38 40 3 (set (reg/f:SI 142)
        (symbol_ref:SI ("tp") [flags 0x2]  <var_decl 0x7f5060612000 tp>)) "timer.c":196:7 253 {*arm_movsi_insn}
     (nil))
(insn 40 39 41 3 (set (reg:SI 143)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])) "timer.c":196:7 253 {*arm_movsi_insn}
     (nil))
(insn 41 40 42 3 (set (reg/f:SI 116 [ _4 ])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 143)
                    (const_int 4 [0x4]))
                (reg/f:SI 142)) [1 tp[i_12]+0 S4 A32])) "timer.c":196:7 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 143)
        (expr_list:REG_DEAD (reg/f:SI 142)
            (nil))))
(insn 42 41 43 3 (set (reg:SI 144)
        (const_int 0 [0])) "timer.c":196:17 253 {*arm_movsi_insn}
     (nil))
(insn 43 42 44 3 (set (mem/v:SI (plus:SI (reg/f:SI 116 [ _4 ])
                (const_int 20 [0x14])) [2 _4->MIS+0 S4 A32])
        (reg:SI 144)) "timer.c":196:17 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 144)
        (expr_list:REG_DEAD (reg/f:SI 116 [ _4 ])
            (nil))))
(insn 44 43 45 3 (set (reg/f:SI 145)
        (symbol_ref:SI ("tp") [flags 0x2]  <var_decl 0x7f5060612000 tp>)) "timer.c":197:7 253 {*arm_movsi_insn}
     (nil))
(insn 45 44 46 3 (set (reg:SI 146)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])) "timer.c":197:7 253 {*arm_movsi_insn}
     (nil))
(insn 46 45 47 3 (set (reg/f:SI 117 [ _5 ])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 146)
                    (const_int 4 [0x4]))
                (reg/f:SI 145)) [1 tp[i_12]+0 S4 A32])) "timer.c":197:7 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 146)
        (expr_list:REG_DEAD (reg/f:SI 145)
            (nil))))
(insn 47 46 48 3 (set (reg:SI 147)
        (const_int 256 [0x100])) "timer.c":197:20 253 {*arm_movsi_insn}
     (nil))
(insn 48 47 49 3 (set (mem/v:SI (reg/f:SI 117 [ _5 ]) [2 _5->LOAD+0 S4 A32])
        (reg:SI 147)) "timer.c":197:20 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 147)
        (expr_list:REG_DEAD (reg/f:SI 117 [ _5 ])
            (nil))))
(insn 49 48 50 3 (set (reg/f:SI 148)
        (symbol_ref:SI ("tp") [flags 0x2]  <var_decl 0x7f5060612000 tp>)) "timer.c":198:7 253 {*arm_movsi_insn}
     (nil))
(insn 50 49 51 3 (set (reg:SI 149)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])) "timer.c":198:7 253 {*arm_movsi_insn}
     (nil))
(insn 51 50 52 3 (set (reg/f:SI 118 [ _6 ])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 149)
                    (const_int 4 [0x4]))
                (reg/f:SI 148)) [1 tp[i_12]+0 S4 A32])) "timer.c":198:7 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 149)
        (expr_list:REG_DEAD (reg/f:SI 148)
            (nil))))
(insn 52 51 53 3 (set (reg:SI 150)
        (const_int 98 [0x62])) "timer.c":198:20 253 {*arm_movsi_insn}
     (nil))
(insn 53 52 54 3 (set (mem/v:SI (plus:SI (reg/f:SI 118 [ _6 ])
                (const_int 8 [0x8])) [2 _6->CONTROL+0 S4 A32])
        (reg:SI 150)) "timer.c":198:20 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 150)
        (expr_list:REG_DEAD (reg/f:SI 118 [ _6 ])
            (nil))))
(insn 54 53 55 3 (set (reg/f:SI 151)
        (symbol_ref:SI ("tp") [flags 0x2]  <var_decl 0x7f5060612000 tp>)) "timer.c":200:7 253 {*arm_movsi_insn}
     (nil))
(insn 55 54 56 3 (set (reg:SI 152)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])) "timer.c":200:7 253 {*arm_movsi_insn}
     (nil))
(insn 56 55 57 3 (set (reg/f:SI 119 [ _7 ])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 152)
                    (const_int 4 [0x4]))
                (reg/f:SI 151)) [1 tp[i_12]+0 S4 A32])) "timer.c":200:7 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 152)
        (expr_list:REG_DEAD (reg/f:SI 151)
            (nil))))
(insn 57 56 58 3 (set (reg:SI 153)
        (const_int 61440 [0xf000])) "timer.c":200:22 253 {*arm_movsi_insn}
     (nil))
(insn 58 57 59 3 (set (mem/v:SI (plus:SI (reg/f:SI 119 [ _7 ])
                (const_int 24 [0x18])) [2 _7->BGLOAD+0 S4 A32])
        (reg:SI 153)) "timer.c":200:22 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 153)
        (expr_list:REG_DEAD (reg/f:SI 119 [ _7 ])
            (nil))))
(insn 59 58 60 3 (set (reg:SI 155)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])) "timer.c":190:19 253 {*arm_movsi_insn}
     (nil))
(insn 60 59 61 3 (set (reg:SI 154)
        (plus:SI (reg:SI 155)
            (const_int 1 [0x1]))) "timer.c":190:19 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 155)
        (nil)))
(insn 61 60 62 3 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])
        (reg:SI 154)) "timer.c":190:19 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 154)
        (nil)))
;;  succ:       4 (FALLTHRU,DFS_BACK)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 (FALLTHRU,DFS_BACK)
;;              2 [always] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 156
(code_label 62 61 63 4 24 (nil) [1 uses])
(note 63 62 67 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 67 63 68 4 (set (reg:SI 156)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])) "timer.c":190:14 253 {*arm_movsi_insn}
     (nil))
(insn 68 67 69 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 156)
            (const_int 3 [0x3]))) "timer.c":190:14 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 156)
        (nil)))
(jump_insn 69 68 70 4 (set (pc)
        (if_then_else (le (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 64)
            (pc))) "timer.c":190:14 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (nil))
 -> 64)
;;  succ:       3
;;              5 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 120 121 157 158 159 160 161 162 163 164 165
(note 70 69 71 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 5 (set (reg:SI 1 r1)
        (symbol_ref/f:SI ("*.LC6") [flags 0x2]  <var_decl 0x7f5060643870 *.LC6>)) "timer.c":203:3 253 {*arm_movsi_insn}
     (nil))
(insn 72 71 73 5 (set (reg:SI 0 r0)
        (symbol_ref:SI ("clock") [flags 0x2]  <var_decl 0x7f5060612360 clock>)) "timer.c":203:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 73 72 74 5 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcpy") [flags 0x41]  <function_decl 0x7f506060a800 strcpy>) [0 strcpy S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":203:3 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 74 73 75 5 (set (reg/f:SI 157)
        (symbol_ref:SI ("ss") [flags 0x40]  <var_decl 0x7f50606125a0 ss>)) "timer.c":204:16 253 {*arm_movsi_insn}
     (nil))
(insn 75 74 76 5 (set (reg:SI 158)
        (const_int 0 [0])) "timer.c":204:16 253 {*arm_movsi_insn}
     (nil))
(insn 76 75 77 5 (set (mem/c:SI (reg/f:SI 157) [2 ss+0 S4 A32])
        (reg:SI 158)) "timer.c":204:16 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 158)
        (expr_list:REG_DEAD (reg/f:SI 157)
            (nil))))
(insn 77 76 78 5 (set (reg/f:SI 159)
        (symbol_ref:SI ("ss") [flags 0x40]  <var_decl 0x7f50606125a0 ss>)) "timer.c":204:11 253 {*arm_movsi_insn}
     (nil))
(insn 78 77 79 5 (set (reg:SI 120 [ ss.24_8 ])
        (mem/c:SI (reg/f:SI 159) [2 ss+0 S4 A32])) "timer.c":204:11 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 159)
        (nil)))
(insn 79 78 80 5 (set (reg/f:SI 160)
        (symbol_ref:SI ("mm") [flags 0x40]  <var_decl 0x7f5060612510 mm>)) "timer.c":204:11 253 {*arm_movsi_insn}
     (nil))
(insn 80 79 81 5 (set (mem/c:SI (reg/f:SI 160) [2 mm+0 S4 A32])
        (reg:SI 120 [ ss.24_8 ])) "timer.c":204:11 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 160)
        (expr_list:REG_DEAD (reg:SI 120 [ ss.24_8 ])
            (nil))))
(insn 81 80 82 5 (set (reg/f:SI 161)
        (symbol_ref:SI ("mm") [flags 0x40]  <var_decl 0x7f5060612510 mm>)) "timer.c":204:6 253 {*arm_movsi_insn}
     (nil))
(insn 82 81 83 5 (set (reg:SI 121 [ mm.25_9 ])
        (mem/c:SI (reg/f:SI 161) [2 mm+0 S4 A32])) "timer.c":204:6 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 161)
        (nil)))
(insn 83 82 84 5 (set (reg/f:SI 162)
        (symbol_ref:SI ("hh") [flags 0x40]  <var_decl 0x7f5060612480 hh>)) "timer.c":204:6 253 {*arm_movsi_insn}
     (nil))
(insn 84 83 85 5 (set (mem/c:SI (reg/f:SI 162) [2 hh+0 S4 A32])
        (reg:SI 121 [ mm.25_9 ])) "timer.c":204:6 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 162)
        (expr_list:REG_DEAD (reg:SI 121 [ mm.25_9 ])
            (nil))))
(insn 85 84 86 5 (set (reg/f:SI 163)
        (symbol_ref:SI ("ft") [flags 0x2]  <var_decl 0x7f5060612870 ft>)) "timer.c":206:6 253 {*arm_movsi_insn}
     (nil))
(insn 86 85 87 5 (set (reg/f:SI 164)
        (symbol_ref:SI ("tnode") [flags 0x2]  <var_decl 0x7f5060612750 tnode>)) "timer.c":206:6 253 {*arm_movsi_insn}
     (nil))
(insn 87 86 88 5 (set (mem/f/c:SI (reg/f:SI 163) [5 ft+0 S4 A32])
        (reg/f:SI 164)) "timer.c":206:6 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 164)
        (expr_list:REG_DEAD (reg/f:SI 163)
            (nil))))
(insn 88 87 89 5 (set (reg:SI 165)
        (const_int 0 [0])) "timer.c":207:9 253 {*arm_movsi_insn}
     (nil))
(insn 89 88 133 5 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])
        (reg:SI 165)) "timer.c":207:9 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 165)
        (nil)))
(jump_insn 133 89 134 5 (set (pc)
        (label_ref 114)) "timer.c":207:3 284 {*arm_jump}
     (nil)
 -> 114)
;;  succ:       7 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

(barrier 134 133 116)
;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       7
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 122 123 166 167 168 169 170 171 172 173 174 175 176
(code_label 116 134 92 6 27 (nil) [1 uses])
(note 92 116 93 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 6 (set (reg:SI 166)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])) "timer.c":208:29 253 {*arm_movsi_insn}
     (nil))
(insn 94 93 95 6 (set (reg:SI 122 [ _10 ])
        (plus:SI (reg:SI 166)
            (const_int 1 [0x1]))) "timer.c":208:29 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 166)
        (nil)))
(insn 95 94 96 6 (set (reg:SI 167)
        (reg:SI 122 [ _10 ])) "timer.c":208:21 253 {*arm_movsi_insn}
     (nil))
(insn 96 95 97 6 (set (reg:SI 167)
        (ashift:SI (reg:SI 167)
            (const_int 1 [0x1]))) "timer.c":208:21 147 {*arm_shiftsi3}
     (nil))
(insn 97 96 98 6 (set (reg:SI 167)
        (plus:SI (reg:SI 167)
            (reg:SI 122 [ _10 ]))) "timer.c":208:21 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 122 [ _10 ])
        (expr_list:REG_EQUAL (mult:SI (reg:SI 122 [ _10 ])
                (const_int 3 [0x3]))
            (nil))))
(insn 98 97 99 6 (set (reg:SI 168)
        (ashift:SI (reg:SI 167)
            (const_int 2 [0x2]))) "timer.c":208:21 147 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 167)
        (nil)))
(insn 99 98 100 6 (set (reg:SI 167)
        (reg:SI 168)) "timer.c":208:21 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 168)
        (nil)))
(insn 100 99 101 6 (set (reg:SI 169)
        (symbol_ref:SI ("tnode") [flags 0x2]  <var_decl 0x7f5060612750 tnode>)) "timer.c":208:21 253 {*arm_movsi_insn}
     (nil))
(insn 101 100 102 6 (set (reg/f:SI 123 [ _11 ])
        (plus:SI (reg:SI 167)
            (reg:SI 169))) "timer.c":208:21 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 169)
        (expr_list:REG_DEAD (reg:SI 167)
            (nil))))
(insn 102 101 103 6 (set (reg/f:SI 170)
        (symbol_ref:SI ("tnode") [flags 0x2]  <var_decl 0x7f5060612750 tnode>)) "timer.c":208:19 253 {*arm_movsi_insn}
     (nil))
(insn 103 102 104 6 (set (reg:SI 171)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])) "timer.c":208:19 253 {*arm_movsi_insn}
     (nil))
(insn 104 103 105 6 (set (reg:SI 172)
        (reg:SI 171)) "timer.c":208:19 253 {*arm_movsi_insn}
     (nil))
(insn 105 104 106 6 (set (reg:SI 172)
        (ashift:SI (reg:SI 172)
            (const_int 1 [0x1]))) "timer.c":208:19 147 {*arm_shiftsi3}
     (nil))
(insn 106 105 107 6 (set (reg:SI 172)
        (plus:SI (reg:SI 172)
            (reg:SI 171))) "timer.c":208:19 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 171)
        (expr_list:REG_EQUAL (mult:SI (reg:SI 171)
                (const_int 3 [0x3]))
            (nil))))
(insn 107 106 108 6 (set (reg:SI 173)
        (ashift:SI (reg:SI 172)
            (const_int 2 [0x2]))) "timer.c":208:19 147 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 172)
        (nil)))
(insn 108 107 109 6 (set (reg:SI 172)
        (reg:SI 173)) "timer.c":208:19 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 173)
        (nil)))
(insn 109 108 110 6 (set (reg/f:SI 174)
        (plus:SI (reg/f:SI 170)
            (reg:SI 172))) "timer.c":208:19 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 172)
        (expr_list:REG_DEAD (reg/f:SI 170)
            (nil))))
(insn 110 109 111 6 (set (mem/f:SI (reg/f:SI 174) [5 tnode[i_13].next+0 S4 A32])
        (reg/f:SI 123 [ _11 ])) "timer.c":208:19 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 174)
        (expr_list:REG_DEAD (reg/f:SI 123 [ _11 ])
            (nil))))
(insn 111 110 112 6 (set (reg:SI 176)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])) "timer.c":207:23 253 {*arm_movsi_insn}
     (nil))
(insn 112 111 113 6 (set (reg:SI 175)
        (plus:SI (reg:SI 176)
            (const_int 1 [0x1]))) "timer.c":207:23 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 176)
        (nil)))
(insn 113 112 114 6 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])
        (reg:SI 175)) "timer.c":207:23 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 175)
        (nil)))
;;  succ:       7 (FALLTHRU,DFS_BACK)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 (FALLTHRU,DFS_BACK)
;;              5 [always] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 177
(code_label 114 113 115 7 26 (nil) [1 uses])
(note 115 114 119 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 119 115 120 7 (set (reg:SI 177)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])) "timer.c":207:14 253 {*arm_movsi_insn}
     (nil))
(insn 120 119 121 7 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 177)
            (const_int 63 [0x3f]))) "timer.c":207:14 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 177)
        (nil)))
(jump_insn 121 120 122 7 (set (pc)
        (if_then_else (le (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 116)
            (pc))) "timer.c":207:14 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (nil))
 -> 116)
;;  succ:       6
;;              8 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 178 179 180 181
(note 122 121 123 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 123 122 124 8 (set (reg/f:SI 178)
        (symbol_ref:SI ("tnode") [flags 0x2]  <var_decl 0x7f5060612750 tnode>)) "timer.c":209:22 253 {*arm_movsi_insn}
     (nil))
(insn 124 123 125 8 (set (reg:SI 179)
        (const_int 0 [0])) "timer.c":209:22 253 {*arm_movsi_insn}
     (nil))
(insn 125 124 126 8 (set (mem/f/c:SI (plus:SI (reg/f:SI 178)
                (const_int 756 [0x2f4])) [5 tnode[63].next+0 S4 A32])
        (reg:SI 179)) "timer.c":209:22 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 179)
        (expr_list:REG_DEAD (reg/f:SI 178)
            (nil))))
(insn 126 125 127 8 (set (reg/f:SI 180)
        (symbol_ref:SI ("tq") [flags 0x2]  <var_decl 0x7f50606127e0 tq>)) "timer.c":210:6 253 {*arm_movsi_insn}
     (nil))
(insn 127 126 128 8 (set (reg:SI 181)
        (const_int 0 [0])) "timer.c":210:6 253 {*arm_movsi_insn}
     (nil))
(insn 128 127 135 8 (set (mem/f/c:SI (reg/f:SI 180) [5 tq+0 S4 A32])
        (reg:SI 181)) "timer.c":210:6 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 181)
        (expr_list:REG_DEAD (reg/f:SI 180)
            (nil))))
;;  succ:       9 [always]  (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 1, flags: (RTL)
;;  pred:       8 [always]  (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 135 128 136 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 136 135 0 9 (const_int 0 [0]) "timer.c":213:1 311 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]


;; Function timer_start (timer_start, funcdef_no=2, decl_uid=4570, cgraph_uid=3, symbol_order=13)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 4 n_edges 3 count 4 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 7.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r119,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a1(r114,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a2(r113,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a3(r118,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a4(r117,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a5(r115,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a6(r116,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000

   Insn 20(l0): point = 0
   Insn 16(l0): point = 3
   Insn 15(l0): point = 5
   Insn 14(l0): point = 7
   Insn 13(l0): point = 9
   Insn 12(l0): point = 11
   Insn 11(l0): point = 13
   Insn 10(l0): point = 15
   Insn 9(l0): point = 17
   Insn 8(l0): point = 19
   Insn 7(l0): point = 21
   Insn 6(l0): point = 23
   Insn 2(l0): point = 25
 a0(r119): [4..5]
 a1(r114): [4..7]
 a2(r113): [8..9]
 a3(r118): [10..11]
 a4(r117): [14..15]
 a5(r115): [16..19]
 a6(r116): [16..17]
Compressing live ranges: from 28 to 10 - 35%
Ranges after the compression:
 a0(r119): [0..1]
 a1(r114): [0..1]
 a2(r113): [2..3]
 a3(r118): [4..5]
 a4(r117): [6..7]
 a5(r115): [8..9]
 a6(r116): [8..9]
  regions=1, blocks=4, points=10
    allocnos=7 (big 0), copies=0, conflicts=0, ranges=7
Disposition:
    2:r113 l0     3    1:r114 l0     2    5:r115 l0     2    6:r116 l0     3
    4:r117 l0     3    3:r118 l0     3    0:r119 l0     3
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


timer_start

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 102 [sfp] 103 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;;  ref usage 	r0={3d,2u} r1={2d} r2={2d} r3={2d} r11={1d,3u} r12={2d} r13={1d,4u} r14={2d} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d,8u} r103={1d,2u} r104={1d} r105={1d} r106={1d} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} 
;;    total ref usage 140{114d,26u,0e} in 13{12 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 113 114 115 116 117 118 119
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [2 n+0 S4 A32])
        (reg:SI 0 r0 [ n ])) "timer.c":216:1 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ n ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC7") [flags 0x2]  <var_decl 0x7f5060643900 *.LC7>)) "timer.c":218:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 7 6 8 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kprintf") [flags 0x41]  <function_decl 0x7f506060a700 kprintf>) [0 kprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":218:3 291 {*call_value_symbol}
     (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 8 7 9 2 (set (reg/f:SI 115)
        (symbol_ref:SI ("tp") [flags 0x2]  <var_decl 0x7f5060612000 tp>)) "timer.c":219:7 253 {*arm_movsi_insn}
     (nil))
(insn 9 8 10 2 (set (reg:SI 116)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [2 n+0 S4 A32])) "timer.c":219:7 253 {*arm_movsi_insn}
     (nil))
(insn 10 9 11 2 (set (reg/f:SI 117)
        (mem/f:SI (plus:SI (mult:SI (reg:SI 116)
                    (const_int 4 [0x4]))
                (reg/f:SI 115)) [1 tp[n_5(D)]+0 S4 A32])) "timer.c":219:7 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 116)
        (expr_list:REG_DEAD (reg/f:SI 115)
            (nil))))
(insn 11 10 12 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 tpr+0 S4 A32])
        (reg/f:SI 117)) "timer.c":219:7 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 117)
        (nil)))
(insn 12 11 13 2 (set (reg/f:SI 118)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 tpr+0 S4 A32])) "timer.c":220:16 253 {*arm_movsi_insn}
     (nil))
(insn 13 12 14 2 (set (reg:SI 113 [ _1 ])
        (mem/v:SI (plus:SI (reg/f:SI 118)
                (const_int 8 [0x8])) [2 tpr_6->CONTROL+0 S4 A32])) "timer.c":220:16 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 118)
        (nil)))
(insn 14 13 15 2 (set (reg:SI 114 [ _2 ])
        (ior:SI (reg:SI 113 [ _1 ])
            (const_int 128 [0x80]))) "timer.c":220:16 106 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg:SI 113 [ _1 ])
        (nil)))
(insn 15 14 16 2 (set (reg/f:SI 119)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 tpr+0 S4 A32])) "timer.c":220:16 253 {*arm_movsi_insn}
     (nil))
(insn 16 15 19 2 (set (mem/v:SI (plus:SI (reg/f:SI 119)
                (const_int 8 [0x8])) [2 tpr_6->CONTROL+0 S4 A32])
        (reg:SI 114 [ _2 ])) "timer.c":220:16 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 119)
        (expr_list:REG_DEAD (reg:SI 114 [ _2 ])
            (nil))))
;;  succ:       3 [always]  (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 1, flags: (RTL)
;;  pred:       2 [always]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 19 16 20 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 0 3 (const_int 0 [0]) "timer.c":221:1 311 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]


;; Function timer_clearInterrupt (timer_clearInterrupt, funcdef_no=3, decl_uid=4540, cgraph_uid=4, symbol_order=14)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r113,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:10000
  a1(r117,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a2(r118,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a3(r116,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a4(r114,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a5(r115,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000

   Insn 17(l0): point = 0
   Insn 14(l0): point = 2
   Insn 19(l0): point = 4
   Insn 16(l0): point = 6
   Insn 15(l0): point = 8
   Insn 12(l0): point = 10
   Insn 11(l0): point = 12
   Insn 10(l0): point = 14
   Insn 9(l0): point = 16
   Insn 8(l0): point = 18
   Insn 7(l0): point = 20
   Insn 6(l0): point = 22
   Insn 2(l0): point = 24
 a0(r113): [3..6]
 a1(r117): [11..14]
 a2(r118): [11..12]
 a3(r116): [17..18]
 a4(r114): [19..22]
 a5(r115): [19..20]
Compressing live ranges: from 27 to 8 - 29%
Ranges after the compression:
 a0(r113): [0..1]
 a1(r117): [2..3]
 a2(r118): [2..3]
 a3(r116): [4..5]
 a4(r114): [6..7]
 a5(r115): [6..7]
  regions=1, blocks=3, points=8
    allocnos=6 (big 0), copies=0, conflicts=0, ranges=6
Disposition:
    0:r113 l0     3    4:r114 l0     2    5:r115 l0     3    3:r116 l0     3
    1:r117 l0     3    2:r118 l0     2
+++Costs: overall 2000, reg 2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


timer_clearInterrupt

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 102 [sfp] 103 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 11 [fp]
;;  ref usage 	r0={3d,3u} r1={1d} r2={1d} r3={1d} r11={1d,2u} r13={1d,2u} r14={1d} r102={1d,6u} r103={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} 
;;    total ref usage 37{17d,20u,0e} in 13{13 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 113 114 115 116 117 118
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [2 n+0 S4 A32])
        (reg:SI 0 r0 [ n ])) "timer.c":223:1 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ n ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:SI 114)
        (symbol_ref:SI ("tp") [flags 0x2]  <var_decl 0x7f5060612000 tp>)) "timer.c":225:10 253 {*arm_movsi_insn}
     (nil))
(insn 7 6 8 2 (set (reg:SI 115)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [2 n+0 S4 A32])) "timer.c":225:10 253 {*arm_movsi_insn}
     (nil))
(insn 8 7 9 2 (set (reg/f:SI 116)
        (mem/f:SI (plus:SI (mult:SI (reg:SI 115)
                    (const_int 4 [0x4]))
                (reg/f:SI 114)) [1 tp[n_2(D)]+0 S4 A32])) "timer.c":225:10 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 115)
        (expr_list:REG_DEAD (reg/f:SI 114)
            (nil))))
(insn 9 8 10 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 tpr+0 S4 A32])
        (reg/f:SI 116)) "timer.c":225:10 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 116)
        (nil)))
(insn 10 9 11 2 (set (reg/f:SI 117)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 tpr+0 S4 A32])) "timer.c":226:15 253 {*arm_movsi_insn}
     (nil))
(insn 11 10 12 2 (set (reg:SI 118)
        (const_int -1 [0xffffffffffffffff])) "timer.c":226:15 253 {*arm_movsi_insn}
     (nil))
(insn 12 11 15 2 (set (mem/v:SI (plus:SI (reg/f:SI 117)
                (const_int 12 [0xc])) [2 tpr_3->INTCLR+0 S4 A32])
        (reg:SI 118)) "timer.c":226:15 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 118)
        (expr_list:REG_DEAD (reg/f:SI 117)
            (nil))))
(insn 15 12 16 2 (clobber (reg/i:SI 0 r0)) "timer.c":227:1 -1
     (expr_list:REG_UNUSED (reg/i:SI 0 r0)
        (nil)))
(insn 16 15 19 2 (clobber (reg:SI 113 [ <retval> ])) "timer.c":227:1 -1
     (nil))
(insn 19 16 14 2 (const_int 0 [0]) "timer.c":227:1 311 {nop}
     (nil))
(insn 14 19 17 2 (set (reg/i:SI 0 r0)
        (reg:SI 113 [ <retval> ])) "timer.c":227:1 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 113 [ <retval> ])
        (nil)))
(insn 17 14 0 2 (use (reg/i:SI 0 r0)) "timer.c":227:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp] 103 [afp]


;; Function timer_stop (timer_stop, funcdef_no=4, decl_uid=4578, cgraph_uid=5, symbol_order=15)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 4 n_edges 3 count 4 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r119,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a1(r114,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a2(r113,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a3(r118,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a4(r117,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a5(r115,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a6(r116,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000

   Insn 18(l0): point = 0
   Insn 14(l0): point = 3
   Insn 13(l0): point = 5
   Insn 12(l0): point = 7
   Insn 11(l0): point = 9
   Insn 10(l0): point = 11
   Insn 9(l0): point = 13
   Insn 8(l0): point = 15
   Insn 7(l0): point = 17
   Insn 6(l0): point = 19
   Insn 2(l0): point = 21
 a0(r119): [4..5]
 a1(r114): [4..7]
 a2(r113): [8..9]
 a3(r118): [10..11]
 a4(r117): [14..15]
 a5(r115): [16..19]
 a6(r116): [16..17]
Compressing live ranges: from 24 to 10 - 41%
Ranges after the compression:
 a0(r119): [0..1]
 a1(r114): [0..1]
 a2(r113): [2..3]
 a3(r118): [4..5]
 a4(r117): [6..7]
 a5(r115): [8..9]
 a6(r116): [8..9]
  regions=1, blocks=4, points=10
    allocnos=7 (big 0), copies=0, conflicts=0, ranges=7
Disposition:
    2:r113 l0     3    1:r114 l0     2    5:r115 l0     2    6:r116 l0     3
    4:r117 l0     3    3:r118 l0     3    0:r119 l0     3
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


timer_stop

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 102 [sfp] 103 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 11 [fp]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r11={1d,3u} r13={1d,3u} r14={1d} r102={1d,8u} r103={1d,2u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} 
;;    total ref usage 40{16d,24u,0e} in 11{11 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 113 114 115 116 117 118 119
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [2 n+0 S4 A32])
        (reg:SI 0 r0 [ n ])) "timer.c":230:1 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ n ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:SI 115)
        (symbol_ref:SI ("tp") [flags 0x2]  <var_decl 0x7f5060612000 tp>)) "timer.c":231:10 253 {*arm_movsi_insn}
     (nil))
(insn 7 6 8 2 (set (reg:SI 116)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [2 n+0 S4 A32])) "timer.c":231:10 253 {*arm_movsi_insn}
     (nil))
(insn 8 7 9 2 (set (reg/f:SI 117)
        (mem/f:SI (plus:SI (mult:SI (reg:SI 116)
                    (const_int 4 [0x4]))
                (reg/f:SI 115)) [1 tp[n_4(D)]+0 S4 A32])) "timer.c":231:10 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 116)
        (expr_list:REG_DEAD (reg/f:SI 115)
            (nil))))
(insn 9 8 10 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 tptr+0 S4 A32])
        (reg/f:SI 117)) "timer.c":231:10 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 117)
        (nil)))
(insn 10 9 11 2 (set (reg/f:SI 118)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 tptr+0 S4 A32])) "timer.c":232:17 253 {*arm_movsi_insn}
     (nil))
(insn 11 10 12 2 (set (reg:SI 113 [ _1 ])
        (mem/v:SI (plus:SI (reg/f:SI 118)
                (const_int 8 [0x8])) [2 tptr_5->CONTROL+0 S4 A32])) "timer.c":232:17 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 118)
        (nil)))
(insn 12 11 13 2 (set (reg:SI 114 [ _2 ])
        (and:SI (reg:SI 113 [ _1 ])
            (const_int 127 [0x7f]))) "timer.c":232:17 90 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 113 [ _1 ])
        (nil)))
(insn 13 12 14 2 (set (reg/f:SI 119)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 tptr+0 S4 A32])) "timer.c":232:17 253 {*arm_movsi_insn}
     (nil))
(insn 14 13 17 2 (set (mem/v:SI (plus:SI (reg/f:SI 119)
                (const_int 8 [0x8])) [2 tptr_5->CONTROL+0 S4 A32])
        (reg:SI 114 [ _2 ])) "timer.c":232:17 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 119)
        (expr_list:REG_DEAD (reg:SI 114 [ _2 ])
            (nil))))
;;  succ:       3 [always]  (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 1, flags: (RTL)
;;  pred:       2 [always]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 17 14 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 0 3 (const_int 0 [0]) "timer.c":233:1 311 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]


;; Function get_tnode (get_tnode, funcdef_no=5, decl_uid=4581, cgraph_uid=6, symbol_order=16)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r116,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:11000
  a1(r115,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:11000
  a2(r120,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a3(r114,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a4(r113,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a5(r119,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a6(r118,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a7(r117,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000

   Insn 21(l0): point = 0
   Insn 20(l0): point = 2
   Insn 16(l0): point = 4
   Insn 13(l0): point = 6
   Insn 12(l0): point = 8
   Insn 11(l0): point = 10
   Insn 10(l0): point = 12
   Insn 9(l0): point = 14
   Insn 8(l0): point = 16
   Insn 7(l0): point = 18
   Insn 6(l0): point = 20
   Insn 5(l0): point = 22
 a0(r116): [3..4]
 a1(r115): [5..6]
 a2(r120): [9..10]
 a3(r114): [9..12]
 a4(r113): [13..14]
 a5(r119): [15..16]
 a6(r118): [19..20]
 a7(r117): [21..22]
Compressing live ranges: from 25 to 14 - 56%
Ranges after the compression:
 a0(r116): [0..1]
 a1(r115): [2..3]
 a2(r120): [4..5]
 a3(r114): [4..5]
 a4(r113): [6..7]
 a5(r119): [8..9]
 a6(r118): [10..11]
 a7(r117): [12..13]
  regions=1, blocks=3, points=14
    allocnos=8 (big 0), copies=0, conflicts=0, ranges=8
Disposition:
    4:r113 l0     3    3:r114 l0     3    1:r115 l0     3    0:r116 l0     3
    7:r117 l0     3    6:r118 l0     3    5:r119 l0     3    2:r120 l0     2
+++Costs: overall 2000, reg 2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


get_tnode

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 102 [sfp] 103 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 11 [fp]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r11={1d,2u} r13={1d,2u} r14={1d} r102={1d,4u} r103={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} 
;;    total ref usage 37{18d,19u,0e} in 12{12 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 113 114 115 116 117 118 119 120
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 117)
        (symbol_ref:SI ("ft") [flags 0x2]  <var_decl 0x7f5060612870 ft>)) "timer.c":237:8 253 {*arm_movsi_insn}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 118)
        (mem/f/c:SI (reg/f:SI 117) [5 ft+0 S4 A32])) "timer.c":237:8 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 117)
        (nil)))
(insn 7 6 8 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 tp+0 S4 A32])
        (reg/f:SI 118)) "timer.c":237:8 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 118)
        (nil)))
(insn 8 7 9 2 (set (reg/f:SI 119)
        (symbol_ref:SI ("ft") [flags 0x2]  <var_decl 0x7f5060612870 ft>)) "timer.c":238:12 253 {*arm_movsi_insn}
     (nil))
(insn 9 8 10 2 (set (reg/f:SI 113 [ ft.26_1 ])
        (mem/f/c:SI (reg/f:SI 119) [5 ft+0 S4 A32])) "timer.c":238:12 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 119)
        (nil)))
(insn 10 9 11 2 (set (reg/f:SI 114 [ _2 ])
        (mem/f:SI (reg/f:SI 113 [ ft.26_1 ]) [5 ft.26_1->next+0 S4 A32])) "timer.c":238:12 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 113 [ ft.26_1 ])
        (nil)))
(insn 11 10 12 2 (set (reg/f:SI 120)
        (symbol_ref:SI ("ft") [flags 0x2]  <var_decl 0x7f5060612870 ft>)) "timer.c":238:8 253 {*arm_movsi_insn}
     (nil))
(insn 12 11 13 2 (set (mem/f/c:SI (reg/f:SI 120) [5 ft+0 S4 A32])
        (reg/f:SI 114 [ _2 ])) "timer.c":238:8 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 120)
        (expr_list:REG_DEAD (reg/f:SI 114 [ _2 ])
            (nil))))
(insn 13 12 16 2 (set (reg/f:SI 115 [ _6 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 tp+0 S4 A32])) "timer.c":239:12 253 {*arm_movsi_insn}
     (nil))
(insn 16 13 20 2 (set (reg/f:SI 116 [ <retval> ])
        (reg/f:SI 115 [ _6 ])) "timer.c":239:12 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 115 [ _6 ])
        (nil)))
(insn 20 16 21 2 (set (reg/i:SI 0 r0)
        (reg/f:SI 116 [ <retval> ])) "timer.c":240:1 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 116 [ <retval> ])
        (nil)))
(insn 21 20 0 2 (use (reg/i:SI 0 r0)) "timer.c":240:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp] 103 [afp]


;; Function put_tnode (put_tnode, funcdef_no=6, decl_uid=4536, cgraph_uid=7, symbol_order=17)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r114,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:10000
  a1(r117,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a2(r118,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a3(r116,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a4(r113,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a5(r115,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000

   Insn 17(l0): point = 0
   Insn 14(l0): point = 2
   Insn 19(l0): point = 4
   Insn 16(l0): point = 6
   Insn 15(l0): point = 8
   Insn 12(l0): point = 10
   Insn 11(l0): point = 12
   Insn 10(l0): point = 14
   Insn 9(l0): point = 16
   Insn 8(l0): point = 18
   Insn 7(l0): point = 20
   Insn 6(l0): point = 22
   Insn 2(l0): point = 24
 a0(r114): [3..6]
 a1(r117): [11..14]
 a2(r118): [11..12]
 a3(r116): [17..18]
 a4(r113): [17..20]
 a5(r115): [21..22]
Compressing live ranges: from 27 to 8 - 29%
Ranges after the compression:
 a0(r114): [0..1]
 a1(r117): [2..3]
 a2(r118): [2..3]
 a3(r116): [4..5]
 a4(r113): [4..5]
 a5(r115): [6..7]
  regions=1, blocks=3, points=8
    allocnos=6 (big 0), copies=0, conflicts=0, ranges=6
Disposition:
    4:r113 l0     2    0:r114 l0     3    5:r115 l0     3    3:r116 l0     3
    1:r117 l0     2    2:r118 l0     3
+++Costs: overall 2000, reg 2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


put_tnode

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 102 [sfp] 103 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 11 [fp]
;;  ref usage 	r0={3d,3u} r1={1d} r2={1d} r3={1d} r11={1d,2u} r13={1d,2u} r14={1d} r102={1d,5u} r103={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} 
;;    total ref usage 36{17d,19u,0e} in 13{13 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 113 114 115 116 117 118
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 tp+0 S4 A32])
        (reg:SI 0 r0 [ tp ])) "timer.c":243:1 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ tp ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:SI 115)
        (symbol_ref:SI ("ft") [flags 0x2]  <var_decl 0x7f5060612870 ft>)) "timer.c":244:14 253 {*arm_movsi_insn}
     (nil))
(insn 7 6 8 2 (set (reg/f:SI 113 [ ft.27_1 ])
        (mem/f/c:SI (reg/f:SI 115) [5 ft+0 S4 A32])) "timer.c":244:14 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 115)
        (nil)))
(insn 8 7 9 2 (set (reg/f:SI 116)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 tp+0 S4 A32])) "timer.c":244:14 253 {*arm_movsi_insn}
     (nil))
(insn 9 8 10 2 (set (mem/f:SI (reg/f:SI 116) [5 tp_3(D)->next+0 S4 A32])
        (reg/f:SI 113 [ ft.27_1 ])) "timer.c":244:14 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 116)
        (expr_list:REG_DEAD (reg/f:SI 113 [ ft.27_1 ])
            (nil))))
(insn 10 9 11 2 (set (reg/f:SI 117)
        (symbol_ref:SI ("ft") [flags 0x2]  <var_decl 0x7f5060612870 ft>)) "timer.c":245:8 253 {*arm_movsi_insn}
     (nil))
(insn 11 10 12 2 (set (reg/f:SI 118)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 tp+0 S4 A32])) "timer.c":245:8 253 {*arm_movsi_insn}
     (nil))
(insn 12 11 15 2 (set (mem/f/c:SI (reg/f:SI 117) [5 ft+0 S4 A32])
        (reg/f:SI 118)) "timer.c":245:8 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 118)
        (expr_list:REG_DEAD (reg/f:SI 117)
            (nil))))
(insn 15 12 16 2 (clobber (reg/i:SI 0 r0)) "timer.c":246:1 -1
     (expr_list:REG_UNUSED (reg/i:SI 0 r0)
        (nil)))
(insn 16 15 19 2 (clobber (reg:SI 114 [ <retval> ])) "timer.c":246:1 -1
     (nil))
(insn 19 16 14 2 (const_int 0 [0]) "timer.c":246:1 311 {nop}
     (nil))
(insn 14 19 17 2 (set (reg/i:SI 0 r0)
        (reg:SI 114 [ <retval> ])) "timer.c":246:1 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 114 [ <retval> ])
        (nil)))
(insn 17 14 0 2 (use (reg/i:SI 0 r0)) "timer.c":246:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp] 103 [afp]


;; Function printTQ (printTQ, funcdef_no=7, decl_uid=4535, cgraph_uid=8, symbol_order=18)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 6 n_edges 6 count 6 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 9.
verify found no changes in insn with uid = 21.
verify found no changes in insn with uid = 33.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r116,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:10000
  a1(r123,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a2(r122,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a3(r121,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a4(r114,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:20000
  a5(r115,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:20000
  a6(r120,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a7(r113,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a8(r119,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a9(r118,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a10(r117,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000

   Insn 38(l0): point = 0
   Insn 35(l0): point = 2
   Insn 40(l0): point = 4
   Insn 37(l0): point = 6
   Insn 36(l0): point = 8
   Insn 33(l0): point = 10
   Insn 32(l0): point = 12
   Insn 24(l0): point = 15
   Insn 23(l0): point = 17
   Insn 22(l0): point = 19
   Insn 21(l0): point = 21
   Insn 20(l0): point = 23
   Insn 19(l0): point = 25
   Insn 18(l0): point = 27
   Insn 17(l0): point = 29
   Insn 16(l0): point = 31
   Insn 15(l0): point = 33
   Insn 14(l0): point = 35
   Insn 13(l0): point = 37
   Insn 30(l0): point = 40
   Insn 29(l0): point = 42
   Insn 28(l0): point = 44
   Insn 41(l0): point = 47
   Insn 9(l0): point = 49
   Insn 8(l0): point = 51
   Insn 7(l0): point = 53
   Insn 6(l0): point = 55
   Insn 5(l0): point = 57
 a0(r116): [3..6]
 a1(r123): [43..44]
 a2(r122): [16..17]
 a3(r121): [18..19]
 a4(r114): [26..33]
 a5(r115): [28..29]
 a6(r120): [30..31]
 a7(r113): [34..35]
 a8(r119): [36..37]
 a9(r118): [54..55]
 a10(r117): [56..57]
Compressing live ranges: from 60 to 20 - 33%
Ranges after the compression:
 a0(r116): [0..1]
 a1(r123): [14..15]
 a2(r122): [2..3]
 a3(r121): [4..5]
 a4(r114): [6..9]
 a5(r115): [6..7]
 a6(r120): [8..9]
 a7(r113): [10..11]
 a8(r119): [12..13]
 a9(r118): [16..17]
 a10(r117): [18..19]
  regions=1, blocks=6, points=20
    allocnos=11 (big 0), copies=0, conflicts=0, ranges=11
Disposition:
    7:r113 l0     3    4:r114 l0     1    5:r115 l0     3    0:r116 l0     3
   10:r117 l0     3    9:r118 l0     3    8:r119 l0     3    6:r120 l0     3
    3:r121 l0     3    2:r122 l0     3    1:r123 l0     3
+++Costs: overall 6000, reg 6000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


printTQ

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 102 [sfp] 103 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={9d,5u} r1={5d,1u} r2={5d,1u} r3={4d} r11={1d,5u} r12={6d} r13={1d,8u} r14={4d} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={4d,1u} r101={3d} r102={1d,11u} r103={1d,4u} r104={3d} r105={3d} r106={3d} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} 
;;    total ref usage 366{319d,47u,0e} in 28{25 regular + 3 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 117 118
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 117)
        (symbol_ref:SI ("tq") [flags 0x2]  <var_decl 0x7f50606127e0 tq>)) "timer.c":251:7 253 {*arm_movsi_insn}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 118)
        (mem/f/c:SI (reg/f:SI 117) [5 tq+0 S4 A32])) "timer.c":251:7 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 117)
        (nil)))
(insn 7 6 8 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 tp+0 S4 A32])
        (reg/f:SI 118)) "timer.c":251:7 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 118)
        (nil)))
(insn 8 7 9 2 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC8") [flags 0x2]  <var_decl 0x7f5060643990 *.LC8>)) "timer.c":253:4 253 {*arm_movsi_insn}
     (nil))
(call_insn 9 8 41 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kprintf") [flags 0x41]  <function_decl 0x7f506060a700 kprintf>) [0 kprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":253:4 291 {*call_value_symbol}
     (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(jump_insn 41 9 42 2 (set (pc)
        (label_ref 25)) "timer.c":255:9 284 {*arm_jump}
     (nil)
 -> 25)
;;  succ:       4 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

(barrier 42 41 27)
;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       4
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 113 114 115 119 120 121 122
(code_label 27 42 12 3 48 (nil) [1 uses])
(note 12 27 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (set (reg/f:SI 119)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 tp+0 S4 A32])) "timer.c":256:34 253 {*arm_movsi_insn}
     (nil))
(insn 14 13 15 3 (set (reg/f:SI 113 [ _1 ])
        (mem/f:SI (plus:SI (reg/f:SI 119)
                (const_int 8 [0x8])) [6 tp_4->who+0 S4 A32])) "timer.c":256:34 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 119)
        (nil)))
(insn 15 14 16 3 (set (reg:SI 114 [ _2 ])
        (mem:SI (plus:SI (reg/f:SI 113 [ _1 ])
                (const_int 24 [0x18])) [2 _1->pid+0 S4 A32])) "timer.c":256:7 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 113 [ _1 ])
        (nil)))
(insn 16 15 17 3 (set (reg/f:SI 120)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 tp+0 S4 A32])) "timer.c":256:7 253 {*arm_movsi_insn}
     (nil))
(insn 17 16 18 3 (set (reg:SI 115 [ _3 ])
        (mem:SI (plus:SI (reg/f:SI 120)
                (const_int 4 [0x4])) [2 tp_4->time+0 S4 A32])) "timer.c":256:7 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 120)
        (nil)))
(insn 18 17 19 3 (set (reg:SI 2 r2)
        (reg:SI 115 [ _3 ])) "timer.c":256:7 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 115 [ _3 ])
        (nil)))
(insn 19 18 20 3 (set (reg:SI 1 r1)
        (reg:SI 114 [ _2 ])) "timer.c":256:7 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 114 [ _2 ])
        (nil)))
(insn 20 19 21 3 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC9") [flags 0x2]  <var_decl 0x7f5060643a20 *.LC9>)) "timer.c":256:7 253 {*arm_movsi_insn}
     (nil))
(call_insn 21 20 22 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kprintf") [flags 0x41]  <function_decl 0x7f506060a700 kprintf>) [0 kprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":256:7 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 22 21 23 3 (set (reg/f:SI 121)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 tp+0 S4 A32])) "timer.c":257:10 253 {*arm_movsi_insn}
     (nil))
(insn 23 22 24 3 (set (reg/f:SI 122)
        (mem/f:SI (reg/f:SI 121) [5 tp_4->next+0 S4 A32])) "timer.c":257:10 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 121)
        (nil)))
(insn 24 23 25 3 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 tp+0 S4 A32])
        (reg/f:SI 122)) "timer.c":257:10 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 122)
        (nil)))
;;  succ:       4 (FALLTHRU,DFS_BACK)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 (FALLTHRU,DFS_BACK)
;;              2 [always] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 123
(code_label 25 24 26 4 47 (nil) [1 uses])
(note 26 25 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 28 26 29 4 (set (reg:SI 123)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 tp+0 S4 A32])) "timer.c":255:10 253 {*arm_movsi_insn}
     (nil))
(insn 29 28 30 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 123)
            (const_int 0 [0]))) "timer.c":255:10 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 123)
        (nil)))
(jump_insn 30 29 31 4 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) "timer.c":255:10 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (nil))
 -> 27)
;;  succ:       3
;;              5 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 1, flags: (RTL)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 116
(note 31 30 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 5 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC10") [flags 0x2]  <var_decl 0x7f5060643ab0 *.LC10>)) "timer.c":259:4 253 {*arm_movsi_insn}
     (nil))
(call_insn 33 32 36 5 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kprintf") [flags 0x41]  <function_decl 0x7f506060a700 kprintf>) [0 kprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":259:4 291 {*call_value_symbol}
     (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 36 33 37 5 (clobber (reg/i:SI 0 r0)) "timer.c":260:1 -1
     (expr_list:REG_UNUSED (reg/i:SI 0 r0)
        (nil)))
(insn 37 36 40 5 (clobber (reg:SI 116 [ <retval> ])) "timer.c":260:1 -1
     (nil))
(insn 40 37 35 5 (const_int 0 [0]) "timer.c":260:1 311 {nop}
     (nil))
(insn 35 40 38 5 (set (reg/i:SI 0 r0)
        (reg:SI 116 [ <retval> ])) "timer.c":260:1 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 116 [ <retval> ])
        (nil)))
(insn 38 35 0 5 (use (reg/i:SI 0 r0)) "timer.c":260:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp] 103 [afp]


;; Function kitimer (kitimer, funcdef_no=8, decl_uid=4594, cgraph_uid=9, symbol_order=19)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 16 n_edges 20 count 16 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 14 15 8 9 10 11 12 13
;;
;; Loop 1
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6 5
;; 2 succs { 3 4 }
;; 3 succs { 13 }
;; 4 succs { 7 }
;; 5 succs { 15 6 }
;; 6 succs { 7 }
;; 7 succs { 5 14 }
;; 14 succs { 8 }
;; 15 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 12 }
;; 11 succs { 13 }
;; 12 succs { 13 }
;; 13 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 6.
verify found no changes in insn with uid = 8.
verify found no changes in insn with uid = 112.
verify found no changes in insn with uid = 113.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r159: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r159,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r154,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r153,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r122,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:10000
  a1(r158,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a2(r159,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a3(r156,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a4(r157,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a5(r154,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a6(r155,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a7(r153,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a8(r121,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a9(r152,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a10(r120,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a11(r151,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a12(r150,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a13(r148,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a14(r149,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a15(r147,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a16(r119,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a17(r146,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a18(r118,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a19(r145,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a20(r144,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a21(r143,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a22(r142,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a23(r141,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a24(r140,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a25(r138,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a26(r117,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a27(r139,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a28(r137,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a29(r116,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a30(r115,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a31(r136,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a32(r135,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a33(r134,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a34(r133,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a35(r132,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a36(r130,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a37(r131,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a38(r128,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a39(r129,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a40(r114,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a41(r127,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a42(r126,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a43(r113,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a44(r125,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:15000
  a45(r123,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a46(r124,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000

   Insn 118(l0): point = 0
   Insn 115(l0): point = 2
   Insn 120(l0): point = 4
   Insn 117(l0): point = 6
   Insn 116(l0): point = 8
   Insn 113(l0): point = 10
   Insn 112(l0): point = 12
   Insn 111(l0): point = 14
   Insn 108(l0): point = 17
   Insn 107(l0): point = 19
   Insn 106(l0): point = 21
   Insn 105(l0): point = 23
   Insn 104(l0): point = 25
   Insn 103(l0): point = 27
   Insn 125(l0): point = 30
   Insn 98(l0): point = 32
   Insn 97(l0): point = 34
   Insn 96(l0): point = 36
   Insn 95(l0): point = 38
   Insn 94(l0): point = 40
   Insn 93(l0): point = 42
   Insn 92(l0): point = 44
   Insn 90(l0): point = 47
   Insn 89(l0): point = 49
   Insn 88(l0): point = 51
   Insn 87(l0): point = 53
   Insn 86(l0): point = 55
   Insn 85(l0): point = 57
   Insn 84(l0): point = 59
   Insn 83(l0): point = 61
   Insn 80(l0): point = 64
   Insn 79(l0): point = 66
   Insn 78(l0): point = 68
   Insn 77(l0): point = 70
   Insn 76(l0): point = 72
   Insn 75(l0): point = 74
   Insn 73(l0): point = 77
   Insn 72(l0): point = 79
   Insn 71(l0): point = 81
   Insn 132(l0): point = 84
   Insn 128(l0): point = 87
   Insn 47(l0): point = 90
   Insn 46(l0): point = 92
   Insn 43(l0): point = 94
   Insn 42(l0): point = 96
   Insn 41(l0): point = 98
   Insn 40(l0): point = 100
   Insn 68(l0): point = 103
   Insn 67(l0): point = 105
   Insn 66(l0): point = 107
   Insn 62(l0): point = 110
   Insn 61(l0): point = 112
   Insn 60(l0): point = 114
   Insn 59(l0): point = 116
   Insn 58(l0): point = 118
   Insn 57(l0): point = 120
   Insn 56(l0): point = 122
   Insn 55(l0): point = 124
   Insn 54(l0): point = 126
   Insn 53(l0): point = 128
   Insn 123(l0): point = 131
   Insn 36(l0): point = 133
   Insn 35(l0): point = 135
   Insn 34(l0): point = 137
   Insn 33(l0): point = 139
   Insn 32(l0): point = 141
   Insn 121(l0): point = 144
   Insn 27(l0): point = 146
   Insn 26(l0): point = 148
   Insn 25(l0): point = 150
   Insn 24(l0): point = 152
   Insn 23(l0): point = 154
   Insn 22(l0): point = 156
   Insn 20(l0): point = 159
   Insn 19(l0): point = 161
   Insn 18(l0): point = 163
   Insn 17(l0): point = 165
   Insn 16(l0): point = 167
   Insn 15(l0): point = 169
   Insn 14(l0): point = 171
   Insn 13(l0): point = 173
   Insn 12(l0): point = 175
   Insn 11(l0): point = 177
   Insn 10(l0): point = 179
   Insn 9(l0): point = 181
   Insn 8(l0): point = 183
   Insn 7(l0): point = 185
   Insn 6(l0): point = 187
   Insn 2(l0): point = 189
 a0(r122): [3..6]
 a1(r158): [18..21]
 a2(r159): [18..19]
 a3(r156): [24..27]
 a4(r157): [24..25]
 a5(r154): [33..36]
 a6(r155): [33..34]
 a7(r153): [39..40]
 a8(r121): [39..42]
 a9(r152): [43..44]
 a10(r120): [50..53]
 a11(r151): [50..51]
 a12(r150): [54..55]
 a13(r148): [58..61]
 a14(r149): [58..59]
 a15(r147): [65..66]
 a16(r119): [65..68]
 a17(r146): [69..70]
 a18(r118): [69..72]
 a19(r145): [73..74]
 a20(r144): [80..81]
 a21(r143): [106..107]
 a22(r142): [111..112]
 a23(r141): [113..114]
 a24(r140): [117..118]
 a25(r138): [121..122]
 a26(r117): [123..126]
 a27(r139): [123..124]
 a28(r137): [127..128]
 a29(r116): [93..94]
 a30(r115): [95..98]
 a31(r136): [95..96]
 a32(r135): [99..100]
 a33(r134): [134..135]
 a34(r133): [138..139]
 a35(r132): [140..141]
 a36(r130): [147..150]
 a37(r131): [147..148]
 a38(r128): [153..156]
 a39(r129): [153..154]
 a40(r114): [162..163]
 a41(r127): [164..165]
 a42(r126): [168..169]
 a43(r113): [168..171]
 a44(r125): [172..173]
 a45(r123): [176..179]
 a46(r124): [176..177]
Compressing live ranges: from 192 to 66 - 34%
Ranges after the compression:
 a0(r122): [0..1]
 a1(r158): [2..3]
 a2(r159): [2..3]
 a3(r156): [4..5]
 a4(r157): [4..5]
 a5(r154): [6..7]
 a6(r155): [6..7]
 a7(r153): [8..9]
 a8(r121): [8..9]
 a9(r152): [10..11]
 a10(r120): [12..13]
 a11(r151): [12..13]
 a12(r150): [14..15]
 a13(r148): [16..17]
 a14(r149): [16..17]
 a15(r147): [18..19]
 a16(r119): [18..19]
 a17(r146): [20..21]
 a18(r118): [20..21]
 a19(r145): [22..23]
 a20(r144): [24..25]
 a21(r143): [32..33]
 a22(r142): [34..35]
 a23(r141): [36..37]
 a24(r140): [38..39]
 a25(r138): [40..41]
 a26(r117): [42..43]
 a27(r139): [42..43]
 a28(r137): [44..45]
 a29(r116): [26..27]
 a30(r115): [28..29]
 a31(r136): [28..29]
 a32(r135): [30..31]
 a33(r134): [46..47]
 a34(r133): [48..49]
 a35(r132): [50..51]
 a36(r130): [52..53]
 a37(r131): [52..53]
 a38(r128): [54..55]
 a39(r129): [54..55]
 a40(r114): [56..57]
 a41(r127): [58..59]
 a42(r126): [60..61]
 a43(r113): [60..61]
 a44(r125): [62..63]
 a45(r123): [64..65]
 a46(r124): [64..65]
  regions=1, blocks=16, points=66
    allocnos=47 (big 0), copies=0, conflicts=0, ranges=47
Disposition:
   43:r113 l0     2   40:r114 l0     3   30:r115 l0     3   29:r116 l0     3
   26:r117 l0     3   18:r118 l0     2   16:r119 l0     2   10:r120 l0     3
    8:r121 l0     2    0:r122 l0     3   45:r123 l0     3   46:r124 l0     2
   44:r125 l0     3   42:r126 l0     3   41:r127 l0     3   38:r128 l0     2
   39:r129 l0     3   36:r130 l0     3   37:r131 l0     2   35:r132 l0     3
   34:r133 l0     3   33:r134 l0     3   32:r135 l0     3   31:r136 l0     2
   28:r137 l0     3   25:r138 l0     3   27:r139 l0     2   24:r140 l0     3
   23:r141 l0     3   22:r142 l0     3   21:r143 l0     3   20:r144 l0     3
   19:r145 l0     3   17:r146 l0     3   15:r147 l0     3   13:r148 l0     3
   14:r149 l0     2   12:r150 l0     3   11:r151 l0     2    9:r152 l0     3
    7:r153 l0     3    5:r154 l0     2    6:r155 l0     3    3:r156 l0     3
    4:r157 l0     2    1:r158 l0     3    2:r159 l0     2
+++Costs: overall 2000, reg 2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


kitimer

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 102 [sfp] 103 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={8d,6u} r1={5d} r2={5d} r3={5d} r11={1d,15u} r12={8d} r13={1d,19u} r14={5d} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={9d,5u} r101={4d} r102={1d,50u} r103={1d,14u} r104={4d} r105={4d} r106={4d} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} 
;;    total ref usage 608{452d,156u,0e} in 89{85 regular + 4 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 113 114 123 124 125 126 127
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -20 [0xffffffffffffffec])) [2 time+0 S4 A32])
        (reg:SI 0 r0 [ time ])) "timer.c":263:1 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ time ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(call_insn 6 3 7 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("int_off") [flags 0x41]  <function_decl 0x7f5060622600 int_off>) [0 int_off S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":268:10 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 7 6 8 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [2 ps+0 S4 A64])
        (reg:SI 0 r0)) "timer.c":268:10 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(call_insn 8 7 9 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("get_tnode") [flags 0x3]  <function_decl 0x7f506061bf00 get_tnode>) [0 get_tnode S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":269:9 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 9 8 10 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 t+0 S4 A32])
        (reg:SI 0 r0)) "timer.c":269:9 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(insn 10 9 11 2 (set (reg/f:SI 123)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 t+0 S4 A32])) "timer.c":270:13 253 {*arm_movsi_insn}
     (nil))
(insn 11 10 12 2 (set (reg:SI 124)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -20 [0xffffffffffffffec])) [2 time+0 S4 A32])) "timer.c":270:13 253 {*arm_movsi_insn}
     (nil))
(insn 12 11 13 2 (set (mem:SI (plus:SI (reg/f:SI 123)
                (const_int 4 [0x4])) [2 t_19->time+0 S4 A32])
        (reg:SI 124)) "timer.c":270:13 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 124)
        (expr_list:REG_DEAD (reg/f:SI 123)
            (nil))))
(insn 13 12 14 2 (set (reg/f:SI 125)
        (symbol_ref:SI ("running") [flags 0x40]  <var_decl 0x7f50612f57e0 running>)) "timer.c":271:12 253 {*arm_movsi_insn}
     (nil))
(insn 14 13 15 2 (set (reg/f:SI 113 [ running.28_1 ])
        (mem/f/c:SI (reg/f:SI 125) [6 running+0 S4 A32])) "timer.c":271:12 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 125)
        (nil)))
(insn 15 14 16 2 (set (reg/f:SI 126)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 t+0 S4 A32])) "timer.c":271:12 253 {*arm_movsi_insn}
     (nil))
(insn 16 15 17 2 (set (mem/f:SI (plus:SI (reg/f:SI 126)
                (const_int 8 [0x8])) [6 t_19->who+0 S4 A32])
        (reg/f:SI 113 [ running.28_1 ])) "timer.c":271:12 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 126)
        (expr_list:REG_DEAD (reg/f:SI 113 [ running.28_1 ])
            (nil))))
(insn 17 16 18 2 (set (reg/f:SI 127)
        (symbol_ref:SI ("tq") [flags 0x2]  <var_decl 0x7f50606127e0 tq>)) "timer.c":274:11 253 {*arm_movsi_insn}
     (nil))
(insn 18 17 19 2 (set (reg/f:SI 114 [ tq.29_2 ])
        (mem/f/c:SI (reg/f:SI 127) [5 tq+0 S4 A32])) "timer.c":274:11 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 127)
        (nil)))
(insn 19 18 20 2 (set (reg:CC 100 cc)
        (compare:CC (reg/f:SI 114 [ tq.29_2 ])
            (const_int 0 [0]))) "timer.c":274:8 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 114 [ tq.29_2 ])
        (nil)))
(jump_insn 20 19 21 2 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 30)
            (pc))) "timer.c":274:8 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (nil))
 -> 30)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 128 129 130 131
(note 21 20 22 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 3 (set (reg/f:SI 128)
        (symbol_ref:SI ("tq") [flags 0x2]  <var_decl 0x7f50606127e0 tq>)) "timer.c":275:12 253 {*arm_movsi_insn}
     (nil))
(insn 23 22 24 3 (set (reg/f:SI 129)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 t+0 S4 A32])) "timer.c":275:12 253 {*arm_movsi_insn}
     (nil))
(insn 24 23 25 3 (set (mem/f/c:SI (reg/f:SI 128) [5 tq+0 S4 A32])
        (reg/f:SI 129)) "timer.c":275:12 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 129)
        (expr_list:REG_DEAD (reg/f:SI 128)
            (nil))))
(insn 25 24 26 3 (set (reg/f:SI 130)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 t+0 S4 A32])) "timer.c":276:17 253 {*arm_movsi_insn}
     (nil))
(insn 26 25 27 3 (set (reg:SI 131)
        (const_int 0 [0])) "timer.c":276:17 253 {*arm_movsi_insn}
     (nil))
(insn 27 26 121 3 (set (mem/f:SI (reg/f:SI 130) [5 t_19->next+0 S4 A32])
        (reg:SI 131)) "timer.c":276:17 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 131)
        (expr_list:REG_DEAD (reg/f:SI 130)
            (nil))))
(jump_insn 121 27 122 3 (set (pc)
        (label_ref 109)) 284 {*arm_jump}
     (nil)
 -> 109)
;;  succ:       13 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

(barrier 122 121 30)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 132 133 134
(code_label 30 122 31 4 52 (nil) [1 uses])
(note 31 30 32 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 4 (set (reg/f:SI 132)
        (symbol_ref:SI ("tq") [flags 0x2]  <var_decl 0x7f50606127e0 tq>)) "timer.c":279:17 253 {*arm_movsi_insn}
     (nil))
(insn 33 32 34 4 (set (reg/f:SI 133)
        (mem/f/c:SI (reg/f:SI 132) [5 tq+0 S4 A32])) "timer.c":279:17 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 132)
        (nil)))
(insn 34 33 35 4 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [5 p+0 S4 A64])
        (reg/f:SI 133)) "timer.c":279:17 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 133)
        (nil)))
(insn 35 34 36 4 (set (reg/f:SI 134)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [5 p+0 S4 A64])) "timer.c":279:13 253 {*arm_movsi_insn}
     (nil))
(insn 36 35 123 4 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [5 q+0 S4 A32])
        (reg/f:SI 134)) "timer.c":279:13 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 134)
        (nil)))
(jump_insn 123 36 124 4 (set (pc)
        (label_ref 63)) "timer.c":280:17 284 {*arm_jump}
     (nil)
 -> 63)
;;  succ:       7 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

(barrier 124 123 65)
;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       7
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 115 116 135 136
(code_label 65 124 39 5 57 (nil) [1 uses])
(note 39 65 40 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 5 (set (reg/f:SI 135)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [5 p+0 S4 A64])) "timer.c":281:27 253 {*arm_movsi_insn}
     (nil))
(insn 41 40 42 5 (set (reg:SI 115 [ _3 ])
        (mem:SI (plus:SI (reg/f:SI 135)
                (const_int 4 [0x4])) [2 p_11->time+0 S4 A32])) "timer.c":281:27 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 135)
        (nil)))
(insn 42 41 43 5 (set (reg:SI 136)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -20 [0xffffffffffffffec])) [2 time+0 S4 A32])) "timer.c":281:24 253 {*arm_movsi_insn}
     (nil))
(insn 43 42 46 5 (set (reg:SI 116 [ _4 ])
        (minus:SI (reg:SI 136)
            (reg:SI 115 [ _3 ]))) "timer.c":281:24 45 {*arm_subsi3_insn}
     (expr_list:REG_DEAD (reg:SI 136)
        (expr_list:REG_DEAD (reg:SI 115 [ _3 ])
            (nil))))
(insn 46 43 47 5 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 116 [ _4 ])
            (const_int 0 [0]))) "timer.c":281:18 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 116 [ _4 ])
        (nil)))
(jump_insn 47 46 52 5 (set (pc)
        (if_then_else (lt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 131)
            (pc))) "timer.c":281:18 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (nil))
 -> 131)
;;  succ:       15
;;              6 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 117 137 138 139 140 141 142
(note 52 47 53 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 6 (set (reg/f:SI 137)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [5 p+0 S4 A64])) "timer.c":283:24 253 {*arm_movsi_insn}
     (nil))
(insn 54 53 55 6 (set (reg:SI 117 [ _5 ])
        (mem:SI (plus:SI (reg/f:SI 137)
                (const_int 4 [0x4])) [2 p_11->time+0 S4 A32])) "timer.c":283:24 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 137)
        (nil)))
(insn 55 54 56 6 (set (reg:SI 139)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -20 [0xffffffffffffffec])) [2 time+0 S4 A32])) "timer.c":283:20 253 {*arm_movsi_insn}
     (nil))
(insn 56 55 57 6 (set (reg:SI 138)
        (minus:SI (reg:SI 139)
            (reg:SI 117 [ _5 ]))) "timer.c":283:20 45 {*arm_subsi3_insn}
     (expr_list:REG_DEAD (reg:SI 139)
        (expr_list:REG_DEAD (reg:SI 117 [ _5 ])
            (nil))))
(insn 57 56 58 6 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -20 [0xffffffffffffffec])) [2 time+0 S4 A32])
        (reg:SI 138)) "timer.c":283:20 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 138)
        (nil)))
(insn 58 57 59 6 (set (reg/f:SI 140)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [5 p+0 S4 A64])) "timer.c":284:17 253 {*arm_movsi_insn}
     (nil))
(insn 59 58 60 6 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [5 q+0 S4 A32])
        (reg/f:SI 140)) "timer.c":284:17 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 140)
        (nil)))
(insn 60 59 61 6 (set (reg/f:SI 141)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [5 p+0 S4 A64])) "timer.c":285:17 253 {*arm_movsi_insn}
     (nil))
(insn 61 60 62 6 (set (reg/f:SI 142)
        (mem/f:SI (reg/f:SI 141) [5 p_11->next+0 S4 A32])) "timer.c":285:17 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 141)
        (nil)))
(insn 62 61 63 6 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [5 p+0 S4 A64])
        (reg/f:SI 142)) "timer.c":285:17 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 142)
        (nil)))
;;  succ:       7 (FALLTHRU,DFS_BACK)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 14, flags: (RTL)
;;  pred:       6 (FALLTHRU,DFS_BACK)
;;              4 [always] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 143
(code_label 63 62 64 7 54 (nil) [1 uses])
(note 64 63 66 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 66 64 67 7 (set (reg:SI 143)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [5 p+0 S4 A64])) "timer.c":280:18 253 {*arm_movsi_insn}
     (nil))
(insn 67 66 68 7 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 143)
            (const_int 0 [0]))) "timer.c":280:18 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 143)
        (nil)))
(jump_insn 68 67 127 7 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 65)
            (pc))) "timer.c":280:18 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (nil))
 -> 65)
;;  succ:       5
;;              14 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 14, loop depth 0, maybe hot
;;  prev block 7, next block 15, flags: (RTL)
;;  pred:       7 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 127 68 128 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(jump_insn 128 127 129 14 (set (pc)
        (label_ref 69)) 284 {*arm_jump}
     (nil)
 -> 69)
;;  succ:       8 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

(barrier 129 128 131)
;; basic block 15, loop depth 0, maybe hot
;;  prev block 14, next block 8, flags: (RTL)
;;  pred:       5
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(code_label 131 129 130 15 60 (nil) [1 uses])
(note 130 131 132 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 132 130 69 15 (const_int 0 [0]) "timer.c":282:19 311 {nop}
     (nil))
;;  succ:       8 [always]  (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 8, loop depth 0, maybe hot
;;  prev block 15, next block 9, flags: (RTL)
;;  pred:       15 [always]  (FALLTHRU)
;;              14 [always] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 144
(code_label 69 132 70 8 56 (nil) [1 uses])
(note 70 69 71 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 8 (set (reg:SI 144)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [5 p+0 S4 A64])) "timer.c":287:14 253 {*arm_movsi_insn}
     (nil))
(insn 72 71 73 8 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 144)
            (const_int 0 [0]))) "timer.c":287:14 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 144)
        (nil)))
(jump_insn 73 72 74 8 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 81)
            (pc))) "timer.c":287:14 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (nil))
 -> 81)
;;  succ:       9 (FALLTHRU)
;;              10
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 118 119 145 146 147
(note 74 73 75 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 9 (set (reg/f:SI 145)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [5 p+0 S4 A64])) "timer.c":288:23 253 {*arm_movsi_insn}
     (nil))
(insn 76 75 77 9 (set (reg:SI 118 [ _6 ])
        (mem:SI (plus:SI (reg/f:SI 145)
                (const_int 4 [0x4])) [2 p_11->time+0 S4 A32])) "timer.c":288:23 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 145)
        (nil)))
(insn 77 76 78 9 (set (reg:SI 146)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -20 [0xffffffffffffffec])) [2 time+0 S4 A32])) "timer.c":288:23 253 {*arm_movsi_insn}
     (nil))
(insn 78 77 79 9 (set (reg:SI 119 [ _7 ])
        (minus:SI (reg:SI 118 [ _6 ])
            (reg:SI 146))) "timer.c":288:23 45 {*arm_subsi3_insn}
     (expr_list:REG_DEAD (reg:SI 146)
        (expr_list:REG_DEAD (reg:SI 118 [ _6 ])
            (nil))))
(insn 79 78 80 9 (set (reg/f:SI 147)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [5 p+0 S4 A64])) "timer.c":288:23 253 {*arm_movsi_insn}
     (nil))
(insn 80 79 81 9 (set (mem:SI (plus:SI (reg/f:SI 147)
                (const_int 4 [0x4])) [2 p_11->time+0 S4 A32])
        (reg:SI 119 [ _7 ])) "timer.c":288:23 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 147)
        (expr_list:REG_DEAD (reg:SI 119 [ _7 ])
            (nil))))
;;  succ:       10 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       8
;;              9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 120 148 149 150 151
(code_label 81 80 82 10 58 (nil) [1 uses])
(note 82 81 83 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 10 (set (reg/f:SI 148)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 t+0 S4 A32])) "timer.c":290:19 253 {*arm_movsi_insn}
     (nil))
(insn 84 83 85 10 (set (reg:SI 149)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -20 [0xffffffffffffffec])) [2 time+0 S4 A32])) "timer.c":290:19 253 {*arm_movsi_insn}
     (nil))
(insn 85 84 86 10 (set (mem:SI (plus:SI (reg/f:SI 148)
                (const_int 4 [0x4])) [2 t_19->time+0 S4 A32])
        (reg:SI 149)) "timer.c":290:19 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 149)
        (expr_list:REG_DEAD (reg/f:SI 148)
            (nil))))
(insn 86 85 87 10 (set (reg/f:SI 150)
        (symbol_ref:SI ("tq") [flags 0x2]  <var_decl 0x7f50606127e0 tq>)) "timer.c":291:16 253 {*arm_movsi_insn}
     (nil))
(insn 87 86 88 10 (set (reg/f:SI 120 [ tq.30_8 ])
        (mem/f/c:SI (reg/f:SI 150) [5 tq+0 S4 A32])) "timer.c":291:16 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 150)
        (nil)))
(insn 88 87 89 10 (set (reg:SI 151)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [5 p+0 S4 A64])) "timer.c":291:14 253 {*arm_movsi_insn}
     (nil))
(insn 89 88 90 10 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 151)
            (reg/f:SI 120 [ tq.30_8 ]))) "timer.c":291:14 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 151)
        (expr_list:REG_DEAD (reg/f:SI 120 [ tq.30_8 ])
            (nil))))
(jump_insn 90 89 91 10 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 101)
            (pc))) "timer.c":291:14 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (nil))
 -> 101)
;;  succ:       11 (FALLTHRU)
;;              12
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 121 152 153 154 155
(note 91 90 92 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 93 11 (set (reg/f:SI 152)
        (symbol_ref:SI ("tq") [flags 0x2]  <var_decl 0x7f50606127e0 tq>)) "timer.c":292:23 253 {*arm_movsi_insn}
     (nil))
(insn 93 92 94 11 (set (reg/f:SI 121 [ tq.31_9 ])
        (mem/f/c:SI (reg/f:SI 152) [5 tq+0 S4 A32])) "timer.c":292:23 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 152)
        (nil)))
(insn 94 93 95 11 (set (reg/f:SI 153)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 t+0 S4 A32])) "timer.c":292:23 253 {*arm_movsi_insn}
     (nil))
(insn 95 94 96 11 (set (mem/f:SI (reg/f:SI 153) [5 t_19->next+0 S4 A32])
        (reg/f:SI 121 [ tq.31_9 ])) "timer.c":292:23 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 153)
        (expr_list:REG_DEAD (reg/f:SI 121 [ tq.31_9 ])
            (nil))))
(insn 96 95 97 11 (set (reg/f:SI 154)
        (symbol_ref:SI ("tq") [flags 0x2]  <var_decl 0x7f50606127e0 tq>)) "timer.c":293:18 253 {*arm_movsi_insn}
     (nil))
(insn 97 96 98 11 (set (reg/f:SI 155)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 t+0 S4 A32])) "timer.c":293:18 253 {*arm_movsi_insn}
     (nil))
(insn 98 97 125 11 (set (mem/f/c:SI (reg/f:SI 154) [5 tq+0 S4 A32])
        (reg/f:SI 155)) "timer.c":293:18 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 155)
        (expr_list:REG_DEAD (reg/f:SI 154)
            (nil))))
(jump_insn 125 98 126 11 (set (pc)
        (label_ref 109)) 284 {*arm_jump}
     (nil)
 -> 109)
;;  succ:       13 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

(barrier 126 125 101)
;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       10
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 156 157 158 159
(code_label 101 126 102 12 59 (nil) [1 uses])
(note 102 101 103 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 104 12 (set (reg/f:SI 156)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 t+0 S4 A32])) "timer.c":296:25 253 {*arm_movsi_insn}
     (nil))
(insn 104 103 105 12 (set (reg/f:SI 157)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [5 p+0 S4 A64])) "timer.c":296:25 253 {*arm_movsi_insn}
     (nil))
(insn 105 104 106 12 (set (mem/f:SI (reg/f:SI 156) [5 t_19->next+0 S4 A32])
        (reg/f:SI 157)) "timer.c":296:25 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 157)
        (expr_list:REG_DEAD (reg/f:SI 156)
            (nil))))
(insn 106 105 107 12 (set (reg/f:SI 158)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [5 q+0 S4 A32])) "timer.c":297:25 253 {*arm_movsi_insn}
     (nil))
(insn 107 106 108 12 (set (reg/f:SI 159)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 t+0 S4 A32])) "timer.c":297:25 253 {*arm_movsi_insn}
     (nil))
(insn 108 107 109 12 (set (mem/f:SI (reg/f:SI 158) [5 q_12->next+0 S4 A32])
        (reg/f:SI 159)) "timer.c":297:25 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 159)
        (expr_list:REG_DEAD (reg/f:SI 158)
            (nil))))
;;  succ:       13 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 1, flags: (RTL)
;;  pred:       12 (FALLTHRU)
;;              3 [always] 
;;              11 [always] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(11){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 122
(code_label 109 108 110 13 53 (nil) [2 uses])
(note 110 109 111 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 112 13 (set (reg:SI 0 r0)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [2 ps+0 S4 A64])) "timer.c":302:5 253 {*arm_movsi_insn}
     (nil))
(call_insn 112 111 113 13 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("int_on") [flags 0x41]  <function_decl 0x7f5060622700 int_on>) [0 int_on S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":302:5 291 {*call_value_symbol}
     (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(call_insn 113 112 116 13 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printTQ") [flags 0x3]  <function_decl 0x7f506060af00 printTQ>) [0 printTQ S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":304:5 291 {*call_value_symbol}
     (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 116 113 117 13 (clobber (reg/i:SI 0 r0)) "timer.c":308:1 -1
     (expr_list:REG_UNUSED (reg/i:SI 0 r0)
        (nil)))
(insn 117 116 120 13 (clobber (reg:SI 122 [ <retval> ])) "timer.c":308:1 -1
     (nil))
(insn 120 117 115 13 (const_int 0 [0]) "timer.c":308:1 311 {nop}
     (nil))
(insn 115 120 118 13 (set (reg/i:SI 0 r0)
        (reg:SI 122 [ <retval> ])) "timer.c":308:1 253 {*arm_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 122 [ <retval> ])
        (nil)))
(insn 118 115 0 13 (use (reg/i:SI 0 r0)) "timer.c":308:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

