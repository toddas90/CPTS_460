
;; Function P (P, funcdef_no=0, decl_uid=4476, cgraph_uid=1, symbol_order=0)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 6 n_edges 6 count 6 (    1)
scanning new insn with uid = 51.
scanning new insn with uid = 52.
scanning new insn with uid = 53.
scanning new insn with uid = 54.
scanning new insn with uid = 45.
scanning new insn with uid = 46.
scanning new insn with uid = 47.
scanning new insn with uid = 48.
verify found no changes in insn with uid = 6.
verify found no changes in insn with uid = 34.
verify found no changes in insn with uid = 35.
verify found no changes in insn with uid = 39.


try_optimize_cfg iteration 1

Merging block 5 into block 4...
changing bb of uid 43
  from 5 to 4
changing bb of uid 50
  unscanned insn
changing bb of uid 51
  from 5 to 4
changing bb of uid 52
  from 5 to 4
changing bb of uid 53
  from 5 to 4
changing bb of uid 54
  from 5 to 4
Merged blocks 4 and 5.
Merged 4 and 5 without moving.


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns


P

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 11 [fp] 13 [sp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={7d,4u} r1={6d,1u} r2={10d,5u} r3={16d,11u} r11={3d,15u} r12={8d} r13={5d,20u} r14={5d,2u} r15={5d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={5d,1u} r101={4d} r102={1d,1u} r104={4d} r105={4d} r106={4d} 
;;    total ref usage 483{423d,60u,0e} in 39{35 regular + 4 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(note 4 1 45 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 45 4 46 2 (parallel [
            (set (mem/c:BLK (pre_modify:SI (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -8 [0xfffffffffffffff8]))) [8  A8])
                (unspec:BLK [
                        (reg/f:SI 11 fp)
                    ] UNSPEC_PUSH_MULT))
            (use (reg:SI 14 lr))
        ]) "pv.c":25:1 -1
     (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                (set/f (reg/f:SI 13 sp)
                    (plus:SI (reg/f:SI 13 sp)
                        (const_int -8 [0xfffffffffffffff8])))
                (set/f (mem/c:SI (reg/f:SI 13 sp) [8  S4 A32])
                    (reg/f:SI 11 fp))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 4 [0x4])) [8  S4 A32])
                    (reg:SI 14 lr))
            ])
        (nil)))
(insn/f 46 45 47 2 (set (reg/f:SI 11 fp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 4 [0x4]))) "pv.c":25:1 -1
     (nil))
(insn/f 47 46 48 2 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -16 [0xfffffffffffffff0]))) "pv.c":25:1 -1
     (nil))
(insn 48 47 49 2 (set (mem:BLK (scratch) [0  A8])
        (unspec:BLK [
                (reg/f:SI 13 sp)
                (reg/f:SI 11 fp)
            ] UNSPEC_PRLG_STK)) "pv.c":25:1 -1
     (nil))
(note 49 48 2 2 NOTE_INSN_PROLOGUE_END)
(insn 2 49 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [2 s+0 S4 A32])
        (reg:SI 0 r0 [ s ])) "pv.c":25:1 253 {*arm_movsi_insn}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(call_insn 6 3 7 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("int_off") [flags 0x41]  <function_decl 0x7fc2bd161900 int_off>) [0 int_off S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "pv.c":28:8 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 7 6 8 2 (set (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [1 ps+0 S4 A32])
        (reg:SI 0 r0)) "pv.c":28:8 253 {*arm_movsi_insn}
     (nil))
(insn 8 7 9 2 (set (reg/f:SI 3 r3 [120])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [2 s+0 S4 A32])) "pv.c":30:5 253 {*arm_movsi_insn}
     (nil))
(insn 9 8 10 2 (set (reg:SI 3 r3 [orig:113 _1 ] [113])
        (mem:SI (reg/f:SI 3 r3 [120]) [1 s_12(D)->value+0 S4 A32])) "pv.c":30:5 253 {*arm_movsi_insn}
     (nil))
(insn 10 9 11 2 (set (reg:SI 2 r2 [orig:114 _2 ] [114])
        (plus:SI (reg:SI 3 r3 [orig:113 _1 ] [113])
            (const_int -1 [0xffffffffffffffff]))) "pv.c":30:12 7 {*arm_addsi3}
     (nil))
(insn 11 10 12 2 (set (reg/f:SI 3 r3 [121])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [2 s+0 S4 A32])) "pv.c":30:12 253 {*arm_movsi_insn}
     (nil))
(insn 12 11 13 2 (set (mem:SI (reg/f:SI 3 r3 [121]) [1 s_12(D)->value+0 S4 A32])
        (reg:SI 2 r2 [orig:114 _2 ] [114])) "pv.c":30:12 253 {*arm_movsi_insn}
     (nil))
(insn 13 12 14 2 (set (reg/f:SI 3 r3 [122])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [2 s+0 S4 A32])) "pv.c":31:9 253 {*arm_movsi_insn}
     (nil))
(insn 14 13 17 2 (set (reg:SI 3 r3 [orig:115 _3 ] [115])
        (mem:SI (reg/f:SI 3 r3 [122]) [1 s_12(D)->value+0 S4 A32])) "pv.c":31:9 253 {*arm_movsi_insn}
     (nil))
(insn 17 14 18 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:115 _3 ] [115])
            (const_int 0 [0]))) "pv.c":31:7 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 18 17 19 2 (set (pc)
        (if_then_else (ge (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) "pv.c":31:7 273 {arm_cond_branch}
     (nil)
 -> 36)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(note 19 18 20 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 3 (set (reg/f:SI 3 r3 [123])
        (symbol_ref:SI ("running") [flags 0x40]  <var_decl 0x7fc2bde4c7e0 running>)) "pv.c":33:14 253 {*arm_movsi_insn}
     (nil))
(insn 21 20 22 3 (set (reg/f:SI 3 r3 [orig:116 running.0_4 ] [116])
        (mem/f/c:SI (reg/f:SI 3 r3 [123]) [4 running+0 S4 A32])) "pv.c":33:14 253 {*arm_movsi_insn}
     (nil))
(insn 22 21 23 3 (set (reg:SI 2 r2 [124])
        (const_int 3 [0x3])) "pv.c":33:22 253 {*arm_movsi_insn}
     (nil))
(insn 23 22 24 3 (set (mem:SI (plus:SI (reg/f:SI 3 r3 [orig:116 running.0_4 ] [116])
                (const_int 28 [0x1c])) [1 running.0_4->status+0 S4 A32])
        (reg:SI 2 r2 [124])) "pv.c":33:22 253 {*arm_movsi_insn}
     (nil))
(insn 24 23 25 3 (set (reg/f:SI 3 r3 [125])
        (symbol_ref:SI ("running") [flags 0x40]  <var_decl 0x7fc2bde4c7e0 running>)) "pv.c":34:14 253 {*arm_movsi_insn}
     (nil))
(insn 25 24 26 3 (set (reg/f:SI 3 r3 [orig:117 running.1_5 ] [117])
        (mem/f/c:SI (reg/f:SI 3 r3 [125]) [4 running+0 S4 A32])) "pv.c":34:14 253 {*arm_movsi_insn}
     (nil))
(insn 26 25 27 3 (set (reg/f:SI 2 r2 [126])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [2 s+0 S4 A32])) "pv.c":34:20 253 {*arm_movsi_insn}
     (nil))
(insn 27 26 28 3 (set (mem/f:SI (plus:SI (reg/f:SI 3 r3 [orig:117 running.1_5 ] [117])
                (const_int 88 [0x58])) [2 running.1_5->sem+0 S4 A32])
        (reg/f:SI 2 r2 [126])) "pv.c":34:20 253 {*arm_movsi_insn}
     (nil))
(insn 28 27 29 3 (set (reg:SI 3 r3 [127])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [2 s+0 S4 A32])) "pv.c":35:7 253 {*arm_movsi_insn}
     (nil))
(insn 29 28 30 3 (set (reg/f:SI 3 r3 [orig:118 _6 ] [118])
        (plus:SI (reg:SI 3 r3 [127])
            (const_int 4 [0x4]))) "pv.c":35:7 7 {*arm_addsi3}
     (nil))
(insn 30 29 31 3 (set (reg/f:SI 2 r2 [128])
        (symbol_ref:SI ("running") [flags 0x40]  <var_decl 0x7fc2bde4c7e0 running>)) "pv.c":35:7 253 {*arm_movsi_insn}
     (nil))
(insn 31 30 32 3 (set (reg/f:SI 2 r2 [orig:119 running.2_7 ] [119])
        (mem/f/c:SI (reg/f:SI 2 r2 [128]) [4 running+0 S4 A32])) "pv.c":35:7 253 {*arm_movsi_insn}
     (nil))
(insn 32 31 33 3 (set (reg:SI 1 r1)
        (reg/f:SI 2 r2 [orig:119 running.2_7 ] [119])) "pv.c":35:7 253 {*arm_movsi_insn}
     (nil))
(insn 33 32 34 3 (set (reg:SI 0 r0)
        (reg/f:SI 3 r3 [orig:118 _6 ] [118])) "pv.c":35:7 253 {*arm_movsi_insn}
     (nil))
(call_insn 34 33 35 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("enqueue") [flags 0x41]  <function_decl 0x7fc2bd161000 enqueue>) [0 enqueue S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "pv.c":35:7 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(call_insn 35 34 36 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("tswitch") [flags 0x41]  <function_decl 0x7fc2bd161a00 tswitch>) [0 tswitch S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "pv.c":36:7 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(code_label 36 35 37 4 2 (nil) [1 uses])
(note 37 36 38 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 4 (set (reg:SI 0 r0)
        (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [1 ps+0 S4 A32])) "pv.c":38:4 253 {*arm_movsi_insn}
     (nil))
(call_insn 39 38 43 4 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("int_on") [flags 0x41]  <function_decl 0x7fc2bd161c00 int_on>) [0 int_on S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "pv.c":38:4 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 43 39 50 4 (const_int 0 [0]) "pv.c":39:1 311 {nop}
     (nil))
(note 50 43 51 4 NOTE_INSN_EPILOGUE_BEG)
(insn 51 50 52 4 (unspec_volatile [
            (const_int 0 [0])
        ] VUNSPEC_BLOCKAGE) "pv.c":39:1 -1
     (nil))
(insn/f 52 51 53 4 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 11 fp)
            (const_int -4 [0xfffffffffffffffc]))) "pv.c":39:1 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 13 sp)
            (plus:SI (reg/f:SI 11 fp)
                (const_int -4 [0xfffffffffffffffc])))
        (nil)))
(insn 53 52 54 4 (unspec:SI [
            (reg/f:SI 13 sp)
        ] UNSPEC_REGISTER_USE) "pv.c":39:1 -1
     (nil))
(jump_insn 54 53 55 4 (parallel [
            (return)
            (set/f (reg/f:SI 13 sp)
                (plus:SI (reg/f:SI 13 sp)
                    (const_int 8 [0x8])))
            (set/f (reg/f:SI 11 fp)
                (mem/c:SI (reg/f:SI 13 sp) [8  S4 A32]))
            (set/f (reg:SI 15 pc)
                (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                        (const_int 4 [0x4])) [8  S4 A32]))
        ]) "pv.c":39:1 -1
     (expr_list:REG_CFA_RESTORE (reg/f:SI 11 fp)
        (nil))
 -> return)
;;  succ:       EXIT [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 55 54 44)
(note 44 55 0 NOTE_INSN_DELETED)

;; Function V (V, funcdef_no=1, decl_uid=4486, cgraph_uid=2, symbol_order=1)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 6 n_edges 6 count 6 (    1)
scanning new insn with uid = 46.
scanning new insn with uid = 47.
scanning new insn with uid = 48.
scanning new insn with uid = 49.
scanning new insn with uid = 40.
scanning new insn with uid = 41.
scanning new insn with uid = 42.
scanning new insn with uid = 43.
verify found no changes in insn with uid = 6.
verify found no changes in insn with uid = 23.
verify found no changes in insn with uid = 30.
verify found no changes in insn with uid = 34.


try_optimize_cfg iteration 1

Merging block 5 into block 4...
changing bb of uid 38
  from 5 to 4
changing bb of uid 45
  unscanned insn
changing bb of uid 46
  from 5 to 4
changing bb of uid 47
  from 5 to 4
changing bb of uid 48
  from 5 to 4
changing bb of uid 49
  from 5 to 4
Merged blocks 4 and 5.
Merged 4 and 5 without moving.


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns


V

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 11 [fp] 13 [sp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={8d,6u} r1={6d,1u} r2={7d,2u} r3={13d,8u} r11={3d,17u} r12={8d} r13={5d,20u} r14={5d,2u} r15={5d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={5d,1u} r101={4d} r102={1d,1u} r104={4d} r105={4d} r106={4d} 
;;    total ref usage 476{418d,58u,0e} in 34{30 regular + 4 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(note 4 1 40 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 40 4 41 2 (parallel [
            (set (mem/c:BLK (pre_modify:SI (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -8 [0xfffffffffffffff8]))) [8  A8])
                (unspec:BLK [
                        (reg/f:SI 11 fp)
                    ] UNSPEC_PUSH_MULT))
            (use (reg:SI 14 lr))
        ]) "pv.c":42:1 -1
     (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                (set/f (reg/f:SI 13 sp)
                    (plus:SI (reg/f:SI 13 sp)
                        (const_int -8 [0xfffffffffffffff8])))
                (set/f (mem/c:SI (reg/f:SI 13 sp) [8  S4 A32])
                    (reg/f:SI 11 fp))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 4 [0x4])) [8  S4 A32])
                    (reg:SI 14 lr))
            ])
        (nil)))
(insn/f 41 40 42 2 (set (reg/f:SI 11 fp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 4 [0x4]))) "pv.c":42:1 -1
     (nil))
(insn/f 42 41 43 2 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -16 [0xfffffffffffffff0]))) "pv.c":42:1 -1
     (nil))
(insn 43 42 44 2 (set (mem:BLK (scratch) [0  A8])
        (unspec:BLK [
                (reg/f:SI 13 sp)
                (reg/f:SI 11 fp)
            ] UNSPEC_PRLG_STK)) "pv.c":42:1 -1
     (nil))
(note 44 43 2 2 NOTE_INSN_PROLOGUE_END)
(insn 2 44 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [2 s+0 S4 A32])
        (reg:SI 0 r0 [ s ])) "pv.c":42:1 253 {*arm_movsi_insn}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(call_insn 6 3 7 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("int_off") [flags 0x41]  <function_decl 0x7fc2bd161900 int_off>) [0 int_off S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "pv.c":45:8 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 7 6 8 2 (set (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [1 ps+0 S4 A64])
        (reg:SI 0 r0)) "pv.c":45:8 253 {*arm_movsi_insn}
     (nil))
(insn 8 7 9 2 (set (reg/f:SI 3 r3 [117])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [2 s+0 S4 A32])) "pv.c":46:6 253 {*arm_movsi_insn}
     (nil))
(insn 9 8 10 2 (set (reg:SI 3 r3 [orig:113 _1 ] [113])
        (mem:SI (reg/f:SI 3 r3 [117]) [1 s_9(D)->value+0 S4 A32])) "pv.c":46:6 253 {*arm_movsi_insn}
     (nil))
(insn 10 9 11 2 (set (reg:SI 2 r2 [orig:114 _2 ] [114])
        (plus:SI (reg:SI 3 r3 [orig:113 _1 ] [113])
            (const_int 1 [0x1]))) "pv.c":46:13 7 {*arm_addsi3}
     (nil))
(insn 11 10 12 2 (set (reg/f:SI 3 r3 [118])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [2 s+0 S4 A32])) "pv.c":46:13 253 {*arm_movsi_insn}
     (nil))
(insn 12 11 13 2 (set (mem:SI (reg/f:SI 3 r3 [118]) [1 s_9(D)->value+0 S4 A32])
        (reg:SI 2 r2 [orig:114 _2 ] [114])) "pv.c":46:13 253 {*arm_movsi_insn}
     (nil))
(insn 13 12 14 2 (set (reg/f:SI 3 r3 [119])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [2 s+0 S4 A32])) "pv.c":47:10 253 {*arm_movsi_insn}
     (nil))
(insn 14 13 17 2 (set (reg:SI 3 r3 [orig:115 _3 ] [115])
        (mem:SI (reg/f:SI 3 r3 [119]) [1 s_9(D)->value+0 S4 A32])) "pv.c":47:10 253 {*arm_movsi_insn}
     (nil))
(insn 17 14 18 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:115 _3 ] [115])
            (const_int 0 [0]))) "pv.c":47:8 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 18 17 19 2 (set (pc)
        (if_then_else (gt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) "pv.c":47:8 273 {arm_cond_branch}
     (nil)
 -> 31)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(note 19 18 20 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 3 (set (reg:SI 3 r3 [120])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [2 s+0 S4 A32])) "pv.c":48:13 253 {*arm_movsi_insn}
     (nil))
(insn 21 20 22 3 (set (reg/f:SI 3 r3 [orig:116 _4 ] [116])
        (plus:SI (reg:SI 3 r3 [120])
            (const_int 4 [0x4]))) "pv.c":48:13 7 {*arm_addsi3}
     (nil))
(insn 22 21 23 3 (set (reg:SI 0 r0)
        (reg/f:SI 3 r3 [orig:116 _4 ] [116])) "pv.c":48:13 253 {*arm_movsi_insn}
     (nil))
(call_insn 23 22 24 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("dequeue") [flags 0x41]  <function_decl 0x7fc2bd161100 dequeue>) [0 dequeue S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "pv.c":48:13 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 24 23 25 3 (set (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 p+0 S4 A32])
        (reg:SI 0 r0)) "pv.c":48:13 253 {*arm_movsi_insn}
     (nil))
(insn 25 24 26 3 (set (reg/f:SI 3 r3 [121])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 p+0 S4 A32])) "pv.c":49:19 253 {*arm_movsi_insn}
     (nil))
(insn 26 25 27 3 (set (reg:SI 2 r2 [122])
        (const_int 1 [0x1])) "pv.c":49:19 253 {*arm_movsi_insn}
     (nil))
(insn 27 26 28 3 (set (mem:SI (plus:SI (reg/f:SI 3 r3 [121])
                (const_int 28 [0x1c])) [1 p_12->status+0 S4 A32])
        (reg:SI 2 r2 [122])) "pv.c":49:19 253 {*arm_movsi_insn}
     (nil))
(insn 28 27 29 3 (set (reg:SI 1 r1)
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 p+0 S4 A32])) "pv.c":50:9 253 {*arm_movsi_insn}
     (nil))
(insn 29 28 30 3 (set (reg:SI 0 r0)
        (symbol_ref:SI ("readyQueue") [flags 0x40]  <var_decl 0x7fc2bde4c6c0 readyQueue>)) "pv.c":50:9 253 {*arm_movsi_insn}
     (nil))
(call_insn 30 29 31 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("enqueue") [flags 0x41]  <function_decl 0x7fc2bd161000 enqueue>) [0 enqueue S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "pv.c":50:9 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(code_label 31 30 32 4 6 (nil) [1 uses])
(note 32 31 33 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 4 (set (reg:SI 0 r0)
        (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [1 ps+0 S4 A64])) "pv.c":53:5 253 {*arm_movsi_insn}
     (nil))
(call_insn 34 33 38 4 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("int_on") [flags 0x41]  <function_decl 0x7fc2bd161c00 int_on>) [0 int_on S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "pv.c":53:5 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 38 34 45 4 (const_int 0 [0]) "pv.c":54:1 311 {nop}
     (nil))
(note 45 38 46 4 NOTE_INSN_EPILOGUE_BEG)
(insn 46 45 47 4 (unspec_volatile [
            (const_int 0 [0])
        ] VUNSPEC_BLOCKAGE) "pv.c":54:1 -1
     (nil))
(insn/f 47 46 48 4 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 11 fp)
            (const_int -4 [0xfffffffffffffffc]))) "pv.c":54:1 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 13 sp)
            (plus:SI (reg/f:SI 11 fp)
                (const_int -4 [0xfffffffffffffffc])))
        (nil)))
(insn 48 47 49 4 (unspec:SI [
            (reg/f:SI 13 sp)
        ] UNSPEC_REGISTER_USE) "pv.c":54:1 -1
     (nil))
(jump_insn 49 48 50 4 (parallel [
            (return)
            (set/f (reg/f:SI 13 sp)
                (plus:SI (reg/f:SI 13 sp)
                    (const_int 8 [0x8])))
            (set/f (reg/f:SI 11 fp)
                (mem/c:SI (reg/f:SI 13 sp) [8  S4 A32]))
            (set/f (reg:SI 15 pc)
                (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                        (const_int 4 [0x4])) [8  S4 A32]))
        ]) "pv.c":54:1 -1
     (expr_list:REG_CFA_RESTORE (reg/f:SI 11 fp)
        (nil))
 -> return)
;;  succ:       EXIT [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 50 49 39)
(note 39 50 0 NOTE_INSN_DELETED)

;; Function wV (wV, funcdef_no=2, decl_uid=4493, cgraph_uid=3, symbol_order=2)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 10 n_edges 12 count 12 (  1.2)
scanning new insn with uid = 101.
scanning new insn with uid = 102.
scanning new insn with uid = 103.
scanning new insn with uid = 104.
scanning new insn with uid = 95.
scanning new insn with uid = 96.
scanning new insn with uid = 97.
scanning new insn with uid = 98.
verify found no changes in insn with uid = 9.
verify found no changes in insn with uid = 73.
verify found no changes in insn with uid = 78.
verify found no changes in insn with uid = 80.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns


wV

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 11 [fp] 13 [sp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={10d,7u} r1={7d,2u} r2={12d,7u} r3={30d,25u} r11={3d,40u} r12={8d} r13={5d,25u} r14={5d,2u} r15={5d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={7d,3u} r101={4d} r102={1d,1u} r104={4d} r105={4d} r106={4d} 
;;    total ref usage 557{445d,112u,0e} in 74{70 regular + 4 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(note 4 1 95 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 95 4 96 2 (parallel [
            (set (mem/c:BLK (pre_modify:SI (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -8 [0xfffffffffffffff8]))) [8  A8])
                (unspec:BLK [
                        (reg/f:SI 11 fp)
                    ] UNSPEC_PUSH_MULT))
            (use (reg:SI 14 lr))
        ]) "pv.c":57:1 -1
     (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                (set/f (reg/f:SI 13 sp)
                    (plus:SI (reg/f:SI 13 sp)
                        (const_int -8 [0xfffffffffffffff8])))
                (set/f (mem/c:SI (reg/f:SI 13 sp) [8  S4 A32])
                    (reg/f:SI 11 fp))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 4 [0x4])) [8  S4 A32])
                    (reg:SI 14 lr))
            ])
        (nil)))
(insn/f 96 95 97 2 (set (reg/f:SI 11 fp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 4 [0x4]))) "pv.c":57:1 -1
     (nil))
(insn/f 97 96 98 2 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -24 [0xffffffffffffffe8]))) "pv.c":57:1 -1
     (nil))
(insn 98 97 99 2 (set (mem:BLK (scratch) [0  A8])
        (unspec:BLK [
                (reg/f:SI 13 sp)
                (reg/f:SI 11 fp)
            ] UNSPEC_PRLG_STK)) "pv.c":57:1 -1
     (nil))
(note 99 98 2 2 NOTE_INSN_PROLOGUE_END)
(insn 2 99 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -24 [0xffffffffffffffe8])) [4 p+0 S4 A32])
        (reg:SI 0 r0 [ p ])) "pv.c":57:1 253 {*arm_movsi_insn}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:SI 3 r3 [120])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -24 [0xffffffffffffffe8])) [4 p+0 S4 A32])) "pv.c":60:21 253 {*arm_movsi_insn}
     (nil))
(insn 7 6 8 2 (set (reg/f:SI 3 r3 [121])
        (mem/f:SI (plus:SI (reg/f:SI 3 r3 [120])
                (const_int 88 [0x58])) [2 p_11(D)->sem+0 S4 A32])) "pv.c":60:21 253 {*arm_movsi_insn}
     (nil))
(insn 8 7 9 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [2 s+0 S4 A64])
        (reg/f:SI 3 r3 [121])) "pv.c":60:21 253 {*arm_movsi_insn}
     (nil))
(call_insn 9 8 10 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("int_off") [flags 0x41]  <function_decl 0x7fc2bd161900 int_off>) [0 int_off S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "pv.c":62:8 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 10 9 11 2 (set (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [1 ps+0 S4 A32])
        (reg:SI 0 r0)) "pv.c":62:8 253 {*arm_movsi_insn}
     (nil))
(insn 11 10 12 2 (set (reg/f:SI 3 r3 [122])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [2 s+0 S4 A64])) "pv.c":71:15 253 {*arm_movsi_insn}
     (nil))
(insn 12 11 13 2 (set (reg/f:SI 3 r3 [orig:113 _1 ] [113])
        (mem/f:SI (plus:SI (reg/f:SI 3 r3 [122])
                (const_int 4 [0x4])) [4 s_12->queue+0 S4 A32])) "pv.c":71:15 253 {*arm_movsi_insn}
     (nil))
(insn 13 12 14 2 (set (reg:SI 2 r2 [123])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -24 [0xffffffffffffffe8])) [4 p+0 S4 A32])) "pv.c":71:8 253 {*arm_movsi_insn}
     (nil))
(insn 14 13 15 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 2 r2 [123])
            (reg/f:SI 3 r3 [orig:113 _1 ] [113]))) "pv.c":71:8 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) "pv.c":71:8 273 {arm_cond_branch}
     (nil)
 -> 23)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
(note 16 15 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 3 (set (reg/f:SI 3 r3 [124])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -24 [0xffffffffffffffe8])) [4 p+0 S4 A32])) "pv.c":72:20 253 {*arm_movsi_insn}
     (nil))
(insn 18 17 19 3 (set (reg/f:SI 2 r2 [orig:114 _2 ] [114])
        (mem/f:SI (reg/f:SI 3 r3 [124]) [4 p_11(D)->next+0 S4 A32])) "pv.c":72:20 253 {*arm_movsi_insn}
     (nil))
(insn 19 18 20 3 (set (reg/f:SI 3 r3 [125])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [2 s+0 S4 A64])) "pv.c":72:17 253 {*arm_movsi_insn}
     (nil))
(insn 20 19 88 3 (set (mem/f:SI (plus:SI (reg/f:SI 3 r3 [125])
                (const_int 4 [0x4])) [4 s_12->queue+0 S4 A32])
        (reg/f:SI 2 r2 [orig:114 _2 ] [114])) "pv.c":72:17 253 {*arm_movsi_insn}
     (nil))
(jump_insn 88 20 89 3 (set (pc)
        (label_ref 58)) 284 {*arm_jump}
     (nil)
 -> 58)
;;  succ:       9 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 89 88 23)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3]
(code_label 23 89 24 4 10 (nil) [1 uses])
(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 4 (set (reg/f:SI 3 r3 [126])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [2 s+0 S4 A64])) "pv.c":75:9 253 {*arm_movsi_insn}
     (nil))
(insn 26 25 27 4 (set (reg/f:SI 3 r3 [127])
        (mem/f:SI (plus:SI (reg/f:SI 3 r3 [126])
                (const_int 4 [0x4])) [4 s_12->queue+0 S4 A32])) "pv.c":75:9 253 {*arm_movsi_insn}
     (nil))
(insn 27 26 28 4 (set (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [4 r+0 S4 A32])
        (reg/f:SI 3 r3 [127])) "pv.c":75:9 253 {*arm_movsi_insn}
     (nil))
(insn 28 27 29 4 (set (reg/f:SI 3 r3 [128])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [4 r+0 S4 A32])) "pv.c":76:9 253 {*arm_movsi_insn}
     (nil))
(insn 29 28 30 4 (set (reg/f:SI 3 r3 [129])
        (mem/f:SI (reg/f:SI 3 r3 [128]) [4 r_15->next+0 S4 A32])) "pv.c":76:9 253 {*arm_movsi_insn}
     (nil))
(insn 30 29 90 4 (set (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -20 [0xffffffffffffffec])) [4 q+0 S4 A64])
        (reg/f:SI 3 r3 [129])) "pv.c":76:9 253 {*arm_movsi_insn}
     (nil))
(jump_insn 90 30 91 4 (set (pc)
        (label_ref 52)) "pv.c":77:12 284 {*arm_jump}
     (nil)
 -> 52)
;;  succ:       8 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 91 90 54)
;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 100 [cc]
(code_label 54 91 33 5 14 (nil) [1 uses])
(note 33 54 34 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 5 (set (reg:SI 2 r2 [130])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -24 [0xffffffffffffffe8])) [4 p+0 S4 A32])) "pv.c":78:12 253 {*arm_movsi_insn}
     (nil))
(insn 35 34 36 5 (set (reg:SI 3 r3 [131])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -20 [0xffffffffffffffec])) [4 q+0 S4 A64])) "pv.c":78:12 253 {*arm_movsi_insn}
     (nil))
(insn 36 35 37 5 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 2 r2 [130])
            (reg:SI 3 r3 [131]))) "pv.c":78:12 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 37 36 38 5 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 45)
            (pc))) "pv.c":78:12 273 {arm_cond_branch}
     (nil)
 -> 45)
;;  succ:       6 (FALLTHRU)
;;              7
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
(note 38 37 39 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 6 (set (reg/f:SI 3 r3 [132])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -20 [0xffffffffffffffec])) [4 q+0 S4 A64])) "pv.c":79:15 253 {*arm_movsi_insn}
     (nil))
(insn 40 39 41 6 (set (reg/f:SI 2 r2 [orig:115 _3 ] [115])
        (mem/f:SI (reg/f:SI 3 r3 [132]) [4 q_7->next+0 S4 A32])) "pv.c":79:15 253 {*arm_movsi_insn}
     (nil))
(insn 41 40 42 6 (set (reg/f:SI 3 r3 [133])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [4 r+0 S4 A32])) "pv.c":79:12 253 {*arm_movsi_insn}
     (nil))
(insn 42 41 92 6 (set (mem/f:SI (reg/f:SI 3 r3 [133]) [4 r_8->next+0 S4 A32])
        (reg/f:SI 2 r2 [orig:115 _3 ] [115])) "pv.c":79:12 253 {*arm_movsi_insn}
     (nil))
(jump_insn 92 42 93 6 (set (pc)
        (label_ref 58)) "pv.c":80:11 284 {*arm_jump}
     (nil)
 -> 58)
;;  succ:       9 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 93 92 45)
;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3]
(code_label 45 93 46 7 13 (nil) [1 uses])
(note 46 45 47 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 7 (set (reg/f:SI 3 r3 [134])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -20 [0xffffffffffffffec])) [4 q+0 S4 A64])) "pv.c":82:11 253 {*arm_movsi_insn}
     (nil))
(insn 48 47 49 7 (set (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [4 r+0 S4 A32])
        (reg/f:SI 3 r3 [134])) "pv.c":82:11 253 {*arm_movsi_insn}
     (nil))
(insn 49 48 50 7 (set (reg/f:SI 3 r3 [135])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -20 [0xffffffffffffffec])) [4 q+0 S4 A64])) "pv.c":83:11 253 {*arm_movsi_insn}
     (nil))
(insn 50 49 51 7 (set (reg/f:SI 3 r3 [136])
        (mem/f:SI (reg/f:SI 3 r3 [135]) [4 q_7->next+0 S4 A32])) "pv.c":83:11 253 {*arm_movsi_insn}
     (nil))
(insn 51 50 52 7 (set (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -20 [0xffffffffffffffec])) [4 q+0 S4 A64])
        (reg/f:SI 3 r3 [136])) "pv.c":83:11 253 {*arm_movsi_insn}
     (nil))
;;  succ:       8 (FALLTHRU,DFS_BACK)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU,DFS_BACK)
;;              4 [always] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(code_label 52 51 53 8 12 (nil) [1 uses])
(note 53 52 55 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 55 53 56 8 (set (reg:SI 3 r3 [137])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -20 [0xffffffffffffffec])) [4 q+0 S4 A64])) "pv.c":77:13 253 {*arm_movsi_insn}
     (nil))
(insn 56 55 57 8 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [137])
            (const_int 0 [0]))) "pv.c":77:13 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 57 56 58 8 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 54)
            (pc))) "pv.c":77:13 273 {arm_cond_branch}
     (nil)
 -> 54)
;;  succ:       5
;;              9 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;;              3 [always] 
;;              6 [always] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(code_label 58 57 59 9 11 (nil) [2 uses])
(note 59 58 60 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 9 (set (reg/f:SI 3 r3 [138])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [2 s+0 S4 A64])) "pv.c":86:6 253 {*arm_movsi_insn}
     (nil))
(insn 61 60 62 9 (set (reg:SI 3 r3 [orig:116 _4 ] [116])
        (mem:SI (reg/f:SI 3 r3 [138]) [1 s_12->value+0 S4 A32])) "pv.c":86:6 253 {*arm_movsi_insn}
     (nil))
(insn 62 61 63 9 (set (reg:SI 2 r2 [orig:117 _5 ] [117])
        (plus:SI (reg:SI 3 r3 [orig:116 _4 ] [116])
            (const_int 1 [0x1]))) "pv.c":86:13 7 {*arm_addsi3}
     (nil))
(insn 63 62 64 9 (set (reg/f:SI 3 r3 [139])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [2 s+0 S4 A64])) "pv.c":86:13 253 {*arm_movsi_insn}
     (nil))
(insn 64 63 65 9 (set (mem:SI (reg/f:SI 3 r3 [139]) [1 s_12->value+0 S4 A32])
        (reg:SI 2 r2 [orig:117 _5 ] [117])) "pv.c":86:13 253 {*arm_movsi_insn}
     (nil))
(insn 65 64 66 9 (set (reg/f:SI 3 r3 [140])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -24 [0xffffffffffffffe8])) [4 p+0 S4 A32])) "pv.c":87:15 253 {*arm_movsi_insn}
     (nil))
(insn 66 65 67 9 (set (reg:SI 2 r2 [141])
        (const_int 1 [0x1])) "pv.c":87:15 253 {*arm_movsi_insn}
     (nil))
(insn 67 66 68 9 (set (mem:SI (plus:SI (reg/f:SI 3 r3 [140])
                (const_int 28 [0x1c])) [1 p_11(D)->status+0 S4 A32])
        (reg:SI 2 r2 [141])) "pv.c":87:15 253 {*arm_movsi_insn}
     (nil))
(insn 68 67 69 9 (set (reg/f:SI 3 r3 [142])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -24 [0xffffffffffffffe8])) [4 p+0 S4 A32])) "pv.c":87:31 253 {*arm_movsi_insn}
     (nil))
(insn 69 68 70 9 (set (reg:SI 2 r2 [143])
        (const_int 0 [0])) "pv.c":87:31 253 {*arm_movsi_insn}
     (nil))
(insn 70 69 71 9 (set (mem/f:SI (plus:SI (reg/f:SI 3 r3 [142])
                (const_int 88 [0x58])) [2 p_11(D)->sem+0 S4 A32])
        (reg:SI 2 r2 [143])) "pv.c":87:31 253 {*arm_movsi_insn}
     (nil))
(insn 71 70 72 9 (set (reg:SI 1 r1)
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -24 [0xffffffffffffffe8])) [4 p+0 S4 A32])) "pv.c":88:5 253 {*arm_movsi_insn}
     (nil))
(insn 72 71 73 9 (set (reg:SI 0 r0)
        (symbol_ref:SI ("readyQueue") [flags 0x40]  <var_decl 0x7fc2bde4c6c0 readyQueue>)) "pv.c":88:5 253 {*arm_movsi_insn}
     (nil))
(call_insn 73 72 74 9 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("enqueue") [flags 0x41]  <function_decl 0x7fc2bd161000 enqueue>) [0 enqueue S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "pv.c":88:5 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 74 73 75 9 (set (reg/f:SI 3 r3 [144])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -24 [0xffffffffffffffe8])) [4 p+0 S4 A32])) "pv.c":89:5 253 {*arm_movsi_insn}
     (nil))
(insn 75 74 76 9 (set (reg:SI 3 r3 [orig:118 _6 ] [118])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [144])
                (const_int 24 [0x18])) [1 p_11(D)->pid+0 S4 A32])) "pv.c":89:5 253 {*arm_movsi_insn}
     (nil))
(insn 76 75 77 9 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [orig:118 _6 ] [118])) "pv.c":89:5 253 {*arm_movsi_insn}
     (nil))
(insn 77 76 78 9 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x7fc2bd168c60 *.LC0>)) "pv.c":89:5 253 {*arm_movsi_insn}
     (nil))
(call_insn 78 77 79 9 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kprintf") [flags 0x41]  <function_decl 0x7fc2bd16d500 kprintf>) [0 kprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "pv.c":89:5 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 79 78 80 9 (set (reg:SI 0 r0)
        (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [1 ps+0 S4 A32])) "pv.c":90:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 80 79 83 9 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("int_on") [flags 0x41]  <function_decl 0x7fc2bd161c00 int_on>) [0 int_on S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "pv.c":90:3 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 83 80 84 9 (clobber (reg/i:SI 0 r0)) "pv.c":91:1 -1
     (nil))
(insn 84 83 87 9 (clobber (reg:SI 3 r3 [orig:119 <retval> ] [119])) "pv.c":91:1 -1
     (nil))
(insn 87 84 82 9 (const_int 0 [0]) "pv.c":91:1 311 {nop}
     (nil))
(insn 82 87 85 9 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:119 <retval> ] [119])) "pv.c":91:1 253 {*arm_movsi_insn}
     (nil))
(insn 85 82 100 9 (use (reg/i:SI 0 r0)) "pv.c":91:1 -1
     (nil))
(note 100 85 101 9 NOTE_INSN_EPILOGUE_BEG)
(insn 101 100 102 9 (unspec_volatile [
            (const_int 0 [0])
        ] VUNSPEC_BLOCKAGE) "pv.c":91:1 -1
     (nil))
(insn/f 102 101 103 9 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 11 fp)
            (const_int -4 [0xfffffffffffffffc]))) "pv.c":91:1 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 13 sp)
            (plus:SI (reg/f:SI 11 fp)
                (const_int -4 [0xfffffffffffffffc])))
        (nil)))
(insn 103 102 104 9 (unspec:SI [
            (reg/f:SI 13 sp)
        ] UNSPEC_REGISTER_USE) "pv.c":91:1 -1
     (nil))
(jump_insn 104 103 105 9 (parallel [
            (return)
            (set/f (reg/f:SI 13 sp)
                (plus:SI (reg/f:SI 13 sp)
                    (const_int 8 [0x8])))
            (set/f (reg/f:SI 11 fp)
                (mem/c:SI (reg/f:SI 13 sp) [8  S4 A32]))
            (set/f (reg:SI 15 pc)
                (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                        (const_int 4 [0x4])) [8  S4 A32]))
        ]) "pv.c":91:1 -1
     (expr_list:REG_CFA_RESTORE (reg/f:SI 11 fp)
        (nil))
 -> return)
;;  succ:       EXIT [always] 
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp]

(barrier 105 104 94)
(note 94 105 0 NOTE_INSN_DELETED)
