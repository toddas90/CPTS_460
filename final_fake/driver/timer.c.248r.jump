
;; Function timer0_handler (timer0_handler, funcdef_no=0, decl_uid=4520, cgraph_uid=1, symbol_order=11)


34 basic blocks, 50 edges.
;; basic block 0, loop depth 0, maybe hot
;;  prev block (nil), next block 2, flags: (RTL)
;;  pred:      
;;  succ:       2 (FALLTHRU)

;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 200)
        (symbol_ref:SI ("color") [flags 0x40]  <var_decl 0x7f50612f5480 color>)) "timer.c":76:14 253 {*arm_movsi_insn}
     (nil))
(insn 6 5 7 2 (set (reg:SI 113 [ color.0_1 ])
        (mem/c:SI (reg/f:SI 200) [2 color+0 S4 A32])) "timer.c":76:14 253 {*arm_movsi_insn}
     (nil))
(insn 7 6 8 2 (set (reg/f:SI 201)
        (symbol_ref:SI ("oldcolor") [flags 0x2]  <var_decl 0x7f50606126c0 oldcolor>)) "timer.c":76:14 253 {*arm_movsi_insn}
     (nil))
(insn 8 7 9 2 (set (mem/c:SI (reg/f:SI 201) [2 oldcolor+0 S4 A32])
        (reg:SI 113 [ color.0_1 ])) "timer.c":76:14 253 {*arm_movsi_insn}
     (nil))
(insn 9 8 10 2 (set (reg/f:SI 202)
        (symbol_ref:SI ("color") [flags 0x40]  <var_decl 0x7f50612f5480 color>)) "timer.c":77:11 253 {*arm_movsi_insn}
     (nil))
(insn 10 9 11 2 (set (reg:SI 203)
        (const_int 1 [0x1])) "timer.c":77:11 253 {*arm_movsi_insn}
     (nil))
(insn 11 10 12 2 (set (mem/c:SI (reg/f:SI 202) [2 color+0 S4 A32])
        (reg:SI 203)) "timer.c":77:11 253 {*arm_movsi_insn}
     (nil))
(insn 12 11 13 2 (set (reg/f:SI 204)
        (symbol_ref:SI ("tp") [flags 0x2]  <var_decl 0x7f5060612000 tp>)) "timer.c":79:13 253 {*arm_movsi_insn}
     (nil))
(insn 13 12 14 2 (set (reg/f:SI 114 [ _2 ])
        (mem/f/c:SI (reg/f:SI 204) [1 tp[0]+0 S4 A32])) "timer.c":79:13 253 {*arm_movsi_insn}
     (nil))
(insn 14 13 15 2 (set (reg:SI 115 [ _3 ])
        (mem/v:SI (plus:SI (reg/f:SI 114 [ _2 ])
                (const_int 16 [0x10])) [2 _2->RIS+0 S4 A32])) "timer.c":79:16 253 {*arm_movsi_insn}
     (nil))
(insn 15 14 16 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -28 [0xffffffffffffffe4])) [2 ris+0 S4 A32])
        (reg:SI 115 [ _3 ])) "timer.c":79:9 253 {*arm_movsi_insn}
     (nil))
(insn 16 15 17 2 (set (reg/f:SI 205)
        (symbol_ref:SI ("tp") [flags 0x2]  <var_decl 0x7f5060612000 tp>)) "timer.c":80:13 253 {*arm_movsi_insn}
     (nil))
(insn 17 16 18 2 (set (reg/f:SI 116 [ _4 ])
        (mem/f/c:SI (reg/f:SI 205) [1 tp[0]+0 S4 A32])) "timer.c":80:13 253 {*arm_movsi_insn}
     (nil))
(insn 18 17 19 2 (set (reg:SI 117 [ _5 ])
        (mem/v:SI (plus:SI (reg/f:SI 116 [ _4 ])
                (const_int 20 [0x14])) [2 _4->MIS+0 S4 A32])) "timer.c":80:16 253 {*arm_movsi_insn}
     (nil))
(insn 19 18 20 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -24 [0xffffffffffffffe8])) [2 mis+0 S4 A64])
        (reg:SI 117 [ _5 ])) "timer.c":80:9 253 {*arm_movsi_insn}
     (nil))
(insn 20 19 21 2 (set (reg/f:SI 206)
        (symbol_ref:SI ("tp") [flags 0x2]  <var_decl 0x7f5060612000 tp>)) "timer.c":81:15 253 {*arm_movsi_insn}
     (nil))
(insn 21 20 22 2 (set (reg/f:SI 118 [ _6 ])
        (mem/f/c:SI (reg/f:SI 206) [1 tp[0]+0 S4 A32])) "timer.c":81:15 253 {*arm_movsi_insn}
     (nil))
(insn 22 21 23 2 (set (reg:SI 119 [ _7 ])
        (mem/v:SI (plus:SI (reg/f:SI 118 [ _6 ])
                (const_int 4 [0x4])) [2 _6->VALUE+0 S4 A32])) "timer.c":81:18 253 {*arm_movsi_insn}
     (nil))
(insn 23 22 24 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -20 [0xffffffffffffffec])) [2 value+0 S4 A32])
        (reg:SI 119 [ _7 ])) "timer.c":81:11 253 {*arm_movsi_insn}
     (nil))
(insn 24 23 25 2 (set (reg/f:SI 207)
        (symbol_ref:SI ("tp") [flags 0x2]  <var_decl 0x7f5060612000 tp>)) "timer.c":82:15 253 {*arm_movsi_insn}
     (nil))
(insn 25 24 26 2 (set (reg/f:SI 120 [ _8 ])
        (mem/f/c:SI (reg/f:SI 207) [1 tp[0]+0 S4 A32])) "timer.c":82:15 253 {*arm_movsi_insn}
     (nil))
(insn 26 25 27 2 (set (reg:SI 121 [ _9 ])
        (mem/v:SI (reg/f:SI 120 [ _8 ]) [2 _8->LOAD+0 S4 A32])) "timer.c":82:18 253 {*arm_movsi_insn}
     (nil))
(insn 27 26 28 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [2 load+0 S4 A64])
        (reg:SI 121 [ _9 ])) "timer.c":82:11 253 {*arm_movsi_insn}
     (nil))
(insn 28 27 29 2 (set (reg/f:SI 208)
        (symbol_ref:SI ("tp") [flags 0x2]  <var_decl 0x7f5060612000 tp>)) "timer.c":83:13 253 {*arm_movsi_insn}
     (nil))
(insn 29 28 30 2 (set (reg/f:SI 122 [ _10 ])
        (mem/f/c:SI (reg/f:SI 208) [1 tp[0]+0 S4 A32])) "timer.c":83:13 253 {*arm_movsi_insn}
     (nil))
(insn 30 29 31 2 (set (reg:SI 123 [ _11 ])
        (mem/v:SI (plus:SI (reg/f:SI 122 [ _10 ])
                (const_int 24 [0x18])) [2 _10->BGLOAD+0 S4 A32])) "timer.c":83:16 253 {*arm_movsi_insn}
     (nil))
(insn 31 30 32 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [2 bload+0 S4 A32])
        (reg:SI 123 [ _11 ])) "timer.c":83:10 253 {*arm_movsi_insn}
     (nil))
(insn 32 31 33 2 (set (reg/f:SI 209)
        (symbol_ref:SI ("tick") [flags 0x2]  <var_decl 0x7f5060612630 tick>)) "timer.c":85:9 253 {*arm_movsi_insn}
     (nil))
(insn 33 32 34 2 (set (reg:SI 124 [ tick.1_12 ])
        (mem/c:SI (reg/f:SI 209) [2 tick+0 S4 A32])) "timer.c":85:9 253 {*arm_movsi_insn}
     (nil))
(insn 34 33 35 2 (set (reg:SI 125 [ _13 ])
        (plus:SI (reg:SI 124 [ tick.1_12 ])
            (const_int 1 [0x1]))) "timer.c":85:9 7 {*arm_addsi3}
     (nil))
(insn 35 34 36 2 (set (reg/f:SI 210)
        (symbol_ref:SI ("tick") [flags 0x2]  <var_decl 0x7f5060612630 tick>)) "timer.c":85:9 253 {*arm_movsi_insn}
     (nil))
(insn 36 35 37 2 (set (mem/c:SI (reg/f:SI 210) [2 tick+0 S4 A32])
        (reg:SI 125 [ _13 ])) "timer.c":85:9 253 {*arm_movsi_insn}
     (nil))
(insn 37 36 38 2 (set (reg/f:SI 211)
        (symbol_ref:SI ("tick") [flags 0x2]  <var_decl 0x7f5060612630 tick>)) "timer.c":86:14 253 {*arm_movsi_insn}
     (nil))
(insn 38 37 39 2 (set (reg:SI 126 [ tick.2_14 ])
        (mem/c:SI (reg/f:SI 211) [2 tick+0 S4 A32])) "timer.c":86:14 253 {*arm_movsi_insn}
     (nil))
(insn 39 38 40 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 126 [ tick.2_14 ])
            (const_int 16 [0x10]))) "timer.c":86:8 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 40 39 41 2 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 50)
            (pc))) "timer.c":86:8 273 {arm_cond_branch}
     (nil)
 -> 50)
;;  succ:       3 (FALLTHRU)
;;              4

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 41 40 42 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 3 (set (reg/f:SI 212)
        (symbol_ref:SI ("tick") [flags 0x2]  <var_decl 0x7f5060612630 tick>)) "timer.c":87:11 253 {*arm_movsi_insn}
     (nil))
(insn 43 42 44 3 (set (reg:SI 213)
        (const_int 0 [0])) "timer.c":87:11 253 {*arm_movsi_insn}
     (nil))
(insn 44 43 45 3 (set (mem/c:SI (reg/f:SI 212) [2 tick+0 S4 A32])
        (reg:SI 213)) "timer.c":87:11 253 {*arm_movsi_insn}
     (nil))
(insn 45 44 46 3 (set (reg/f:SI 214)
        (symbol_ref:SI ("ss") [flags 0x40]  <var_decl 0x7f50606125a0 ss>)) "timer.c":87:17 253 {*arm_movsi_insn}
     (nil))
(insn 46 45 47 3 (set (reg:SI 127 [ ss.3_15 ])
        (mem/c:SI (reg/f:SI 214) [2 ss+0 S4 A32])) "timer.c":87:17 253 {*arm_movsi_insn}
     (nil))
(insn 47 46 48 3 (set (reg:SI 128 [ _16 ])
        (plus:SI (reg:SI 127 [ ss.3_15 ])
            (const_int 1 [0x1]))) "timer.c":87:17 7 {*arm_addsi3}
     (nil))
(insn 48 47 49 3 (set (reg/f:SI 215)
        (symbol_ref:SI ("ss") [flags 0x40]  <var_decl 0x7f50606125a0 ss>)) "timer.c":87:17 253 {*arm_movsi_insn}
     (nil))
(insn 49 48 50 3 (set (mem/c:SI (reg/f:SI 215) [2 ss+0 S4 A32])
        (reg:SI 128 [ _16 ])) "timer.c":87:17 253 {*arm_movsi_insn}
     (nil))
;;  succ:       4 (FALLTHRU)

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              3 (FALLTHRU)
(code_label 50 49 51 4 2 (nil) [1 uses])
(note 51 50 52 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 4 (set (reg/f:SI 216)
        (symbol_ref:SI ("ss") [flags 0x40]  <var_decl 0x7f50606125a0 ss>)) "timer.c":89:11 253 {*arm_movsi_insn}
     (nil))
(insn 53 52 54 4 (set (reg:SI 129 [ ss.4_17 ])
        (mem/c:SI (reg/f:SI 216) [2 ss+0 S4 A32])) "timer.c":89:11 253 {*arm_movsi_insn}
     (nil))
(insn 54 53 55 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 129 [ ss.4_17 ])
            (const_int 60 [0x3c]))) "timer.c":89:8 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 55 54 56 4 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 65)
            (pc))) "timer.c":89:8 273 {arm_cond_branch}
     (nil)
 -> 65)
;;  succ:       5 (FALLTHRU)
;;              6

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 56 55 57 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 5 (set (reg/f:SI 217)
        (symbol_ref:SI ("ss") [flags 0x40]  <var_decl 0x7f50606125a0 ss>)) "timer.c":90:10 253 {*arm_movsi_insn}
     (nil))
(insn 58 57 59 5 (set (reg:SI 218)
        (const_int 0 [0])) "timer.c":90:10 253 {*arm_movsi_insn}
     (nil))
(insn 59 58 60 5 (set (mem/c:SI (reg/f:SI 217) [2 ss+0 S4 A32])
        (reg:SI 218)) "timer.c":90:10 253 {*arm_movsi_insn}
     (nil))
(insn 60 59 61 5 (set (reg/f:SI 219)
        (symbol_ref:SI ("mm") [flags 0x40]  <var_decl 0x7f5060612510 mm>)) "timer.c":90:17 253 {*arm_movsi_insn}
     (nil))
(insn 61 60 62 5 (set (reg:SI 130 [ mm.5_18 ])
        (mem/c:SI (reg/f:SI 219) [2 mm+0 S4 A32])) "timer.c":90:17 253 {*arm_movsi_insn}
     (nil))
(insn 62 61 63 5 (set (reg:SI 131 [ _19 ])
        (plus:SI (reg:SI 130 [ mm.5_18 ])
            (const_int 1 [0x1]))) "timer.c":90:17 7 {*arm_addsi3}
     (nil))
(insn 63 62 64 5 (set (reg/f:SI 220)
        (symbol_ref:SI ("mm") [flags 0x40]  <var_decl 0x7f5060612510 mm>)) "timer.c":90:17 253 {*arm_movsi_insn}
     (nil))
(insn 64 63 65 5 (set (mem/c:SI (reg/f:SI 220) [2 mm+0 S4 A32])
        (reg:SI 131 [ _19 ])) "timer.c":90:17 253 {*arm_movsi_insn}
     (nil))
;;  succ:       6 (FALLTHRU)

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
;;              5 (FALLTHRU)
(code_label 65 64 66 6 3 (nil) [1 uses])
(note 66 65 67 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 6 (set (reg/f:SI 221)
        (symbol_ref:SI ("mm") [flags 0x40]  <var_decl 0x7f5060612510 mm>)) "timer.c":92:12 253 {*arm_movsi_insn}
     (nil))
(insn 68 67 69 6 (set (reg:SI 132 [ mm.6_20 ])
        (mem/c:SI (reg/f:SI 221) [2 mm+0 S4 A32])) "timer.c":92:12 253 {*arm_movsi_insn}
     (nil))
(insn 69 68 70 6 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 132 [ mm.6_20 ])
            (const_int 60 [0x3c]))) "timer.c":92:8 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 70 69 71 6 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 80)
            (pc))) "timer.c":92:8 273 {arm_cond_branch}
     (nil)
 -> 80)
;;  succ:       7 (FALLTHRU)
;;              8

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 (FALLTHRU)
(note 71 70 72 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 7 (set (reg/f:SI 222)
        (symbol_ref:SI ("mm") [flags 0x40]  <var_decl 0x7f5060612510 mm>)) "timer.c":93:12 253 {*arm_movsi_insn}
     (nil))
(insn 73 72 74 7 (set (reg:SI 223)
        (const_int 0 [0])) "timer.c":93:12 253 {*arm_movsi_insn}
     (nil))
(insn 74 73 75 7 (set (mem/c:SI (reg/f:SI 222) [2 mm+0 S4 A32])
        (reg:SI 223)) "timer.c":93:12 253 {*arm_movsi_insn}
     (nil))
(insn 75 74 76 7 (set (reg/f:SI 224)
        (symbol_ref:SI ("hh") [flags 0x40]  <var_decl 0x7f5060612480 hh>)) "timer.c":94:4 253 {*arm_movsi_insn}
     (nil))
(insn 76 75 77 7 (set (reg:SI 133 [ hh.7_21 ])
        (mem/c:SI (reg/f:SI 224) [2 hh+0 S4 A32])) "timer.c":94:4 253 {*arm_movsi_insn}
     (nil))
(insn 77 76 78 7 (set (reg:SI 134 [ _22 ])
        (plus:SI (reg:SI 133 [ hh.7_21 ])
            (const_int 1 [0x1]))) "timer.c":94:4 7 {*arm_addsi3}
     (nil))
(insn 78 77 79 7 (set (reg/f:SI 225)
        (symbol_ref:SI ("hh") [flags 0x40]  <var_decl 0x7f5060612480 hh>)) "timer.c":94:4 253 {*arm_movsi_insn}
     (nil))
(insn 79 78 80 7 (set (mem/c:SI (reg/f:SI 225) [2 hh+0 S4 A32])
        (reg:SI 134 [ _22 ])) "timer.c":94:4 253 {*arm_movsi_insn}
     (nil))
;;  succ:       8 (FALLTHRU)

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       6
;;              7 (FALLTHRU)
(code_label 80 79 81 8 4 (nil) [1 uses])
(note 81 80 82 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 8 (set (reg/f:SI 226)
        (symbol_ref:SI ("tick") [flags 0x2]  <var_decl 0x7f5060612630 tick>)) "timer.c":96:13 253 {*arm_movsi_insn}
     (nil))
(insn 83 82 84 8 (set (reg:SI 135 [ tick.8_23 ])
        (mem/c:SI (reg/f:SI 226) [2 tick+0 S4 A32])) "timer.c":96:13 253 {*arm_movsi_insn}
     (nil))
(insn 84 83 85 8 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 135 [ tick.8_23 ])
            (const_int 0 [0]))) "timer.c":96:8 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 85 84 86 8 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 382)
            (pc))) "timer.c":96:8 273 {arm_cond_branch}
     (nil)
 -> 382)
;;  succ:       9 (FALLTHRU)
;;              27

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 (FALLTHRU)
(note 86 85 87 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 88 9 (set (reg/f:SI 227)
        (symbol_ref:SI ("color") [flags 0x40]  <var_decl 0x7f50612f5480 color>)) "timer.c":97:16 253 {*arm_movsi_insn}
     (nil))
(insn 88 87 89 9 (set (reg:SI 136 [ color.9_24 ])
        (mem/c:SI (reg/f:SI 227) [2 color+0 S4 A32])) "timer.c":97:16 253 {*arm_movsi_insn}
     (nil))
(insn 89 88 90 9 (set (reg/f:SI 228)
        (symbol_ref:SI ("oldcolor") [flags 0x2]  <var_decl 0x7f50606126c0 oldcolor>)) "timer.c":97:16 253 {*arm_movsi_insn}
     (nil))
(insn 90 89 91 9 (set (mem/c:SI (reg/f:SI 228) [2 oldcolor+0 S4 A32])
        (reg:SI 136 [ color.9_24 ])) "timer.c":97:16 253 {*arm_movsi_insn}
     (nil))
(insn 91 90 92 9 (set (reg/f:SI 229)
        (symbol_ref:SI ("color") [flags 0x40]  <var_decl 0x7f50612f5480 color>)) "timer.c":98:13 253 {*arm_movsi_insn}
     (nil))
(insn 92 91 93 9 (set (reg:SI 230)
        (const_int 1 [0x1])) "timer.c":98:13 253 {*arm_movsi_insn}
     (nil))
(insn 93 92 94 9 (set (mem/c:SI (reg/f:SI 229) [2 color+0 S4 A32])
        (reg:SI 230)) "timer.c":98:13 253 {*arm_movsi_insn}
     (nil))
(insn 94 93 95 9 (set (reg:SI 231)
        (const_int 0 [0])) "timer.c":99:13 253 {*arm_movsi_insn}
     (nil))
(insn 95 94 114 9 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -36 [0xffffffffffffffdc])) [2 i+0 S4 A32])
        (reg:SI 231)) "timer.c":99:13 253 {*arm_movsi_insn}
     (nil))
;;  succ:       11 [always]  (FALLTHRU)

;; basic block 10, loop depth 1, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       11
(code_label 114 95 98 10 7 (nil) [1 uses])
(note 98 114 99 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 99 98 100 10 (set (reg/f:SI 232)
        (symbol_ref:SI ("clock") [flags 0x2]  <var_decl 0x7f5060612360 clock>)) "timer.c":100:11 253 {*arm_movsi_insn}
     (nil))
(insn 100 99 101 10 (set (reg:SI 234)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -36 [0xffffffffffffffdc])) [2 i+0 S4 A32])) "timer.c":100:11 253 {*arm_movsi_insn}
     (nil))
(insn 101 100 102 10 (set (reg/f:SI 233)
        (plus:SI (reg/f:SI 232)
            (reg:SI 234))) "timer.c":100:11 7 {*arm_addsi3}
     (nil))
(insn 102 101 103 10 (set (reg:SI 137 [ _25 ])
        (zero_extend:SI (mem:QI (reg/f:SI 233) [0 clock[i_88]+0 S1 A8]))) "timer.c":100:11 175 {*arm_zero_extendqisi2}
     (nil))
(insn 103 102 104 10 (set (reg:SI 235)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -36 [0xffffffffffffffdc])) [2 i+0 S4 A32])) "timer.c":100:11 253 {*arm_movsi_insn}
     (nil))
(insn 104 103 105 10 (set (reg:SI 138 [ _26 ])
        (plus:SI (reg:SI 235)
            (const_int 70 [0x46]))) "timer.c":100:11 7 {*arm_addsi3}
     (nil))
(insn 105 104 106 10 (set (reg:SI 2 r2)
        (reg:SI 138 [ _26 ])) "timer.c":100:11 253 {*arm_movsi_insn}
     (nil))
(insn 106 105 107 10 (set (reg:SI 1 r1)
        (const_int 0 [0])) "timer.c":100:11 253 {*arm_movsi_insn}
     (nil))
(insn 107 106 108 10 (set (reg:SI 0 r0)
        (reg:SI 137 [ _25 ])) "timer.c":100:11 253 {*arm_movsi_insn}
     (nil))
(call_insn 108 107 109 10 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("unkpchar") [flags 0x41]  <function_decl 0x7f506060aa00 unkpchar>) [0 unkpchar S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":100:11 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 109 108 110 10 (set (reg:SI 237)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -36 [0xffffffffffffffdc])) [2 i+0 S4 A32])) "timer.c":99:23 253 {*arm_movsi_insn}
     (nil))
(insn 110 109 111 10 (set (reg:SI 236)
        (plus:SI (reg:SI 237)
            (const_int 1 [0x1]))) "timer.c":99:23 7 {*arm_addsi3}
     (nil))
(insn 111 110 112 10 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -36 [0xffffffffffffffdc])) [2 i+0 S4 A32])
        (reg:SI 236)) "timer.c":99:23 253 {*arm_movsi_insn}
     (nil))
;;  succ:       11 (FALLTHRU,DFS_BACK)

;; basic block 11, loop depth 1, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 [always]  (FALLTHRU)
;;              10 (FALLTHRU,DFS_BACK)
(code_label 112 111 113 11 6 (nil) [0 uses])
(note 113 112 117 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 117 113 118 11 (set (reg:SI 238)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -36 [0xffffffffffffffdc])) [2 i+0 S4 A32])) "timer.c":99:18 253 {*arm_movsi_insn}
     (nil))
(insn 118 117 119 11 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 238)
            (const_int 7 [0x7]))) "timer.c":99:18 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 119 118 120 11 (set (pc)
        (if_then_else (le (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 114)
            (pc))) "timer.c":99:18 273 {arm_cond_branch}
     (nil)
 -> 114)
;;  succ:       10
;;              12 (FALLTHRU)

;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       11 (FALLTHRU)
(note 120 119 121 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 121 120 122 12 (set (reg/f:SI 239)
        (symbol_ref:SI ("ss") [flags 0x40]  <var_decl 0x7f50606125a0 ss>)) "timer.c":103:23 253 {*arm_movsi_insn}
     (nil))
(insn 122 121 123 12 (set (reg:SI 139 [ ss.10_27 ])
        (mem/c:SI (reg/f:SI 239) [2 ss+0 S4 A32])) "timer.c":103:23 253 {*arm_movsi_insn}
     (nil))
(insn 123 122 124 12 (set (reg:SI 241)
        (const_int 1717986919 [0x66666667])) "timer.c":103:23 253 {*arm_movsi_insn}
     (nil))
(insn 124 123 125 12 (parallel [
            (set (reg:SI 240)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 139 [ ss.10_27 ]))
                            (sign_extend:DI (reg:SI 241)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
        ]) "timer.c":103:23 71 {*smull_high}
     (nil))
(insn 125 124 126 12 (set (reg:SI 242)
        (ashiftrt:SI (reg:SI 240)
            (const_int 2 [0x2]))) "timer.c":103:23 147 {*arm_shiftsi3}
     (nil))
(insn 126 125 127 12 (set (reg:SI 243)
        (ashiftrt:SI (reg:SI 139 [ ss.10_27 ])
            (const_int 31 [0x1f]))) "timer.c":103:23 147 {*arm_shiftsi3}
     (nil))
(insn 127 126 128 12 (set (reg:SI 140 [ _28 ])
        (minus:SI (reg:SI 242)
            (reg:SI 243))) "timer.c":103:23 45 {*arm_subsi3_insn}
     (expr_list:REG_EQUAL (div:SI (reg:SI 139 [ ss.10_27 ])
            (const_int 10 [0xa]))
        (nil)))
(insn 128 127 129 12 (set (reg:SI 244)
        (reg:SI 140 [ _28 ])) "timer.c":103:23 253 {*arm_movsi_insn}
     (nil))
(insn 129 128 130 12 (set (reg:SI 244)
        (ashift:SI (reg:SI 244)
            (const_int 2 [0x2]))) "timer.c":103:23 147 {*arm_shiftsi3}
     (nil))
(insn 130 129 131 12 (set (reg:SI 244)
        (plus:SI (reg:SI 244)
            (reg:SI 140 [ _28 ]))) "timer.c":103:23 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 140 [ _28 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 131 130 132 12 (set (reg:SI 245)
        (ashift:SI (reg:SI 244)
            (const_int 1 [0x1]))) "timer.c":103:23 147 {*arm_shiftsi3}
     (nil))
(insn 132 131 133 12 (set (reg:SI 244)
        (reg:SI 245)) "timer.c":103:23 253 {*arm_movsi_insn}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 140 [ _28 ])
            (const_int 10 [0xa]))
        (nil)))
(insn 133 132 134 12 (set (reg:SI 140 [ _28 ])
        (minus:SI (reg:SI 139 [ ss.10_27 ])
            (reg:SI 244))) "timer.c":103:23 45 {*arm_subsi3_insn}
     (nil))
(insn 134 133 135 12 (set (reg:SI 141 [ _29 ])
        (and:SI (reg:SI 140 [ _28 ])
            (const_int 255 [0xff]))) "timer.c":103:19 90 {*arm_andsi3_insn}
     (nil))
(insn 135 134 136 12 (set (reg:SI 246)
        (plus:SI (reg:SI 141 [ _29 ])
            (const_int 48 [0x30]))) "timer.c":103:19 7 {*arm_addsi3}
     (nil))
(insn 136 135 137 12 (set (reg:SI 142 [ _30 ])
        (and:SI (reg:SI 246)
            (const_int 255 [0xff]))) "timer.c":103:19 90 {*arm_andsi3_insn}
     (nil))
(insn 137 136 138 12 (set (reg/f:SI 247)
        (symbol_ref:SI ("clock") [flags 0x2]  <var_decl 0x7f5060612360 clock>)) "timer.c":103:15 253 {*arm_movsi_insn}
     (nil))
(insn 138 137 139 12 (set (reg:QI 248)
        (subreg/s/v:QI (reg:SI 142 [ _30 ]) 0)) "timer.c":103:15 263 {*arm_movqi_insn}
     (nil))
(insn 139 138 140 12 (set (mem/c:QI (plus:SI (reg/f:SI 247)
                (const_int 7 [0x7])) [0 clock[7]+0 S1 A8])
        (reg:QI 248)) "timer.c":103:15 263 {*arm_movqi_insn}
     (nil))
(insn 140 139 141 12 (set (reg/f:SI 249)
        (symbol_ref:SI ("ss") [flags 0x40]  <var_decl 0x7f50606125a0 ss>)) "timer.c":103:45 253 {*arm_movsi_insn}
     (nil))
(insn 141 140 142 12 (set (reg:SI 143 [ ss.11_31 ])
        (mem/c:SI (reg/f:SI 249) [2 ss+0 S4 A32])) "timer.c":103:45 253 {*arm_movsi_insn}
     (nil))
(insn 142 141 143 12 (set (reg:SI 251)
        (const_int 1717986919 [0x66666667])) "timer.c":103:45 253 {*arm_movsi_insn}
     (nil))
(insn 143 142 144 12 (parallel [
            (set (reg:SI 250)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 143 [ ss.11_31 ]))
                            (sign_extend:DI (reg:SI 251)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
        ]) "timer.c":103:45 71 {*smull_high}
     (nil))
(insn 144 143 145 12 (set (reg:SI 252)
        (ashiftrt:SI (reg:SI 250)
            (const_int 2 [0x2]))) "timer.c":103:45 147 {*arm_shiftsi3}
     (nil))
(insn 145 144 146 12 (set (reg:SI 253)
        (ashiftrt:SI (reg:SI 143 [ ss.11_31 ])
            (const_int 31 [0x1f]))) "timer.c":103:45 147 {*arm_shiftsi3}
     (nil))
(insn 146 145 147 12 (set (reg:SI 144 [ _32 ])
        (minus:SI (reg:SI 252)
            (reg:SI 253))) "timer.c":103:45 45 {*arm_subsi3_insn}
     (expr_list:REG_EQUAL (div:SI (reg:SI 143 [ ss.11_31 ])
            (const_int 10 [0xa]))
        (nil)))
(insn 147 146 148 12 (set (reg:SI 145 [ _33 ])
        (and:SI (reg:SI 144 [ _32 ])
            (const_int 255 [0xff]))) "timer.c":103:41 90 {*arm_andsi3_insn}
     (nil))
(insn 148 147 149 12 (set (reg:SI 254)
        (plus:SI (reg:SI 145 [ _33 ])
            (const_int 48 [0x30]))) "timer.c":103:41 7 {*arm_addsi3}
     (nil))
(insn 149 148 150 12 (set (reg:SI 146 [ _34 ])
        (and:SI (reg:SI 254)
            (const_int 255 [0xff]))) "timer.c":103:41 90 {*arm_andsi3_insn}
     (nil))
(insn 150 149 151 12 (set (reg/f:SI 255)
        (symbol_ref:SI ("clock") [flags 0x2]  <var_decl 0x7f5060612360 clock>)) "timer.c":103:37 253 {*arm_movsi_insn}
     (nil))
(insn 151 150 152 12 (set (reg:QI 256)
        (subreg/s/v:QI (reg:SI 146 [ _34 ]) 0)) "timer.c":103:37 263 {*arm_movqi_insn}
     (nil))
(insn 152 151 153 12 (set (mem/c:QI (plus:SI (reg/f:SI 255)
                (const_int 6 [0x6])) [0 clock[6]+0 S1 A16])
        (reg:QI 256)) "timer.c":103:37 263 {*arm_movqi_insn}
     (nil))
(insn 153 152 154 12 (set (reg/f:SI 257)
        (symbol_ref:SI ("mm") [flags 0x40]  <var_decl 0x7f5060612510 mm>)) "timer.c":104:23 253 {*arm_movsi_insn}
     (nil))
(insn 154 153 155 12 (set (reg:SI 147 [ mm.12_35 ])
        (mem/c:SI (reg/f:SI 257) [2 mm+0 S4 A32])) "timer.c":104:23 253 {*arm_movsi_insn}
     (nil))
(insn 155 154 156 12 (set (reg:SI 259)
        (const_int 1717986919 [0x66666667])) "timer.c":104:23 253 {*arm_movsi_insn}
     (nil))
(insn 156 155 157 12 (parallel [
            (set (reg:SI 258)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 147 [ mm.12_35 ]))
                            (sign_extend:DI (reg:SI 259)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
        ]) "timer.c":104:23 71 {*smull_high}
     (nil))
(insn 157 156 158 12 (set (reg:SI 260)
        (ashiftrt:SI (reg:SI 258)
            (const_int 2 [0x2]))) "timer.c":104:23 147 {*arm_shiftsi3}
     (nil))
(insn 158 157 159 12 (set (reg:SI 261)
        (ashiftrt:SI (reg:SI 147 [ mm.12_35 ])
            (const_int 31 [0x1f]))) "timer.c":104:23 147 {*arm_shiftsi3}
     (nil))
(insn 159 158 160 12 (set (reg:SI 148 [ _36 ])
        (minus:SI (reg:SI 260)
            (reg:SI 261))) "timer.c":104:23 45 {*arm_subsi3_insn}
     (expr_list:REG_EQUAL (div:SI (reg:SI 147 [ mm.12_35 ])
            (const_int 10 [0xa]))
        (nil)))
(insn 160 159 161 12 (set (reg:SI 262)
        (reg:SI 148 [ _36 ])) "timer.c":104:23 253 {*arm_movsi_insn}
     (nil))
(insn 161 160 162 12 (set (reg:SI 262)
        (ashift:SI (reg:SI 262)
            (const_int 2 [0x2]))) "timer.c":104:23 147 {*arm_shiftsi3}
     (nil))
(insn 162 161 163 12 (set (reg:SI 262)
        (plus:SI (reg:SI 262)
            (reg:SI 148 [ _36 ]))) "timer.c":104:23 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 148 [ _36 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 163 162 164 12 (set (reg:SI 263)
        (ashift:SI (reg:SI 262)
            (const_int 1 [0x1]))) "timer.c":104:23 147 {*arm_shiftsi3}
     (nil))
(insn 164 163 165 12 (set (reg:SI 262)
        (reg:SI 263)) "timer.c":104:23 253 {*arm_movsi_insn}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 148 [ _36 ])
            (const_int 10 [0xa]))
        (nil)))
(insn 165 164 166 12 (set (reg:SI 148 [ _36 ])
        (minus:SI (reg:SI 147 [ mm.12_35 ])
            (reg:SI 262))) "timer.c":104:23 45 {*arm_subsi3_insn}
     (nil))
(insn 166 165 167 12 (set (reg:SI 149 [ _37 ])
        (and:SI (reg:SI 148 [ _36 ])
            (const_int 255 [0xff]))) "timer.c":104:19 90 {*arm_andsi3_insn}
     (nil))
(insn 167 166 168 12 (set (reg:SI 264)
        (plus:SI (reg:SI 149 [ _37 ])
            (const_int 48 [0x30]))) "timer.c":104:19 7 {*arm_addsi3}
     (nil))
(insn 168 167 169 12 (set (reg:SI 150 [ _38 ])
        (and:SI (reg:SI 264)
            (const_int 255 [0xff]))) "timer.c":104:19 90 {*arm_andsi3_insn}
     (nil))
(insn 169 168 170 12 (set (reg/f:SI 265)
        (symbol_ref:SI ("clock") [flags 0x2]  <var_decl 0x7f5060612360 clock>)) "timer.c":104:15 253 {*arm_movsi_insn}
     (nil))
(insn 170 169 171 12 (set (reg:QI 266)
        (subreg/s/v:QI (reg:SI 150 [ _38 ]) 0)) "timer.c":104:15 263 {*arm_movqi_insn}
     (nil))
(insn 171 170 172 12 (set (mem/c:QI (plus:SI (reg/f:SI 265)
                (const_int 4 [0x4])) [0 clock[4]+0 S1 A32])
        (reg:QI 266)) "timer.c":104:15 263 {*arm_movqi_insn}
     (nil))
(insn 172 171 173 12 (set (reg/f:SI 267)
        (symbol_ref:SI ("mm") [flags 0x40]  <var_decl 0x7f5060612510 mm>)) "timer.c":104:45 253 {*arm_movsi_insn}
     (nil))
(insn 173 172 174 12 (set (reg:SI 151 [ mm.13_39 ])
        (mem/c:SI (reg/f:SI 267) [2 mm+0 S4 A32])) "timer.c":104:45 253 {*arm_movsi_insn}
     (nil))
(insn 174 173 175 12 (set (reg:SI 269)
        (const_int 1717986919 [0x66666667])) "timer.c":104:45 253 {*arm_movsi_insn}
     (nil))
(insn 175 174 176 12 (parallel [
            (set (reg:SI 268)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 151 [ mm.13_39 ]))
                            (sign_extend:DI (reg:SI 269)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
        ]) "timer.c":104:45 71 {*smull_high}
     (nil))
(insn 176 175 177 12 (set (reg:SI 270)
        (ashiftrt:SI (reg:SI 268)
            (const_int 2 [0x2]))) "timer.c":104:45 147 {*arm_shiftsi3}
     (nil))
(insn 177 176 178 12 (set (reg:SI 271)
        (ashiftrt:SI (reg:SI 151 [ mm.13_39 ])
            (const_int 31 [0x1f]))) "timer.c":104:45 147 {*arm_shiftsi3}
     (nil))
(insn 178 177 179 12 (set (reg:SI 152 [ _40 ])
        (minus:SI (reg:SI 270)
            (reg:SI 271))) "timer.c":104:45 45 {*arm_subsi3_insn}
     (expr_list:REG_EQUAL (div:SI (reg:SI 151 [ mm.13_39 ])
            (const_int 10 [0xa]))
        (nil)))
(insn 179 178 180 12 (set (reg:SI 153 [ _41 ])
        (and:SI (reg:SI 152 [ _40 ])
            (const_int 255 [0xff]))) "timer.c":104:41 90 {*arm_andsi3_insn}
     (nil))
(insn 180 179 181 12 (set (reg:SI 272)
        (plus:SI (reg:SI 153 [ _41 ])
            (const_int 48 [0x30]))) "timer.c":104:41 7 {*arm_addsi3}
     (nil))
(insn 181 180 182 12 (set (reg:SI 154 [ _42 ])
        (and:SI (reg:SI 272)
            (const_int 255 [0xff]))) "timer.c":104:41 90 {*arm_andsi3_insn}
     (nil))
(insn 182 181 183 12 (set (reg/f:SI 273)
        (symbol_ref:SI ("clock") [flags 0x2]  <var_decl 0x7f5060612360 clock>)) "timer.c":104:37 253 {*arm_movsi_insn}
     (nil))
(insn 183 182 184 12 (set (reg:QI 274)
        (subreg/s/v:QI (reg:SI 154 [ _42 ]) 0)) "timer.c":104:37 263 {*arm_movqi_insn}
     (nil))
(insn 184 183 185 12 (set (mem/c:QI (plus:SI (reg/f:SI 273)
                (const_int 3 [0x3])) [0 clock[3]+0 S1 A8])
        (reg:QI 274)) "timer.c":104:37 263 {*arm_movqi_insn}
     (nil))
(insn 185 184 186 12 (set (reg/f:SI 275)
        (symbol_ref:SI ("hh") [flags 0x40]  <var_decl 0x7f5060612480 hh>)) "timer.c":105:23 253 {*arm_movsi_insn}
     (nil))
(insn 186 185 187 12 (set (reg:SI 155 [ hh.14_43 ])
        (mem/c:SI (reg/f:SI 275) [2 hh+0 S4 A32])) "timer.c":105:23 253 {*arm_movsi_insn}
     (nil))
(insn 187 186 188 12 (set (reg:SI 277)
        (const_int 1717986919 [0x66666667])) "timer.c":105:23 253 {*arm_movsi_insn}
     (nil))
(insn 188 187 189 12 (parallel [
            (set (reg:SI 276)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 155 [ hh.14_43 ]))
                            (sign_extend:DI (reg:SI 277)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
        ]) "timer.c":105:23 71 {*smull_high}
     (nil))
(insn 189 188 190 12 (set (reg:SI 278)
        (ashiftrt:SI (reg:SI 276)
            (const_int 2 [0x2]))) "timer.c":105:23 147 {*arm_shiftsi3}
     (nil))
(insn 190 189 191 12 (set (reg:SI 279)
        (ashiftrt:SI (reg:SI 155 [ hh.14_43 ])
            (const_int 31 [0x1f]))) "timer.c":105:23 147 {*arm_shiftsi3}
     (nil))
(insn 191 190 192 12 (set (reg:SI 156 [ _44 ])
        (minus:SI (reg:SI 278)
            (reg:SI 279))) "timer.c":105:23 45 {*arm_subsi3_insn}
     (expr_list:REG_EQUAL (div:SI (reg:SI 155 [ hh.14_43 ])
            (const_int 10 [0xa]))
        (nil)))
(insn 192 191 193 12 (set (reg:SI 280)
        (reg:SI 156 [ _44 ])) "timer.c":105:23 253 {*arm_movsi_insn}
     (nil))
(insn 193 192 194 12 (set (reg:SI 280)
        (ashift:SI (reg:SI 280)
            (const_int 2 [0x2]))) "timer.c":105:23 147 {*arm_shiftsi3}
     (nil))
(insn 194 193 195 12 (set (reg:SI 280)
        (plus:SI (reg:SI 280)
            (reg:SI 156 [ _44 ]))) "timer.c":105:23 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 156 [ _44 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 195 194 196 12 (set (reg:SI 281)
        (ashift:SI (reg:SI 280)
            (const_int 1 [0x1]))) "timer.c":105:23 147 {*arm_shiftsi3}
     (nil))
(insn 196 195 197 12 (set (reg:SI 280)
        (reg:SI 281)) "timer.c":105:23 253 {*arm_movsi_insn}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 156 [ _44 ])
            (const_int 10 [0xa]))
        (nil)))
(insn 197 196 198 12 (set (reg:SI 156 [ _44 ])
        (minus:SI (reg:SI 155 [ hh.14_43 ])
            (reg:SI 280))) "timer.c":105:23 45 {*arm_subsi3_insn}
     (nil))
(insn 198 197 199 12 (set (reg:SI 157 [ _45 ])
        (and:SI (reg:SI 156 [ _44 ])
            (const_int 255 [0xff]))) "timer.c":105:19 90 {*arm_andsi3_insn}
     (nil))
(insn 199 198 200 12 (set (reg:SI 282)
        (plus:SI (reg:SI 157 [ _45 ])
            (const_int 48 [0x30]))) "timer.c":105:19 7 {*arm_addsi3}
     (nil))
(insn 200 199 201 12 (set (reg:SI 158 [ _46 ])
        (and:SI (reg:SI 282)
            (const_int 255 [0xff]))) "timer.c":105:19 90 {*arm_andsi3_insn}
     (nil))
(insn 201 200 202 12 (set (reg/f:SI 283)
        (symbol_ref:SI ("clock") [flags 0x2]  <var_decl 0x7f5060612360 clock>)) "timer.c":105:15 253 {*arm_movsi_insn}
     (nil))
(insn 202 201 203 12 (set (reg:QI 284)
        (subreg/s/v:QI (reg:SI 158 [ _46 ]) 0)) "timer.c":105:15 263 {*arm_movqi_insn}
     (nil))
(insn 203 202 204 12 (set (mem/c:QI (plus:SI (reg/f:SI 283)
                (const_int 1 [0x1])) [0 clock[1]+0 S1 A8])
        (reg:QI 284)) "timer.c":105:15 263 {*arm_movqi_insn}
     (nil))
(insn 204 203 205 12 (set (reg/f:SI 285)
        (symbol_ref:SI ("hh") [flags 0x40]  <var_decl 0x7f5060612480 hh>)) "timer.c":105:45 253 {*arm_movsi_insn}
     (nil))
(insn 205 204 206 12 (set (reg:SI 159 [ hh.15_47 ])
        (mem/c:SI (reg/f:SI 285) [2 hh+0 S4 A32])) "timer.c":105:45 253 {*arm_movsi_insn}
     (nil))
(insn 206 205 207 12 (set (reg:SI 287)
        (const_int 1717986919 [0x66666667])) "timer.c":105:45 253 {*arm_movsi_insn}
     (nil))
(insn 207 206 208 12 (parallel [
            (set (reg:SI 286)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 159 [ hh.15_47 ]))
                            (sign_extend:DI (reg:SI 287)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
        ]) "timer.c":105:45 71 {*smull_high}
     (nil))
(insn 208 207 209 12 (set (reg:SI 288)
        (ashiftrt:SI (reg:SI 286)
            (const_int 2 [0x2]))) "timer.c":105:45 147 {*arm_shiftsi3}
     (nil))
(insn 209 208 210 12 (set (reg:SI 289)
        (ashiftrt:SI (reg:SI 159 [ hh.15_47 ])
            (const_int 31 [0x1f]))) "timer.c":105:45 147 {*arm_shiftsi3}
     (nil))
(insn 210 209 211 12 (set (reg:SI 160 [ _48 ])
        (minus:SI (reg:SI 288)
            (reg:SI 289))) "timer.c":105:45 45 {*arm_subsi3_insn}
     (expr_list:REG_EQUAL (div:SI (reg:SI 159 [ hh.15_47 ])
            (const_int 10 [0xa]))
        (nil)))
(insn 211 210 212 12 (set (reg:SI 161 [ _49 ])
        (and:SI (reg:SI 160 [ _48 ])
            (const_int 255 [0xff]))) "timer.c":105:41 90 {*arm_andsi3_insn}
     (nil))
(insn 212 211 213 12 (set (reg:SI 290)
        (plus:SI (reg:SI 161 [ _49 ])
            (const_int 48 [0x30]))) "timer.c":105:41 7 {*arm_addsi3}
     (nil))
(insn 213 212 214 12 (set (reg:SI 162 [ _50 ])
        (and:SI (reg:SI 290)
            (const_int 255 [0xff]))) "timer.c":105:41 90 {*arm_andsi3_insn}
     (nil))
(insn 214 213 215 12 (set (reg/f:SI 291)
        (symbol_ref:SI ("clock") [flags 0x2]  <var_decl 0x7f5060612360 clock>)) "timer.c":105:37 253 {*arm_movsi_insn}
     (nil))
(insn 215 214 216 12 (set (reg:QI 292)
        (subreg/s/v:QI (reg:SI 162 [ _50 ]) 0)) "timer.c":105:37 263 {*arm_movqi_insn}
     (nil))
(insn 216 215 217 12 (set (mem/c:QI (reg/f:SI 291) [0 clock[0]+0 S1 A32])
        (reg:QI 292)) "timer.c":105:37 263 {*arm_movqi_insn}
     (nil))
(insn 217 216 218 12 (set (reg:SI 293)
        (const_int 0 [0])) "timer.c":107:13 253 {*arm_movsi_insn}
     (nil))
(insn 218 217 237 12 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -36 [0xffffffffffffffdc])) [2 i+0 S4 A32])
        (reg:SI 293)) "timer.c":107:13 253 {*arm_movsi_insn}
     (nil))
;;  succ:       14 [always]  (FALLTHRU)

;; basic block 13, loop depth 1, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       14
(code_label 237 218 221 13 9 (nil) [1 uses])
(note 221 237 222 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 222 221 223 13 (set (reg/f:SI 294)
        (symbol_ref:SI ("clock") [flags 0x2]  <var_decl 0x7f5060612360 clock>)) "timer.c":108:9 253 {*arm_movsi_insn}
     (nil))
(insn 223 222 224 13 (set (reg:SI 296)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -36 [0xffffffffffffffdc])) [2 i+0 S4 A32])) "timer.c":108:9 253 {*arm_movsi_insn}
     (nil))
(insn 224 223 225 13 (set (reg/f:SI 295)
        (plus:SI (reg/f:SI 294)
            (reg:SI 296))) "timer.c":108:9 7 {*arm_addsi3}
     (nil))
(insn 225 224 226 13 (set (reg:SI 163 [ _51 ])
        (zero_extend:SI (mem:QI (reg/f:SI 295) [0 clock[i_89]+0 S1 A8]))) "timer.c":108:9 175 {*arm_zero_extendqisi2}
     (nil))
(insn 226 225 227 13 (set (reg:SI 297)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -36 [0xffffffffffffffdc])) [2 i+0 S4 A32])) "timer.c":108:9 253 {*arm_movsi_insn}
     (nil))
(insn 227 226 228 13 (set (reg:SI 164 [ _52 ])
        (plus:SI (reg:SI 297)
            (const_int 70 [0x46]))) "timer.c":108:9 7 {*arm_addsi3}
     (nil))
(insn 228 227 229 13 (set (reg:SI 2 r2)
        (reg:SI 164 [ _52 ])) "timer.c":108:9 253 {*arm_movsi_insn}
     (nil))
(insn 229 228 230 13 (set (reg:SI 1 r1)
        (const_int 0 [0])) "timer.c":108:9 253 {*arm_movsi_insn}
     (nil))
(insn 230 229 231 13 (set (reg:SI 0 r0)
        (reg:SI 163 [ _51 ])) "timer.c":108:9 253 {*arm_movsi_insn}
     (nil))
(call_insn 231 230 232 13 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kpchar") [flags 0x41]  <function_decl 0x7f506060a900 kpchar>) [0 kpchar S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":108:9 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 232 231 233 13 (set (reg:SI 299)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -36 [0xffffffffffffffdc])) [2 i+0 S4 A32])) "timer.c":107:23 253 {*arm_movsi_insn}
     (nil))
(insn 233 232 234 13 (set (reg:SI 298)
        (plus:SI (reg:SI 299)
            (const_int 1 [0x1]))) "timer.c":107:23 7 {*arm_addsi3}
     (nil))
(insn 234 233 235 13 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -36 [0xffffffffffffffdc])) [2 i+0 S4 A32])
        (reg:SI 298)) "timer.c":107:23 253 {*arm_movsi_insn}
     (nil))
;;  succ:       14 (FALLTHRU,DFS_BACK)

;; basic block 14, loop depth 1, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       12 [always]  (FALLTHRU)
;;              13 (FALLTHRU,DFS_BACK)
(code_label 235 234 236 14 8 (nil) [0 uses])
(note 236 235 240 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 240 236 241 14 (set (reg:SI 300)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -36 [0xffffffffffffffdc])) [2 i+0 S4 A32])) "timer.c":107:18 253 {*arm_movsi_insn}
     (nil))
(insn 241 240 242 14 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 300)
            (const_int 7 [0x7]))) "timer.c":107:18 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 242 241 243 14 (set (pc)
        (if_then_else (le (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 237)
            (pc))) "timer.c":107:18 273 {arm_cond_branch}
     (nil)
 -> 237)
;;  succ:       13
;;              15 (FALLTHRU)

;; basic block 15, loop depth 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL)
;;  pred:       14 (FALLTHRU)
(note 243 242 244 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 244 243 245 15 (set (reg:SI 301)
        (const_int 1 [0x1])) "timer.c":111:14 253 {*arm_movsi_insn}
     (nil))
(insn 245 244 315 15 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -36 [0xffffffffffffffdc])) [2 i+0 S4 A32])
        (reg:SI 301)) "timer.c":111:14 253 {*arm_movsi_insn}
     (nil))
;;  succ:       21 [always]  (FALLTHRU)

;; basic block 16, loop depth 1, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL)
;;  pred:       21
(code_label 315 245 248 16 12 (nil) [1 uses])
(note 248 315 249 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 249 248 250 16 (set (reg:SI 302)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -36 [0xffffffffffffffdc])) [2 i+0 S4 A32])) "timer.c":112:12 253 {*arm_movsi_insn}
     (nil))
(insn 250 249 251 16 (set (reg:SI 303)
        (reg:SI 302)) "timer.c":112:12 253 {*arm_movsi_insn}
     (nil))
(insn 251 250 252 16 (set (reg:SI 303)
        (ashift:SI (reg:SI 303)
            (const_int 6 [0x6]))) "timer.c":112:12 147 {*arm_shiftsi3}
     (nil))
(insn 252 251 253 16 (set (reg:SI 303)
        (plus:SI (reg:SI 303)
            (reg:SI 302))) "timer.c":112:12 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 302)
            (const_int 65 [0x41]))
        (nil)))
(insn 253 252 254 16 (set (reg:SI 303)
        (ashift:SI (reg:SI 303)
            (const_int 1 [0x1]))) "timer.c":112:12 147 {*arm_shiftsi3}
     (nil))
(insn 254 253 255 16 (set (reg:SI 303)
        (plus:SI (reg:SI 303)
            (reg:SI 302))) "timer.c":112:12 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 302)
            (const_int 131 [0x83]))
        (nil)))
(insn 255 254 256 16 (set (reg:SI 303)
        (ashift:SI (reg:SI 303)
            (const_int 3 [0x3]))) "timer.c":112:12 147 {*arm_shiftsi3}
     (nil))
(insn 256 255 257 16 (set (reg:SI 303)
        (minus:SI (reg:SI 303)
            (reg:SI 302))) "timer.c":112:12 45 {*arm_subsi3_insn}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 302)
            (const_int 1047 [0x417]))
        (nil)))
(insn 257 256 258 16 (set (reg:SI 304)
        (ashift:SI (reg:SI 303)
            (const_int 2 [0x2]))) "timer.c":112:12 147 {*arm_shiftsi3}
     (nil))
(insn 258 257 259 16 (set (reg:SI 303)
        (reg:SI 304)) "timer.c":112:12 253 {*arm_movsi_insn}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 302)
            (const_int 4188 [0x105c]))
        (nil)))
(insn 259 258 260 16 (set (reg:SI 306)
        (symbol_ref:SI ("proc") [flags 0x40]  <var_decl 0x7f50612f55a0 proc>)) "timer.c":112:12 253 {*arm_movsi_insn}
     (nil))
(insn 260 259 261 16 (set (reg:SI 305)
        (plus:SI (reg:SI 303)
            (reg:SI 306))) "timer.c":112:12 7 {*arm_addsi3}
     (nil))
(insn 261 260 262 16 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 p+0 S4 A64])
        (reg:SI 305)) "timer.c":112:12 253 {*arm_movsi_insn}
     (nil))
(insn 262 261 263 16 (set (reg/f:SI 307)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 p+0 S4 A64])) "timer.c":113:8 253 {*arm_movsi_insn}
     (nil))
(insn 263 262 264 16 (set (reg:SI 165 [ _53 ])
        (mem:SI (plus:SI (reg/f:SI 307)
                (const_int 28 [0x1c])) [2 p_137->status+0 S4 A32])) "timer.c":113:8 253 {*arm_movsi_insn}
     (nil))
(insn 264 263 265 16 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 165 [ _53 ])
            (const_int 2 [0x2]))) "timer.c":113:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 265 264 266 16 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 308)
            (pc))) "timer.c":113:6 273 {arm_cond_branch}
     (nil)
 -> 308)
;;  succ:       17 (FALLTHRU)
;;              20

;; basic block 17, loop depth 1, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL)
;;  pred:       16 (FALLTHRU)
(note 266 265 267 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 267 266 268 17 (set (reg/f:SI 308)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 p+0 S4 A64])) "timer.c":113:28 253 {*arm_movsi_insn}
     (nil))
(insn 268 267 269 17 (set (reg:SI 166 [ _54 ])
        (mem:SI (plus:SI (reg/f:SI 308)
                (const_int 44 [0x2c])) [2 p_137->event+0 S4 A32])) "timer.c":113:28 253 {*arm_movsi_insn}
     (nil))
(insn 269 268 270 17 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 166 [ _54 ])
            (const_int 5 [0x5]))) "timer.c":113:24 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 270 269 271 17 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 308)
            (pc))) "timer.c":113:24 273 {arm_cond_branch}
     (nil)
 -> 308)
;;  succ:       18 (FALLTHRU)
;;              20

;; basic block 18, loop depth 1, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL)
;;  pred:       17 (FALLTHRU)
(note 271 270 272 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 272 271 273 18 (set (reg/f:SI 309)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 p+0 S4 A64])) "timer.c":114:6 253 {*arm_movsi_insn}
     (nil))
(insn 273 272 274 18 (set (reg:SI 167 [ _55 ])
        (mem:SI (plus:SI (reg/f:SI 309)
                (const_int 68 [0x44])) [2 p_137->pause+0 S4 A32])) "timer.c":114:6 253 {*arm_movsi_insn}
     (nil))
(insn 274 273 275 18 (set (reg:SI 168 [ _56 ])
        (plus:SI (reg:SI 167 [ _55 ])
            (const_int -1 [0xffffffffffffffff]))) "timer.c":114:13 7 {*arm_addsi3}
     (nil))
(insn 275 274 276 18 (set (reg/f:SI 310)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 p+0 S4 A64])) "timer.c":114:13 253 {*arm_movsi_insn}
     (nil))
(insn 276 275 277 18 (set (mem:SI (plus:SI (reg/f:SI 310)
                (const_int 68 [0x44])) [2 p_137->pause+0 S4 A32])
        (reg:SI 168 [ _56 ])) "timer.c":114:13 253 {*arm_movsi_insn}
     (nil))
(insn 277 276 278 18 (set (reg/f:SI 311)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 p+0 S4 A64])) "timer.c":115:12 253 {*arm_movsi_insn}
     (nil))
(insn 278 277 279 18 (set (reg:SI 169 [ _57 ])
        (mem:SI (plus:SI (reg/f:SI 311)
                (const_int 68 [0x44])) [2 p_137->pause+0 S4 A32])) "timer.c":115:12 253 {*arm_movsi_insn}
     (nil))
(insn 279 278 280 18 (set (reg:SI 1 r1)
        (reg:SI 169 [ _57 ])) "timer.c":115:12 253 {*arm_movsi_insn}
     (nil))
(insn 280 279 281 18 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x7f50606435a0 *.LC1>)) "timer.c":115:12 253 {*arm_movsi_insn}
     (nil))
(call_insn 281 280 282 18 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kprintf") [flags 0x41]  <function_decl 0x7f506060a700 kprintf>) [0 kprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":115:12 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 282 281 283 18 (set (reg/f:SI 312)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 p+0 S4 A64])) "timer.c":116:17 253 {*arm_movsi_insn}
     (nil))
(insn 283 282 286 18 (set (reg:SI 170 [ _58 ])
        (mem:SI (plus:SI (reg/f:SI 312)
                (const_int 68 [0x44])) [2 p_137->pause+0 S4 A32])) "timer.c":116:17 253 {*arm_movsi_insn}
     (nil))
(insn 286 283 287 18 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 170 [ _58 ])
            (const_int 0 [0]))) "timer.c":116:15 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 287 286 288 18 (set (pc)
        (if_then_else (gt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 308)
            (pc))) "timer.c":116:15 273 {arm_cond_branch}
     (nil)
 -> 308)
;;  succ:       19 (FALLTHRU)
;;              20

;; basic block 19, loop depth 1, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL)
;;  pred:       18 (FALLTHRU)
(note 288 287 289 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 289 288 290 19 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 p+0 S4 A64])) "timer.c":121:14 253 {*arm_movsi_insn}
     (nil))
(call_insn 290 289 291 19 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("outSleep") [flags 0x41]  <function_decl 0x7f506060ad00 outSleep>) [0 outSleep S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":121:14 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 291 290 292 19 (set (reg/f:SI 313)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 p+0 S4 A64])) "timer.c":122:24 253 {*arm_movsi_insn}
     (nil))
(insn 292 291 293 19 (set (reg:SI 314)
        (const_int 1 [0x1])) "timer.c":122:24 253 {*arm_movsi_insn}
     (nil))
(insn 293 292 294 19 (set (mem:SI (plus:SI (reg/f:SI 313)
                (const_int 28 [0x1c])) [2 p_137->status+0 S4 A32])
        (reg:SI 314)) "timer.c":122:24 253 {*arm_movsi_insn}
     (nil))
(insn 294 293 295 19 (set (reg/f:SI 315)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 p+0 S4 A64])) "timer.c":123:23 253 {*arm_movsi_insn}
     (nil))
(insn 295 294 296 19 (set (reg:SI 316)
        (const_int 0 [0])) "timer.c":123:23 253 {*arm_movsi_insn}
     (nil))
(insn 296 295 297 19 (set (mem:SI (plus:SI (reg/f:SI 315)
                (const_int 44 [0x2c])) [2 p_137->event+0 S4 A32])
        (reg:SI 316)) "timer.c":123:23 253 {*arm_movsi_insn}
     (nil))
(insn 297 296 298 19 (set (reg/f:SI 317)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 p+0 S4 A64])) "timer.c":124:26 253 {*arm_movsi_insn}
     (nil))
(insn 298 297 299 19 (set (reg:SI 318)
        (const_int 128 [0x80])) "timer.c":124:26 253 {*arm_movsi_insn}
     (nil))
(insn 299 298 300 19 (set (mem:SI (plus:SI (reg/f:SI 317)
                (const_int 32 [0x20])) [2 p_137->priority+0 S4 A32])
        (reg:SI 318)) "timer.c":124:26 253 {*arm_movsi_insn}
     (nil))
(insn 300 299 301 19 (set (reg:SI 1 r1)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 p+0 S4 A64])) "timer.c":125:7 253 {*arm_movsi_insn}
     (nil))
(insn 301 300 302 19 (set (reg:SI 0 r0)
        (symbol_ref:SI ("readyQueue") [flags 0x40]  <var_decl 0x7f50612f56c0 readyQueue>)) "timer.c":125:7 253 {*arm_movsi_insn}
     (nil))
(call_insn 302 301 303 19 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("enqueue") [flags 0x41]  <function_decl 0x7f506060a000 enqueue>) [0 enqueue S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":125:7 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 303 302 304 19 (set (reg/f:SI 319)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 p+0 S4 A64])) "timer.c":127:14 253 {*arm_movsi_insn}
     (nil))
(insn 304 303 305 19 (set (reg:SI 171 [ _59 ])
        (mem:SI (plus:SI (reg/f:SI 319)
                (const_int 24 [0x18])) [2 p_137->pid+0 S4 A32])) "timer.c":127:14 253 {*arm_movsi_insn}
     (nil))
(insn 305 304 306 19 (set (reg:SI 1 r1)
        (reg:SI 171 [ _59 ])) "timer.c":127:14 253 {*arm_movsi_insn}
     (nil))
(insn 306 305 307 19 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC2") [flags 0x2]  <var_decl 0x7f5060643630 *.LC2>)) "timer.c":127:14 253 {*arm_movsi_insn}
     (nil))
(call_insn 307 306 308 19 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kprintf") [flags 0x41]  <function_decl 0x7f506060a700 kprintf>) [0 kprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":127:14 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
;;  succ:       20 (FALLTHRU)

;; basic block 20, loop depth 1, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL)
;;  pred:       16
;;              17
;;              18
;;              19 (FALLTHRU)
(code_label 308 307 309 20 11 (nil) [3 uses])
(note 309 308 310 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 310 309 311 20 (set (reg:SI 321)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -36 [0xffffffffffffffdc])) [2 i+0 S4 A32])) "timer.c":111:28 253 {*arm_movsi_insn}
     (nil))
(insn 311 310 312 20 (set (reg:SI 320)
        (plus:SI (reg:SI 321)
            (const_int 1 [0x1]))) "timer.c":111:28 7 {*arm_addsi3}
     (nil))
(insn 312 311 313 20 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -36 [0xffffffffffffffdc])) [2 i+0 S4 A32])
        (reg:SI 320)) "timer.c":111:28 253 {*arm_movsi_insn}
     (nil))
;;  succ:       21 (FALLTHRU,DFS_BACK)

;; basic block 21, loop depth 1, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL)
;;  pred:       15 [always]  (FALLTHRU)
;;              20 (FALLTHRU,DFS_BACK)
(code_label 313 312 314 21 10 (nil) [0 uses])
(note 314 313 318 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 318 314 319 21 (set (reg:SI 322)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -36 [0xffffffffffffffdc])) [2 i+0 S4 A32])) "timer.c":111:19 253 {*arm_movsi_insn}
     (nil))
(insn 319 318 320 21 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 322)
            (const_int 63 [0x3f]))) "timer.c":111:19 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 320 319 321 21 (set (pc)
        (if_then_else (le (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 315)
            (pc))) "timer.c":111:19 273 {arm_cond_branch}
     (nil)
 -> 315)
;;  succ:       16
;;              22 (FALLTHRU)

;; basic block 22, loop depth 0, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL)
;;  pred:       21 (FALLTHRU)
(note 321 320 322 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 322 321 323 22 (set (reg/f:SI 323)
        (symbol_ref:SI ("tq") [flags 0x2]  <var_decl 0x7f50606127e0 tq>)) "timer.c":134:11 253 {*arm_movsi_insn}
     (nil))
(insn 323 322 324 22 (set (reg/f:SI 172 [ tq.16_60 ])
        (mem/f/c:SI (reg/f:SI 323) [5 tq+0 S4 A32])) "timer.c":134:11 253 {*arm_movsi_insn}
     (nil))
(insn 324 323 325 22 (set (reg:CC 100 cc)
        (compare:CC (reg/f:SI 172 [ tq.16_60 ])
            (const_int 0 [0]))) "timer.c":134:10 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 325 324 326 22 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 382)
            (pc))) "timer.c":134:10 273 {arm_cond_branch}
     (nil)
 -> 382)
;;  succ:       23 (FALLTHRU)
;;              27

;; basic block 23, loop depth 0, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL)
;;  pred:       22 (FALLTHRU)
(note 326 325 327 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(call_insn 327 326 328 23 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printTQ") [flags 0x3]  <function_decl 0x7f506060af00 printTQ>) [0 printTQ S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":135:4 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 328 327 329 23 (set (reg/f:SI 324)
        (symbol_ref:SI ("tq") [flags 0x2]  <var_decl 0x7f50606127e0 tq>)) "timer.c":136:15 253 {*arm_movsi_insn}
     (nil))
(insn 329 328 330 23 (set (reg/f:SI 325)
        (mem/f/c:SI (reg/f:SI 324) [5 tq+0 S4 A32])) "timer.c":136:15 253 {*arm_movsi_insn}
     (nil))
(insn 330 329 378 23 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -32 [0xffffffffffffffe0])) [5 tqq+0 S4 A64])
        (reg/f:SI 325)) "timer.c":136:15 253 {*arm_movsi_insn}
     (nil))
;;  succ:       26 [always]  (FALLTHRU)

;; basic block 24, loop depth 1, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       26
(code_label 378 330 333 24 15 (nil) [1 uses])
(note 333 378 334 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 334 333 335 24 (set (reg/f:SI 326)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -32 [0xffffffffffffffe0])) [5 tqq+0 S4 A64])) "timer.c":138:17 253 {*arm_movsi_insn}
     (nil))
(insn 335 334 336 24 (set (reg:SI 173 [ _61 ])
        (mem:SI (plus:SI (reg/f:SI 326)
                (const_int 4 [0x4])) [2 tqq_91->time+0 S4 A32])) "timer.c":138:17 253 {*arm_movsi_insn}
     (nil))
(insn 336 335 337 24 (set (reg:SI 174 [ _62 ])
        (plus:SI (reg:SI 173 [ _61 ])
            (const_int -1 [0xffffffffffffffff]))) "timer.c":138:23 7 {*arm_addsi3}
     (nil))
(insn 337 336 338 24 (set (reg/f:SI 327)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -32 [0xffffffffffffffe0])) [5 tqq+0 S4 A64])) "timer.c":138:23 253 {*arm_movsi_insn}
     (nil))
(insn 338 337 339 24 (set (mem:SI (plus:SI (reg/f:SI 327)
                (const_int 4 [0x4])) [2 tqq_91->time+0 S4 A32])
        (reg:SI 174 [ _62 ])) "timer.c":138:23 253 {*arm_movsi_insn}
     (nil))
(insn 339 338 340 24 (set (reg/f:SI 328)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -32 [0xffffffffffffffe0])) [5 tqq+0 S4 A64])) "timer.c":139:21 253 {*arm_movsi_insn}
     (nil))
(insn 340 339 343 24 (set (reg:SI 175 [ _63 ])
        (mem:SI (plus:SI (reg/f:SI 328)
                (const_int 4 [0x4])) [2 tqq_91->time+0 S4 A32])) "timer.c":139:21 253 {*arm_movsi_insn}
     (nil))
(insn 343 340 344 24 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 175 [ _63 ])
            (const_int 0 [0]))) "timer.c":139:17 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 344 343 345 24 (set (pc)
        (if_then_else (gt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 382)
            (pc))) "timer.c":139:17 273 {arm_cond_branch}
     (nil)
 -> 382)
;;  succ:       25 (FALLTHRU)
;;              27

;; basic block 25, loop depth 1, maybe hot
;;  prev block 24, next block 26, flags: (NEW, REACHABLE, RTL)
;;  pred:       24 (FALLTHRU)
(note 345 344 346 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 346 345 347 25 (set (reg/f:SI 329)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -32 [0xffffffffffffffe0])) [5 tqq+0 S4 A64])) "timer.c":140:44 253 {*arm_movsi_insn}
     (nil))
(insn 347 346 348 25 (set (reg/f:SI 176 [ _64 ])
        (mem/f:SI (plus:SI (reg/f:SI 329)
                (const_int 8 [0x8])) [6 tqq_91->who+0 S4 A32])) "timer.c":140:44 253 {*arm_movsi_insn}
     (nil))
(insn 348 347 349 25 (set (reg:SI 177 [ _65 ])
        (mem:SI (plus:SI (reg/f:SI 176 [ _64 ])
                (const_int 24 [0x18])) [2 _64->pid+0 S4 A32])) "timer.c":140:9 253 {*arm_movsi_insn}
     (nil))
(insn 349 348 350 25 (set (reg:SI 1 r1)
        (reg:SI 177 [ _65 ])) "timer.c":140:9 253 {*arm_movsi_insn}
     (nil))
(insn 350 349 351 25 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC3") [flags 0x2]  <var_decl 0x7f50606436c0 *.LC3>)) "timer.c":140:9 253 {*arm_movsi_insn}
     (nil))
(call_insn 351 350 352 25 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kprintf") [flags 0x41]  <function_decl 0x7f506060a700 kprintf>) [0 kprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":140:9 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 352 351 353 25 (set (reg/f:SI 330)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -32 [0xffffffffffffffe0])) [5 tqq+0 S4 A64])) "timer.c":141:21 253 {*arm_movsi_insn}
     (nil))
(insn 353 352 354 25 (set (reg/f:SI 178 [ _66 ])
        (mem/f:SI (plus:SI (reg/f:SI 330)
                (const_int 8 [0x8])) [6 tqq_91->who+0 S4 A32])) "timer.c":141:21 253 {*arm_movsi_insn}
     (nil))
(insn 354 353 355 25 (set (reg/f:SI 179 [ _67 ])
        (mem/f:SI (plus:SI (reg/f:SI 178 [ _66 ])
                (const_int 84 [0x54])) [11 _66->res+0 S4 A32])) "timer.c":141:26 253 {*arm_movsi_insn}
     (nil))
(insn 355 354 356 25 (set (reg:SI 180 [ _68 ])
        (mem:SI (plus:SI (reg/f:SI 179 [ _67 ])
                (const_int 92 [0x5c])) [2 _67->signal+0 S4 A32])) "timer.c":141:40 253 {*arm_movsi_insn}
     (nil))
(insn 356 355 357 25 (set (reg/f:SI 331)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -32 [0xffffffffffffffe0])) [5 tqq+0 S4 A64])) "timer.c":141:21 253 {*arm_movsi_insn}
     (nil))
(insn 357 356 358 25 (set (reg/f:SI 181 [ _69 ])
        (mem/f:SI (plus:SI (reg/f:SI 331)
                (const_int 8 [0x8])) [6 tqq_91->who+0 S4 A32])) "timer.c":141:21 253 {*arm_movsi_insn}
     (nil))
(insn 358 357 359 25 (set (reg/f:SI 182 [ _70 ])
        (mem/f:SI (plus:SI (reg/f:SI 181 [ _69 ])
                (const_int 84 [0x54])) [11 _69->res+0 S4 A32])) "timer.c":141:26 253 {*arm_movsi_insn}
     (nil))
(insn 359 358 360 25 (set (reg:SI 183 [ _71 ])
        (ior:SI (reg:SI 180 [ _68 ])
            (const_int 16384 [0x4000]))) "timer.c":141:40 106 {*iorsi3_insn}
     (nil))
(insn 360 359 361 25 (set (mem:SI (plus:SI (reg/f:SI 182 [ _70 ])
                (const_int 92 [0x5c])) [2 _70->signal+0 S4 A32])
        (reg:SI 183 [ _71 ])) "timer.c":141:40 253 {*arm_movsi_insn}
     (nil))
(insn 361 360 362 25 (set (reg/f:SI 332)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -32 [0xffffffffffffffe0])) [5 tqq+0 S4 A64])) "timer.c":144:26 253 {*arm_movsi_insn}
     (nil))
(insn 362 361 363 25 (set (reg/f:SI 184 [ _72 ])
        (mem/f:SI (reg/f:SI 332) [5 tqq_91->next+0 S4 A32])) "timer.c":144:26 253 {*arm_movsi_insn}
     (nil))
(insn 363 362 364 25 (set (reg/f:SI 333)
        (symbol_ref:SI ("tq") [flags 0x2]  <var_decl 0x7f50606127e0 tq>)) "timer.c":144:21 253 {*arm_movsi_insn}
     (nil))
(insn 364 363 365 25 (set (mem/f/c:SI (reg/f:SI 333) [5 tq+0 S4 A32])
        (reg/f:SI 184 [ _72 ])) "timer.c":144:21 253 {*arm_movsi_insn}
     (nil))
(insn 365 364 366 25 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -32 [0xffffffffffffffe0])) [5 tqq+0 S4 A64])) "timer.c":145:18 253 {*arm_movsi_insn}
     (nil))
(call_insn 366 365 367 25 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("put_tnode") [flags 0x3]  <function_decl 0x7f506061b000 put_tnode>) [0 put_tnode S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":145:18 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 367 366 368 25 (set (reg/f:SI 334)
        (symbol_ref:SI ("tq") [flags 0x2]  <var_decl 0x7f50606127e0 tq>)) "timer.c":146:22 253 {*arm_movsi_insn}
     (nil))
(insn 368 367 369 25 (set (reg/f:SI 335)
        (mem/f/c:SI (reg/f:SI 334) [5 tq+0 S4 A32])) "timer.c":146:22 253 {*arm_movsi_insn}
     (nil))
(insn 369 368 376 25 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -32 [0xffffffffffffffe0])) [5 tqq+0 S4 A64])
        (reg/f:SI 335)) "timer.c":146:22 253 {*arm_movsi_insn}
     (nil))
;;  succ:       26 [always]  (FALLTHRU)

;; basic block 26, loop depth 1, maybe hot
;;  prev block 25, next block 27, flags: (NEW, REACHABLE, RTL)
;;  pred:       23 [always]  (FALLTHRU)
;;              25 [always]  (FALLTHRU)
(code_label 376 369 377 26 13 (nil) [0 uses])
(note 377 376 379 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 379 377 380 26 (set (reg:SI 336)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -32 [0xffffffffffffffe0])) [5 tqq+0 S4 A64])) "timer.c":137:18 253 {*arm_movsi_insn}
     (nil))
(insn 380 379 381 26 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 336)
            (const_int 0 [0]))) "timer.c":137:18 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 381 380 382 26 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 378)
            (pc))) "timer.c":137:18 273 {arm_cond_branch}
     (nil)
 -> 378)
;;  succ:       24
;;              27 (FALLTHRU)

;; basic block 27, loop depth 0, maybe hot
;;  prev block 26, next block 28, flags: (NEW, REACHABLE, RTL)
;;  pred:       8
;;              22
;;              24
;;              26 (FALLTHRU)
(code_label 382 381 383 27 5 (nil) [3 uses])
(note 383 382 384 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 384 383 385 27 (set (reg/f:SI 337)
        (symbol_ref:SI ("running") [flags 0x40]  <var_decl 0x7f50612f57e0 running>)) "timer.c":156:16 253 {*arm_movsi_insn}
     (nil))
(insn 385 384 386 27 (set (reg/f:SI 185 [ running.17_73 ])
        (mem/f/c:SI (reg/f:SI 337) [6 running+0 S4 A32])) "timer.c":156:16 253 {*arm_movsi_insn}
     (nil))
(insn 386 385 387 27 (set (reg:SI 186 [ _74 ])
        (mem:SI (plus:SI (reg/f:SI 185 [ running.17_73 ])
                (const_int 24 [0x18])) [2 running.17_73->pid+0 S4 A32])) "timer.c":156:16 253 {*arm_movsi_insn}
     (nil))
(insn 387 386 388 27 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 186 [ _74 ])
            (const_int 0 [0]))) "timer.c":156:8 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 388 387 389 27 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 395)
            (pc))) "timer.c":156:8 273 {arm_cond_branch}
     (nil)
 -> 395)
;;  succ:       28 (FALLTHRU)
;;              29

;; basic block 28, loop depth 0, maybe hot
;;  prev block 27, next block 29, flags: (NEW, REACHABLE, RTL)
;;  pred:       27 (FALLTHRU)
(note 389 388 390 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 390 389 391 28 (set (reg/f:SI 338)
        (symbol_ref:SI ("running") [flags 0x40]  <var_decl 0x7f50612f57e0 running>)) "timer.c":157:15 253 {*arm_movsi_insn}
     (nil))
(insn 391 390 392 28 (set (reg/f:SI 187 [ running.18_75 ])
        (mem/f/c:SI (reg/f:SI 338) [6 running+0 S4 A32])) "timer.c":157:15 253 {*arm_movsi_insn}
     (nil))
(insn 392 391 393 28 (set (reg:SI 188 [ _76 ])
        (mem:SI (plus:SI (reg/f:SI 187 [ running.18_75 ])
                (const_int 56 [0x38])) [2 running.18_75->time+0 S4 A32])) "timer.c":157:15 253 {*arm_movsi_insn}
     (nil))
(insn 393 392 394 28 (set (reg:SI 189 [ _77 ])
        (plus:SI (reg:SI 188 [ _76 ])
            (const_int -1 [0xffffffffffffffff]))) "timer.c":157:21 7 {*arm_addsi3}
     (nil))
(insn 394 393 395 28 (set (mem:SI (plus:SI (reg/f:SI 187 [ running.18_75 ])
                (const_int 56 [0x38])) [2 running.18_75->time+0 S4 A32])
        (reg:SI 189 [ _77 ])) "timer.c":157:21 253 {*arm_movsi_insn}
     (nil))
;;  succ:       29 (FALLTHRU)

;; basic block 29, loop depth 0, maybe hot
;;  prev block 28, next block 30, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       27
;;              28 (FALLTHRU)
(code_label 395 394 396 29 16 (nil) [1 uses])
(note 396 395 397 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(call_insn 397 396 398 29 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("get_spsr") [flags 0x41]  <function_decl 0x7f506061b300 get_spsr>) [0 get_spsr S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":159:12 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 398 397 399 29 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 spsr+0 S4 A32])
        (reg:SI 0 r0)) "timer.c":159:12 253 {*arm_movsi_insn}
     (nil))
(insn 399 398 400 29 (set (reg:SI 0 r0)
        (const_int 0 [0])) "timer.c":167:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 400 399 401 29 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("timer_clearInterrupt") [flags 0x3]  <function_decl 0x7f506061b400 timer_clearInterrupt>) [0 timer_clearInterrupt S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":167:3 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 401 400 402 29 (set (reg/f:SI 339)
        (symbol_ref:SI ("oldcolor") [flags 0x2]  <var_decl 0x7f50606126c0 oldcolor>)) "timer.c":168:9 253 {*arm_movsi_insn}
     (nil))
(insn 402 401 403 29 (set (reg:SI 190 [ oldcolor.19_78 ])
        (mem/c:SI (reg/f:SI 339) [2 oldcolor+0 S4 A32])) "timer.c":168:9 253 {*arm_movsi_insn}
     (nil))
(insn 403 402 404 29 (set (reg/f:SI 340)
        (symbol_ref:SI ("color") [flags 0x40]  <var_decl 0x7f50612f5480 color>)) "timer.c":168:9 253 {*arm_movsi_insn}
     (nil))
(insn 404 403 405 29 (set (mem/c:SI (reg/f:SI 340) [2 color+0 S4 A32])
        (reg:SI 190 [ oldcolor.19_78 ])) "timer.c":168:9 253 {*arm_movsi_insn}
     (nil))
(insn 405 404 406 29 (set (reg/f:SI 341)
        (symbol_ref:SI ("running") [flags 0x40]  <var_decl 0x7f50612f57e0 running>)) "timer.c":170:14 253 {*arm_movsi_insn}
     (nil))
(insn 406 405 407 29 (set (reg/f:SI 191 [ running.20_79 ])
        (mem/f/c:SI (reg/f:SI 341) [6 running+0 S4 A32])) "timer.c":170:14 253 {*arm_movsi_insn}
     (nil))
(insn 407 406 410 29 (set (reg:SI 192 [ _80 ])
        (mem:SI (plus:SI (reg/f:SI 191 [ running.20_79 ])
                (const_int 56 [0x38])) [2 running.20_79->time+0 S4 A32])) "timer.c":170:14 253 {*arm_movsi_insn}
     (nil))
(insn 410 407 411 29 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 192 [ _80 ])
            (const_int 0 [0]))) "timer.c":170:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 411 410 412 29 (set (pc)
        (if_then_else (gt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 441)
            (pc))) "timer.c":170:6 273 {arm_cond_branch}
     (nil)
 -> 441)
;;  succ:       30 (FALLTHRU)
;;              33

;; basic block 30, loop depth 0, maybe hot
;;  prev block 29, next block 31, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       29 (FALLTHRU)
(note 412 411 413 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 413 412 414 30 (set (reg:SI 342)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 spsr+0 S4 A32])) "timer.c":170:35 253 {*arm_movsi_insn}
     (nil))
(insn 414 413 415 30 (set (reg:SI 193 [ _81 ])
        (and:SI (reg:SI 342)
            (const_int 31 [0x1f]))) "timer.c":170:35 90 {*arm_andsi3_insn}
     (nil))
(insn 415 414 416 30 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 193 [ _81 ])
            (const_int 16 [0x10]))) "timer.c":170:26 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 416 415 417 30 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 441)
            (pc))) "timer.c":170:26 273 {arm_cond_branch}
     (nil)
 -> 441)
;;  succ:       31 (FALLTHRU)
;;              33

;; basic block 31, loop depth 0, maybe hot
;;  prev block 30, next block 32, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       30 (FALLTHRU)
(note 417 416 418 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 418 417 419 31 (set (reg/f:SI 343)
        (symbol_ref:SI ("readyQueue") [flags 0x40]  <var_decl 0x7f50612f56c0 readyQueue>)) "timer.c":170:63 253 {*arm_movsi_insn}
     (nil))
(insn 419 418 420 31 (set (reg/f:SI 194 [ readyQueue.21_82 ])
        (mem/f/c:SI (reg/f:SI 343) [6 readyQueue+0 S4 A32])) "timer.c":170:63 253 {*arm_movsi_insn}
     (nil))
(insn 420 419 421 31 (set (reg:SI 195 [ _83 ])
        (mem:SI (plus:SI (reg/f:SI 194 [ readyQueue.21_82 ])
                (const_int 24 [0x18])) [2 readyQueue.21_82->pid+0 S4 A32])) "timer.c":170:63 253 {*arm_movsi_insn}
     (nil))
(insn 421 420 422 31 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 195 [ _83 ])
            (const_int 0 [0]))) "timer.c":170:50 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 422 421 423 31 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 441)
            (pc))) "timer.c":170:50 273 {arm_cond_branch}
     (nil)
 -> 441)
;;  succ:       32 (FALLTHRU)
;;              33

;; basic block 32, loop depth 0, maybe hot
;;  prev block 31, next block 33, flags: (NEW, REACHABLE, RTL)
;;  pred:       31 (FALLTHRU)
(note 423 422 424 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 424 423 425 32 (set (reg/f:SI 344)
        (symbol_ref:SI ("running") [flags 0x40]  <var_decl 0x7f50612f57e0 running>)) "timer.c":171:54 253 {*arm_movsi_insn}
     (nil))
(insn 425 424 426 32 (set (reg/f:SI 196 [ running.22_84 ])
        (mem/f/c:SI (reg/f:SI 344) [6 running+0 S4 A32])) "timer.c":171:54 253 {*arm_movsi_insn}
     (nil))
(insn 426 425 427 32 (set (reg:SI 197 [ _85 ])
        (mem:SI (plus:SI (reg/f:SI 196 [ running.22_84 ])
                (const_int 24 [0x18])) [2 running.22_84->pid+0 S4 A32])) "timer.c":171:5 253 {*arm_movsi_insn}
     (nil))
(insn 427 426 428 32 (set (reg/f:SI 345)
        (symbol_ref:SI ("readyQueue") [flags 0x40]  <var_decl 0x7f50612f56c0 readyQueue>)) "timer.c":171:71 253 {*arm_movsi_insn}
     (nil))
(insn 428 427 429 32 (set (reg/f:SI 198 [ readyQueue.23_86 ])
        (mem/f/c:SI (reg/f:SI 345) [6 readyQueue+0 S4 A32])) "timer.c":171:71 253 {*arm_movsi_insn}
     (nil))
(insn 429 428 430 32 (set (reg:SI 199 [ _87 ])
        (mem:SI (plus:SI (reg/f:SI 198 [ readyQueue.23_86 ])
                (const_int 24 [0x18])) [2 readyQueue.23_86->pid+0 S4 A32])) "timer.c":171:5 253 {*arm_movsi_insn}
     (nil))
(insn 430 429 431 32 (set (reg:SI 2 r2)
        (reg:SI 199 [ _87 ])) "timer.c":171:5 253 {*arm_movsi_insn}
     (nil))
(insn 431 430 432 32 (set (reg:SI 1 r1)
        (reg:SI 197 [ _85 ])) "timer.c":171:5 253 {*arm_movsi_insn}
     (nil))
(insn 432 431 433 32 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC4") [flags 0x2]  <var_decl 0x7f5060643750 *.LC4>)) "timer.c":171:5 253 {*arm_movsi_insn}
     (nil))
(call_insn 433 432 434 32 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kprintf") [flags 0x41]  <function_decl 0x7f506060a700 kprintf>) [0 kprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":171:5 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 434 433 435 32 (set (reg/f:SI 346)
        (symbol_ref:SI ("swflag") [flags 0x40]  <var_decl 0x7f506060d5a0 swflag>)) "timer.c":172:12 253 {*arm_movsi_insn}
     (nil))
(insn 435 434 436 32 (set (reg:SI 347)
        (const_int 1 [0x1])) "timer.c":172:12 253 {*arm_movsi_insn}
     (nil))
(insn 436 435 443 32 (set (mem/v/c:SI (reg/f:SI 346) [2 swflag+0 S4 A32])
        (reg:SI 347)) "timer.c":172:12 253 {*arm_movsi_insn}
     (nil))
(insn 443 436 441 32 (const_int 0 [0]) "timer.c":175:3 311 {nop}
     (nil))
;;  succ:       33 (FALLTHRU)

;; basic block 33, loop depth 0, maybe hot
;;  prev block 32, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       32 (FALLTHRU)
;;              29
;;              30
;;              31
(code_label 441 443 442 33 1 (nil) [3 uses])
(note 442 441 0 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)

;; basic block 1, loop depth 0, maybe hot
;;  prev block 33, next block (nil), flags: (REACHABLE, RTL)
;;  pred:       33 [always]  (FALLTHRU)
;;  succ:      




try_optimize_cfg iteration 1

;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 200)
        (symbol_ref:SI ("color") [flags 0x40]  <var_decl 0x7f50612f5480 color>)) "timer.c":76:14 253 {*arm_movsi_insn}
     (nil))
(insn 6 5 7 2 (set (reg:SI 113 [ color.0_1 ])
        (mem/c:SI (reg/f:SI 200) [2 color+0 S4 A32])) "timer.c":76:14 253 {*arm_movsi_insn}
     (nil))
(insn 7 6 8 2 (set (reg/f:SI 201)
        (symbol_ref:SI ("oldcolor") [flags 0x2]  <var_decl 0x7f50606126c0 oldcolor>)) "timer.c":76:14 253 {*arm_movsi_insn}
     (nil))
(insn 8 7 9 2 (set (mem/c:SI (reg/f:SI 201) [2 oldcolor+0 S4 A32])
        (reg:SI 113 [ color.0_1 ])) "timer.c":76:14 253 {*arm_movsi_insn}
     (nil))
(insn 9 8 10 2 (set (reg/f:SI 202)
        (symbol_ref:SI ("color") [flags 0x40]  <var_decl 0x7f50612f5480 color>)) "timer.c":77:11 253 {*arm_movsi_insn}
     (nil))
(insn 10 9 11 2 (set (reg:SI 203)
        (const_int 1 [0x1])) "timer.c":77:11 253 {*arm_movsi_insn}
     (nil))
(insn 11 10 12 2 (set (mem/c:SI (reg/f:SI 202) [2 color+0 S4 A32])
        (reg:SI 203)) "timer.c":77:11 253 {*arm_movsi_insn}
     (nil))
(insn 12 11 13 2 (set (reg/f:SI 204)
        (symbol_ref:SI ("tp") [flags 0x2]  <var_decl 0x7f5060612000 tp>)) "timer.c":79:13 253 {*arm_movsi_insn}
     (nil))
(insn 13 12 14 2 (set (reg/f:SI 114 [ _2 ])
        (mem/f/c:SI (reg/f:SI 204) [1 tp[0]+0 S4 A32])) "timer.c":79:13 253 {*arm_movsi_insn}
     (nil))
(insn 14 13 15 2 (set (reg:SI 115 [ _3 ])
        (mem/v:SI (plus:SI (reg/f:SI 114 [ _2 ])
                (const_int 16 [0x10])) [2 _2->RIS+0 S4 A32])) "timer.c":79:16 253 {*arm_movsi_insn}
     (nil))
(insn 15 14 16 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -28 [0xffffffffffffffe4])) [2 ris+0 S4 A32])
        (reg:SI 115 [ _3 ])) "timer.c":79:9 253 {*arm_movsi_insn}
     (nil))
(insn 16 15 17 2 (set (reg/f:SI 205)
        (symbol_ref:SI ("tp") [flags 0x2]  <var_decl 0x7f5060612000 tp>)) "timer.c":80:13 253 {*arm_movsi_insn}
     (nil))
(insn 17 16 18 2 (set (reg/f:SI 116 [ _4 ])
        (mem/f/c:SI (reg/f:SI 205) [1 tp[0]+0 S4 A32])) "timer.c":80:13 253 {*arm_movsi_insn}
     (nil))
(insn 18 17 19 2 (set (reg:SI 117 [ _5 ])
        (mem/v:SI (plus:SI (reg/f:SI 116 [ _4 ])
                (const_int 20 [0x14])) [2 _4->MIS+0 S4 A32])) "timer.c":80:16 253 {*arm_movsi_insn}
     (nil))
(insn 19 18 20 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -24 [0xffffffffffffffe8])) [2 mis+0 S4 A64])
        (reg:SI 117 [ _5 ])) "timer.c":80:9 253 {*arm_movsi_insn}
     (nil))
(insn 20 19 21 2 (set (reg/f:SI 206)
        (symbol_ref:SI ("tp") [flags 0x2]  <var_decl 0x7f5060612000 tp>)) "timer.c":81:15 253 {*arm_movsi_insn}
     (nil))
(insn 21 20 22 2 (set (reg/f:SI 118 [ _6 ])
        (mem/f/c:SI (reg/f:SI 206) [1 tp[0]+0 S4 A32])) "timer.c":81:15 253 {*arm_movsi_insn}
     (nil))
(insn 22 21 23 2 (set (reg:SI 119 [ _7 ])
        (mem/v:SI (plus:SI (reg/f:SI 118 [ _6 ])
                (const_int 4 [0x4])) [2 _6->VALUE+0 S4 A32])) "timer.c":81:18 253 {*arm_movsi_insn}
     (nil))
(insn 23 22 24 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -20 [0xffffffffffffffec])) [2 value+0 S4 A32])
        (reg:SI 119 [ _7 ])) "timer.c":81:11 253 {*arm_movsi_insn}
     (nil))
(insn 24 23 25 2 (set (reg/f:SI 207)
        (symbol_ref:SI ("tp") [flags 0x2]  <var_decl 0x7f5060612000 tp>)) "timer.c":82:15 253 {*arm_movsi_insn}
     (nil))
(insn 25 24 26 2 (set (reg/f:SI 120 [ _8 ])
        (mem/f/c:SI (reg/f:SI 207) [1 tp[0]+0 S4 A32])) "timer.c":82:15 253 {*arm_movsi_insn}
     (nil))
(insn 26 25 27 2 (set (reg:SI 121 [ _9 ])
        (mem/v:SI (reg/f:SI 120 [ _8 ]) [2 _8->LOAD+0 S4 A32])) "timer.c":82:18 253 {*arm_movsi_insn}
     (nil))
(insn 27 26 28 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [2 load+0 S4 A64])
        (reg:SI 121 [ _9 ])) "timer.c":82:11 253 {*arm_movsi_insn}
     (nil))
(insn 28 27 29 2 (set (reg/f:SI 208)
        (symbol_ref:SI ("tp") [flags 0x2]  <var_decl 0x7f5060612000 tp>)) "timer.c":83:13 253 {*arm_movsi_insn}
     (nil))
(insn 29 28 30 2 (set (reg/f:SI 122 [ _10 ])
        (mem/f/c:SI (reg/f:SI 208) [1 tp[0]+0 S4 A32])) "timer.c":83:13 253 {*arm_movsi_insn}
     (nil))
(insn 30 29 31 2 (set (reg:SI 123 [ _11 ])
        (mem/v:SI (plus:SI (reg/f:SI 122 [ _10 ])
                (const_int 24 [0x18])) [2 _10->BGLOAD+0 S4 A32])) "timer.c":83:16 253 {*arm_movsi_insn}
     (nil))
(insn 31 30 32 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [2 bload+0 S4 A32])
        (reg:SI 123 [ _11 ])) "timer.c":83:10 253 {*arm_movsi_insn}
     (nil))
(insn 32 31 33 2 (set (reg/f:SI 209)
        (symbol_ref:SI ("tick") [flags 0x2]  <var_decl 0x7f5060612630 tick>)) "timer.c":85:9 253 {*arm_movsi_insn}
     (nil))
(insn 33 32 34 2 (set (reg:SI 124 [ tick.1_12 ])
        (mem/c:SI (reg/f:SI 209) [2 tick+0 S4 A32])) "timer.c":85:9 253 {*arm_movsi_insn}
     (nil))
(insn 34 33 35 2 (set (reg:SI 125 [ _13 ])
        (plus:SI (reg:SI 124 [ tick.1_12 ])
            (const_int 1 [0x1]))) "timer.c":85:9 7 {*arm_addsi3}
     (nil))
(insn 35 34 36 2 (set (reg/f:SI 210)
        (symbol_ref:SI ("tick") [flags 0x2]  <var_decl 0x7f5060612630 tick>)) "timer.c":85:9 253 {*arm_movsi_insn}
     (nil))
(insn 36 35 37 2 (set (mem/c:SI (reg/f:SI 210) [2 tick+0 S4 A32])
        (reg:SI 125 [ _13 ])) "timer.c":85:9 253 {*arm_movsi_insn}
     (nil))
(insn 37 36 38 2 (set (reg/f:SI 211)
        (symbol_ref:SI ("tick") [flags 0x2]  <var_decl 0x7f5060612630 tick>)) "timer.c":86:14 253 {*arm_movsi_insn}
     (nil))
(insn 38 37 39 2 (set (reg:SI 126 [ tick.2_14 ])
        (mem/c:SI (reg/f:SI 211) [2 tick+0 S4 A32])) "timer.c":86:14 253 {*arm_movsi_insn}
     (nil))
(insn 39 38 40 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 126 [ tick.2_14 ])
            (const_int 16 [0x10]))) "timer.c":86:8 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 40 39 41 2 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 50)
            (pc))) "timer.c":86:8 273 {arm_cond_branch}
     (nil)
 -> 50)
;;  succ:       3 (FALLTHRU)
;;              4

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 41 40 42 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 3 (set (reg/f:SI 212)
        (symbol_ref:SI ("tick") [flags 0x2]  <var_decl 0x7f5060612630 tick>)) "timer.c":87:11 253 {*arm_movsi_insn}
     (nil))
(insn 43 42 44 3 (set (reg:SI 213)
        (const_int 0 [0])) "timer.c":87:11 253 {*arm_movsi_insn}
     (nil))
(insn 44 43 45 3 (set (mem/c:SI (reg/f:SI 212) [2 tick+0 S4 A32])
        (reg:SI 213)) "timer.c":87:11 253 {*arm_movsi_insn}
     (nil))
(insn 45 44 46 3 (set (reg/f:SI 214)
        (symbol_ref:SI ("ss") [flags 0x40]  <var_decl 0x7f50606125a0 ss>)) "timer.c":87:17 253 {*arm_movsi_insn}
     (nil))
(insn 46 45 47 3 (set (reg:SI 127 [ ss.3_15 ])
        (mem/c:SI (reg/f:SI 214) [2 ss+0 S4 A32])) "timer.c":87:17 253 {*arm_movsi_insn}
     (nil))
(insn 47 46 48 3 (set (reg:SI 128 [ _16 ])
        (plus:SI (reg:SI 127 [ ss.3_15 ])
            (const_int 1 [0x1]))) "timer.c":87:17 7 {*arm_addsi3}
     (nil))
(insn 48 47 49 3 (set (reg/f:SI 215)
        (symbol_ref:SI ("ss") [flags 0x40]  <var_decl 0x7f50606125a0 ss>)) "timer.c":87:17 253 {*arm_movsi_insn}
     (nil))
(insn 49 48 50 3 (set (mem/c:SI (reg/f:SI 215) [2 ss+0 S4 A32])
        (reg:SI 128 [ _16 ])) "timer.c":87:17 253 {*arm_movsi_insn}
     (nil))
;;  succ:       4 (FALLTHRU)

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              3 (FALLTHRU)
(code_label 50 49 51 4 2 (nil) [1 uses])
(note 51 50 52 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 4 (set (reg/f:SI 216)
        (symbol_ref:SI ("ss") [flags 0x40]  <var_decl 0x7f50606125a0 ss>)) "timer.c":89:11 253 {*arm_movsi_insn}
     (nil))
(insn 53 52 54 4 (set (reg:SI 129 [ ss.4_17 ])
        (mem/c:SI (reg/f:SI 216) [2 ss+0 S4 A32])) "timer.c":89:11 253 {*arm_movsi_insn}
     (nil))
(insn 54 53 55 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 129 [ ss.4_17 ])
            (const_int 60 [0x3c]))) "timer.c":89:8 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 55 54 56 4 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 65)
            (pc))) "timer.c":89:8 273 {arm_cond_branch}
     (nil)
 -> 65)
;;  succ:       5 (FALLTHRU)
;;              6

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 56 55 57 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 5 (set (reg/f:SI 217)
        (symbol_ref:SI ("ss") [flags 0x40]  <var_decl 0x7f50606125a0 ss>)) "timer.c":90:10 253 {*arm_movsi_insn}
     (nil))
(insn 58 57 59 5 (set (reg:SI 218)
        (const_int 0 [0])) "timer.c":90:10 253 {*arm_movsi_insn}
     (nil))
(insn 59 58 60 5 (set (mem/c:SI (reg/f:SI 217) [2 ss+0 S4 A32])
        (reg:SI 218)) "timer.c":90:10 253 {*arm_movsi_insn}
     (nil))
(insn 60 59 61 5 (set (reg/f:SI 219)
        (symbol_ref:SI ("mm") [flags 0x40]  <var_decl 0x7f5060612510 mm>)) "timer.c":90:17 253 {*arm_movsi_insn}
     (nil))
(insn 61 60 62 5 (set (reg:SI 130 [ mm.5_18 ])
        (mem/c:SI (reg/f:SI 219) [2 mm+0 S4 A32])) "timer.c":90:17 253 {*arm_movsi_insn}
     (nil))
(insn 62 61 63 5 (set (reg:SI 131 [ _19 ])
        (plus:SI (reg:SI 130 [ mm.5_18 ])
            (const_int 1 [0x1]))) "timer.c":90:17 7 {*arm_addsi3}
     (nil))
(insn 63 62 64 5 (set (reg/f:SI 220)
        (symbol_ref:SI ("mm") [flags 0x40]  <var_decl 0x7f5060612510 mm>)) "timer.c":90:17 253 {*arm_movsi_insn}
     (nil))
(insn 64 63 65 5 (set (mem/c:SI (reg/f:SI 220) [2 mm+0 S4 A32])
        (reg:SI 131 [ _19 ])) "timer.c":90:17 253 {*arm_movsi_insn}
     (nil))
;;  succ:       6 (FALLTHRU)

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
;;              5 (FALLTHRU)
(code_label 65 64 66 6 3 (nil) [1 uses])
(note 66 65 67 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 6 (set (reg/f:SI 221)
        (symbol_ref:SI ("mm") [flags 0x40]  <var_decl 0x7f5060612510 mm>)) "timer.c":92:12 253 {*arm_movsi_insn}
     (nil))
(insn 68 67 69 6 (set (reg:SI 132 [ mm.6_20 ])
        (mem/c:SI (reg/f:SI 221) [2 mm+0 S4 A32])) "timer.c":92:12 253 {*arm_movsi_insn}
     (nil))
(insn 69 68 70 6 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 132 [ mm.6_20 ])
            (const_int 60 [0x3c]))) "timer.c":92:8 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 70 69 71 6 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 80)
            (pc))) "timer.c":92:8 273 {arm_cond_branch}
     (nil)
 -> 80)
;;  succ:       7 (FALLTHRU)
;;              8

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 (FALLTHRU)
(note 71 70 72 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 7 (set (reg/f:SI 222)
        (symbol_ref:SI ("mm") [flags 0x40]  <var_decl 0x7f5060612510 mm>)) "timer.c":93:12 253 {*arm_movsi_insn}
     (nil))
(insn 73 72 74 7 (set (reg:SI 223)
        (const_int 0 [0])) "timer.c":93:12 253 {*arm_movsi_insn}
     (nil))
(insn 74 73 75 7 (set (mem/c:SI (reg/f:SI 222) [2 mm+0 S4 A32])
        (reg:SI 223)) "timer.c":93:12 253 {*arm_movsi_insn}
     (nil))
(insn 75 74 76 7 (set (reg/f:SI 224)
        (symbol_ref:SI ("hh") [flags 0x40]  <var_decl 0x7f5060612480 hh>)) "timer.c":94:4 253 {*arm_movsi_insn}
     (nil))
(insn 76 75 77 7 (set (reg:SI 133 [ hh.7_21 ])
        (mem/c:SI (reg/f:SI 224) [2 hh+0 S4 A32])) "timer.c":94:4 253 {*arm_movsi_insn}
     (nil))
(insn 77 76 78 7 (set (reg:SI 134 [ _22 ])
        (plus:SI (reg:SI 133 [ hh.7_21 ])
            (const_int 1 [0x1]))) "timer.c":94:4 7 {*arm_addsi3}
     (nil))
(insn 78 77 79 7 (set (reg/f:SI 225)
        (symbol_ref:SI ("hh") [flags 0x40]  <var_decl 0x7f5060612480 hh>)) "timer.c":94:4 253 {*arm_movsi_insn}
     (nil))
(insn 79 78 80 7 (set (mem/c:SI (reg/f:SI 225) [2 hh+0 S4 A32])
        (reg:SI 134 [ _22 ])) "timer.c":94:4 253 {*arm_movsi_insn}
     (nil))
;;  succ:       8 (FALLTHRU)

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       6
;;              7 (FALLTHRU)
(code_label 80 79 81 8 4 (nil) [1 uses])
(note 81 80 82 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 8 (set (reg/f:SI 226)
        (symbol_ref:SI ("tick") [flags 0x2]  <var_decl 0x7f5060612630 tick>)) "timer.c":96:13 253 {*arm_movsi_insn}
     (nil))
(insn 83 82 84 8 (set (reg:SI 135 [ tick.8_23 ])
        (mem/c:SI (reg/f:SI 226) [2 tick+0 S4 A32])) "timer.c":96:13 253 {*arm_movsi_insn}
     (nil))
(insn 84 83 85 8 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 135 [ tick.8_23 ])
            (const_int 0 [0]))) "timer.c":96:8 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 85 84 86 8 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 382)
            (pc))) "timer.c":96:8 273 {arm_cond_branch}
     (nil)
 -> 382)
;;  succ:       9 (FALLTHRU)
;;              27

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 (FALLTHRU)
(note 86 85 87 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 88 9 (set (reg/f:SI 227)
        (symbol_ref:SI ("color") [flags 0x40]  <var_decl 0x7f50612f5480 color>)) "timer.c":97:16 253 {*arm_movsi_insn}
     (nil))
(insn 88 87 89 9 (set (reg:SI 136 [ color.9_24 ])
        (mem/c:SI (reg/f:SI 227) [2 color+0 S4 A32])) "timer.c":97:16 253 {*arm_movsi_insn}
     (nil))
(insn 89 88 90 9 (set (reg/f:SI 228)
        (symbol_ref:SI ("oldcolor") [flags 0x2]  <var_decl 0x7f50606126c0 oldcolor>)) "timer.c":97:16 253 {*arm_movsi_insn}
     (nil))
(insn 90 89 91 9 (set (mem/c:SI (reg/f:SI 228) [2 oldcolor+0 S4 A32])
        (reg:SI 136 [ color.9_24 ])) "timer.c":97:16 253 {*arm_movsi_insn}
     (nil))
(insn 91 90 92 9 (set (reg/f:SI 229)
        (symbol_ref:SI ("color") [flags 0x40]  <var_decl 0x7f50612f5480 color>)) "timer.c":98:13 253 {*arm_movsi_insn}
     (nil))
(insn 92 91 93 9 (set (reg:SI 230)
        (const_int 1 [0x1])) "timer.c":98:13 253 {*arm_movsi_insn}
     (nil))
(insn 93 92 94 9 (set (mem/c:SI (reg/f:SI 229) [2 color+0 S4 A32])
        (reg:SI 230)) "timer.c":98:13 253 {*arm_movsi_insn}
     (nil))
(insn 94 93 95 9 (set (reg:SI 231)
        (const_int 0 [0])) "timer.c":99:13 253 {*arm_movsi_insn}
     (nil))
(insn 95 94 114 9 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -36 [0xffffffffffffffdc])) [2 i+0 S4 A32])
        (reg:SI 231)) "timer.c":99:13 253 {*arm_movsi_insn}
     (nil))
;;  succ:       11 [always]  (FALLTHRU)

;; basic block 10, loop depth 1, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       11
(code_label 114 95 98 10 7 (nil) [1 uses])
(note 98 114 99 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 99 98 100 10 (set (reg/f:SI 232)
        (symbol_ref:SI ("clock") [flags 0x2]  <var_decl 0x7f5060612360 clock>)) "timer.c":100:11 253 {*arm_movsi_insn}
     (nil))
(insn 100 99 101 10 (set (reg:SI 234)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -36 [0xffffffffffffffdc])) [2 i+0 S4 A32])) "timer.c":100:11 253 {*arm_movsi_insn}
     (nil))
(insn 101 100 102 10 (set (reg/f:SI 233)
        (plus:SI (reg/f:SI 232)
            (reg:SI 234))) "timer.c":100:11 7 {*arm_addsi3}
     (nil))
(insn 102 101 103 10 (set (reg:SI 137 [ _25 ])
        (zero_extend:SI (mem:QI (reg/f:SI 233) [0 clock[i_88]+0 S1 A8]))) "timer.c":100:11 175 {*arm_zero_extendqisi2}
     (nil))
(insn 103 102 104 10 (set (reg:SI 235)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -36 [0xffffffffffffffdc])) [2 i+0 S4 A32])) "timer.c":100:11 253 {*arm_movsi_insn}
     (nil))
(insn 104 103 105 10 (set (reg:SI 138 [ _26 ])
        (plus:SI (reg:SI 235)
            (const_int 70 [0x46]))) "timer.c":100:11 7 {*arm_addsi3}
     (nil))
(insn 105 104 106 10 (set (reg:SI 2 r2)
        (reg:SI 138 [ _26 ])) "timer.c":100:11 253 {*arm_movsi_insn}
     (nil))
(insn 106 105 107 10 (set (reg:SI 1 r1)
        (const_int 0 [0])) "timer.c":100:11 253 {*arm_movsi_insn}
     (nil))
(insn 107 106 108 10 (set (reg:SI 0 r0)
        (reg:SI 137 [ _25 ])) "timer.c":100:11 253 {*arm_movsi_insn}
     (nil))
(call_insn 108 107 109 10 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("unkpchar") [flags 0x41]  <function_decl 0x7f506060aa00 unkpchar>) [0 unkpchar S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":100:11 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 109 108 110 10 (set (reg:SI 237)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -36 [0xffffffffffffffdc])) [2 i+0 S4 A32])) "timer.c":99:23 253 {*arm_movsi_insn}
     (nil))
(insn 110 109 111 10 (set (reg:SI 236)
        (plus:SI (reg:SI 237)
            (const_int 1 [0x1]))) "timer.c":99:23 7 {*arm_addsi3}
     (nil))
(insn 111 110 112 10 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -36 [0xffffffffffffffdc])) [2 i+0 S4 A32])
        (reg:SI 236)) "timer.c":99:23 253 {*arm_movsi_insn}
     (nil))
;;  succ:       11 (FALLTHRU,DFS_BACK)

;; basic block 11, loop depth 1, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 [always]  (FALLTHRU)
;;              10 (FALLTHRU,DFS_BACK)
(code_label 112 111 113 11 6 (nil) [0 uses])
(note 113 112 117 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 117 113 118 11 (set (reg:SI 238)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -36 [0xffffffffffffffdc])) [2 i+0 S4 A32])) "timer.c":99:18 253 {*arm_movsi_insn}
     (nil))
(insn 118 117 119 11 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 238)
            (const_int 7 [0x7]))) "timer.c":99:18 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 119 118 120 11 (set (pc)
        (if_then_else (le (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 114)
            (pc))) "timer.c":99:18 273 {arm_cond_branch}
     (nil)
 -> 114)
;;  succ:       10
;;              12 (FALLTHRU)

;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       11 (FALLTHRU)
(note 120 119 121 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 121 120 122 12 (set (reg/f:SI 239)
        (symbol_ref:SI ("ss") [flags 0x40]  <var_decl 0x7f50606125a0 ss>)) "timer.c":103:23 253 {*arm_movsi_insn}
     (nil))
(insn 122 121 123 12 (set (reg:SI 139 [ ss.10_27 ])
        (mem/c:SI (reg/f:SI 239) [2 ss+0 S4 A32])) "timer.c":103:23 253 {*arm_movsi_insn}
     (nil))
(insn 123 122 124 12 (set (reg:SI 241)
        (const_int 1717986919 [0x66666667])) "timer.c":103:23 253 {*arm_movsi_insn}
     (nil))
(insn 124 123 125 12 (parallel [
            (set (reg:SI 240)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 139 [ ss.10_27 ]))
                            (sign_extend:DI (reg:SI 241)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
        ]) "timer.c":103:23 71 {*smull_high}
     (nil))
(insn 125 124 126 12 (set (reg:SI 242)
        (ashiftrt:SI (reg:SI 240)
            (const_int 2 [0x2]))) "timer.c":103:23 147 {*arm_shiftsi3}
     (nil))
(insn 126 125 127 12 (set (reg:SI 243)
        (ashiftrt:SI (reg:SI 139 [ ss.10_27 ])
            (const_int 31 [0x1f]))) "timer.c":103:23 147 {*arm_shiftsi3}
     (nil))
(insn 127 126 128 12 (set (reg:SI 140 [ _28 ])
        (minus:SI (reg:SI 242)
            (reg:SI 243))) "timer.c":103:23 45 {*arm_subsi3_insn}
     (expr_list:REG_EQUAL (div:SI (reg:SI 139 [ ss.10_27 ])
            (const_int 10 [0xa]))
        (nil)))
(insn 128 127 129 12 (set (reg:SI 244)
        (reg:SI 140 [ _28 ])) "timer.c":103:23 253 {*arm_movsi_insn}
     (nil))
(insn 129 128 130 12 (set (reg:SI 244)
        (ashift:SI (reg:SI 244)
            (const_int 2 [0x2]))) "timer.c":103:23 147 {*arm_shiftsi3}
     (nil))
(insn 130 129 131 12 (set (reg:SI 244)
        (plus:SI (reg:SI 244)
            (reg:SI 140 [ _28 ]))) "timer.c":103:23 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 140 [ _28 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 131 130 132 12 (set (reg:SI 245)
        (ashift:SI (reg:SI 244)
            (const_int 1 [0x1]))) "timer.c":103:23 147 {*arm_shiftsi3}
     (nil))
(insn 132 131 133 12 (set (reg:SI 244)
        (reg:SI 245)) "timer.c":103:23 253 {*arm_movsi_insn}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 140 [ _28 ])
            (const_int 10 [0xa]))
        (nil)))
(insn 133 132 134 12 (set (reg:SI 140 [ _28 ])
        (minus:SI (reg:SI 139 [ ss.10_27 ])
            (reg:SI 244))) "timer.c":103:23 45 {*arm_subsi3_insn}
     (nil))
(insn 134 133 135 12 (set (reg:SI 141 [ _29 ])
        (and:SI (reg:SI 140 [ _28 ])
            (const_int 255 [0xff]))) "timer.c":103:19 90 {*arm_andsi3_insn}
     (nil))
(insn 135 134 136 12 (set (reg:SI 246)
        (plus:SI (reg:SI 141 [ _29 ])
            (const_int 48 [0x30]))) "timer.c":103:19 7 {*arm_addsi3}
     (nil))
(insn 136 135 137 12 (set (reg:SI 142 [ _30 ])
        (and:SI (reg:SI 246)
            (const_int 255 [0xff]))) "timer.c":103:19 90 {*arm_andsi3_insn}
     (nil))
(insn 137 136 138 12 (set (reg/f:SI 247)
        (symbol_ref:SI ("clock") [flags 0x2]  <var_decl 0x7f5060612360 clock>)) "timer.c":103:15 253 {*arm_movsi_insn}
     (nil))
(insn 138 137 139 12 (set (reg:QI 248)
        (subreg/s/v:QI (reg:SI 142 [ _30 ]) 0)) "timer.c":103:15 263 {*arm_movqi_insn}
     (nil))
(insn 139 138 140 12 (set (mem/c:QI (plus:SI (reg/f:SI 247)
                (const_int 7 [0x7])) [0 clock[7]+0 S1 A8])
        (reg:QI 248)) "timer.c":103:15 263 {*arm_movqi_insn}
     (nil))
(insn 140 139 141 12 (set (reg/f:SI 249)
        (symbol_ref:SI ("ss") [flags 0x40]  <var_decl 0x7f50606125a0 ss>)) "timer.c":103:45 253 {*arm_movsi_insn}
     (nil))
(insn 141 140 142 12 (set (reg:SI 143 [ ss.11_31 ])
        (mem/c:SI (reg/f:SI 249) [2 ss+0 S4 A32])) "timer.c":103:45 253 {*arm_movsi_insn}
     (nil))
(insn 142 141 143 12 (set (reg:SI 251)
        (const_int 1717986919 [0x66666667])) "timer.c":103:45 253 {*arm_movsi_insn}
     (nil))
(insn 143 142 144 12 (parallel [
            (set (reg:SI 250)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 143 [ ss.11_31 ]))
                            (sign_extend:DI (reg:SI 251)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
        ]) "timer.c":103:45 71 {*smull_high}
     (nil))
(insn 144 143 145 12 (set (reg:SI 252)
        (ashiftrt:SI (reg:SI 250)
            (const_int 2 [0x2]))) "timer.c":103:45 147 {*arm_shiftsi3}
     (nil))
(insn 145 144 146 12 (set (reg:SI 253)
        (ashiftrt:SI (reg:SI 143 [ ss.11_31 ])
            (const_int 31 [0x1f]))) "timer.c":103:45 147 {*arm_shiftsi3}
     (nil))
(insn 146 145 147 12 (set (reg:SI 144 [ _32 ])
        (minus:SI (reg:SI 252)
            (reg:SI 253))) "timer.c":103:45 45 {*arm_subsi3_insn}
     (expr_list:REG_EQUAL (div:SI (reg:SI 143 [ ss.11_31 ])
            (const_int 10 [0xa]))
        (nil)))
(insn 147 146 148 12 (set (reg:SI 145 [ _33 ])
        (and:SI (reg:SI 144 [ _32 ])
            (const_int 255 [0xff]))) "timer.c":103:41 90 {*arm_andsi3_insn}
     (nil))
(insn 148 147 149 12 (set (reg:SI 254)
        (plus:SI (reg:SI 145 [ _33 ])
            (const_int 48 [0x30]))) "timer.c":103:41 7 {*arm_addsi3}
     (nil))
(insn 149 148 150 12 (set (reg:SI 146 [ _34 ])
        (and:SI (reg:SI 254)
            (const_int 255 [0xff]))) "timer.c":103:41 90 {*arm_andsi3_insn}
     (nil))
(insn 150 149 151 12 (set (reg/f:SI 255)
        (symbol_ref:SI ("clock") [flags 0x2]  <var_decl 0x7f5060612360 clock>)) "timer.c":103:37 253 {*arm_movsi_insn}
     (nil))
(insn 151 150 152 12 (set (reg:QI 256)
        (subreg/s/v:QI (reg:SI 146 [ _34 ]) 0)) "timer.c":103:37 263 {*arm_movqi_insn}
     (nil))
(insn 152 151 153 12 (set (mem/c:QI (plus:SI (reg/f:SI 255)
                (const_int 6 [0x6])) [0 clock[6]+0 S1 A16])
        (reg:QI 256)) "timer.c":103:37 263 {*arm_movqi_insn}
     (nil))
(insn 153 152 154 12 (set (reg/f:SI 257)
        (symbol_ref:SI ("mm") [flags 0x40]  <var_decl 0x7f5060612510 mm>)) "timer.c":104:23 253 {*arm_movsi_insn}
     (nil))
(insn 154 153 155 12 (set (reg:SI 147 [ mm.12_35 ])
        (mem/c:SI (reg/f:SI 257) [2 mm+0 S4 A32])) "timer.c":104:23 253 {*arm_movsi_insn}
     (nil))
(insn 155 154 156 12 (set (reg:SI 259)
        (const_int 1717986919 [0x66666667])) "timer.c":104:23 253 {*arm_movsi_insn}
     (nil))
(insn 156 155 157 12 (parallel [
            (set (reg:SI 258)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 147 [ mm.12_35 ]))
                            (sign_extend:DI (reg:SI 259)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
        ]) "timer.c":104:23 71 {*smull_high}
     (nil))
(insn 157 156 158 12 (set (reg:SI 260)
        (ashiftrt:SI (reg:SI 258)
            (const_int 2 [0x2]))) "timer.c":104:23 147 {*arm_shiftsi3}
     (nil))
(insn 158 157 159 12 (set (reg:SI 261)
        (ashiftrt:SI (reg:SI 147 [ mm.12_35 ])
            (const_int 31 [0x1f]))) "timer.c":104:23 147 {*arm_shiftsi3}
     (nil))
(insn 159 158 160 12 (set (reg:SI 148 [ _36 ])
        (minus:SI (reg:SI 260)
            (reg:SI 261))) "timer.c":104:23 45 {*arm_subsi3_insn}
     (expr_list:REG_EQUAL (div:SI (reg:SI 147 [ mm.12_35 ])
            (const_int 10 [0xa]))
        (nil)))
(insn 160 159 161 12 (set (reg:SI 262)
        (reg:SI 148 [ _36 ])) "timer.c":104:23 253 {*arm_movsi_insn}
     (nil))
(insn 161 160 162 12 (set (reg:SI 262)
        (ashift:SI (reg:SI 262)
            (const_int 2 [0x2]))) "timer.c":104:23 147 {*arm_shiftsi3}
     (nil))
(insn 162 161 163 12 (set (reg:SI 262)
        (plus:SI (reg:SI 262)
            (reg:SI 148 [ _36 ]))) "timer.c":104:23 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 148 [ _36 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 163 162 164 12 (set (reg:SI 263)
        (ashift:SI (reg:SI 262)
            (const_int 1 [0x1]))) "timer.c":104:23 147 {*arm_shiftsi3}
     (nil))
(insn 164 163 165 12 (set (reg:SI 262)
        (reg:SI 263)) "timer.c":104:23 253 {*arm_movsi_insn}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 148 [ _36 ])
            (const_int 10 [0xa]))
        (nil)))
(insn 165 164 166 12 (set (reg:SI 148 [ _36 ])
        (minus:SI (reg:SI 147 [ mm.12_35 ])
            (reg:SI 262))) "timer.c":104:23 45 {*arm_subsi3_insn}
     (nil))
(insn 166 165 167 12 (set (reg:SI 149 [ _37 ])
        (and:SI (reg:SI 148 [ _36 ])
            (const_int 255 [0xff]))) "timer.c":104:19 90 {*arm_andsi3_insn}
     (nil))
(insn 167 166 168 12 (set (reg:SI 264)
        (plus:SI (reg:SI 149 [ _37 ])
            (const_int 48 [0x30]))) "timer.c":104:19 7 {*arm_addsi3}
     (nil))
(insn 168 167 169 12 (set (reg:SI 150 [ _38 ])
        (and:SI (reg:SI 264)
            (const_int 255 [0xff]))) "timer.c":104:19 90 {*arm_andsi3_insn}
     (nil))
(insn 169 168 170 12 (set (reg/f:SI 265)
        (symbol_ref:SI ("clock") [flags 0x2]  <var_decl 0x7f5060612360 clock>)) "timer.c":104:15 253 {*arm_movsi_insn}
     (nil))
(insn 170 169 171 12 (set (reg:QI 266)
        (subreg/s/v:QI (reg:SI 150 [ _38 ]) 0)) "timer.c":104:15 263 {*arm_movqi_insn}
     (nil))
(insn 171 170 172 12 (set (mem/c:QI (plus:SI (reg/f:SI 265)
                (const_int 4 [0x4])) [0 clock[4]+0 S1 A32])
        (reg:QI 266)) "timer.c":104:15 263 {*arm_movqi_insn}
     (nil))
(insn 172 171 173 12 (set (reg/f:SI 267)
        (symbol_ref:SI ("mm") [flags 0x40]  <var_decl 0x7f5060612510 mm>)) "timer.c":104:45 253 {*arm_movsi_insn}
     (nil))
(insn 173 172 174 12 (set (reg:SI 151 [ mm.13_39 ])
        (mem/c:SI (reg/f:SI 267) [2 mm+0 S4 A32])) "timer.c":104:45 253 {*arm_movsi_insn}
     (nil))
(insn 174 173 175 12 (set (reg:SI 269)
        (const_int 1717986919 [0x66666667])) "timer.c":104:45 253 {*arm_movsi_insn}
     (nil))
(insn 175 174 176 12 (parallel [
            (set (reg:SI 268)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 151 [ mm.13_39 ]))
                            (sign_extend:DI (reg:SI 269)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
        ]) "timer.c":104:45 71 {*smull_high}
     (nil))
(insn 176 175 177 12 (set (reg:SI 270)
        (ashiftrt:SI (reg:SI 268)
            (const_int 2 [0x2]))) "timer.c":104:45 147 {*arm_shiftsi3}
     (nil))
(insn 177 176 178 12 (set (reg:SI 271)
        (ashiftrt:SI (reg:SI 151 [ mm.13_39 ])
            (const_int 31 [0x1f]))) "timer.c":104:45 147 {*arm_shiftsi3}
     (nil))
(insn 178 177 179 12 (set (reg:SI 152 [ _40 ])
        (minus:SI (reg:SI 270)
            (reg:SI 271))) "timer.c":104:45 45 {*arm_subsi3_insn}
     (expr_list:REG_EQUAL (div:SI (reg:SI 151 [ mm.13_39 ])
            (const_int 10 [0xa]))
        (nil)))
(insn 179 178 180 12 (set (reg:SI 153 [ _41 ])
        (and:SI (reg:SI 152 [ _40 ])
            (const_int 255 [0xff]))) "timer.c":104:41 90 {*arm_andsi3_insn}
     (nil))
(insn 180 179 181 12 (set (reg:SI 272)
        (plus:SI (reg:SI 153 [ _41 ])
            (const_int 48 [0x30]))) "timer.c":104:41 7 {*arm_addsi3}
     (nil))
(insn 181 180 182 12 (set (reg:SI 154 [ _42 ])
        (and:SI (reg:SI 272)
            (const_int 255 [0xff]))) "timer.c":104:41 90 {*arm_andsi3_insn}
     (nil))
(insn 182 181 183 12 (set (reg/f:SI 273)
        (symbol_ref:SI ("clock") [flags 0x2]  <var_decl 0x7f5060612360 clock>)) "timer.c":104:37 253 {*arm_movsi_insn}
     (nil))
(insn 183 182 184 12 (set (reg:QI 274)
        (subreg/s/v:QI (reg:SI 154 [ _42 ]) 0)) "timer.c":104:37 263 {*arm_movqi_insn}
     (nil))
(insn 184 183 185 12 (set (mem/c:QI (plus:SI (reg/f:SI 273)
                (const_int 3 [0x3])) [0 clock[3]+0 S1 A8])
        (reg:QI 274)) "timer.c":104:37 263 {*arm_movqi_insn}
     (nil))
(insn 185 184 186 12 (set (reg/f:SI 275)
        (symbol_ref:SI ("hh") [flags 0x40]  <var_decl 0x7f5060612480 hh>)) "timer.c":105:23 253 {*arm_movsi_insn}
     (nil))
(insn 186 185 187 12 (set (reg:SI 155 [ hh.14_43 ])
        (mem/c:SI (reg/f:SI 275) [2 hh+0 S4 A32])) "timer.c":105:23 253 {*arm_movsi_insn}
     (nil))
(insn 187 186 188 12 (set (reg:SI 277)
        (const_int 1717986919 [0x66666667])) "timer.c":105:23 253 {*arm_movsi_insn}
     (nil))
(insn 188 187 189 12 (parallel [
            (set (reg:SI 276)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 155 [ hh.14_43 ]))
                            (sign_extend:DI (reg:SI 277)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
        ]) "timer.c":105:23 71 {*smull_high}
     (nil))
(insn 189 188 190 12 (set (reg:SI 278)
        (ashiftrt:SI (reg:SI 276)
            (const_int 2 [0x2]))) "timer.c":105:23 147 {*arm_shiftsi3}
     (nil))
(insn 190 189 191 12 (set (reg:SI 279)
        (ashiftrt:SI (reg:SI 155 [ hh.14_43 ])
            (const_int 31 [0x1f]))) "timer.c":105:23 147 {*arm_shiftsi3}
     (nil))
(insn 191 190 192 12 (set (reg:SI 156 [ _44 ])
        (minus:SI (reg:SI 278)
            (reg:SI 279))) "timer.c":105:23 45 {*arm_subsi3_insn}
     (expr_list:REG_EQUAL (div:SI (reg:SI 155 [ hh.14_43 ])
            (const_int 10 [0xa]))
        (nil)))
(insn 192 191 193 12 (set (reg:SI 280)
        (reg:SI 156 [ _44 ])) "timer.c":105:23 253 {*arm_movsi_insn}
     (nil))
(insn 193 192 194 12 (set (reg:SI 280)
        (ashift:SI (reg:SI 280)
            (const_int 2 [0x2]))) "timer.c":105:23 147 {*arm_shiftsi3}
     (nil))
(insn 194 193 195 12 (set (reg:SI 280)
        (plus:SI (reg:SI 280)
            (reg:SI 156 [ _44 ]))) "timer.c":105:23 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 156 [ _44 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 195 194 196 12 (set (reg:SI 281)
        (ashift:SI (reg:SI 280)
            (const_int 1 [0x1]))) "timer.c":105:23 147 {*arm_shiftsi3}
     (nil))
(insn 196 195 197 12 (set (reg:SI 280)
        (reg:SI 281)) "timer.c":105:23 253 {*arm_movsi_insn}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 156 [ _44 ])
            (const_int 10 [0xa]))
        (nil)))
(insn 197 196 198 12 (set (reg:SI 156 [ _44 ])
        (minus:SI (reg:SI 155 [ hh.14_43 ])
            (reg:SI 280))) "timer.c":105:23 45 {*arm_subsi3_insn}
     (nil))
(insn 198 197 199 12 (set (reg:SI 157 [ _45 ])
        (and:SI (reg:SI 156 [ _44 ])
            (const_int 255 [0xff]))) "timer.c":105:19 90 {*arm_andsi3_insn}
     (nil))
(insn 199 198 200 12 (set (reg:SI 282)
        (plus:SI (reg:SI 157 [ _45 ])
            (const_int 48 [0x30]))) "timer.c":105:19 7 {*arm_addsi3}
     (nil))
(insn 200 199 201 12 (set (reg:SI 158 [ _46 ])
        (and:SI (reg:SI 282)
            (const_int 255 [0xff]))) "timer.c":105:19 90 {*arm_andsi3_insn}
     (nil))
(insn 201 200 202 12 (set (reg/f:SI 283)
        (symbol_ref:SI ("clock") [flags 0x2]  <var_decl 0x7f5060612360 clock>)) "timer.c":105:15 253 {*arm_movsi_insn}
     (nil))
(insn 202 201 203 12 (set (reg:QI 284)
        (subreg/s/v:QI (reg:SI 158 [ _46 ]) 0)) "timer.c":105:15 263 {*arm_movqi_insn}
     (nil))
(insn 203 202 204 12 (set (mem/c:QI (plus:SI (reg/f:SI 283)
                (const_int 1 [0x1])) [0 clock[1]+0 S1 A8])
        (reg:QI 284)) "timer.c":105:15 263 {*arm_movqi_insn}
     (nil))
(insn 204 203 205 12 (set (reg/f:SI 285)
        (symbol_ref:SI ("hh") [flags 0x40]  <var_decl 0x7f5060612480 hh>)) "timer.c":105:45 253 {*arm_movsi_insn}
     (nil))
(insn 205 204 206 12 (set (reg:SI 159 [ hh.15_47 ])
        (mem/c:SI (reg/f:SI 285) [2 hh+0 S4 A32])) "timer.c":105:45 253 {*arm_movsi_insn}
     (nil))
(insn 206 205 207 12 (set (reg:SI 287)
        (const_int 1717986919 [0x66666667])) "timer.c":105:45 253 {*arm_movsi_insn}
     (nil))
(insn 207 206 208 12 (parallel [
            (set (reg:SI 286)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 159 [ hh.15_47 ]))
                            (sign_extend:DI (reg:SI 287)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
        ]) "timer.c":105:45 71 {*smull_high}
     (nil))
(insn 208 207 209 12 (set (reg:SI 288)
        (ashiftrt:SI (reg:SI 286)
            (const_int 2 [0x2]))) "timer.c":105:45 147 {*arm_shiftsi3}
     (nil))
(insn 209 208 210 12 (set (reg:SI 289)
        (ashiftrt:SI (reg:SI 159 [ hh.15_47 ])
            (const_int 31 [0x1f]))) "timer.c":105:45 147 {*arm_shiftsi3}
     (nil))
(insn 210 209 211 12 (set (reg:SI 160 [ _48 ])
        (minus:SI (reg:SI 288)
            (reg:SI 289))) "timer.c":105:45 45 {*arm_subsi3_insn}
     (expr_list:REG_EQUAL (div:SI (reg:SI 159 [ hh.15_47 ])
            (const_int 10 [0xa]))
        (nil)))
(insn 211 210 212 12 (set (reg:SI 161 [ _49 ])
        (and:SI (reg:SI 160 [ _48 ])
            (const_int 255 [0xff]))) "timer.c":105:41 90 {*arm_andsi3_insn}
     (nil))
(insn 212 211 213 12 (set (reg:SI 290)
        (plus:SI (reg:SI 161 [ _49 ])
            (const_int 48 [0x30]))) "timer.c":105:41 7 {*arm_addsi3}
     (nil))
(insn 213 212 214 12 (set (reg:SI 162 [ _50 ])
        (and:SI (reg:SI 290)
            (const_int 255 [0xff]))) "timer.c":105:41 90 {*arm_andsi3_insn}
     (nil))
(insn 214 213 215 12 (set (reg/f:SI 291)
        (symbol_ref:SI ("clock") [flags 0x2]  <var_decl 0x7f5060612360 clock>)) "timer.c":105:37 253 {*arm_movsi_insn}
     (nil))
(insn 215 214 216 12 (set (reg:QI 292)
        (subreg/s/v:QI (reg:SI 162 [ _50 ]) 0)) "timer.c":105:37 263 {*arm_movqi_insn}
     (nil))
(insn 216 215 217 12 (set (mem/c:QI (reg/f:SI 291) [0 clock[0]+0 S1 A32])
        (reg:QI 292)) "timer.c":105:37 263 {*arm_movqi_insn}
     (nil))
(insn 217 216 218 12 (set (reg:SI 293)
        (const_int 0 [0])) "timer.c":107:13 253 {*arm_movsi_insn}
     (nil))
(insn 218 217 237 12 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -36 [0xffffffffffffffdc])) [2 i+0 S4 A32])
        (reg:SI 293)) "timer.c":107:13 253 {*arm_movsi_insn}
     (nil))
;;  succ:       14 [always]  (FALLTHRU)

;; basic block 13, loop depth 1, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       14
(code_label 237 218 221 13 9 (nil) [1 uses])
(note 221 237 222 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 222 221 223 13 (set (reg/f:SI 294)
        (symbol_ref:SI ("clock") [flags 0x2]  <var_decl 0x7f5060612360 clock>)) "timer.c":108:9 253 {*arm_movsi_insn}
     (nil))
(insn 223 222 224 13 (set (reg:SI 296)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -36 [0xffffffffffffffdc])) [2 i+0 S4 A32])) "timer.c":108:9 253 {*arm_movsi_insn}
     (nil))
(insn 224 223 225 13 (set (reg/f:SI 295)
        (plus:SI (reg/f:SI 294)
            (reg:SI 296))) "timer.c":108:9 7 {*arm_addsi3}
     (nil))
(insn 225 224 226 13 (set (reg:SI 163 [ _51 ])
        (zero_extend:SI (mem:QI (reg/f:SI 295) [0 clock[i_89]+0 S1 A8]))) "timer.c":108:9 175 {*arm_zero_extendqisi2}
     (nil))
(insn 226 225 227 13 (set (reg:SI 297)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -36 [0xffffffffffffffdc])) [2 i+0 S4 A32])) "timer.c":108:9 253 {*arm_movsi_insn}
     (nil))
(insn 227 226 228 13 (set (reg:SI 164 [ _52 ])
        (plus:SI (reg:SI 297)
            (const_int 70 [0x46]))) "timer.c":108:9 7 {*arm_addsi3}
     (nil))
(insn 228 227 229 13 (set (reg:SI 2 r2)
        (reg:SI 164 [ _52 ])) "timer.c":108:9 253 {*arm_movsi_insn}
     (nil))
(insn 229 228 230 13 (set (reg:SI 1 r1)
        (const_int 0 [0])) "timer.c":108:9 253 {*arm_movsi_insn}
     (nil))
(insn 230 229 231 13 (set (reg:SI 0 r0)
        (reg:SI 163 [ _51 ])) "timer.c":108:9 253 {*arm_movsi_insn}
     (nil))
(call_insn 231 230 232 13 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kpchar") [flags 0x41]  <function_decl 0x7f506060a900 kpchar>) [0 kpchar S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":108:9 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 232 231 233 13 (set (reg:SI 299)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -36 [0xffffffffffffffdc])) [2 i+0 S4 A32])) "timer.c":107:23 253 {*arm_movsi_insn}
     (nil))
(insn 233 232 234 13 (set (reg:SI 298)
        (plus:SI (reg:SI 299)
            (const_int 1 [0x1]))) "timer.c":107:23 7 {*arm_addsi3}
     (nil))
(insn 234 233 235 13 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -36 [0xffffffffffffffdc])) [2 i+0 S4 A32])
        (reg:SI 298)) "timer.c":107:23 253 {*arm_movsi_insn}
     (nil))
;;  succ:       14 (FALLTHRU,DFS_BACK)

;; basic block 14, loop depth 1, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       12 [always]  (FALLTHRU)
;;              13 (FALLTHRU,DFS_BACK)
(code_label 235 234 236 14 8 (nil) [0 uses])
(note 236 235 240 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 240 236 241 14 (set (reg:SI 300)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -36 [0xffffffffffffffdc])) [2 i+0 S4 A32])) "timer.c":107:18 253 {*arm_movsi_insn}
     (nil))
(insn 241 240 242 14 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 300)
            (const_int 7 [0x7]))) "timer.c":107:18 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 242 241 243 14 (set (pc)
        (if_then_else (le (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 237)
            (pc))) "timer.c":107:18 273 {arm_cond_branch}
     (nil)
 -> 237)
;;  succ:       13
;;              15 (FALLTHRU)

;; basic block 15, loop depth 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL)
;;  pred:       14 (FALLTHRU)
(note 243 242 244 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 244 243 245 15 (set (reg:SI 301)
        (const_int 1 [0x1])) "timer.c":111:14 253 {*arm_movsi_insn}
     (nil))
(insn 245 244 315 15 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -36 [0xffffffffffffffdc])) [2 i+0 S4 A32])
        (reg:SI 301)) "timer.c":111:14 253 {*arm_movsi_insn}
     (nil))
;;  succ:       21 [always]  (FALLTHRU)

;; basic block 16, loop depth 1, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL)
;;  pred:       21
(code_label 315 245 248 16 12 (nil) [1 uses])
(note 248 315 249 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 249 248 250 16 (set (reg:SI 302)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -36 [0xffffffffffffffdc])) [2 i+0 S4 A32])) "timer.c":112:12 253 {*arm_movsi_insn}
     (nil))
(insn 250 249 251 16 (set (reg:SI 303)
        (reg:SI 302)) "timer.c":112:12 253 {*arm_movsi_insn}
     (nil))
(insn 251 250 252 16 (set (reg:SI 303)
        (ashift:SI (reg:SI 303)
            (const_int 6 [0x6]))) "timer.c":112:12 147 {*arm_shiftsi3}
     (nil))
(insn 252 251 253 16 (set (reg:SI 303)
        (plus:SI (reg:SI 303)
            (reg:SI 302))) "timer.c":112:12 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 302)
            (const_int 65 [0x41]))
        (nil)))
(insn 253 252 254 16 (set (reg:SI 303)
        (ashift:SI (reg:SI 303)
            (const_int 1 [0x1]))) "timer.c":112:12 147 {*arm_shiftsi3}
     (nil))
(insn 254 253 255 16 (set (reg:SI 303)
        (plus:SI (reg:SI 303)
            (reg:SI 302))) "timer.c":112:12 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 302)
            (const_int 131 [0x83]))
        (nil)))
(insn 255 254 256 16 (set (reg:SI 303)
        (ashift:SI (reg:SI 303)
            (const_int 3 [0x3]))) "timer.c":112:12 147 {*arm_shiftsi3}
     (nil))
(insn 256 255 257 16 (set (reg:SI 303)
        (minus:SI (reg:SI 303)
            (reg:SI 302))) "timer.c":112:12 45 {*arm_subsi3_insn}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 302)
            (const_int 1047 [0x417]))
        (nil)))
(insn 257 256 258 16 (set (reg:SI 304)
        (ashift:SI (reg:SI 303)
            (const_int 2 [0x2]))) "timer.c":112:12 147 {*arm_shiftsi3}
     (nil))
(insn 258 257 259 16 (set (reg:SI 303)
        (reg:SI 304)) "timer.c":112:12 253 {*arm_movsi_insn}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 302)
            (const_int 4188 [0x105c]))
        (nil)))
(insn 259 258 260 16 (set (reg:SI 306)
        (symbol_ref:SI ("proc") [flags 0x40]  <var_decl 0x7f50612f55a0 proc>)) "timer.c":112:12 253 {*arm_movsi_insn}
     (nil))
(insn 260 259 261 16 (set (reg:SI 305)
        (plus:SI (reg:SI 303)
            (reg:SI 306))) "timer.c":112:12 7 {*arm_addsi3}
     (nil))
(insn 261 260 262 16 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 p+0 S4 A64])
        (reg:SI 305)) "timer.c":112:12 253 {*arm_movsi_insn}
     (nil))
(insn 262 261 263 16 (set (reg/f:SI 307)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 p+0 S4 A64])) "timer.c":113:8 253 {*arm_movsi_insn}
     (nil))
(insn 263 262 264 16 (set (reg:SI 165 [ _53 ])
        (mem:SI (plus:SI (reg/f:SI 307)
                (const_int 28 [0x1c])) [2 p_137->status+0 S4 A32])) "timer.c":113:8 253 {*arm_movsi_insn}
     (nil))
(insn 264 263 265 16 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 165 [ _53 ])
            (const_int 2 [0x2]))) "timer.c":113:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 265 264 266 16 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 308)
            (pc))) "timer.c":113:6 273 {arm_cond_branch}
     (nil)
 -> 308)
;;  succ:       17 (FALLTHRU)
;;              20

;; basic block 17, loop depth 1, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL)
;;  pred:       16 (FALLTHRU)
(note 266 265 267 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 267 266 268 17 (set (reg/f:SI 308)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 p+0 S4 A64])) "timer.c":113:28 253 {*arm_movsi_insn}
     (nil))
(insn 268 267 269 17 (set (reg:SI 166 [ _54 ])
        (mem:SI (plus:SI (reg/f:SI 308)
                (const_int 44 [0x2c])) [2 p_137->event+0 S4 A32])) "timer.c":113:28 253 {*arm_movsi_insn}
     (nil))
(insn 269 268 270 17 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 166 [ _54 ])
            (const_int 5 [0x5]))) "timer.c":113:24 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 270 269 271 17 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 308)
            (pc))) "timer.c":113:24 273 {arm_cond_branch}
     (nil)
 -> 308)
;;  succ:       18 (FALLTHRU)
;;              20

;; basic block 18, loop depth 1, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL)
;;  pred:       17 (FALLTHRU)
(note 271 270 272 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 272 271 273 18 (set (reg/f:SI 309)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 p+0 S4 A64])) "timer.c":114:6 253 {*arm_movsi_insn}
     (nil))
(insn 273 272 274 18 (set (reg:SI 167 [ _55 ])
        (mem:SI (plus:SI (reg/f:SI 309)
                (const_int 68 [0x44])) [2 p_137->pause+0 S4 A32])) "timer.c":114:6 253 {*arm_movsi_insn}
     (nil))
(insn 274 273 275 18 (set (reg:SI 168 [ _56 ])
        (plus:SI (reg:SI 167 [ _55 ])
            (const_int -1 [0xffffffffffffffff]))) "timer.c":114:13 7 {*arm_addsi3}
     (nil))
(insn 275 274 276 18 (set (reg/f:SI 310)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 p+0 S4 A64])) "timer.c":114:13 253 {*arm_movsi_insn}
     (nil))
(insn 276 275 277 18 (set (mem:SI (plus:SI (reg/f:SI 310)
                (const_int 68 [0x44])) [2 p_137->pause+0 S4 A32])
        (reg:SI 168 [ _56 ])) "timer.c":114:13 253 {*arm_movsi_insn}
     (nil))
(insn 277 276 278 18 (set (reg/f:SI 311)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 p+0 S4 A64])) "timer.c":115:12 253 {*arm_movsi_insn}
     (nil))
(insn 278 277 279 18 (set (reg:SI 169 [ _57 ])
        (mem:SI (plus:SI (reg/f:SI 311)
                (const_int 68 [0x44])) [2 p_137->pause+0 S4 A32])) "timer.c":115:12 253 {*arm_movsi_insn}
     (nil))
(insn 279 278 280 18 (set (reg:SI 1 r1)
        (reg:SI 169 [ _57 ])) "timer.c":115:12 253 {*arm_movsi_insn}
     (nil))
(insn 280 279 281 18 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x7f50606435a0 *.LC1>)) "timer.c":115:12 253 {*arm_movsi_insn}
     (nil))
(call_insn 281 280 282 18 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kprintf") [flags 0x41]  <function_decl 0x7f506060a700 kprintf>) [0 kprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":115:12 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 282 281 283 18 (set (reg/f:SI 312)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 p+0 S4 A64])) "timer.c":116:17 253 {*arm_movsi_insn}
     (nil))
(insn 283 282 286 18 (set (reg:SI 170 [ _58 ])
        (mem:SI (plus:SI (reg/f:SI 312)
                (const_int 68 [0x44])) [2 p_137->pause+0 S4 A32])) "timer.c":116:17 253 {*arm_movsi_insn}
     (nil))
(insn 286 283 287 18 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 170 [ _58 ])
            (const_int 0 [0]))) "timer.c":116:15 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 287 286 288 18 (set (pc)
        (if_then_else (gt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 308)
            (pc))) "timer.c":116:15 273 {arm_cond_branch}
     (nil)
 -> 308)
;;  succ:       19 (FALLTHRU)
;;              20

;; basic block 19, loop depth 1, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL)
;;  pred:       18 (FALLTHRU)
(note 288 287 289 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 289 288 290 19 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 p+0 S4 A64])) "timer.c":121:14 253 {*arm_movsi_insn}
     (nil))
(call_insn 290 289 291 19 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("outSleep") [flags 0x41]  <function_decl 0x7f506060ad00 outSleep>) [0 outSleep S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":121:14 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 291 290 292 19 (set (reg/f:SI 313)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 p+0 S4 A64])) "timer.c":122:24 253 {*arm_movsi_insn}
     (nil))
(insn 292 291 293 19 (set (reg:SI 314)
        (const_int 1 [0x1])) "timer.c":122:24 253 {*arm_movsi_insn}
     (nil))
(insn 293 292 294 19 (set (mem:SI (plus:SI (reg/f:SI 313)
                (const_int 28 [0x1c])) [2 p_137->status+0 S4 A32])
        (reg:SI 314)) "timer.c":122:24 253 {*arm_movsi_insn}
     (nil))
(insn 294 293 295 19 (set (reg/f:SI 315)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 p+0 S4 A64])) "timer.c":123:23 253 {*arm_movsi_insn}
     (nil))
(insn 295 294 296 19 (set (reg:SI 316)
        (const_int 0 [0])) "timer.c":123:23 253 {*arm_movsi_insn}
     (nil))
(insn 296 295 297 19 (set (mem:SI (plus:SI (reg/f:SI 315)
                (const_int 44 [0x2c])) [2 p_137->event+0 S4 A32])
        (reg:SI 316)) "timer.c":123:23 253 {*arm_movsi_insn}
     (nil))
(insn 297 296 298 19 (set (reg/f:SI 317)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 p+0 S4 A64])) "timer.c":124:26 253 {*arm_movsi_insn}
     (nil))
(insn 298 297 299 19 (set (reg:SI 318)
        (const_int 128 [0x80])) "timer.c":124:26 253 {*arm_movsi_insn}
     (nil))
(insn 299 298 300 19 (set (mem:SI (plus:SI (reg/f:SI 317)
                (const_int 32 [0x20])) [2 p_137->priority+0 S4 A32])
        (reg:SI 318)) "timer.c":124:26 253 {*arm_movsi_insn}
     (nil))
(insn 300 299 301 19 (set (reg:SI 1 r1)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 p+0 S4 A64])) "timer.c":125:7 253 {*arm_movsi_insn}
     (nil))
(insn 301 300 302 19 (set (reg:SI 0 r0)
        (symbol_ref:SI ("readyQueue") [flags 0x40]  <var_decl 0x7f50612f56c0 readyQueue>)) "timer.c":125:7 253 {*arm_movsi_insn}
     (nil))
(call_insn 302 301 303 19 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("enqueue") [flags 0x41]  <function_decl 0x7f506060a000 enqueue>) [0 enqueue S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":125:7 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 303 302 304 19 (set (reg/f:SI 319)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [6 p+0 S4 A64])) "timer.c":127:14 253 {*arm_movsi_insn}
     (nil))
(insn 304 303 305 19 (set (reg:SI 171 [ _59 ])
        (mem:SI (plus:SI (reg/f:SI 319)
                (const_int 24 [0x18])) [2 p_137->pid+0 S4 A32])) "timer.c":127:14 253 {*arm_movsi_insn}
     (nil))
(insn 305 304 306 19 (set (reg:SI 1 r1)
        (reg:SI 171 [ _59 ])) "timer.c":127:14 253 {*arm_movsi_insn}
     (nil))
(insn 306 305 307 19 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC2") [flags 0x2]  <var_decl 0x7f5060643630 *.LC2>)) "timer.c":127:14 253 {*arm_movsi_insn}
     (nil))
(call_insn 307 306 308 19 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kprintf") [flags 0x41]  <function_decl 0x7f506060a700 kprintf>) [0 kprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":127:14 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
;;  succ:       20 (FALLTHRU)

;; basic block 20, loop depth 1, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL)
;;  pred:       16
;;              17
;;              18
;;              19 (FALLTHRU)
(code_label 308 307 309 20 11 (nil) [3 uses])
(note 309 308 310 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 310 309 311 20 (set (reg:SI 321)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -36 [0xffffffffffffffdc])) [2 i+0 S4 A32])) "timer.c":111:28 253 {*arm_movsi_insn}
     (nil))
(insn 311 310 312 20 (set (reg:SI 320)
        (plus:SI (reg:SI 321)
            (const_int 1 [0x1]))) "timer.c":111:28 7 {*arm_addsi3}
     (nil))
(insn 312 311 313 20 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -36 [0xffffffffffffffdc])) [2 i+0 S4 A32])
        (reg:SI 320)) "timer.c":111:28 253 {*arm_movsi_insn}
     (nil))
;;  succ:       21 (FALLTHRU,DFS_BACK)

;; basic block 21, loop depth 1, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL)
;;  pred:       15 [always]  (FALLTHRU)
;;              20 (FALLTHRU,DFS_BACK)
(code_label 313 312 314 21 10 (nil) [0 uses])
(note 314 313 318 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 318 314 319 21 (set (reg:SI 322)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -36 [0xffffffffffffffdc])) [2 i+0 S4 A32])) "timer.c":111:19 253 {*arm_movsi_insn}
     (nil))
(insn 319 318 320 21 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 322)
            (const_int 63 [0x3f]))) "timer.c":111:19 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 320 319 321 21 (set (pc)
        (if_then_else (le (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 315)
            (pc))) "timer.c":111:19 273 {arm_cond_branch}
     (nil)
 -> 315)
;;  succ:       16
;;              22 (FALLTHRU)

;; basic block 22, loop depth 0, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL)
;;  pred:       21 (FALLTHRU)
(note 321 320 322 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 322 321 323 22 (set (reg/f:SI 323)
        (symbol_ref:SI ("tq") [flags 0x2]  <var_decl 0x7f50606127e0 tq>)) "timer.c":134:11 253 {*arm_movsi_insn}
     (nil))
(insn 323 322 324 22 (set (reg/f:SI 172 [ tq.16_60 ])
        (mem/f/c:SI (reg/f:SI 323) [5 tq+0 S4 A32])) "timer.c":134:11 253 {*arm_movsi_insn}
     (nil))
(insn 324 323 325 22 (set (reg:CC 100 cc)
        (compare:CC (reg/f:SI 172 [ tq.16_60 ])
            (const_int 0 [0]))) "timer.c":134:10 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 325 324 326 22 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 382)
            (pc))) "timer.c":134:10 273 {arm_cond_branch}
     (nil)
 -> 382)
;;  succ:       23 (FALLTHRU)
;;              27

;; basic block 23, loop depth 0, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL)
;;  pred:       22 (FALLTHRU)
(note 326 325 327 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(call_insn 327 326 328 23 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printTQ") [flags 0x3]  <function_decl 0x7f506060af00 printTQ>) [0 printTQ S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":135:4 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 328 327 329 23 (set (reg/f:SI 324)
        (symbol_ref:SI ("tq") [flags 0x2]  <var_decl 0x7f50606127e0 tq>)) "timer.c":136:15 253 {*arm_movsi_insn}
     (nil))
(insn 329 328 330 23 (set (reg/f:SI 325)
        (mem/f/c:SI (reg/f:SI 324) [5 tq+0 S4 A32])) "timer.c":136:15 253 {*arm_movsi_insn}
     (nil))
(insn 330 329 378 23 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -32 [0xffffffffffffffe0])) [5 tqq+0 S4 A64])
        (reg/f:SI 325)) "timer.c":136:15 253 {*arm_movsi_insn}
     (nil))
;;  succ:       26 [always]  (FALLTHRU)

;; basic block 24, loop depth 1, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       26
(code_label 378 330 333 24 15 (nil) [1 uses])
(note 333 378 334 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 334 333 335 24 (set (reg/f:SI 326)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -32 [0xffffffffffffffe0])) [5 tqq+0 S4 A64])) "timer.c":138:17 253 {*arm_movsi_insn}
     (nil))
(insn 335 334 336 24 (set (reg:SI 173 [ _61 ])
        (mem:SI (plus:SI (reg/f:SI 326)
                (const_int 4 [0x4])) [2 tqq_91->time+0 S4 A32])) "timer.c":138:17 253 {*arm_movsi_insn}
     (nil))
(insn 336 335 337 24 (set (reg:SI 174 [ _62 ])
        (plus:SI (reg:SI 173 [ _61 ])
            (const_int -1 [0xffffffffffffffff]))) "timer.c":138:23 7 {*arm_addsi3}
     (nil))
(insn 337 336 338 24 (set (reg/f:SI 327)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -32 [0xffffffffffffffe0])) [5 tqq+0 S4 A64])) "timer.c":138:23 253 {*arm_movsi_insn}
     (nil))
(insn 338 337 339 24 (set (mem:SI (plus:SI (reg/f:SI 327)
                (const_int 4 [0x4])) [2 tqq_91->time+0 S4 A32])
        (reg:SI 174 [ _62 ])) "timer.c":138:23 253 {*arm_movsi_insn}
     (nil))
(insn 339 338 340 24 (set (reg/f:SI 328)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -32 [0xffffffffffffffe0])) [5 tqq+0 S4 A64])) "timer.c":139:21 253 {*arm_movsi_insn}
     (nil))
(insn 340 339 343 24 (set (reg:SI 175 [ _63 ])
        (mem:SI (plus:SI (reg/f:SI 328)
                (const_int 4 [0x4])) [2 tqq_91->time+0 S4 A32])) "timer.c":139:21 253 {*arm_movsi_insn}
     (nil))
(insn 343 340 344 24 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 175 [ _63 ])
            (const_int 0 [0]))) "timer.c":139:17 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 344 343 345 24 (set (pc)
        (if_then_else (gt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 382)
            (pc))) "timer.c":139:17 273 {arm_cond_branch}
     (nil)
 -> 382)
;;  succ:       25 (FALLTHRU)
;;              27

;; basic block 25, loop depth 1, maybe hot
;;  prev block 24, next block 26, flags: (NEW, REACHABLE, RTL)
;;  pred:       24 (FALLTHRU)
(note 345 344 346 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 346 345 347 25 (set (reg/f:SI 329)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -32 [0xffffffffffffffe0])) [5 tqq+0 S4 A64])) "timer.c":140:44 253 {*arm_movsi_insn}
     (nil))
(insn 347 346 348 25 (set (reg/f:SI 176 [ _64 ])
        (mem/f:SI (plus:SI (reg/f:SI 329)
                (const_int 8 [0x8])) [6 tqq_91->who+0 S4 A32])) "timer.c":140:44 253 {*arm_movsi_insn}
     (nil))
(insn 348 347 349 25 (set (reg:SI 177 [ _65 ])
        (mem:SI (plus:SI (reg/f:SI 176 [ _64 ])
                (const_int 24 [0x18])) [2 _64->pid+0 S4 A32])) "timer.c":140:9 253 {*arm_movsi_insn}
     (nil))
(insn 349 348 350 25 (set (reg:SI 1 r1)
        (reg:SI 177 [ _65 ])) "timer.c":140:9 253 {*arm_movsi_insn}
     (nil))
(insn 350 349 351 25 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC3") [flags 0x2]  <var_decl 0x7f50606436c0 *.LC3>)) "timer.c":140:9 253 {*arm_movsi_insn}
     (nil))
(call_insn 351 350 352 25 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kprintf") [flags 0x41]  <function_decl 0x7f506060a700 kprintf>) [0 kprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":140:9 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 352 351 353 25 (set (reg/f:SI 330)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -32 [0xffffffffffffffe0])) [5 tqq+0 S4 A64])) "timer.c":141:21 253 {*arm_movsi_insn}
     (nil))
(insn 353 352 354 25 (set (reg/f:SI 178 [ _66 ])
        (mem/f:SI (plus:SI (reg/f:SI 330)
                (const_int 8 [0x8])) [6 tqq_91->who+0 S4 A32])) "timer.c":141:21 253 {*arm_movsi_insn}
     (nil))
(insn 354 353 355 25 (set (reg/f:SI 179 [ _67 ])
        (mem/f:SI (plus:SI (reg/f:SI 178 [ _66 ])
                (const_int 84 [0x54])) [11 _66->res+0 S4 A32])) "timer.c":141:26 253 {*arm_movsi_insn}
     (nil))
(insn 355 354 356 25 (set (reg:SI 180 [ _68 ])
        (mem:SI (plus:SI (reg/f:SI 179 [ _67 ])
                (const_int 92 [0x5c])) [2 _67->signal+0 S4 A32])) "timer.c":141:40 253 {*arm_movsi_insn}
     (nil))
(insn 356 355 357 25 (set (reg/f:SI 331)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -32 [0xffffffffffffffe0])) [5 tqq+0 S4 A64])) "timer.c":141:21 253 {*arm_movsi_insn}
     (nil))
(insn 357 356 358 25 (set (reg/f:SI 181 [ _69 ])
        (mem/f:SI (plus:SI (reg/f:SI 331)
                (const_int 8 [0x8])) [6 tqq_91->who+0 S4 A32])) "timer.c":141:21 253 {*arm_movsi_insn}
     (nil))
(insn 358 357 359 25 (set (reg/f:SI 182 [ _70 ])
        (mem/f:SI (plus:SI (reg/f:SI 181 [ _69 ])
                (const_int 84 [0x54])) [11 _69->res+0 S4 A32])) "timer.c":141:26 253 {*arm_movsi_insn}
     (nil))
(insn 359 358 360 25 (set (reg:SI 183 [ _71 ])
        (ior:SI (reg:SI 180 [ _68 ])
            (const_int 16384 [0x4000]))) "timer.c":141:40 106 {*iorsi3_insn}
     (nil))
(insn 360 359 361 25 (set (mem:SI (plus:SI (reg/f:SI 182 [ _70 ])
                (const_int 92 [0x5c])) [2 _70->signal+0 S4 A32])
        (reg:SI 183 [ _71 ])) "timer.c":141:40 253 {*arm_movsi_insn}
     (nil))
(insn 361 360 362 25 (set (reg/f:SI 332)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -32 [0xffffffffffffffe0])) [5 tqq+0 S4 A64])) "timer.c":144:26 253 {*arm_movsi_insn}
     (nil))
(insn 362 361 363 25 (set (reg/f:SI 184 [ _72 ])
        (mem/f:SI (reg/f:SI 332) [5 tqq_91->next+0 S4 A32])) "timer.c":144:26 253 {*arm_movsi_insn}
     (nil))
(insn 363 362 364 25 (set (reg/f:SI 333)
        (symbol_ref:SI ("tq") [flags 0x2]  <var_decl 0x7f50606127e0 tq>)) "timer.c":144:21 253 {*arm_movsi_insn}
     (nil))
(insn 364 363 365 25 (set (mem/f/c:SI (reg/f:SI 333) [5 tq+0 S4 A32])
        (reg/f:SI 184 [ _72 ])) "timer.c":144:21 253 {*arm_movsi_insn}
     (nil))
(insn 365 364 366 25 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -32 [0xffffffffffffffe0])) [5 tqq+0 S4 A64])) "timer.c":145:18 253 {*arm_movsi_insn}
     (nil))
(call_insn 366 365 367 25 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("put_tnode") [flags 0x3]  <function_decl 0x7f506061b000 put_tnode>) [0 put_tnode S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":145:18 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 367 366 368 25 (set (reg/f:SI 334)
        (symbol_ref:SI ("tq") [flags 0x2]  <var_decl 0x7f50606127e0 tq>)) "timer.c":146:22 253 {*arm_movsi_insn}
     (nil))
(insn 368 367 369 25 (set (reg/f:SI 335)
        (mem/f/c:SI (reg/f:SI 334) [5 tq+0 S4 A32])) "timer.c":146:22 253 {*arm_movsi_insn}
     (nil))
(insn 369 368 376 25 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -32 [0xffffffffffffffe0])) [5 tqq+0 S4 A64])
        (reg/f:SI 335)) "timer.c":146:22 253 {*arm_movsi_insn}
     (nil))
;;  succ:       26 [always]  (FALLTHRU)

;; basic block 26, loop depth 1, maybe hot
;;  prev block 25, next block 27, flags: (NEW, REACHABLE, RTL)
;;  pred:       23 [always]  (FALLTHRU)
;;              25 [always]  (FALLTHRU)
(code_label 376 369 377 26 13 (nil) [0 uses])
(note 377 376 379 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 379 377 380 26 (set (reg:SI 336)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -32 [0xffffffffffffffe0])) [5 tqq+0 S4 A64])) "timer.c":137:18 253 {*arm_movsi_insn}
     (nil))
(insn 380 379 381 26 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 336)
            (const_int 0 [0]))) "timer.c":137:18 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 381 380 382 26 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 378)
            (pc))) "timer.c":137:18 273 {arm_cond_branch}
     (nil)
 -> 378)
;;  succ:       24
;;              27 (FALLTHRU)

;; basic block 27, loop depth 0, maybe hot
;;  prev block 26, next block 28, flags: (NEW, REACHABLE, RTL)
;;  pred:       8
;;              22
;;              24
;;              26 (FALLTHRU)
(code_label 382 381 383 27 5 (nil) [3 uses])
(note 383 382 384 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 384 383 385 27 (set (reg/f:SI 337)
        (symbol_ref:SI ("running") [flags 0x40]  <var_decl 0x7f50612f57e0 running>)) "timer.c":156:16 253 {*arm_movsi_insn}
     (nil))
(insn 385 384 386 27 (set (reg/f:SI 185 [ running.17_73 ])
        (mem/f/c:SI (reg/f:SI 337) [6 running+0 S4 A32])) "timer.c":156:16 253 {*arm_movsi_insn}
     (nil))
(insn 386 385 387 27 (set (reg:SI 186 [ _74 ])
        (mem:SI (plus:SI (reg/f:SI 185 [ running.17_73 ])
                (const_int 24 [0x18])) [2 running.17_73->pid+0 S4 A32])) "timer.c":156:16 253 {*arm_movsi_insn}
     (nil))
(insn 387 386 388 27 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 186 [ _74 ])
            (const_int 0 [0]))) "timer.c":156:8 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 388 387 389 27 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 395)
            (pc))) "timer.c":156:8 273 {arm_cond_branch}
     (nil)
 -> 395)
;;  succ:       28 (FALLTHRU)
;;              29

;; basic block 28, loop depth 0, maybe hot
;;  prev block 27, next block 29, flags: (NEW, REACHABLE, RTL)
;;  pred:       27 (FALLTHRU)
(note 389 388 390 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 390 389 391 28 (set (reg/f:SI 338)
        (symbol_ref:SI ("running") [flags 0x40]  <var_decl 0x7f50612f57e0 running>)) "timer.c":157:15 253 {*arm_movsi_insn}
     (nil))
(insn 391 390 392 28 (set (reg/f:SI 187 [ running.18_75 ])
        (mem/f/c:SI (reg/f:SI 338) [6 running+0 S4 A32])) "timer.c":157:15 253 {*arm_movsi_insn}
     (nil))
(insn 392 391 393 28 (set (reg:SI 188 [ _76 ])
        (mem:SI (plus:SI (reg/f:SI 187 [ running.18_75 ])
                (const_int 56 [0x38])) [2 running.18_75->time+0 S4 A32])) "timer.c":157:15 253 {*arm_movsi_insn}
     (nil))
(insn 393 392 394 28 (set (reg:SI 189 [ _77 ])
        (plus:SI (reg:SI 188 [ _76 ])
            (const_int -1 [0xffffffffffffffff]))) "timer.c":157:21 7 {*arm_addsi3}
     (nil))
(insn 394 393 395 28 (set (mem:SI (plus:SI (reg/f:SI 187 [ running.18_75 ])
                (const_int 56 [0x38])) [2 running.18_75->time+0 S4 A32])
        (reg:SI 189 [ _77 ])) "timer.c":157:21 253 {*arm_movsi_insn}
     (nil))
;;  succ:       29 (FALLTHRU)

;; basic block 29, loop depth 0, maybe hot
;;  prev block 28, next block 30, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       27
;;              28 (FALLTHRU)
(code_label 395 394 396 29 16 (nil) [1 uses])
(note 396 395 397 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(call_insn 397 396 398 29 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("get_spsr") [flags 0x41]  <function_decl 0x7f506061b300 get_spsr>) [0 get_spsr S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":159:12 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 398 397 399 29 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 spsr+0 S4 A32])
        (reg:SI 0 r0)) "timer.c":159:12 253 {*arm_movsi_insn}
     (nil))
(insn 399 398 400 29 (set (reg:SI 0 r0)
        (const_int 0 [0])) "timer.c":167:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 400 399 401 29 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("timer_clearInterrupt") [flags 0x3]  <function_decl 0x7f506061b400 timer_clearInterrupt>) [0 timer_clearInterrupt S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":167:3 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 401 400 402 29 (set (reg/f:SI 339)
        (symbol_ref:SI ("oldcolor") [flags 0x2]  <var_decl 0x7f50606126c0 oldcolor>)) "timer.c":168:9 253 {*arm_movsi_insn}
     (nil))
(insn 402 401 403 29 (set (reg:SI 190 [ oldcolor.19_78 ])
        (mem/c:SI (reg/f:SI 339) [2 oldcolor+0 S4 A32])) "timer.c":168:9 253 {*arm_movsi_insn}
     (nil))
(insn 403 402 404 29 (set (reg/f:SI 340)
        (symbol_ref:SI ("color") [flags 0x40]  <var_decl 0x7f50612f5480 color>)) "timer.c":168:9 253 {*arm_movsi_insn}
     (nil))
(insn 404 403 405 29 (set (mem/c:SI (reg/f:SI 340) [2 color+0 S4 A32])
        (reg:SI 190 [ oldcolor.19_78 ])) "timer.c":168:9 253 {*arm_movsi_insn}
     (nil))
(insn 405 404 406 29 (set (reg/f:SI 341)
        (symbol_ref:SI ("running") [flags 0x40]  <var_decl 0x7f50612f57e0 running>)) "timer.c":170:14 253 {*arm_movsi_insn}
     (nil))
(insn 406 405 407 29 (set (reg/f:SI 191 [ running.20_79 ])
        (mem/f/c:SI (reg/f:SI 341) [6 running+0 S4 A32])) "timer.c":170:14 253 {*arm_movsi_insn}
     (nil))
(insn 407 406 410 29 (set (reg:SI 192 [ _80 ])
        (mem:SI (plus:SI (reg/f:SI 191 [ running.20_79 ])
                (const_int 56 [0x38])) [2 running.20_79->time+0 S4 A32])) "timer.c":170:14 253 {*arm_movsi_insn}
     (nil))
(insn 410 407 411 29 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 192 [ _80 ])
            (const_int 0 [0]))) "timer.c":170:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 411 410 412 29 (set (pc)
        (if_then_else (gt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 441)
            (pc))) "timer.c":170:6 273 {arm_cond_branch}
     (nil)
 -> 441)
;;  succ:       30 (FALLTHRU)
;;              33

;; basic block 30, loop depth 0, maybe hot
;;  prev block 29, next block 31, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       29 (FALLTHRU)
(note 412 411 413 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 413 412 414 30 (set (reg:SI 342)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 spsr+0 S4 A32])) "timer.c":170:35 253 {*arm_movsi_insn}
     (nil))
(insn 414 413 415 30 (set (reg:SI 193 [ _81 ])
        (and:SI (reg:SI 342)
            (const_int 31 [0x1f]))) "timer.c":170:35 90 {*arm_andsi3_insn}
     (nil))
(insn 415 414 416 30 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 193 [ _81 ])
            (const_int 16 [0x10]))) "timer.c":170:26 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 416 415 417 30 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 441)
            (pc))) "timer.c":170:26 273 {arm_cond_branch}
     (nil)
 -> 441)
;;  succ:       31 (FALLTHRU)
;;              33

;; basic block 31, loop depth 0, maybe hot
;;  prev block 30, next block 32, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       30 (FALLTHRU)
(note 417 416 418 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 418 417 419 31 (set (reg/f:SI 343)
        (symbol_ref:SI ("readyQueue") [flags 0x40]  <var_decl 0x7f50612f56c0 readyQueue>)) "timer.c":170:63 253 {*arm_movsi_insn}
     (nil))
(insn 419 418 420 31 (set (reg/f:SI 194 [ readyQueue.21_82 ])
        (mem/f/c:SI (reg/f:SI 343) [6 readyQueue+0 S4 A32])) "timer.c":170:63 253 {*arm_movsi_insn}
     (nil))
(insn 420 419 421 31 (set (reg:SI 195 [ _83 ])
        (mem:SI (plus:SI (reg/f:SI 194 [ readyQueue.21_82 ])
                (const_int 24 [0x18])) [2 readyQueue.21_82->pid+0 S4 A32])) "timer.c":170:63 253 {*arm_movsi_insn}
     (nil))
(insn 421 420 422 31 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 195 [ _83 ])
            (const_int 0 [0]))) "timer.c":170:50 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 422 421 423 31 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 441)
            (pc))) "timer.c":170:50 273 {arm_cond_branch}
     (nil)
 -> 441)
;;  succ:       32 (FALLTHRU)
;;              33

;; basic block 32, loop depth 0, maybe hot
;;  prev block 31, next block 33, flags: (NEW, REACHABLE, RTL)
;;  pred:       31 (FALLTHRU)
(note 423 422 424 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 424 423 425 32 (set (reg/f:SI 344)
        (symbol_ref:SI ("running") [flags 0x40]  <var_decl 0x7f50612f57e0 running>)) "timer.c":171:54 253 {*arm_movsi_insn}
     (nil))
(insn 425 424 426 32 (set (reg/f:SI 196 [ running.22_84 ])
        (mem/f/c:SI (reg/f:SI 344) [6 running+0 S4 A32])) "timer.c":171:54 253 {*arm_movsi_insn}
     (nil))
(insn 426 425 427 32 (set (reg:SI 197 [ _85 ])
        (mem:SI (plus:SI (reg/f:SI 196 [ running.22_84 ])
                (const_int 24 [0x18])) [2 running.22_84->pid+0 S4 A32])) "timer.c":171:5 253 {*arm_movsi_insn}
     (nil))
(insn 427 426 428 32 (set (reg/f:SI 345)
        (symbol_ref:SI ("readyQueue") [flags 0x40]  <var_decl 0x7f50612f56c0 readyQueue>)) "timer.c":171:71 253 {*arm_movsi_insn}
     (nil))
(insn 428 427 429 32 (set (reg/f:SI 198 [ readyQueue.23_86 ])
        (mem/f/c:SI (reg/f:SI 345) [6 readyQueue+0 S4 A32])) "timer.c":171:71 253 {*arm_movsi_insn}
     (nil))
(insn 429 428 430 32 (set (reg:SI 199 [ _87 ])
        (mem:SI (plus:SI (reg/f:SI 198 [ readyQueue.23_86 ])
                (const_int 24 [0x18])) [2 readyQueue.23_86->pid+0 S4 A32])) "timer.c":171:5 253 {*arm_movsi_insn}
     (nil))
(insn 430 429 431 32 (set (reg:SI 2 r2)
        (reg:SI 199 [ _87 ])) "timer.c":171:5 253 {*arm_movsi_insn}
     (nil))
(insn 431 430 432 32 (set (reg:SI 1 r1)
        (reg:SI 197 [ _85 ])) "timer.c":171:5 253 {*arm_movsi_insn}
     (nil))
(insn 432 431 433 32 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC4") [flags 0x2]  <var_decl 0x7f5060643750 *.LC4>)) "timer.c":171:5 253 {*arm_movsi_insn}
     (nil))
(call_insn 433 432 434 32 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kprintf") [flags 0x41]  <function_decl 0x7f506060a700 kprintf>) [0 kprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":171:5 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 434 433 435 32 (set (reg/f:SI 346)
        (symbol_ref:SI ("swflag") [flags 0x40]  <var_decl 0x7f506060d5a0 swflag>)) "timer.c":172:12 253 {*arm_movsi_insn}
     (nil))
(insn 435 434 436 32 (set (reg:SI 347)
        (const_int 1 [0x1])) "timer.c":172:12 253 {*arm_movsi_insn}
     (nil))
(insn 436 435 443 32 (set (mem/v/c:SI (reg/f:SI 346) [2 swflag+0 S4 A32])
        (reg:SI 347)) "timer.c":172:12 253 {*arm_movsi_insn}
     (nil))
(insn 443 436 441 32 (const_int 0 [0]) "timer.c":175:3 311 {nop}
     (nil))
;;  succ:       33 (FALLTHRU)

;; basic block 33, loop depth 0, maybe hot
;;  prev block 32, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       32 (FALLTHRU)
;;              29
;;              30
;;              31
(code_label 441 443 442 33 1 (nil) [3 uses])
(note 442 441 0 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function timer_init (timer_init, funcdef_no=1, decl_uid=4558, cgraph_uid=2, symbol_order=12)


9 basic blocks, 10 edges.
;; basic block 0, loop depth 0, maybe hot
;;  prev block (nil), next block 2, flags: (RTL)
;;  pred:      
;;  succ:       2 (FALLTHRU)

;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC5") [flags 0x2]  <var_decl 0x7f50606437e0 *.LC5>)) "timer.c":181:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 6 5 7 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kprintf") [flags 0x41]  <function_decl 0x7f506060a700 kprintf>) [0 kprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":181:3 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 7 6 8 2 (set (reg/f:SI 124)
        (symbol_ref:SI ("tp") [flags 0x2]  <var_decl 0x7f5060612000 tp>)) "timer.c":184:9 253 {*arm_movsi_insn}
     (nil))
(insn 8 7 9 2 (set (reg:SI 125)
        (const_int 270409728 [0x101e2000])) "timer.c":184:9 253 {*arm_movsi_insn}
     (nil))
(insn 9 8 10 2 (set (mem/f/c:SI (reg/f:SI 124) [1 tp[0]+0 S4 A32])
        (reg:SI 125)) "timer.c":184:9 253 {*arm_movsi_insn}
     (nil))
(insn 10 9 11 2 (set (reg/f:SI 126)
        (symbol_ref:SI ("tp") [flags 0x2]  <var_decl 0x7f5060612000 tp>)) "timer.c":185:9 253 {*arm_movsi_insn}
     (nil))
(insn 11 10 12 2 (set (reg:SI 127)
        (const_int 270409760 [0x101e2020])) "timer.c":185:9 253 {*arm_movsi_insn}
     (nil))
(insn 12 11 13 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 126)
                (const_int 4 [0x4])) [1 tp[1]+0 S4 A32])
        (reg:SI 127)) "timer.c":185:9 253 {*arm_movsi_insn}
     (nil))
(insn 13 12 14 2 (set (reg/f:SI 128)
        (symbol_ref:SI ("tp") [flags 0x2]  <var_decl 0x7f5060612000 tp>)) "timer.c":186:9 253 {*arm_movsi_insn}
     (nil))
(insn 14 13 15 2 (set (reg:SI 129)
        (const_int 270413824 [0x101e3000])) "timer.c":186:9 253 {*arm_movsi_insn}
     (nil))
(insn 15 14 16 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 128)
                (const_int 8 [0x8])) [1 tp[2]+0 S4 A32])
        (reg:SI 129)) "timer.c":186:9 253 {*arm_movsi_insn}
     (nil))
(insn 16 15 17 2 (set (reg/f:SI 130)
        (symbol_ref:SI ("tp") [flags 0x2]  <var_decl 0x7f5060612000 tp>)) "timer.c":187:9 253 {*arm_movsi_insn}
     (nil))
(insn 17 16 18 2 (set (reg:SI 131)
        (const_int 270413856 [0x101e3020])) "timer.c":187:9 253 {*arm_movsi_insn}
     (nil))
(insn 18 17 19 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 130)
                (const_int 12 [0xc])) [1 tp[3]+0 S4 A32])
        (reg:SI 131)) "timer.c":187:9 253 {*arm_movsi_insn}
     (nil))
(insn 19 18 20 2 (set (reg:SI 132)
        (const_int 0 [0])) "timer.c":190:9 253 {*arm_movsi_insn}
     (nil))
(insn 20 19 64 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])
        (reg:SI 132)) "timer.c":190:9 253 {*arm_movsi_insn}
     (nil))
;;  succ:       4 [always]  (FALLTHRU)

;; basic block 3, loop depth 1, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
(code_label 64 20 23 3 25 (nil) [1 uses])
(note 23 64 24 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 3 (set (reg/f:SI 133)
        (symbol_ref:SI ("tp") [flags 0x2]  <var_decl 0x7f5060612000 tp>)) "timer.c":191:7 253 {*arm_movsi_insn}
     (nil))
(insn 25 24 26 3 (set (reg:SI 134)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])) "timer.c":191:7 253 {*arm_movsi_insn}
     (nil))
(insn 26 25 27 3 (set (reg/f:SI 113 [ _1 ])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 134)
                    (const_int 4 [0x4]))
                (reg/f:SI 133)) [1 tp[i_12]+0 S4 A32])) "timer.c":191:7 253 {*arm_movsi_insn}
     (nil))
(insn 27 26 28 3 (set (reg:SI 135)
        (const_int 0 [0])) "timer.c":191:17 253 {*arm_movsi_insn}
     (nil))
(insn 28 27 29 3 (set (mem/v:SI (reg/f:SI 113 [ _1 ]) [2 _1->LOAD+0 S4 A32])
        (reg:SI 135)) "timer.c":191:17 253 {*arm_movsi_insn}
     (nil))
(insn 29 28 30 3 (set (reg/f:SI 136)
        (symbol_ref:SI ("tp") [flags 0x2]  <var_decl 0x7f5060612000 tp>)) "timer.c":192:7 253 {*arm_movsi_insn}
     (nil))
(insn 30 29 31 3 (set (reg:SI 137)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])) "timer.c":192:7 253 {*arm_movsi_insn}
     (nil))
(insn 31 30 32 3 (set (reg/f:SI 114 [ _2 ])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 137)
                    (const_int 4 [0x4]))
                (reg/f:SI 136)) [1 tp[i_12]+0 S4 A32])) "timer.c":192:7 253 {*arm_movsi_insn}
     (nil))
(insn 32 31 33 3 (set (reg:SI 138)
        (const_int -1 [0xffffffffffffffff])) "timer.c":192:17 253 {*arm_movsi_insn}
     (nil))
(insn 33 32 34 3 (set (mem/v:SI (plus:SI (reg/f:SI 114 [ _2 ])
                (const_int 4 [0x4])) [2 _2->VALUE+0 S4 A32])
        (reg:SI 138)) "timer.c":192:17 253 {*arm_movsi_insn}
     (nil))
(insn 34 33 35 3 (set (reg/f:SI 139)
        (symbol_ref:SI ("tp") [flags 0x2]  <var_decl 0x7f5060612000 tp>)) "timer.c":195:7 253 {*arm_movsi_insn}
     (nil))
(insn 35 34 36 3 (set (reg:SI 140)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])) "timer.c":195:7 253 {*arm_movsi_insn}
     (nil))
(insn 36 35 37 3 (set (reg/f:SI 115 [ _3 ])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 140)
                    (const_int 4 [0x4]))
                (reg/f:SI 139)) [1 tp[i_12]+0 S4 A32])) "timer.c":195:7 253 {*arm_movsi_insn}
     (nil))
(insn 37 36 38 3 (set (reg:SI 141)
        (const_int 0 [0])) "timer.c":195:17 253 {*arm_movsi_insn}
     (nil))
(insn 38 37 39 3 (set (mem/v:SI (plus:SI (reg/f:SI 115 [ _3 ])
                (const_int 16 [0x10])) [2 _3->RIS+0 S4 A32])
        (reg:SI 141)) "timer.c":195:17 253 {*arm_movsi_insn}
     (nil))
(insn 39 38 40 3 (set (reg/f:SI 142)
        (symbol_ref:SI ("tp") [flags 0x2]  <var_decl 0x7f5060612000 tp>)) "timer.c":196:7 253 {*arm_movsi_insn}
     (nil))
(insn 40 39 41 3 (set (reg:SI 143)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])) "timer.c":196:7 253 {*arm_movsi_insn}
     (nil))
(insn 41 40 42 3 (set (reg/f:SI 116 [ _4 ])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 143)
                    (const_int 4 [0x4]))
                (reg/f:SI 142)) [1 tp[i_12]+0 S4 A32])) "timer.c":196:7 253 {*arm_movsi_insn}
     (nil))
(insn 42 41 43 3 (set (reg:SI 144)
        (const_int 0 [0])) "timer.c":196:17 253 {*arm_movsi_insn}
     (nil))
(insn 43 42 44 3 (set (mem/v:SI (plus:SI (reg/f:SI 116 [ _4 ])
                (const_int 20 [0x14])) [2 _4->MIS+0 S4 A32])
        (reg:SI 144)) "timer.c":196:17 253 {*arm_movsi_insn}
     (nil))
(insn 44 43 45 3 (set (reg/f:SI 145)
        (symbol_ref:SI ("tp") [flags 0x2]  <var_decl 0x7f5060612000 tp>)) "timer.c":197:7 253 {*arm_movsi_insn}
     (nil))
(insn 45 44 46 3 (set (reg:SI 146)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])) "timer.c":197:7 253 {*arm_movsi_insn}
     (nil))
(insn 46 45 47 3 (set (reg/f:SI 117 [ _5 ])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 146)
                    (const_int 4 [0x4]))
                (reg/f:SI 145)) [1 tp[i_12]+0 S4 A32])) "timer.c":197:7 253 {*arm_movsi_insn}
     (nil))
(insn 47 46 48 3 (set (reg:SI 147)
        (const_int 256 [0x100])) "timer.c":197:20 253 {*arm_movsi_insn}
     (nil))
(insn 48 47 49 3 (set (mem/v:SI (reg/f:SI 117 [ _5 ]) [2 _5->LOAD+0 S4 A32])
        (reg:SI 147)) "timer.c":197:20 253 {*arm_movsi_insn}
     (nil))
(insn 49 48 50 3 (set (reg/f:SI 148)
        (symbol_ref:SI ("tp") [flags 0x2]  <var_decl 0x7f5060612000 tp>)) "timer.c":198:7 253 {*arm_movsi_insn}
     (nil))
(insn 50 49 51 3 (set (reg:SI 149)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])) "timer.c":198:7 253 {*arm_movsi_insn}
     (nil))
(insn 51 50 52 3 (set (reg/f:SI 118 [ _6 ])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 149)
                    (const_int 4 [0x4]))
                (reg/f:SI 148)) [1 tp[i_12]+0 S4 A32])) "timer.c":198:7 253 {*arm_movsi_insn}
     (nil))
(insn 52 51 53 3 (set (reg:SI 150)
        (const_int 98 [0x62])) "timer.c":198:20 253 {*arm_movsi_insn}
     (nil))
(insn 53 52 54 3 (set (mem/v:SI (plus:SI (reg/f:SI 118 [ _6 ])
                (const_int 8 [0x8])) [2 _6->CONTROL+0 S4 A32])
        (reg:SI 150)) "timer.c":198:20 253 {*arm_movsi_insn}
     (nil))
(insn 54 53 55 3 (set (reg/f:SI 151)
        (symbol_ref:SI ("tp") [flags 0x2]  <var_decl 0x7f5060612000 tp>)) "timer.c":200:7 253 {*arm_movsi_insn}
     (nil))
(insn 55 54 56 3 (set (reg:SI 152)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])) "timer.c":200:7 253 {*arm_movsi_insn}
     (nil))
(insn 56 55 57 3 (set (reg/f:SI 119 [ _7 ])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 152)
                    (const_int 4 [0x4]))
                (reg/f:SI 151)) [1 tp[i_12]+0 S4 A32])) "timer.c":200:7 253 {*arm_movsi_insn}
     (nil))
(insn 57 56 58 3 (set (reg:SI 153)
        (const_int 61440 [0xf000])) "timer.c":200:22 253 {*arm_movsi_insn}
     (nil))
(insn 58 57 59 3 (set (mem/v:SI (plus:SI (reg/f:SI 119 [ _7 ])
                (const_int 24 [0x18])) [2 _7->BGLOAD+0 S4 A32])
        (reg:SI 153)) "timer.c":200:22 253 {*arm_movsi_insn}
     (nil))
(insn 59 58 60 3 (set (reg:SI 155)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])) "timer.c":190:19 253 {*arm_movsi_insn}
     (nil))
(insn 60 59 61 3 (set (reg:SI 154)
        (plus:SI (reg:SI 155)
            (const_int 1 [0x1]))) "timer.c":190:19 7 {*arm_addsi3}
     (nil))
(insn 61 60 62 3 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])
        (reg:SI 154)) "timer.c":190:19 253 {*arm_movsi_insn}
     (nil))
;;  succ:       4 (FALLTHRU,DFS_BACK)

;; basic block 4, loop depth 1, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 [always]  (FALLTHRU)
;;              3 (FALLTHRU,DFS_BACK)
(code_label 62 61 63 4 24 (nil) [0 uses])
(note 63 62 67 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 67 63 68 4 (set (reg:SI 156)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])) "timer.c":190:14 253 {*arm_movsi_insn}
     (nil))
(insn 68 67 69 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 156)
            (const_int 3 [0x3]))) "timer.c":190:14 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 69 68 70 4 (set (pc)
        (if_then_else (le (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 64)
            (pc))) "timer.c":190:14 273 {arm_cond_branch}
     (nil)
 -> 64)
;;  succ:       3
;;              5 (FALLTHRU)

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 70 69 71 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 5 (set (reg:SI 1 r1)
        (symbol_ref/f:SI ("*.LC6") [flags 0x2]  <var_decl 0x7f5060643870 *.LC6>)) "timer.c":203:3 253 {*arm_movsi_insn}
     (nil))
(insn 72 71 73 5 (set (reg:SI 0 r0)
        (symbol_ref:SI ("clock") [flags 0x2]  <var_decl 0x7f5060612360 clock>)) "timer.c":203:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 73 72 74 5 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcpy") [flags 0x41]  <function_decl 0x7f506060a800 strcpy>) [0 strcpy S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":203:3 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 74 73 75 5 (set (reg/f:SI 157)
        (symbol_ref:SI ("ss") [flags 0x40]  <var_decl 0x7f50606125a0 ss>)) "timer.c":204:16 253 {*arm_movsi_insn}
     (nil))
(insn 75 74 76 5 (set (reg:SI 158)
        (const_int 0 [0])) "timer.c":204:16 253 {*arm_movsi_insn}
     (nil))
(insn 76 75 77 5 (set (mem/c:SI (reg/f:SI 157) [2 ss+0 S4 A32])
        (reg:SI 158)) "timer.c":204:16 253 {*arm_movsi_insn}
     (nil))
(insn 77 76 78 5 (set (reg/f:SI 159)
        (symbol_ref:SI ("ss") [flags 0x40]  <var_decl 0x7f50606125a0 ss>)) "timer.c":204:11 253 {*arm_movsi_insn}
     (nil))
(insn 78 77 79 5 (set (reg:SI 120 [ ss.24_8 ])
        (mem/c:SI (reg/f:SI 159) [2 ss+0 S4 A32])) "timer.c":204:11 253 {*arm_movsi_insn}
     (nil))
(insn 79 78 80 5 (set (reg/f:SI 160)
        (symbol_ref:SI ("mm") [flags 0x40]  <var_decl 0x7f5060612510 mm>)) "timer.c":204:11 253 {*arm_movsi_insn}
     (nil))
(insn 80 79 81 5 (set (mem/c:SI (reg/f:SI 160) [2 mm+0 S4 A32])
        (reg:SI 120 [ ss.24_8 ])) "timer.c":204:11 253 {*arm_movsi_insn}
     (nil))
(insn 81 80 82 5 (set (reg/f:SI 161)
        (symbol_ref:SI ("mm") [flags 0x40]  <var_decl 0x7f5060612510 mm>)) "timer.c":204:6 253 {*arm_movsi_insn}
     (nil))
(insn 82 81 83 5 (set (reg:SI 121 [ mm.25_9 ])
        (mem/c:SI (reg/f:SI 161) [2 mm+0 S4 A32])) "timer.c":204:6 253 {*arm_movsi_insn}
     (nil))
(insn 83 82 84 5 (set (reg/f:SI 162)
        (symbol_ref:SI ("hh") [flags 0x40]  <var_decl 0x7f5060612480 hh>)) "timer.c":204:6 253 {*arm_movsi_insn}
     (nil))
(insn 84 83 85 5 (set (mem/c:SI (reg/f:SI 162) [2 hh+0 S4 A32])
        (reg:SI 121 [ mm.25_9 ])) "timer.c":204:6 253 {*arm_movsi_insn}
     (nil))
(insn 85 84 86 5 (set (reg/f:SI 163)
        (symbol_ref:SI ("ft") [flags 0x2]  <var_decl 0x7f5060612870 ft>)) "timer.c":206:6 253 {*arm_movsi_insn}
     (nil))
(insn 86 85 87 5 (set (reg/f:SI 164)
        (symbol_ref:SI ("tnode") [flags 0x2]  <var_decl 0x7f5060612750 tnode>)) "timer.c":206:6 253 {*arm_movsi_insn}
     (nil))
(insn 87 86 88 5 (set (mem/f/c:SI (reg/f:SI 163) [5 ft+0 S4 A32])
        (reg/f:SI 164)) "timer.c":206:6 253 {*arm_movsi_insn}
     (nil))
(insn 88 87 89 5 (set (reg:SI 165)
        (const_int 0 [0])) "timer.c":207:9 253 {*arm_movsi_insn}
     (nil))
(insn 89 88 116 5 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])
        (reg:SI 165)) "timer.c":207:9 253 {*arm_movsi_insn}
     (nil))
;;  succ:       7 [always]  (FALLTHRU)

;; basic block 6, loop depth 1, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
(code_label 116 89 92 6 27 (nil) [1 uses])
(note 92 116 93 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 6 (set (reg:SI 166)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])) "timer.c":208:29 253 {*arm_movsi_insn}
     (nil))
(insn 94 93 95 6 (set (reg:SI 122 [ _10 ])
        (plus:SI (reg:SI 166)
            (const_int 1 [0x1]))) "timer.c":208:29 7 {*arm_addsi3}
     (nil))
(insn 95 94 96 6 (set (reg:SI 167)
        (reg:SI 122 [ _10 ])) "timer.c":208:21 253 {*arm_movsi_insn}
     (nil))
(insn 96 95 97 6 (set (reg:SI 167)
        (ashift:SI (reg:SI 167)
            (const_int 1 [0x1]))) "timer.c":208:21 147 {*arm_shiftsi3}
     (nil))
(insn 97 96 98 6 (set (reg:SI 167)
        (plus:SI (reg:SI 167)
            (reg:SI 122 [ _10 ]))) "timer.c":208:21 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 122 [ _10 ])
            (const_int 3 [0x3]))
        (nil)))
(insn 98 97 99 6 (set (reg:SI 168)
        (ashift:SI (reg:SI 167)
            (const_int 2 [0x2]))) "timer.c":208:21 147 {*arm_shiftsi3}
     (nil))
(insn 99 98 100 6 (set (reg:SI 167)
        (reg:SI 168)) "timer.c":208:21 253 {*arm_movsi_insn}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 122 [ _10 ])
            (const_int 12 [0xc]))
        (nil)))
(insn 100 99 101 6 (set (reg:SI 169)
        (symbol_ref:SI ("tnode") [flags 0x2]  <var_decl 0x7f5060612750 tnode>)) "timer.c":208:21 253 {*arm_movsi_insn}
     (nil))
(insn 101 100 102 6 (set (reg/f:SI 123 [ _11 ])
        (plus:SI (reg:SI 167)
            (reg:SI 169))) "timer.c":208:21 7 {*arm_addsi3}
     (nil))
(insn 102 101 103 6 (set (reg/f:SI 170)
        (symbol_ref:SI ("tnode") [flags 0x2]  <var_decl 0x7f5060612750 tnode>)) "timer.c":208:19 253 {*arm_movsi_insn}
     (nil))
(insn 103 102 104 6 (set (reg:SI 171)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])) "timer.c":208:19 253 {*arm_movsi_insn}
     (nil))
(insn 104 103 105 6 (set (reg:SI 172)
        (reg:SI 171)) "timer.c":208:19 253 {*arm_movsi_insn}
     (nil))
(insn 105 104 106 6 (set (reg:SI 172)
        (ashift:SI (reg:SI 172)
            (const_int 1 [0x1]))) "timer.c":208:19 147 {*arm_shiftsi3}
     (nil))
(insn 106 105 107 6 (set (reg:SI 172)
        (plus:SI (reg:SI 172)
            (reg:SI 171))) "timer.c":208:19 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 171)
            (const_int 3 [0x3]))
        (nil)))
(insn 107 106 108 6 (set (reg:SI 173)
        (ashift:SI (reg:SI 172)
            (const_int 2 [0x2]))) "timer.c":208:19 147 {*arm_shiftsi3}
     (nil))
(insn 108 107 109 6 (set (reg:SI 172)
        (reg:SI 173)) "timer.c":208:19 253 {*arm_movsi_insn}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 171)
            (const_int 12 [0xc]))
        (nil)))
(insn 109 108 110 6 (set (reg/f:SI 174)
        (plus:SI (reg/f:SI 170)
            (reg:SI 172))) "timer.c":208:19 7 {*arm_addsi3}
     (nil))
(insn 110 109 111 6 (set (mem/f:SI (reg/f:SI 174) [5 tnode[i_13].next+0 S4 A32])
        (reg/f:SI 123 [ _11 ])) "timer.c":208:19 253 {*arm_movsi_insn}
     (nil))
(insn 111 110 112 6 (set (reg:SI 176)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])) "timer.c":207:23 253 {*arm_movsi_insn}
     (nil))
(insn 112 111 113 6 (set (reg:SI 175)
        (plus:SI (reg:SI 176)
            (const_int 1 [0x1]))) "timer.c":207:23 7 {*arm_addsi3}
     (nil))
(insn 113 112 114 6 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])
        (reg:SI 175)) "timer.c":207:23 253 {*arm_movsi_insn}
     (nil))
;;  succ:       7 (FALLTHRU,DFS_BACK)

;; basic block 7, loop depth 1, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 [always]  (FALLTHRU)
;;              6 (FALLTHRU,DFS_BACK)
(code_label 114 113 115 7 26 (nil) [0 uses])
(note 115 114 119 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 119 115 120 7 (set (reg:SI 177)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])) "timer.c":207:14 253 {*arm_movsi_insn}
     (nil))
(insn 120 119 121 7 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 177)
            (const_int 63 [0x3f]))) "timer.c":207:14 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 121 120 122 7 (set (pc)
        (if_then_else (le (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 116)
            (pc))) "timer.c":207:14 273 {arm_cond_branch}
     (nil)
 -> 116)
;;  succ:       6
;;              8 (FALLTHRU)

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
(note 122 121 123 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 123 122 124 8 (set (reg/f:SI 178)
        (symbol_ref:SI ("tnode") [flags 0x2]  <var_decl 0x7f5060612750 tnode>)) "timer.c":209:22 253 {*arm_movsi_insn}
     (nil))
(insn 124 123 125 8 (set (reg:SI 179)
        (const_int 0 [0])) "timer.c":209:22 253 {*arm_movsi_insn}
     (nil))
(insn 125 124 126 8 (set (mem/f/c:SI (plus:SI (reg/f:SI 178)
                (const_int 756 [0x2f4])) [5 tnode[63].next+0 S4 A32])
        (reg:SI 179)) "timer.c":209:22 253 {*arm_movsi_insn}
     (nil))
(insn 126 125 127 8 (set (reg/f:SI 180)
        (symbol_ref:SI ("tq") [flags 0x2]  <var_decl 0x7f50606127e0 tq>)) "timer.c":210:6 253 {*arm_movsi_insn}
     (nil))
(insn 127 126 128 8 (set (reg:SI 181)
        (const_int 0 [0])) "timer.c":210:6 253 {*arm_movsi_insn}
     (nil))
(insn 128 127 0 8 (set (mem/f/c:SI (reg/f:SI 180) [5 tq+0 S4 A32])
        (reg:SI 181)) "timer.c":210:6 253 {*arm_movsi_insn}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)

;; basic block 1, loop depth 0, maybe hot
;;  prev block 8, next block (nil), flags: (REACHABLE, RTL)
;;  pred:       8 [always]  (FALLTHRU)
;;  succ:      




try_optimize_cfg iteration 1

;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC5") [flags 0x2]  <var_decl 0x7f50606437e0 *.LC5>)) "timer.c":181:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 6 5 7 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kprintf") [flags 0x41]  <function_decl 0x7f506060a700 kprintf>) [0 kprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":181:3 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 7 6 8 2 (set (reg/f:SI 124)
        (symbol_ref:SI ("tp") [flags 0x2]  <var_decl 0x7f5060612000 tp>)) "timer.c":184:9 253 {*arm_movsi_insn}
     (nil))
(insn 8 7 9 2 (set (reg:SI 125)
        (const_int 270409728 [0x101e2000])) "timer.c":184:9 253 {*arm_movsi_insn}
     (nil))
(insn 9 8 10 2 (set (mem/f/c:SI (reg/f:SI 124) [1 tp[0]+0 S4 A32])
        (reg:SI 125)) "timer.c":184:9 253 {*arm_movsi_insn}
     (nil))
(insn 10 9 11 2 (set (reg/f:SI 126)
        (symbol_ref:SI ("tp") [flags 0x2]  <var_decl 0x7f5060612000 tp>)) "timer.c":185:9 253 {*arm_movsi_insn}
     (nil))
(insn 11 10 12 2 (set (reg:SI 127)
        (const_int 270409760 [0x101e2020])) "timer.c":185:9 253 {*arm_movsi_insn}
     (nil))
(insn 12 11 13 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 126)
                (const_int 4 [0x4])) [1 tp[1]+0 S4 A32])
        (reg:SI 127)) "timer.c":185:9 253 {*arm_movsi_insn}
     (nil))
(insn 13 12 14 2 (set (reg/f:SI 128)
        (symbol_ref:SI ("tp") [flags 0x2]  <var_decl 0x7f5060612000 tp>)) "timer.c":186:9 253 {*arm_movsi_insn}
     (nil))
(insn 14 13 15 2 (set (reg:SI 129)
        (const_int 270413824 [0x101e3000])) "timer.c":186:9 253 {*arm_movsi_insn}
     (nil))
(insn 15 14 16 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 128)
                (const_int 8 [0x8])) [1 tp[2]+0 S4 A32])
        (reg:SI 129)) "timer.c":186:9 253 {*arm_movsi_insn}
     (nil))
(insn 16 15 17 2 (set (reg/f:SI 130)
        (symbol_ref:SI ("tp") [flags 0x2]  <var_decl 0x7f5060612000 tp>)) "timer.c":187:9 253 {*arm_movsi_insn}
     (nil))
(insn 17 16 18 2 (set (reg:SI 131)
        (const_int 270413856 [0x101e3020])) "timer.c":187:9 253 {*arm_movsi_insn}
     (nil))
(insn 18 17 19 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 130)
                (const_int 12 [0xc])) [1 tp[3]+0 S4 A32])
        (reg:SI 131)) "timer.c":187:9 253 {*arm_movsi_insn}
     (nil))
(insn 19 18 20 2 (set (reg:SI 132)
        (const_int 0 [0])) "timer.c":190:9 253 {*arm_movsi_insn}
     (nil))
(insn 20 19 64 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])
        (reg:SI 132)) "timer.c":190:9 253 {*arm_movsi_insn}
     (nil))
;;  succ:       4 [always]  (FALLTHRU)

;; basic block 3, loop depth 1, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
(code_label 64 20 23 3 25 (nil) [1 uses])
(note 23 64 24 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 3 (set (reg/f:SI 133)
        (symbol_ref:SI ("tp") [flags 0x2]  <var_decl 0x7f5060612000 tp>)) "timer.c":191:7 253 {*arm_movsi_insn}
     (nil))
(insn 25 24 26 3 (set (reg:SI 134)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])) "timer.c":191:7 253 {*arm_movsi_insn}
     (nil))
(insn 26 25 27 3 (set (reg/f:SI 113 [ _1 ])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 134)
                    (const_int 4 [0x4]))
                (reg/f:SI 133)) [1 tp[i_12]+0 S4 A32])) "timer.c":191:7 253 {*arm_movsi_insn}
     (nil))
(insn 27 26 28 3 (set (reg:SI 135)
        (const_int 0 [0])) "timer.c":191:17 253 {*arm_movsi_insn}
     (nil))
(insn 28 27 29 3 (set (mem/v:SI (reg/f:SI 113 [ _1 ]) [2 _1->LOAD+0 S4 A32])
        (reg:SI 135)) "timer.c":191:17 253 {*arm_movsi_insn}
     (nil))
(insn 29 28 30 3 (set (reg/f:SI 136)
        (symbol_ref:SI ("tp") [flags 0x2]  <var_decl 0x7f5060612000 tp>)) "timer.c":192:7 253 {*arm_movsi_insn}
     (nil))
(insn 30 29 31 3 (set (reg:SI 137)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])) "timer.c":192:7 253 {*arm_movsi_insn}
     (nil))
(insn 31 30 32 3 (set (reg/f:SI 114 [ _2 ])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 137)
                    (const_int 4 [0x4]))
                (reg/f:SI 136)) [1 tp[i_12]+0 S4 A32])) "timer.c":192:7 253 {*arm_movsi_insn}
     (nil))
(insn 32 31 33 3 (set (reg:SI 138)
        (const_int -1 [0xffffffffffffffff])) "timer.c":192:17 253 {*arm_movsi_insn}
     (nil))
(insn 33 32 34 3 (set (mem/v:SI (plus:SI (reg/f:SI 114 [ _2 ])
                (const_int 4 [0x4])) [2 _2->VALUE+0 S4 A32])
        (reg:SI 138)) "timer.c":192:17 253 {*arm_movsi_insn}
     (nil))
(insn 34 33 35 3 (set (reg/f:SI 139)
        (symbol_ref:SI ("tp") [flags 0x2]  <var_decl 0x7f5060612000 tp>)) "timer.c":195:7 253 {*arm_movsi_insn}
     (nil))
(insn 35 34 36 3 (set (reg:SI 140)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])) "timer.c":195:7 253 {*arm_movsi_insn}
     (nil))
(insn 36 35 37 3 (set (reg/f:SI 115 [ _3 ])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 140)
                    (const_int 4 [0x4]))
                (reg/f:SI 139)) [1 tp[i_12]+0 S4 A32])) "timer.c":195:7 253 {*arm_movsi_insn}
     (nil))
(insn 37 36 38 3 (set (reg:SI 141)
        (const_int 0 [0])) "timer.c":195:17 253 {*arm_movsi_insn}
     (nil))
(insn 38 37 39 3 (set (mem/v:SI (plus:SI (reg/f:SI 115 [ _3 ])
                (const_int 16 [0x10])) [2 _3->RIS+0 S4 A32])
        (reg:SI 141)) "timer.c":195:17 253 {*arm_movsi_insn}
     (nil))
(insn 39 38 40 3 (set (reg/f:SI 142)
        (symbol_ref:SI ("tp") [flags 0x2]  <var_decl 0x7f5060612000 tp>)) "timer.c":196:7 253 {*arm_movsi_insn}
     (nil))
(insn 40 39 41 3 (set (reg:SI 143)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])) "timer.c":196:7 253 {*arm_movsi_insn}
     (nil))
(insn 41 40 42 3 (set (reg/f:SI 116 [ _4 ])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 143)
                    (const_int 4 [0x4]))
                (reg/f:SI 142)) [1 tp[i_12]+0 S4 A32])) "timer.c":196:7 253 {*arm_movsi_insn}
     (nil))
(insn 42 41 43 3 (set (reg:SI 144)
        (const_int 0 [0])) "timer.c":196:17 253 {*arm_movsi_insn}
     (nil))
(insn 43 42 44 3 (set (mem/v:SI (plus:SI (reg/f:SI 116 [ _4 ])
                (const_int 20 [0x14])) [2 _4->MIS+0 S4 A32])
        (reg:SI 144)) "timer.c":196:17 253 {*arm_movsi_insn}
     (nil))
(insn 44 43 45 3 (set (reg/f:SI 145)
        (symbol_ref:SI ("tp") [flags 0x2]  <var_decl 0x7f5060612000 tp>)) "timer.c":197:7 253 {*arm_movsi_insn}
     (nil))
(insn 45 44 46 3 (set (reg:SI 146)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])) "timer.c":197:7 253 {*arm_movsi_insn}
     (nil))
(insn 46 45 47 3 (set (reg/f:SI 117 [ _5 ])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 146)
                    (const_int 4 [0x4]))
                (reg/f:SI 145)) [1 tp[i_12]+0 S4 A32])) "timer.c":197:7 253 {*arm_movsi_insn}
     (nil))
(insn 47 46 48 3 (set (reg:SI 147)
        (const_int 256 [0x100])) "timer.c":197:20 253 {*arm_movsi_insn}
     (nil))
(insn 48 47 49 3 (set (mem/v:SI (reg/f:SI 117 [ _5 ]) [2 _5->LOAD+0 S4 A32])
        (reg:SI 147)) "timer.c":197:20 253 {*arm_movsi_insn}
     (nil))
(insn 49 48 50 3 (set (reg/f:SI 148)
        (symbol_ref:SI ("tp") [flags 0x2]  <var_decl 0x7f5060612000 tp>)) "timer.c":198:7 253 {*arm_movsi_insn}
     (nil))
(insn 50 49 51 3 (set (reg:SI 149)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])) "timer.c":198:7 253 {*arm_movsi_insn}
     (nil))
(insn 51 50 52 3 (set (reg/f:SI 118 [ _6 ])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 149)
                    (const_int 4 [0x4]))
                (reg/f:SI 148)) [1 tp[i_12]+0 S4 A32])) "timer.c":198:7 253 {*arm_movsi_insn}
     (nil))
(insn 52 51 53 3 (set (reg:SI 150)
        (const_int 98 [0x62])) "timer.c":198:20 253 {*arm_movsi_insn}
     (nil))
(insn 53 52 54 3 (set (mem/v:SI (plus:SI (reg/f:SI 118 [ _6 ])
                (const_int 8 [0x8])) [2 _6->CONTROL+0 S4 A32])
        (reg:SI 150)) "timer.c":198:20 253 {*arm_movsi_insn}
     (nil))
(insn 54 53 55 3 (set (reg/f:SI 151)
        (symbol_ref:SI ("tp") [flags 0x2]  <var_decl 0x7f5060612000 tp>)) "timer.c":200:7 253 {*arm_movsi_insn}
     (nil))
(insn 55 54 56 3 (set (reg:SI 152)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])) "timer.c":200:7 253 {*arm_movsi_insn}
     (nil))
(insn 56 55 57 3 (set (reg/f:SI 119 [ _7 ])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 152)
                    (const_int 4 [0x4]))
                (reg/f:SI 151)) [1 tp[i_12]+0 S4 A32])) "timer.c":200:7 253 {*arm_movsi_insn}
     (nil))
(insn 57 56 58 3 (set (reg:SI 153)
        (const_int 61440 [0xf000])) "timer.c":200:22 253 {*arm_movsi_insn}
     (nil))
(insn 58 57 59 3 (set (mem/v:SI (plus:SI (reg/f:SI 119 [ _7 ])
                (const_int 24 [0x18])) [2 _7->BGLOAD+0 S4 A32])
        (reg:SI 153)) "timer.c":200:22 253 {*arm_movsi_insn}
     (nil))
(insn 59 58 60 3 (set (reg:SI 155)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])) "timer.c":190:19 253 {*arm_movsi_insn}
     (nil))
(insn 60 59 61 3 (set (reg:SI 154)
        (plus:SI (reg:SI 155)
            (const_int 1 [0x1]))) "timer.c":190:19 7 {*arm_addsi3}
     (nil))
(insn 61 60 62 3 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])
        (reg:SI 154)) "timer.c":190:19 253 {*arm_movsi_insn}
     (nil))
;;  succ:       4 (FALLTHRU,DFS_BACK)

;; basic block 4, loop depth 1, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 [always]  (FALLTHRU)
;;              3 (FALLTHRU,DFS_BACK)
(code_label 62 61 63 4 24 (nil) [0 uses])
(note 63 62 67 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 67 63 68 4 (set (reg:SI 156)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])) "timer.c":190:14 253 {*arm_movsi_insn}
     (nil))
(insn 68 67 69 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 156)
            (const_int 3 [0x3]))) "timer.c":190:14 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 69 68 70 4 (set (pc)
        (if_then_else (le (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 64)
            (pc))) "timer.c":190:14 273 {arm_cond_branch}
     (nil)
 -> 64)
;;  succ:       3
;;              5 (FALLTHRU)

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 70 69 71 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 5 (set (reg:SI 1 r1)
        (symbol_ref/f:SI ("*.LC6") [flags 0x2]  <var_decl 0x7f5060643870 *.LC6>)) "timer.c":203:3 253 {*arm_movsi_insn}
     (nil))
(insn 72 71 73 5 (set (reg:SI 0 r0)
        (symbol_ref:SI ("clock") [flags 0x2]  <var_decl 0x7f5060612360 clock>)) "timer.c":203:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 73 72 74 5 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcpy") [flags 0x41]  <function_decl 0x7f506060a800 strcpy>) [0 strcpy S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":203:3 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 74 73 75 5 (set (reg/f:SI 157)
        (symbol_ref:SI ("ss") [flags 0x40]  <var_decl 0x7f50606125a0 ss>)) "timer.c":204:16 253 {*arm_movsi_insn}
     (nil))
(insn 75 74 76 5 (set (reg:SI 158)
        (const_int 0 [0])) "timer.c":204:16 253 {*arm_movsi_insn}
     (nil))
(insn 76 75 77 5 (set (mem/c:SI (reg/f:SI 157) [2 ss+0 S4 A32])
        (reg:SI 158)) "timer.c":204:16 253 {*arm_movsi_insn}
     (nil))
(insn 77 76 78 5 (set (reg/f:SI 159)
        (symbol_ref:SI ("ss") [flags 0x40]  <var_decl 0x7f50606125a0 ss>)) "timer.c":204:11 253 {*arm_movsi_insn}
     (nil))
(insn 78 77 79 5 (set (reg:SI 120 [ ss.24_8 ])
        (mem/c:SI (reg/f:SI 159) [2 ss+0 S4 A32])) "timer.c":204:11 253 {*arm_movsi_insn}
     (nil))
(insn 79 78 80 5 (set (reg/f:SI 160)
        (symbol_ref:SI ("mm") [flags 0x40]  <var_decl 0x7f5060612510 mm>)) "timer.c":204:11 253 {*arm_movsi_insn}
     (nil))
(insn 80 79 81 5 (set (mem/c:SI (reg/f:SI 160) [2 mm+0 S4 A32])
        (reg:SI 120 [ ss.24_8 ])) "timer.c":204:11 253 {*arm_movsi_insn}
     (nil))
(insn 81 80 82 5 (set (reg/f:SI 161)
        (symbol_ref:SI ("mm") [flags 0x40]  <var_decl 0x7f5060612510 mm>)) "timer.c":204:6 253 {*arm_movsi_insn}
     (nil))
(insn 82 81 83 5 (set (reg:SI 121 [ mm.25_9 ])
        (mem/c:SI (reg/f:SI 161) [2 mm+0 S4 A32])) "timer.c":204:6 253 {*arm_movsi_insn}
     (nil))
(insn 83 82 84 5 (set (reg/f:SI 162)
        (symbol_ref:SI ("hh") [flags 0x40]  <var_decl 0x7f5060612480 hh>)) "timer.c":204:6 253 {*arm_movsi_insn}
     (nil))
(insn 84 83 85 5 (set (mem/c:SI (reg/f:SI 162) [2 hh+0 S4 A32])
        (reg:SI 121 [ mm.25_9 ])) "timer.c":204:6 253 {*arm_movsi_insn}
     (nil))
(insn 85 84 86 5 (set (reg/f:SI 163)
        (symbol_ref:SI ("ft") [flags 0x2]  <var_decl 0x7f5060612870 ft>)) "timer.c":206:6 253 {*arm_movsi_insn}
     (nil))
(insn 86 85 87 5 (set (reg/f:SI 164)
        (symbol_ref:SI ("tnode") [flags 0x2]  <var_decl 0x7f5060612750 tnode>)) "timer.c":206:6 253 {*arm_movsi_insn}
     (nil))
(insn 87 86 88 5 (set (mem/f/c:SI (reg/f:SI 163) [5 ft+0 S4 A32])
        (reg/f:SI 164)) "timer.c":206:6 253 {*arm_movsi_insn}
     (nil))
(insn 88 87 89 5 (set (reg:SI 165)
        (const_int 0 [0])) "timer.c":207:9 253 {*arm_movsi_insn}
     (nil))
(insn 89 88 116 5 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])
        (reg:SI 165)) "timer.c":207:9 253 {*arm_movsi_insn}
     (nil))
;;  succ:       7 [always]  (FALLTHRU)

;; basic block 6, loop depth 1, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
(code_label 116 89 92 6 27 (nil) [1 uses])
(note 92 116 93 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 6 (set (reg:SI 166)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])) "timer.c":208:29 253 {*arm_movsi_insn}
     (nil))
(insn 94 93 95 6 (set (reg:SI 122 [ _10 ])
        (plus:SI (reg:SI 166)
            (const_int 1 [0x1]))) "timer.c":208:29 7 {*arm_addsi3}
     (nil))
(insn 95 94 96 6 (set (reg:SI 167)
        (reg:SI 122 [ _10 ])) "timer.c":208:21 253 {*arm_movsi_insn}
     (nil))
(insn 96 95 97 6 (set (reg:SI 167)
        (ashift:SI (reg:SI 167)
            (const_int 1 [0x1]))) "timer.c":208:21 147 {*arm_shiftsi3}
     (nil))
(insn 97 96 98 6 (set (reg:SI 167)
        (plus:SI (reg:SI 167)
            (reg:SI 122 [ _10 ]))) "timer.c":208:21 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 122 [ _10 ])
            (const_int 3 [0x3]))
        (nil)))
(insn 98 97 99 6 (set (reg:SI 168)
        (ashift:SI (reg:SI 167)
            (const_int 2 [0x2]))) "timer.c":208:21 147 {*arm_shiftsi3}
     (nil))
(insn 99 98 100 6 (set (reg:SI 167)
        (reg:SI 168)) "timer.c":208:21 253 {*arm_movsi_insn}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 122 [ _10 ])
            (const_int 12 [0xc]))
        (nil)))
(insn 100 99 101 6 (set (reg:SI 169)
        (symbol_ref:SI ("tnode") [flags 0x2]  <var_decl 0x7f5060612750 tnode>)) "timer.c":208:21 253 {*arm_movsi_insn}
     (nil))
(insn 101 100 102 6 (set (reg/f:SI 123 [ _11 ])
        (plus:SI (reg:SI 167)
            (reg:SI 169))) "timer.c":208:21 7 {*arm_addsi3}
     (nil))
(insn 102 101 103 6 (set (reg/f:SI 170)
        (symbol_ref:SI ("tnode") [flags 0x2]  <var_decl 0x7f5060612750 tnode>)) "timer.c":208:19 253 {*arm_movsi_insn}
     (nil))
(insn 103 102 104 6 (set (reg:SI 171)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])) "timer.c":208:19 253 {*arm_movsi_insn}
     (nil))
(insn 104 103 105 6 (set (reg:SI 172)
        (reg:SI 171)) "timer.c":208:19 253 {*arm_movsi_insn}
     (nil))
(insn 105 104 106 6 (set (reg:SI 172)
        (ashift:SI (reg:SI 172)
            (const_int 1 [0x1]))) "timer.c":208:19 147 {*arm_shiftsi3}
     (nil))
(insn 106 105 107 6 (set (reg:SI 172)
        (plus:SI (reg:SI 172)
            (reg:SI 171))) "timer.c":208:19 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 171)
            (const_int 3 [0x3]))
        (nil)))
(insn 107 106 108 6 (set (reg:SI 173)
        (ashift:SI (reg:SI 172)
            (const_int 2 [0x2]))) "timer.c":208:19 147 {*arm_shiftsi3}
     (nil))
(insn 108 107 109 6 (set (reg:SI 172)
        (reg:SI 173)) "timer.c":208:19 253 {*arm_movsi_insn}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 171)
            (const_int 12 [0xc]))
        (nil)))
(insn 109 108 110 6 (set (reg/f:SI 174)
        (plus:SI (reg/f:SI 170)
            (reg:SI 172))) "timer.c":208:19 7 {*arm_addsi3}
     (nil))
(insn 110 109 111 6 (set (mem/f:SI (reg/f:SI 174) [5 tnode[i_13].next+0 S4 A32])
        (reg/f:SI 123 [ _11 ])) "timer.c":208:19 253 {*arm_movsi_insn}
     (nil))
(insn 111 110 112 6 (set (reg:SI 176)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])) "timer.c":207:23 253 {*arm_movsi_insn}
     (nil))
(insn 112 111 113 6 (set (reg:SI 175)
        (plus:SI (reg:SI 176)
            (const_int 1 [0x1]))) "timer.c":207:23 7 {*arm_addsi3}
     (nil))
(insn 113 112 114 6 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])
        (reg:SI 175)) "timer.c":207:23 253 {*arm_movsi_insn}
     (nil))
;;  succ:       7 (FALLTHRU,DFS_BACK)

;; basic block 7, loop depth 1, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 [always]  (FALLTHRU)
;;              6 (FALLTHRU,DFS_BACK)
(code_label 114 113 115 7 26 (nil) [0 uses])
(note 115 114 119 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 119 115 120 7 (set (reg:SI 177)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])) "timer.c":207:14 253 {*arm_movsi_insn}
     (nil))
(insn 120 119 121 7 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 177)
            (const_int 63 [0x3f]))) "timer.c":207:14 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 121 120 122 7 (set (pc)
        (if_then_else (le (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 116)
            (pc))) "timer.c":207:14 273 {arm_cond_branch}
     (nil)
 -> 116)
;;  succ:       6
;;              8 (FALLTHRU)

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
(note 122 121 123 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 123 122 124 8 (set (reg/f:SI 178)
        (symbol_ref:SI ("tnode") [flags 0x2]  <var_decl 0x7f5060612750 tnode>)) "timer.c":209:22 253 {*arm_movsi_insn}
     (nil))
(insn 124 123 125 8 (set (reg:SI 179)
        (const_int 0 [0])) "timer.c":209:22 253 {*arm_movsi_insn}
     (nil))
(insn 125 124 126 8 (set (mem/f/c:SI (plus:SI (reg/f:SI 178)
                (const_int 756 [0x2f4])) [5 tnode[63].next+0 S4 A32])
        (reg:SI 179)) "timer.c":209:22 253 {*arm_movsi_insn}
     (nil))
(insn 126 125 127 8 (set (reg/f:SI 180)
        (symbol_ref:SI ("tq") [flags 0x2]  <var_decl 0x7f50606127e0 tq>)) "timer.c":210:6 253 {*arm_movsi_insn}
     (nil))
(insn 127 126 128 8 (set (reg:SI 181)
        (const_int 0 [0])) "timer.c":210:6 253 {*arm_movsi_insn}
     (nil))
(insn 128 127 0 8 (set (mem/f/c:SI (reg/f:SI 180) [5 tq+0 S4 A32])
        (reg:SI 181)) "timer.c":210:6 253 {*arm_movsi_insn}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function timer_start (timer_start, funcdef_no=2, decl_uid=4570, cgraph_uid=3, symbol_order=13)


3 basic blocks, 2 edges.
;; basic block 0, loop depth 0, maybe hot
;;  prev block (nil), next block 2, flags: (RTL)
;;  pred:      
;;  succ:       2 (FALLTHRU)

;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [2 n+0 S4 A32])
        (reg:SI 0 r0 [ n ])) "timer.c":216:1 253 {*arm_movsi_insn}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC7") [flags 0x2]  <var_decl 0x7f5060643900 *.LC7>)) "timer.c":218:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 7 6 8 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kprintf") [flags 0x41]  <function_decl 0x7f506060a700 kprintf>) [0 kprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":218:3 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 8 7 9 2 (set (reg/f:SI 115)
        (symbol_ref:SI ("tp") [flags 0x2]  <var_decl 0x7f5060612000 tp>)) "timer.c":219:7 253 {*arm_movsi_insn}
     (nil))
(insn 9 8 10 2 (set (reg:SI 116)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [2 n+0 S4 A32])) "timer.c":219:7 253 {*arm_movsi_insn}
     (nil))
(insn 10 9 11 2 (set (reg/f:SI 117)
        (mem/f:SI (plus:SI (mult:SI (reg:SI 116)
                    (const_int 4 [0x4]))
                (reg/f:SI 115)) [1 tp[n_5(D)]+0 S4 A32])) "timer.c":219:7 253 {*arm_movsi_insn}
     (nil))
(insn 11 10 12 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 tpr+0 S4 A32])
        (reg/f:SI 117)) "timer.c":219:7 253 {*arm_movsi_insn}
     (nil))
(insn 12 11 13 2 (set (reg/f:SI 118)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 tpr+0 S4 A32])) "timer.c":220:16 253 {*arm_movsi_insn}
     (nil))
(insn 13 12 14 2 (set (reg:SI 113 [ _1 ])
        (mem/v:SI (plus:SI (reg/f:SI 118)
                (const_int 8 [0x8])) [2 tpr_6->CONTROL+0 S4 A32])) "timer.c":220:16 253 {*arm_movsi_insn}
     (nil))
(insn 14 13 15 2 (set (reg:SI 114 [ _2 ])
        (ior:SI (reg:SI 113 [ _1 ])
            (const_int 128 [0x80]))) "timer.c":220:16 106 {*iorsi3_insn}
     (nil))
(insn 15 14 16 2 (set (reg/f:SI 119)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 tpr+0 S4 A32])) "timer.c":220:16 253 {*arm_movsi_insn}
     (nil))
(insn 16 15 0 2 (set (mem/v:SI (plus:SI (reg/f:SI 119)
                (const_int 8 [0x8])) [2 tpr_6->CONTROL+0 S4 A32])
        (reg:SI 114 [ _2 ])) "timer.c":220:16 253 {*arm_movsi_insn}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)

;; basic block 1, loop depth 0, maybe hot
;;  prev block 2, next block (nil), flags: (REACHABLE, RTL)
;;  pred:       2 [always]  (FALLTHRU)
;;  succ:      




try_optimize_cfg iteration 1

;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [2 n+0 S4 A32])
        (reg:SI 0 r0 [ n ])) "timer.c":216:1 253 {*arm_movsi_insn}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC7") [flags 0x2]  <var_decl 0x7f5060643900 *.LC7>)) "timer.c":218:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 7 6 8 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kprintf") [flags 0x41]  <function_decl 0x7f506060a700 kprintf>) [0 kprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":218:3 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 8 7 9 2 (set (reg/f:SI 115)
        (symbol_ref:SI ("tp") [flags 0x2]  <var_decl 0x7f5060612000 tp>)) "timer.c":219:7 253 {*arm_movsi_insn}
     (nil))
(insn 9 8 10 2 (set (reg:SI 116)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [2 n+0 S4 A32])) "timer.c":219:7 253 {*arm_movsi_insn}
     (nil))
(insn 10 9 11 2 (set (reg/f:SI 117)
        (mem/f:SI (plus:SI (mult:SI (reg:SI 116)
                    (const_int 4 [0x4]))
                (reg/f:SI 115)) [1 tp[n_5(D)]+0 S4 A32])) "timer.c":219:7 253 {*arm_movsi_insn}
     (nil))
(insn 11 10 12 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 tpr+0 S4 A32])
        (reg/f:SI 117)) "timer.c":219:7 253 {*arm_movsi_insn}
     (nil))
(insn 12 11 13 2 (set (reg/f:SI 118)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 tpr+0 S4 A32])) "timer.c":220:16 253 {*arm_movsi_insn}
     (nil))
(insn 13 12 14 2 (set (reg:SI 113 [ _1 ])
        (mem/v:SI (plus:SI (reg/f:SI 118)
                (const_int 8 [0x8])) [2 tpr_6->CONTROL+0 S4 A32])) "timer.c":220:16 253 {*arm_movsi_insn}
     (nil))
(insn 14 13 15 2 (set (reg:SI 114 [ _2 ])
        (ior:SI (reg:SI 113 [ _1 ])
            (const_int 128 [0x80]))) "timer.c":220:16 106 {*iorsi3_insn}
     (nil))
(insn 15 14 16 2 (set (reg/f:SI 119)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 tpr+0 S4 A32])) "timer.c":220:16 253 {*arm_movsi_insn}
     (nil))
(insn 16 15 0 2 (set (mem/v:SI (plus:SI (reg/f:SI 119)
                (const_int 8 [0x8])) [2 tpr_6->CONTROL+0 S4 A32])
        (reg:SI 114 [ _2 ])) "timer.c":220:16 253 {*arm_movsi_insn}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function timer_clearInterrupt (timer_clearInterrupt, funcdef_no=3, decl_uid=4540, cgraph_uid=4, symbol_order=14)


3 basic blocks, 2 edges.
;; basic block 0, loop depth 0, maybe hot
;;  prev block (nil), next block 2, flags: (RTL)
;;  pred:      
;;  succ:       2 (FALLTHRU)

;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [2 n+0 S4 A32])
        (reg:SI 0 r0 [ n ])) "timer.c":223:1 253 {*arm_movsi_insn}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:SI 114)
        (symbol_ref:SI ("tp") [flags 0x2]  <var_decl 0x7f5060612000 tp>)) "timer.c":225:10 253 {*arm_movsi_insn}
     (nil))
(insn 7 6 8 2 (set (reg:SI 115)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [2 n+0 S4 A32])) "timer.c":225:10 253 {*arm_movsi_insn}
     (nil))
(insn 8 7 9 2 (set (reg/f:SI 116)
        (mem/f:SI (plus:SI (mult:SI (reg:SI 115)
                    (const_int 4 [0x4]))
                (reg/f:SI 114)) [1 tp[n_2(D)]+0 S4 A32])) "timer.c":225:10 253 {*arm_movsi_insn}
     (nil))
(insn 9 8 10 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 tpr+0 S4 A32])
        (reg/f:SI 116)) "timer.c":225:10 253 {*arm_movsi_insn}
     (nil))
(insn 10 9 11 2 (set (reg/f:SI 117)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 tpr+0 S4 A32])) "timer.c":226:15 253 {*arm_movsi_insn}
     (nil))
(insn 11 10 12 2 (set (reg:SI 118)
        (const_int -1 [0xffffffffffffffff])) "timer.c":226:15 253 {*arm_movsi_insn}
     (nil))
(insn 12 11 15 2 (set (mem/v:SI (plus:SI (reg/f:SI 117)
                (const_int 12 [0xc])) [2 tpr_3->INTCLR+0 S4 A32])
        (reg:SI 118)) "timer.c":226:15 253 {*arm_movsi_insn}
     (nil))
(insn 15 12 16 2 (clobber (reg/i:SI 0 r0)) "timer.c":227:1 -1
     (nil))
(insn 16 15 19 2 (clobber (reg:SI 113 [ <retval> ])) "timer.c":227:1 -1
     (nil))
(insn 19 16 14 2 (const_int 0 [0]) "timer.c":227:1 311 {nop}
     (nil))
(insn 14 19 17 2 (set (reg/i:SI 0 r0)
        (reg:SI 113 [ <retval> ])) "timer.c":227:1 253 {*arm_movsi_insn}
     (nil))
(insn 17 14 0 2 (use (reg/i:SI 0 r0)) "timer.c":227:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)

;; basic block 1, loop depth 0, maybe hot
;;  prev block 2, next block (nil), flags: (REACHABLE, RTL)
;;  pred:       2 [always]  (FALLTHRU)
;;  succ:      




try_optimize_cfg iteration 1

;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [2 n+0 S4 A32])
        (reg:SI 0 r0 [ n ])) "timer.c":223:1 253 {*arm_movsi_insn}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:SI 114)
        (symbol_ref:SI ("tp") [flags 0x2]  <var_decl 0x7f5060612000 tp>)) "timer.c":225:10 253 {*arm_movsi_insn}
     (nil))
(insn 7 6 8 2 (set (reg:SI 115)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [2 n+0 S4 A32])) "timer.c":225:10 253 {*arm_movsi_insn}
     (nil))
(insn 8 7 9 2 (set (reg/f:SI 116)
        (mem/f:SI (plus:SI (mult:SI (reg:SI 115)
                    (const_int 4 [0x4]))
                (reg/f:SI 114)) [1 tp[n_2(D)]+0 S4 A32])) "timer.c":225:10 253 {*arm_movsi_insn}
     (nil))
(insn 9 8 10 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 tpr+0 S4 A32])
        (reg/f:SI 116)) "timer.c":225:10 253 {*arm_movsi_insn}
     (nil))
(insn 10 9 11 2 (set (reg/f:SI 117)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 tpr+0 S4 A32])) "timer.c":226:15 253 {*arm_movsi_insn}
     (nil))
(insn 11 10 12 2 (set (reg:SI 118)
        (const_int -1 [0xffffffffffffffff])) "timer.c":226:15 253 {*arm_movsi_insn}
     (nil))
(insn 12 11 15 2 (set (mem/v:SI (plus:SI (reg/f:SI 117)
                (const_int 12 [0xc])) [2 tpr_3->INTCLR+0 S4 A32])
        (reg:SI 118)) "timer.c":226:15 253 {*arm_movsi_insn}
     (nil))
(insn 15 12 16 2 (clobber (reg/i:SI 0 r0)) "timer.c":227:1 -1
     (nil))
(insn 16 15 19 2 (clobber (reg:SI 113 [ <retval> ])) "timer.c":227:1 -1
     (nil))
(insn 19 16 14 2 (const_int 0 [0]) "timer.c":227:1 311 {nop}
     (nil))
(insn 14 19 17 2 (set (reg/i:SI 0 r0)
        (reg:SI 113 [ <retval> ])) "timer.c":227:1 253 {*arm_movsi_insn}
     (nil))
(insn 17 14 0 2 (use (reg/i:SI 0 r0)) "timer.c":227:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function timer_stop (timer_stop, funcdef_no=4, decl_uid=4578, cgraph_uid=5, symbol_order=15)


3 basic blocks, 2 edges.
;; basic block 0, loop depth 0, maybe hot
;;  prev block (nil), next block 2, flags: (RTL)
;;  pred:      
;;  succ:       2 (FALLTHRU)

;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [2 n+0 S4 A32])
        (reg:SI 0 r0 [ n ])) "timer.c":230:1 253 {*arm_movsi_insn}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:SI 115)
        (symbol_ref:SI ("tp") [flags 0x2]  <var_decl 0x7f5060612000 tp>)) "timer.c":231:10 253 {*arm_movsi_insn}
     (nil))
(insn 7 6 8 2 (set (reg:SI 116)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [2 n+0 S4 A32])) "timer.c":231:10 253 {*arm_movsi_insn}
     (nil))
(insn 8 7 9 2 (set (reg/f:SI 117)
        (mem/f:SI (plus:SI (mult:SI (reg:SI 116)
                    (const_int 4 [0x4]))
                (reg/f:SI 115)) [1 tp[n_4(D)]+0 S4 A32])) "timer.c":231:10 253 {*arm_movsi_insn}
     (nil))
(insn 9 8 10 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 tptr+0 S4 A32])
        (reg/f:SI 117)) "timer.c":231:10 253 {*arm_movsi_insn}
     (nil))
(insn 10 9 11 2 (set (reg/f:SI 118)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 tptr+0 S4 A32])) "timer.c":232:17 253 {*arm_movsi_insn}
     (nil))
(insn 11 10 12 2 (set (reg:SI 113 [ _1 ])
        (mem/v:SI (plus:SI (reg/f:SI 118)
                (const_int 8 [0x8])) [2 tptr_5->CONTROL+0 S4 A32])) "timer.c":232:17 253 {*arm_movsi_insn}
     (nil))
(insn 12 11 13 2 (set (reg:SI 114 [ _2 ])
        (and:SI (reg:SI 113 [ _1 ])
            (const_int 127 [0x7f]))) "timer.c":232:17 90 {*arm_andsi3_insn}
     (nil))
(insn 13 12 14 2 (set (reg/f:SI 119)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 tptr+0 S4 A32])) "timer.c":232:17 253 {*arm_movsi_insn}
     (nil))
(insn 14 13 0 2 (set (mem/v:SI (plus:SI (reg/f:SI 119)
                (const_int 8 [0x8])) [2 tptr_5->CONTROL+0 S4 A32])
        (reg:SI 114 [ _2 ])) "timer.c":232:17 253 {*arm_movsi_insn}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)

;; basic block 1, loop depth 0, maybe hot
;;  prev block 2, next block (nil), flags: (REACHABLE, RTL)
;;  pred:       2 [always]  (FALLTHRU)
;;  succ:      




try_optimize_cfg iteration 1

;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [2 n+0 S4 A32])
        (reg:SI 0 r0 [ n ])) "timer.c":230:1 253 {*arm_movsi_insn}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:SI 115)
        (symbol_ref:SI ("tp") [flags 0x2]  <var_decl 0x7f5060612000 tp>)) "timer.c":231:10 253 {*arm_movsi_insn}
     (nil))
(insn 7 6 8 2 (set (reg:SI 116)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [2 n+0 S4 A32])) "timer.c":231:10 253 {*arm_movsi_insn}
     (nil))
(insn 8 7 9 2 (set (reg/f:SI 117)
        (mem/f:SI (plus:SI (mult:SI (reg:SI 116)
                    (const_int 4 [0x4]))
                (reg/f:SI 115)) [1 tp[n_4(D)]+0 S4 A32])) "timer.c":231:10 253 {*arm_movsi_insn}
     (nil))
(insn 9 8 10 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 tptr+0 S4 A32])
        (reg/f:SI 117)) "timer.c":231:10 253 {*arm_movsi_insn}
     (nil))
(insn 10 9 11 2 (set (reg/f:SI 118)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 tptr+0 S4 A32])) "timer.c":232:17 253 {*arm_movsi_insn}
     (nil))
(insn 11 10 12 2 (set (reg:SI 113 [ _1 ])
        (mem/v:SI (plus:SI (reg/f:SI 118)
                (const_int 8 [0x8])) [2 tptr_5->CONTROL+0 S4 A32])) "timer.c":232:17 253 {*arm_movsi_insn}
     (nil))
(insn 12 11 13 2 (set (reg:SI 114 [ _2 ])
        (and:SI (reg:SI 113 [ _1 ])
            (const_int 127 [0x7f]))) "timer.c":232:17 90 {*arm_andsi3_insn}
     (nil))
(insn 13 12 14 2 (set (reg/f:SI 119)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 tptr+0 S4 A32])) "timer.c":232:17 253 {*arm_movsi_insn}
     (nil))
(insn 14 13 0 2 (set (mem/v:SI (plus:SI (reg/f:SI 119)
                (const_int 8 [0x8])) [2 tptr_5->CONTROL+0 S4 A32])
        (reg:SI 114 [ _2 ])) "timer.c":232:17 253 {*arm_movsi_insn}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function get_tnode (get_tnode, funcdef_no=5, decl_uid=4581, cgraph_uid=6, symbol_order=16)


3 basic blocks, 2 edges.
;; basic block 0, loop depth 0, maybe hot
;;  prev block (nil), next block 2, flags: (RTL)
;;  pred:      
;;  succ:       2 (FALLTHRU)

;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 117)
        (symbol_ref:SI ("ft") [flags 0x2]  <var_decl 0x7f5060612870 ft>)) "timer.c":237:8 253 {*arm_movsi_insn}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 118)
        (mem/f/c:SI (reg/f:SI 117) [5 ft+0 S4 A32])) "timer.c":237:8 253 {*arm_movsi_insn}
     (nil))
(insn 7 6 8 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 tp+0 S4 A32])
        (reg/f:SI 118)) "timer.c":237:8 253 {*arm_movsi_insn}
     (nil))
(insn 8 7 9 2 (set (reg/f:SI 119)
        (symbol_ref:SI ("ft") [flags 0x2]  <var_decl 0x7f5060612870 ft>)) "timer.c":238:12 253 {*arm_movsi_insn}
     (nil))
(insn 9 8 10 2 (set (reg/f:SI 113 [ ft.26_1 ])
        (mem/f/c:SI (reg/f:SI 119) [5 ft+0 S4 A32])) "timer.c":238:12 253 {*arm_movsi_insn}
     (nil))
(insn 10 9 11 2 (set (reg/f:SI 114 [ _2 ])
        (mem/f:SI (reg/f:SI 113 [ ft.26_1 ]) [5 ft.26_1->next+0 S4 A32])) "timer.c":238:12 253 {*arm_movsi_insn}
     (nil))
(insn 11 10 12 2 (set (reg/f:SI 120)
        (symbol_ref:SI ("ft") [flags 0x2]  <var_decl 0x7f5060612870 ft>)) "timer.c":238:8 253 {*arm_movsi_insn}
     (nil))
(insn 12 11 13 2 (set (mem/f/c:SI (reg/f:SI 120) [5 ft+0 S4 A32])
        (reg/f:SI 114 [ _2 ])) "timer.c":238:8 253 {*arm_movsi_insn}
     (nil))
(insn 13 12 16 2 (set (reg/f:SI 115 [ _6 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 tp+0 S4 A32])) "timer.c":239:12 253 {*arm_movsi_insn}
     (nil))
(insn 16 13 20 2 (set (reg/f:SI 116 [ <retval> ])
        (reg/f:SI 115 [ _6 ])) "timer.c":239:12 253 {*arm_movsi_insn}
     (nil))
(insn 20 16 21 2 (set (reg/i:SI 0 r0)
        (reg/f:SI 116 [ <retval> ])) "timer.c":240:1 253 {*arm_movsi_insn}
     (nil))
(insn 21 20 0 2 (use (reg/i:SI 0 r0)) "timer.c":240:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)

;; basic block 1, loop depth 0, maybe hot
;;  prev block 2, next block (nil), flags: (REACHABLE, RTL)
;;  pred:       2 [always]  (FALLTHRU)
;;  succ:      




try_optimize_cfg iteration 1

;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 117)
        (symbol_ref:SI ("ft") [flags 0x2]  <var_decl 0x7f5060612870 ft>)) "timer.c":237:8 253 {*arm_movsi_insn}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 118)
        (mem/f/c:SI (reg/f:SI 117) [5 ft+0 S4 A32])) "timer.c":237:8 253 {*arm_movsi_insn}
     (nil))
(insn 7 6 8 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 tp+0 S4 A32])
        (reg/f:SI 118)) "timer.c":237:8 253 {*arm_movsi_insn}
     (nil))
(insn 8 7 9 2 (set (reg/f:SI 119)
        (symbol_ref:SI ("ft") [flags 0x2]  <var_decl 0x7f5060612870 ft>)) "timer.c":238:12 253 {*arm_movsi_insn}
     (nil))
(insn 9 8 10 2 (set (reg/f:SI 113 [ ft.26_1 ])
        (mem/f/c:SI (reg/f:SI 119) [5 ft+0 S4 A32])) "timer.c":238:12 253 {*arm_movsi_insn}
     (nil))
(insn 10 9 11 2 (set (reg/f:SI 114 [ _2 ])
        (mem/f:SI (reg/f:SI 113 [ ft.26_1 ]) [5 ft.26_1->next+0 S4 A32])) "timer.c":238:12 253 {*arm_movsi_insn}
     (nil))
(insn 11 10 12 2 (set (reg/f:SI 120)
        (symbol_ref:SI ("ft") [flags 0x2]  <var_decl 0x7f5060612870 ft>)) "timer.c":238:8 253 {*arm_movsi_insn}
     (nil))
(insn 12 11 13 2 (set (mem/f/c:SI (reg/f:SI 120) [5 ft+0 S4 A32])
        (reg/f:SI 114 [ _2 ])) "timer.c":238:8 253 {*arm_movsi_insn}
     (nil))
(insn 13 12 16 2 (set (reg/f:SI 115 [ _6 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 tp+0 S4 A32])) "timer.c":239:12 253 {*arm_movsi_insn}
     (nil))
(insn 16 13 20 2 (set (reg/f:SI 116 [ <retval> ])
        (reg/f:SI 115 [ _6 ])) "timer.c":239:12 253 {*arm_movsi_insn}
     (nil))
(insn 20 16 21 2 (set (reg/i:SI 0 r0)
        (reg/f:SI 116 [ <retval> ])) "timer.c":240:1 253 {*arm_movsi_insn}
     (nil))
(insn 21 20 0 2 (use (reg/i:SI 0 r0)) "timer.c":240:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function put_tnode (put_tnode, funcdef_no=6, decl_uid=4536, cgraph_uid=7, symbol_order=17)


3 basic blocks, 2 edges.
;; basic block 0, loop depth 0, maybe hot
;;  prev block (nil), next block 2, flags: (RTL)
;;  pred:      
;;  succ:       2 (FALLTHRU)

;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 tp+0 S4 A32])
        (reg:SI 0 r0 [ tp ])) "timer.c":243:1 253 {*arm_movsi_insn}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:SI 115)
        (symbol_ref:SI ("ft") [flags 0x2]  <var_decl 0x7f5060612870 ft>)) "timer.c":244:14 253 {*arm_movsi_insn}
     (nil))
(insn 7 6 8 2 (set (reg/f:SI 113 [ ft.27_1 ])
        (mem/f/c:SI (reg/f:SI 115) [5 ft+0 S4 A32])) "timer.c":244:14 253 {*arm_movsi_insn}
     (nil))
(insn 8 7 9 2 (set (reg/f:SI 116)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 tp+0 S4 A32])) "timer.c":244:14 253 {*arm_movsi_insn}
     (nil))
(insn 9 8 10 2 (set (mem/f:SI (reg/f:SI 116) [5 tp_3(D)->next+0 S4 A32])
        (reg/f:SI 113 [ ft.27_1 ])) "timer.c":244:14 253 {*arm_movsi_insn}
     (nil))
(insn 10 9 11 2 (set (reg/f:SI 117)
        (symbol_ref:SI ("ft") [flags 0x2]  <var_decl 0x7f5060612870 ft>)) "timer.c":245:8 253 {*arm_movsi_insn}
     (nil))
(insn 11 10 12 2 (set (reg/f:SI 118)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 tp+0 S4 A32])) "timer.c":245:8 253 {*arm_movsi_insn}
     (nil))
(insn 12 11 15 2 (set (mem/f/c:SI (reg/f:SI 117) [5 ft+0 S4 A32])
        (reg/f:SI 118)) "timer.c":245:8 253 {*arm_movsi_insn}
     (nil))
(insn 15 12 16 2 (clobber (reg/i:SI 0 r0)) "timer.c":246:1 -1
     (nil))
(insn 16 15 19 2 (clobber (reg:SI 114 [ <retval> ])) "timer.c":246:1 -1
     (nil))
(insn 19 16 14 2 (const_int 0 [0]) "timer.c":246:1 311 {nop}
     (nil))
(insn 14 19 17 2 (set (reg/i:SI 0 r0)
        (reg:SI 114 [ <retval> ])) "timer.c":246:1 253 {*arm_movsi_insn}
     (nil))
(insn 17 14 0 2 (use (reg/i:SI 0 r0)) "timer.c":246:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)

;; basic block 1, loop depth 0, maybe hot
;;  prev block 2, next block (nil), flags: (REACHABLE, RTL)
;;  pred:       2 [always]  (FALLTHRU)
;;  succ:      




try_optimize_cfg iteration 1

;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 tp+0 S4 A32])
        (reg:SI 0 r0 [ tp ])) "timer.c":243:1 253 {*arm_movsi_insn}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:SI 115)
        (symbol_ref:SI ("ft") [flags 0x2]  <var_decl 0x7f5060612870 ft>)) "timer.c":244:14 253 {*arm_movsi_insn}
     (nil))
(insn 7 6 8 2 (set (reg/f:SI 113 [ ft.27_1 ])
        (mem/f/c:SI (reg/f:SI 115) [5 ft+0 S4 A32])) "timer.c":244:14 253 {*arm_movsi_insn}
     (nil))
(insn 8 7 9 2 (set (reg/f:SI 116)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 tp+0 S4 A32])) "timer.c":244:14 253 {*arm_movsi_insn}
     (nil))
(insn 9 8 10 2 (set (mem/f:SI (reg/f:SI 116) [5 tp_3(D)->next+0 S4 A32])
        (reg/f:SI 113 [ ft.27_1 ])) "timer.c":244:14 253 {*arm_movsi_insn}
     (nil))
(insn 10 9 11 2 (set (reg/f:SI 117)
        (symbol_ref:SI ("ft") [flags 0x2]  <var_decl 0x7f5060612870 ft>)) "timer.c":245:8 253 {*arm_movsi_insn}
     (nil))
(insn 11 10 12 2 (set (reg/f:SI 118)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 tp+0 S4 A32])) "timer.c":245:8 253 {*arm_movsi_insn}
     (nil))
(insn 12 11 15 2 (set (mem/f/c:SI (reg/f:SI 117) [5 ft+0 S4 A32])
        (reg/f:SI 118)) "timer.c":245:8 253 {*arm_movsi_insn}
     (nil))
(insn 15 12 16 2 (clobber (reg/i:SI 0 r0)) "timer.c":246:1 -1
     (nil))
(insn 16 15 19 2 (clobber (reg:SI 114 [ <retval> ])) "timer.c":246:1 -1
     (nil))
(insn 19 16 14 2 (const_int 0 [0]) "timer.c":246:1 311 {nop}
     (nil))
(insn 14 19 17 2 (set (reg/i:SI 0 r0)
        (reg:SI 114 [ <retval> ])) "timer.c":246:1 253 {*arm_movsi_insn}
     (nil))
(insn 17 14 0 2 (use (reg/i:SI 0 r0)) "timer.c":246:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function printTQ (printTQ, funcdef_no=7, decl_uid=4535, cgraph_uid=8, symbol_order=18)


6 basic blocks, 6 edges.
;; basic block 0, loop depth 0, maybe hot
;;  prev block (nil), next block 2, flags: (RTL)
;;  pred:      
;;  succ:       2 (FALLTHRU)

;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 117)
        (symbol_ref:SI ("tq") [flags 0x2]  <var_decl 0x7f50606127e0 tq>)) "timer.c":251:7 253 {*arm_movsi_insn}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 118)
        (mem/f/c:SI (reg/f:SI 117) [5 tq+0 S4 A32])) "timer.c":251:7 253 {*arm_movsi_insn}
     (nil))
(insn 7 6 8 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 tp+0 S4 A32])
        (reg/f:SI 118)) "timer.c":251:7 253 {*arm_movsi_insn}
     (nil))
(insn 8 7 9 2 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC8") [flags 0x2]  <var_decl 0x7f5060643990 *.LC8>)) "timer.c":253:4 253 {*arm_movsi_insn}
     (nil))
(call_insn 9 8 27 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kprintf") [flags 0x41]  <function_decl 0x7f506060a700 kprintf>) [0 kprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":253:4 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
;;  succ:       4 [always]  (FALLTHRU)

;; basic block 3, loop depth 1, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
(code_label 27 9 12 3 48 (nil) [1 uses])
(note 12 27 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (set (reg/f:SI 119)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 tp+0 S4 A32])) "timer.c":256:34 253 {*arm_movsi_insn}
     (nil))
(insn 14 13 15 3 (set (reg/f:SI 113 [ _1 ])
        (mem/f:SI (plus:SI (reg/f:SI 119)
                (const_int 8 [0x8])) [6 tp_4->who+0 S4 A32])) "timer.c":256:34 253 {*arm_movsi_insn}
     (nil))
(insn 15 14 16 3 (set (reg:SI 114 [ _2 ])
        (mem:SI (plus:SI (reg/f:SI 113 [ _1 ])
                (const_int 24 [0x18])) [2 _1->pid+0 S4 A32])) "timer.c":256:7 253 {*arm_movsi_insn}
     (nil))
(insn 16 15 17 3 (set (reg/f:SI 120)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 tp+0 S4 A32])) "timer.c":256:7 253 {*arm_movsi_insn}
     (nil))
(insn 17 16 18 3 (set (reg:SI 115 [ _3 ])
        (mem:SI (plus:SI (reg/f:SI 120)
                (const_int 4 [0x4])) [2 tp_4->time+0 S4 A32])) "timer.c":256:7 253 {*arm_movsi_insn}
     (nil))
(insn 18 17 19 3 (set (reg:SI 2 r2)
        (reg:SI 115 [ _3 ])) "timer.c":256:7 253 {*arm_movsi_insn}
     (nil))
(insn 19 18 20 3 (set (reg:SI 1 r1)
        (reg:SI 114 [ _2 ])) "timer.c":256:7 253 {*arm_movsi_insn}
     (nil))
(insn 20 19 21 3 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC9") [flags 0x2]  <var_decl 0x7f5060643a20 *.LC9>)) "timer.c":256:7 253 {*arm_movsi_insn}
     (nil))
(call_insn 21 20 22 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kprintf") [flags 0x41]  <function_decl 0x7f506060a700 kprintf>) [0 kprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":256:7 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 22 21 23 3 (set (reg/f:SI 121)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 tp+0 S4 A32])) "timer.c":257:10 253 {*arm_movsi_insn}
     (nil))
(insn 23 22 24 3 (set (reg/f:SI 122)
        (mem/f:SI (reg/f:SI 121) [5 tp_4->next+0 S4 A32])) "timer.c":257:10 253 {*arm_movsi_insn}
     (nil))
(insn 24 23 25 3 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 tp+0 S4 A32])
        (reg/f:SI 122)) "timer.c":257:10 253 {*arm_movsi_insn}
     (nil))
;;  succ:       4 (FALLTHRU,DFS_BACK)

;; basic block 4, loop depth 1, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 [always]  (FALLTHRU)
;;              3 (FALLTHRU,DFS_BACK)
(code_label 25 24 26 4 47 (nil) [0 uses])
(note 26 25 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 28 26 29 4 (set (reg:SI 123)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 tp+0 S4 A32])) "timer.c":255:10 253 {*arm_movsi_insn}
     (nil))
(insn 29 28 30 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 123)
            (const_int 0 [0]))) "timer.c":255:10 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 30 29 31 4 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) "timer.c":255:10 273 {arm_cond_branch}
     (nil)
 -> 27)
;;  succ:       3
;;              5 (FALLTHRU)

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
(note 31 30 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 5 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC10") [flags 0x2]  <var_decl 0x7f5060643ab0 *.LC10>)) "timer.c":259:4 253 {*arm_movsi_insn}
     (nil))
(call_insn 33 32 36 5 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kprintf") [flags 0x41]  <function_decl 0x7f506060a700 kprintf>) [0 kprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":259:4 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 36 33 37 5 (clobber (reg/i:SI 0 r0)) "timer.c":260:1 -1
     (nil))
(insn 37 36 40 5 (clobber (reg:SI 116 [ <retval> ])) "timer.c":260:1 -1
     (nil))
(insn 40 37 35 5 (const_int 0 [0]) "timer.c":260:1 311 {nop}
     (nil))
(insn 35 40 38 5 (set (reg/i:SI 0 r0)
        (reg:SI 116 [ <retval> ])) "timer.c":260:1 253 {*arm_movsi_insn}
     (nil))
(insn 38 35 0 5 (use (reg/i:SI 0 r0)) "timer.c":260:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)

;; basic block 1, loop depth 0, maybe hot
;;  prev block 5, next block (nil), flags: (REACHABLE, RTL)
;;  pred:       5 [always]  (FALLTHRU)
;;  succ:      




try_optimize_cfg iteration 1

;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 117)
        (symbol_ref:SI ("tq") [flags 0x2]  <var_decl 0x7f50606127e0 tq>)) "timer.c":251:7 253 {*arm_movsi_insn}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 118)
        (mem/f/c:SI (reg/f:SI 117) [5 tq+0 S4 A32])) "timer.c":251:7 253 {*arm_movsi_insn}
     (nil))
(insn 7 6 8 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 tp+0 S4 A32])
        (reg/f:SI 118)) "timer.c":251:7 253 {*arm_movsi_insn}
     (nil))
(insn 8 7 9 2 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC8") [flags 0x2]  <var_decl 0x7f5060643990 *.LC8>)) "timer.c":253:4 253 {*arm_movsi_insn}
     (nil))
(call_insn 9 8 27 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kprintf") [flags 0x41]  <function_decl 0x7f506060a700 kprintf>) [0 kprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":253:4 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
;;  succ:       4 [always]  (FALLTHRU)

;; basic block 3, loop depth 1, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
(code_label 27 9 12 3 48 (nil) [1 uses])
(note 12 27 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (set (reg/f:SI 119)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 tp+0 S4 A32])) "timer.c":256:34 253 {*arm_movsi_insn}
     (nil))
(insn 14 13 15 3 (set (reg/f:SI 113 [ _1 ])
        (mem/f:SI (plus:SI (reg/f:SI 119)
                (const_int 8 [0x8])) [6 tp_4->who+0 S4 A32])) "timer.c":256:34 253 {*arm_movsi_insn}
     (nil))
(insn 15 14 16 3 (set (reg:SI 114 [ _2 ])
        (mem:SI (plus:SI (reg/f:SI 113 [ _1 ])
                (const_int 24 [0x18])) [2 _1->pid+0 S4 A32])) "timer.c":256:7 253 {*arm_movsi_insn}
     (nil))
(insn 16 15 17 3 (set (reg/f:SI 120)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 tp+0 S4 A32])) "timer.c":256:7 253 {*arm_movsi_insn}
     (nil))
(insn 17 16 18 3 (set (reg:SI 115 [ _3 ])
        (mem:SI (plus:SI (reg/f:SI 120)
                (const_int 4 [0x4])) [2 tp_4->time+0 S4 A32])) "timer.c":256:7 253 {*arm_movsi_insn}
     (nil))
(insn 18 17 19 3 (set (reg:SI 2 r2)
        (reg:SI 115 [ _3 ])) "timer.c":256:7 253 {*arm_movsi_insn}
     (nil))
(insn 19 18 20 3 (set (reg:SI 1 r1)
        (reg:SI 114 [ _2 ])) "timer.c":256:7 253 {*arm_movsi_insn}
     (nil))
(insn 20 19 21 3 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC9") [flags 0x2]  <var_decl 0x7f5060643a20 *.LC9>)) "timer.c":256:7 253 {*arm_movsi_insn}
     (nil))
(call_insn 21 20 22 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kprintf") [flags 0x41]  <function_decl 0x7f506060a700 kprintf>) [0 kprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":256:7 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 22 21 23 3 (set (reg/f:SI 121)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 tp+0 S4 A32])) "timer.c":257:10 253 {*arm_movsi_insn}
     (nil))
(insn 23 22 24 3 (set (reg/f:SI 122)
        (mem/f:SI (reg/f:SI 121) [5 tp_4->next+0 S4 A32])) "timer.c":257:10 253 {*arm_movsi_insn}
     (nil))
(insn 24 23 25 3 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 tp+0 S4 A32])
        (reg/f:SI 122)) "timer.c":257:10 253 {*arm_movsi_insn}
     (nil))
;;  succ:       4 (FALLTHRU,DFS_BACK)

;; basic block 4, loop depth 1, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 [always]  (FALLTHRU)
;;              3 (FALLTHRU,DFS_BACK)
(code_label 25 24 26 4 47 (nil) [0 uses])
(note 26 25 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 28 26 29 4 (set (reg:SI 123)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 tp+0 S4 A32])) "timer.c":255:10 253 {*arm_movsi_insn}
     (nil))
(insn 29 28 30 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 123)
            (const_int 0 [0]))) "timer.c":255:10 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 30 29 31 4 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) "timer.c":255:10 273 {arm_cond_branch}
     (nil)
 -> 27)
;;  succ:       3
;;              5 (FALLTHRU)

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
(note 31 30 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 5 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC10") [flags 0x2]  <var_decl 0x7f5060643ab0 *.LC10>)) "timer.c":259:4 253 {*arm_movsi_insn}
     (nil))
(call_insn 33 32 36 5 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kprintf") [flags 0x41]  <function_decl 0x7f506060a700 kprintf>) [0 kprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":259:4 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 36 33 37 5 (clobber (reg/i:SI 0 r0)) "timer.c":260:1 -1
     (nil))
(insn 37 36 40 5 (clobber (reg:SI 116 [ <retval> ])) "timer.c":260:1 -1
     (nil))
(insn 40 37 35 5 (const_int 0 [0]) "timer.c":260:1 311 {nop}
     (nil))
(insn 35 40 38 5 (set (reg/i:SI 0 r0)
        (reg:SI 116 [ <retval> ])) "timer.c":260:1 253 {*arm_movsi_insn}
     (nil))
(insn 38 35 0 5 (use (reg/i:SI 0 r0)) "timer.c":260:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function kitimer (kitimer, funcdef_no=8, decl_uid=4594, cgraph_uid=9, symbol_order=19)


14 basic blocks, 18 edges.
;; basic block 0, loop depth 0, maybe hot
;;  prev block (nil), next block 2, flags: (RTL)
;;  pred:      
;;  succ:       2 (FALLTHRU)

;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -20 [0xffffffffffffffec])) [2 time+0 S4 A32])
        (reg:SI 0 r0 [ time ])) "timer.c":263:1 253 {*arm_movsi_insn}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(call_insn 6 3 7 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("int_off") [flags 0x41]  <function_decl 0x7f5060622600 int_off>) [0 int_off S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":268:10 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 7 6 8 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [2 ps+0 S4 A64])
        (reg:SI 0 r0)) "timer.c":268:10 253 {*arm_movsi_insn}
     (nil))
(call_insn 8 7 9 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("get_tnode") [flags 0x3]  <function_decl 0x7f506061bf00 get_tnode>) [0 get_tnode S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":269:9 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 9 8 10 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 t+0 S4 A32])
        (reg:SI 0 r0)) "timer.c":269:9 253 {*arm_movsi_insn}
     (nil))
(insn 10 9 11 2 (set (reg/f:SI 123)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 t+0 S4 A32])) "timer.c":270:13 253 {*arm_movsi_insn}
     (nil))
(insn 11 10 12 2 (set (reg:SI 124)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -20 [0xffffffffffffffec])) [2 time+0 S4 A32])) "timer.c":270:13 253 {*arm_movsi_insn}
     (nil))
(insn 12 11 13 2 (set (mem:SI (plus:SI (reg/f:SI 123)
                (const_int 4 [0x4])) [2 t_19->time+0 S4 A32])
        (reg:SI 124)) "timer.c":270:13 253 {*arm_movsi_insn}
     (nil))
(insn 13 12 14 2 (set (reg/f:SI 125)
        (symbol_ref:SI ("running") [flags 0x40]  <var_decl 0x7f50612f57e0 running>)) "timer.c":271:12 253 {*arm_movsi_insn}
     (nil))
(insn 14 13 15 2 (set (reg/f:SI 113 [ running.28_1 ])
        (mem/f/c:SI (reg/f:SI 125) [6 running+0 S4 A32])) "timer.c":271:12 253 {*arm_movsi_insn}
     (nil))
(insn 15 14 16 2 (set (reg/f:SI 126)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 t+0 S4 A32])) "timer.c":271:12 253 {*arm_movsi_insn}
     (nil))
(insn 16 15 17 2 (set (mem/f:SI (plus:SI (reg/f:SI 126)
                (const_int 8 [0x8])) [6 t_19->who+0 S4 A32])
        (reg/f:SI 113 [ running.28_1 ])) "timer.c":271:12 253 {*arm_movsi_insn}
     (nil))
(insn 17 16 18 2 (set (reg/f:SI 127)
        (symbol_ref:SI ("tq") [flags 0x2]  <var_decl 0x7f50606127e0 tq>)) "timer.c":274:11 253 {*arm_movsi_insn}
     (nil))
(insn 18 17 19 2 (set (reg/f:SI 114 [ tq.29_2 ])
        (mem/f/c:SI (reg/f:SI 127) [5 tq+0 S4 A32])) "timer.c":274:11 253 {*arm_movsi_insn}
     (nil))
(insn 19 18 20 2 (set (reg:CC 100 cc)
        (compare:CC (reg/f:SI 114 [ tq.29_2 ])
            (const_int 0 [0]))) "timer.c":274:8 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 20 19 21 2 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 30)
            (pc))) "timer.c":274:8 273 {arm_cond_branch}
     (nil)
 -> 30)
;;  succ:       3 (FALLTHRU)
;;              4

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 21 20 22 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 3 (set (reg/f:SI 128)
        (symbol_ref:SI ("tq") [flags 0x2]  <var_decl 0x7f50606127e0 tq>)) "timer.c":275:12 253 {*arm_movsi_insn}
     (nil))
(insn 23 22 24 3 (set (reg/f:SI 129)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 t+0 S4 A32])) "timer.c":275:12 253 {*arm_movsi_insn}
     (nil))
(insn 24 23 25 3 (set (mem/f/c:SI (reg/f:SI 128) [5 tq+0 S4 A32])
        (reg/f:SI 129)) "timer.c":275:12 253 {*arm_movsi_insn}
     (nil))
(insn 25 24 26 3 (set (reg/f:SI 130)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 t+0 S4 A32])) "timer.c":276:17 253 {*arm_movsi_insn}
     (nil))
(insn 26 25 27 3 (set (reg:SI 131)
        (const_int 0 [0])) "timer.c":276:17 253 {*arm_movsi_insn}
     (nil))
(insn 27 26 30 3 (set (mem/f:SI (reg/f:SI 130) [5 t_19->next+0 S4 A32])
        (reg:SI 131)) "timer.c":276:17 253 {*arm_movsi_insn}
     (nil))
;;  succ:       14 [always]  (FALLTHRU)

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
(code_label 30 27 31 4 52 (nil) [1 uses])
(note 31 30 32 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 4 (set (reg/f:SI 132)
        (symbol_ref:SI ("tq") [flags 0x2]  <var_decl 0x7f50606127e0 tq>)) "timer.c":279:17 253 {*arm_movsi_insn}
     (nil))
(insn 33 32 34 4 (set (reg/f:SI 133)
        (mem/f/c:SI (reg/f:SI 132) [5 tq+0 S4 A32])) "timer.c":279:17 253 {*arm_movsi_insn}
     (nil))
(insn 34 33 35 4 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [5 p+0 S4 A64])
        (reg/f:SI 133)) "timer.c":279:17 253 {*arm_movsi_insn}
     (nil))
(insn 35 34 36 4 (set (reg/f:SI 134)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [5 p+0 S4 A64])) "timer.c":279:13 253 {*arm_movsi_insn}
     (nil))
(insn 36 35 65 4 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [5 q+0 S4 A32])
        (reg/f:SI 134)) "timer.c":279:13 253 {*arm_movsi_insn}
     (nil))
;;  succ:       8 [always]  (FALLTHRU)

;; basic block 5, loop depth 1, maybe hot
;;  prev block 4, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8
(code_label 65 36 39 5 57 (nil) [1 uses])
(note 39 65 40 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 5 (set (reg/f:SI 135)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [5 p+0 S4 A64])) "timer.c":281:27 253 {*arm_movsi_insn}
     (nil))
(insn 41 40 42 5 (set (reg:SI 115 [ _3 ])
        (mem:SI (plus:SI (reg/f:SI 135)
                (const_int 4 [0x4])) [2 p_11->time+0 S4 A32])) "timer.c":281:27 253 {*arm_movsi_insn}
     (nil))
(insn 42 41 43 5 (set (reg:SI 136)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -20 [0xffffffffffffffec])) [2 time+0 S4 A32])) "timer.c":281:24 253 {*arm_movsi_insn}
     (nil))
(insn 43 42 46 5 (set (reg:SI 116 [ _4 ])
        (minus:SI (reg:SI 136)
            (reg:SI 115 [ _3 ]))) "timer.c":281:24 45 {*arm_subsi3_insn}
     (nil))
(insn 46 43 47 5 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 116 [ _4 ])
            (const_int 0 [0]))) "timer.c":281:18 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 47 46 51 5 (set (pc)
        (if_then_else (ge (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 51)
            (pc))) "timer.c":281:18 273 {arm_cond_branch}
     (nil)
 -> 51)
;;  succ:       9 (FALLTHRU)
;;              7

;; basic block 7, loop depth 1, maybe hot
;;  prev block 5, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
(code_label 51 47 52 7 55 (nil) [1 uses])
(note 52 51 53 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 7 (set (reg/f:SI 137)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [5 p+0 S4 A64])) "timer.c":283:24 253 {*arm_movsi_insn}
     (nil))
(insn 54 53 55 7 (set (reg:SI 117 [ _5 ])
        (mem:SI (plus:SI (reg/f:SI 137)
                (const_int 4 [0x4])) [2 p_11->time+0 S4 A32])) "timer.c":283:24 253 {*arm_movsi_insn}
     (nil))
(insn 55 54 56 7 (set (reg:SI 139)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -20 [0xffffffffffffffec])) [2 time+0 S4 A32])) "timer.c":283:20 253 {*arm_movsi_insn}
     (nil))
(insn 56 55 57 7 (set (reg:SI 138)
        (minus:SI (reg:SI 139)
            (reg:SI 117 [ _5 ]))) "timer.c":283:20 45 {*arm_subsi3_insn}
     (nil))
(insn 57 56 58 7 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -20 [0xffffffffffffffec])) [2 time+0 S4 A32])
        (reg:SI 138)) "timer.c":283:20 253 {*arm_movsi_insn}
     (nil))
(insn 58 57 59 7 (set (reg/f:SI 140)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [5 p+0 S4 A64])) "timer.c":284:17 253 {*arm_movsi_insn}
     (nil))
(insn 59 58 60 7 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [5 q+0 S4 A32])
        (reg/f:SI 140)) "timer.c":284:17 253 {*arm_movsi_insn}
     (nil))
(insn 60 59 61 7 (set (reg/f:SI 141)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [5 p+0 S4 A64])) "timer.c":285:17 253 {*arm_movsi_insn}
     (nil))
(insn 61 60 62 7 (set (reg/f:SI 142)
        (mem/f:SI (reg/f:SI 141) [5 p_11->next+0 S4 A32])) "timer.c":285:17 253 {*arm_movsi_insn}
     (nil))
(insn 62 61 63 7 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [5 p+0 S4 A64])
        (reg/f:SI 142)) "timer.c":285:17 253 {*arm_movsi_insn}
     (nil))
;;  succ:       8 (FALLTHRU,DFS_BACK)

;; basic block 8, loop depth 1, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 [always]  (FALLTHRU)
;;              7 (FALLTHRU,DFS_BACK)
(code_label 63 62 64 8 54 (nil) [0 uses])
(note 64 63 66 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 66 64 67 8 (set (reg:SI 143)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [5 p+0 S4 A64])) "timer.c":280:18 253 {*arm_movsi_insn}
     (nil))
(insn 67 66 68 8 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 143)
            (const_int 0 [0]))) "timer.c":280:18 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 68 67 69 8 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 65)
            (pc))) "timer.c":280:18 273 {arm_cond_branch}
     (nil)
 -> 65)
;;  succ:       5
;;              9 (FALLTHRU)

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
;;              8 (FALLTHRU)
(code_label 69 68 70 9 56 (nil) [0 uses])
(note 70 69 71 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 9 (set (reg:SI 144)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [5 p+0 S4 A64])) "timer.c":287:14 253 {*arm_movsi_insn}
     (nil))
(insn 72 71 73 9 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 144)
            (const_int 0 [0]))) "timer.c":287:14 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 73 72 74 9 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 81)
            (pc))) "timer.c":287:14 273 {arm_cond_branch}
     (nil)
 -> 81)
;;  succ:       10 (FALLTHRU)
;;              11

;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 (FALLTHRU)
(note 74 73 75 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 10 (set (reg/f:SI 145)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [5 p+0 S4 A64])) "timer.c":288:23 253 {*arm_movsi_insn}
     (nil))
(insn 76 75 77 10 (set (reg:SI 118 [ _6 ])
        (mem:SI (plus:SI (reg/f:SI 145)
                (const_int 4 [0x4])) [2 p_11->time+0 S4 A32])) "timer.c":288:23 253 {*arm_movsi_insn}
     (nil))
(insn 77 76 78 10 (set (reg:SI 146)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -20 [0xffffffffffffffec])) [2 time+0 S4 A32])) "timer.c":288:23 253 {*arm_movsi_insn}
     (nil))
(insn 78 77 79 10 (set (reg:SI 119 [ _7 ])
        (minus:SI (reg:SI 118 [ _6 ])
            (reg:SI 146))) "timer.c":288:23 45 {*arm_subsi3_insn}
     (nil))
(insn 79 78 80 10 (set (reg/f:SI 147)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [5 p+0 S4 A64])) "timer.c":288:23 253 {*arm_movsi_insn}
     (nil))
(insn 80 79 81 10 (set (mem:SI (plus:SI (reg/f:SI 147)
                (const_int 4 [0x4])) [2 p_11->time+0 S4 A32])
        (reg:SI 119 [ _7 ])) "timer.c":288:23 253 {*arm_movsi_insn}
     (nil))
;;  succ:       11 (FALLTHRU)

;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       9
;;              10 (FALLTHRU)
(code_label 81 80 82 11 58 (nil) [1 uses])
(note 82 81 83 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 11 (set (reg/f:SI 148)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 t+0 S4 A32])) "timer.c":290:19 253 {*arm_movsi_insn}
     (nil))
(insn 84 83 85 11 (set (reg:SI 149)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -20 [0xffffffffffffffec])) [2 time+0 S4 A32])) "timer.c":290:19 253 {*arm_movsi_insn}
     (nil))
(insn 85 84 86 11 (set (mem:SI (plus:SI (reg/f:SI 148)
                (const_int 4 [0x4])) [2 t_19->time+0 S4 A32])
        (reg:SI 149)) "timer.c":290:19 253 {*arm_movsi_insn}
     (nil))
(insn 86 85 87 11 (set (reg/f:SI 150)
        (symbol_ref:SI ("tq") [flags 0x2]  <var_decl 0x7f50606127e0 tq>)) "timer.c":291:16 253 {*arm_movsi_insn}
     (nil))
(insn 87 86 88 11 (set (reg/f:SI 120 [ tq.30_8 ])
        (mem/f/c:SI (reg/f:SI 150) [5 tq+0 S4 A32])) "timer.c":291:16 253 {*arm_movsi_insn}
     (nil))
(insn 88 87 89 11 (set (reg:SI 151)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [5 p+0 S4 A64])) "timer.c":291:14 253 {*arm_movsi_insn}
     (nil))
(insn 89 88 90 11 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 151)
            (reg/f:SI 120 [ tq.30_8 ]))) "timer.c":291:14 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 90 89 91 11 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 101)
            (pc))) "timer.c":291:14 273 {arm_cond_branch}
     (nil)
 -> 101)
;;  succ:       12 (FALLTHRU)
;;              13

;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       11 (FALLTHRU)
(note 91 90 92 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 93 12 (set (reg/f:SI 152)
        (symbol_ref:SI ("tq") [flags 0x2]  <var_decl 0x7f50606127e0 tq>)) "timer.c":292:23 253 {*arm_movsi_insn}
     (nil))
(insn 93 92 94 12 (set (reg/f:SI 121 [ tq.31_9 ])
        (mem/f/c:SI (reg/f:SI 152) [5 tq+0 S4 A32])) "timer.c":292:23 253 {*arm_movsi_insn}
     (nil))
(insn 94 93 95 12 (set (reg/f:SI 153)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 t+0 S4 A32])) "timer.c":292:23 253 {*arm_movsi_insn}
     (nil))
(insn 95 94 96 12 (set (mem/f:SI (reg/f:SI 153) [5 t_19->next+0 S4 A32])
        (reg/f:SI 121 [ tq.31_9 ])) "timer.c":292:23 253 {*arm_movsi_insn}
     (nil))
(insn 96 95 97 12 (set (reg/f:SI 154)
        (symbol_ref:SI ("tq") [flags 0x2]  <var_decl 0x7f50606127e0 tq>)) "timer.c":293:18 253 {*arm_movsi_insn}
     (nil))
(insn 97 96 98 12 (set (reg/f:SI 155)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 t+0 S4 A32])) "timer.c":293:18 253 {*arm_movsi_insn}
     (nil))
(insn 98 97 101 12 (set (mem/f/c:SI (reg/f:SI 154) [5 tq+0 S4 A32])
        (reg/f:SI 155)) "timer.c":293:18 253 {*arm_movsi_insn}
     (nil))
;;  succ:       14 [always]  (FALLTHRU)

;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       11
(code_label 101 98 102 13 59 (nil) [1 uses])
(note 102 101 103 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 104 13 (set (reg/f:SI 156)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 t+0 S4 A32])) "timer.c":296:25 253 {*arm_movsi_insn}
     (nil))
(insn 104 103 105 13 (set (reg/f:SI 157)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [5 p+0 S4 A64])) "timer.c":296:25 253 {*arm_movsi_insn}
     (nil))
(insn 105 104 106 13 (set (mem/f:SI (reg/f:SI 156) [5 t_19->next+0 S4 A32])
        (reg/f:SI 157)) "timer.c":296:25 253 {*arm_movsi_insn}
     (nil))
(insn 106 105 107 13 (set (reg/f:SI 158)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [5 q+0 S4 A32])) "timer.c":297:25 253 {*arm_movsi_insn}
     (nil))
(insn 107 106 108 13 (set (reg/f:SI 159)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 t+0 S4 A32])) "timer.c":297:25 253 {*arm_movsi_insn}
     (nil))
(insn 108 107 109 13 (set (mem/f:SI (reg/f:SI 158) [5 q_12->next+0 S4 A32])
        (reg/f:SI 159)) "timer.c":297:25 253 {*arm_movsi_insn}
     (nil))
;;  succ:       14 (FALLTHRU)

;; basic block 14, loop depth 0, maybe hot
;;  prev block 13, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 [always]  (FALLTHRU)
;;              12 [always]  (FALLTHRU)
;;              13 (FALLTHRU)
(code_label 109 108 110 14 53 (nil) [0 uses])
(note 110 109 111 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 112 14 (set (reg:SI 0 r0)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [2 ps+0 S4 A64])) "timer.c":302:5 253 {*arm_movsi_insn}
     (nil))
(call_insn 112 111 113 14 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("int_on") [flags 0x41]  <function_decl 0x7f5060622700 int_on>) [0 int_on S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":302:5 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(call_insn 113 112 116 14 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printTQ") [flags 0x3]  <function_decl 0x7f506060af00 printTQ>) [0 printTQ S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":304:5 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 116 113 117 14 (clobber (reg/i:SI 0 r0)) "timer.c":308:1 -1
     (nil))
(insn 117 116 120 14 (clobber (reg:SI 122 [ <retval> ])) "timer.c":308:1 -1
     (nil))
(insn 120 117 115 14 (const_int 0 [0]) "timer.c":308:1 311 {nop}
     (nil))
(insn 115 120 118 14 (set (reg/i:SI 0 r0)
        (reg:SI 122 [ <retval> ])) "timer.c":308:1 253 {*arm_movsi_insn}
     (nil))
(insn 118 115 0 14 (use (reg/i:SI 0 r0)) "timer.c":308:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)

;; basic block 1, loop depth 0, maybe hot
;;  prev block 14, next block (nil), flags: (REACHABLE, RTL)
;;  pred:       14 [always]  (FALLTHRU)
;;  succ:      




try_optimize_cfg iteration 1

;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -20 [0xffffffffffffffec])) [2 time+0 S4 A32])
        (reg:SI 0 r0 [ time ])) "timer.c":263:1 253 {*arm_movsi_insn}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(call_insn 6 3 7 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("int_off") [flags 0x41]  <function_decl 0x7f5060622600 int_off>) [0 int_off S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":268:10 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 7 6 8 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [2 ps+0 S4 A64])
        (reg:SI 0 r0)) "timer.c":268:10 253 {*arm_movsi_insn}
     (nil))
(call_insn 8 7 9 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("get_tnode") [flags 0x3]  <function_decl 0x7f506061bf00 get_tnode>) [0 get_tnode S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":269:9 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 9 8 10 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 t+0 S4 A32])
        (reg:SI 0 r0)) "timer.c":269:9 253 {*arm_movsi_insn}
     (nil))
(insn 10 9 11 2 (set (reg/f:SI 123)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 t+0 S4 A32])) "timer.c":270:13 253 {*arm_movsi_insn}
     (nil))
(insn 11 10 12 2 (set (reg:SI 124)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -20 [0xffffffffffffffec])) [2 time+0 S4 A32])) "timer.c":270:13 253 {*arm_movsi_insn}
     (nil))
(insn 12 11 13 2 (set (mem:SI (plus:SI (reg/f:SI 123)
                (const_int 4 [0x4])) [2 t_19->time+0 S4 A32])
        (reg:SI 124)) "timer.c":270:13 253 {*arm_movsi_insn}
     (nil))
(insn 13 12 14 2 (set (reg/f:SI 125)
        (symbol_ref:SI ("running") [flags 0x40]  <var_decl 0x7f50612f57e0 running>)) "timer.c":271:12 253 {*arm_movsi_insn}
     (nil))
(insn 14 13 15 2 (set (reg/f:SI 113 [ running.28_1 ])
        (mem/f/c:SI (reg/f:SI 125) [6 running+0 S4 A32])) "timer.c":271:12 253 {*arm_movsi_insn}
     (nil))
(insn 15 14 16 2 (set (reg/f:SI 126)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 t+0 S4 A32])) "timer.c":271:12 253 {*arm_movsi_insn}
     (nil))
(insn 16 15 17 2 (set (mem/f:SI (plus:SI (reg/f:SI 126)
                (const_int 8 [0x8])) [6 t_19->who+0 S4 A32])
        (reg/f:SI 113 [ running.28_1 ])) "timer.c":271:12 253 {*arm_movsi_insn}
     (nil))
(insn 17 16 18 2 (set (reg/f:SI 127)
        (symbol_ref:SI ("tq") [flags 0x2]  <var_decl 0x7f50606127e0 tq>)) "timer.c":274:11 253 {*arm_movsi_insn}
     (nil))
(insn 18 17 19 2 (set (reg/f:SI 114 [ tq.29_2 ])
        (mem/f/c:SI (reg/f:SI 127) [5 tq+0 S4 A32])) "timer.c":274:11 253 {*arm_movsi_insn}
     (nil))
(insn 19 18 20 2 (set (reg:CC 100 cc)
        (compare:CC (reg/f:SI 114 [ tq.29_2 ])
            (const_int 0 [0]))) "timer.c":274:8 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 20 19 21 2 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 30)
            (pc))) "timer.c":274:8 273 {arm_cond_branch}
     (nil)
 -> 30)
;;  succ:       3 (FALLTHRU)
;;              4

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 21 20 22 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 3 (set (reg/f:SI 128)
        (symbol_ref:SI ("tq") [flags 0x2]  <var_decl 0x7f50606127e0 tq>)) "timer.c":275:12 253 {*arm_movsi_insn}
     (nil))
(insn 23 22 24 3 (set (reg/f:SI 129)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 t+0 S4 A32])) "timer.c":275:12 253 {*arm_movsi_insn}
     (nil))
(insn 24 23 25 3 (set (mem/f/c:SI (reg/f:SI 128) [5 tq+0 S4 A32])
        (reg/f:SI 129)) "timer.c":275:12 253 {*arm_movsi_insn}
     (nil))
(insn 25 24 26 3 (set (reg/f:SI 130)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 t+0 S4 A32])) "timer.c":276:17 253 {*arm_movsi_insn}
     (nil))
(insn 26 25 27 3 (set (reg:SI 131)
        (const_int 0 [0])) "timer.c":276:17 253 {*arm_movsi_insn}
     (nil))
(insn 27 26 30 3 (set (mem/f:SI (reg/f:SI 130) [5 t_19->next+0 S4 A32])
        (reg:SI 131)) "timer.c":276:17 253 {*arm_movsi_insn}
     (nil))
;;  succ:       13 [always]  (FALLTHRU)

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
(code_label 30 27 31 4 52 (nil) [1 uses])
(note 31 30 32 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 4 (set (reg/f:SI 132)
        (symbol_ref:SI ("tq") [flags 0x2]  <var_decl 0x7f50606127e0 tq>)) "timer.c":279:17 253 {*arm_movsi_insn}
     (nil))
(insn 33 32 34 4 (set (reg/f:SI 133)
        (mem/f/c:SI (reg/f:SI 132) [5 tq+0 S4 A32])) "timer.c":279:17 253 {*arm_movsi_insn}
     (nil))
(insn 34 33 35 4 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [5 p+0 S4 A64])
        (reg/f:SI 133)) "timer.c":279:17 253 {*arm_movsi_insn}
     (nil))
(insn 35 34 36 4 (set (reg/f:SI 134)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [5 p+0 S4 A64])) "timer.c":279:13 253 {*arm_movsi_insn}
     (nil))
(insn 36 35 65 4 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [5 q+0 S4 A32])
        (reg/f:SI 134)) "timer.c":279:13 253 {*arm_movsi_insn}
     (nil))
;;  succ:       7 [always]  (FALLTHRU)

;; basic block 5, loop depth 1, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7
(code_label 65 36 39 5 57 (nil) [1 uses])
(note 39 65 40 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 5 (set (reg/f:SI 135)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [5 p+0 S4 A64])) "timer.c":281:27 253 {*arm_movsi_insn}
     (nil))
(insn 41 40 42 5 (set (reg:SI 115 [ _3 ])
        (mem:SI (plus:SI (reg/f:SI 135)
                (const_int 4 [0x4])) [2 p_11->time+0 S4 A32])) "timer.c":281:27 253 {*arm_movsi_insn}
     (nil))
(insn 42 41 43 5 (set (reg:SI 136)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -20 [0xffffffffffffffec])) [2 time+0 S4 A32])) "timer.c":281:24 253 {*arm_movsi_insn}
     (nil))
(insn 43 42 46 5 (set (reg:SI 116 [ _4 ])
        (minus:SI (reg:SI 136)
            (reg:SI 115 [ _3 ]))) "timer.c":281:24 45 {*arm_subsi3_insn}
     (nil))
(insn 46 43 47 5 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 116 [ _4 ])
            (const_int 0 [0]))) "timer.c":281:18 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 47 46 51 5 (set (pc)
        (if_then_else (ge (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 51)
            (pc))) "timer.c":281:18 273 {arm_cond_branch}
     (nil)
 -> 51)
;;  succ:       8 (FALLTHRU)
;;              6

;; basic block 6, loop depth 1, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
(code_label 51 47 52 6 55 (nil) [1 uses])
(note 52 51 53 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 6 (set (reg/f:SI 137)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [5 p+0 S4 A64])) "timer.c":283:24 253 {*arm_movsi_insn}
     (nil))
(insn 54 53 55 6 (set (reg:SI 117 [ _5 ])
        (mem:SI (plus:SI (reg/f:SI 137)
                (const_int 4 [0x4])) [2 p_11->time+0 S4 A32])) "timer.c":283:24 253 {*arm_movsi_insn}
     (nil))
(insn 55 54 56 6 (set (reg:SI 139)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -20 [0xffffffffffffffec])) [2 time+0 S4 A32])) "timer.c":283:20 253 {*arm_movsi_insn}
     (nil))
(insn 56 55 57 6 (set (reg:SI 138)
        (minus:SI (reg:SI 139)
            (reg:SI 117 [ _5 ]))) "timer.c":283:20 45 {*arm_subsi3_insn}
     (nil))
(insn 57 56 58 6 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -20 [0xffffffffffffffec])) [2 time+0 S4 A32])
        (reg:SI 138)) "timer.c":283:20 253 {*arm_movsi_insn}
     (nil))
(insn 58 57 59 6 (set (reg/f:SI 140)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [5 p+0 S4 A64])) "timer.c":284:17 253 {*arm_movsi_insn}
     (nil))
(insn 59 58 60 6 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [5 q+0 S4 A32])
        (reg/f:SI 140)) "timer.c":284:17 253 {*arm_movsi_insn}
     (nil))
(insn 60 59 61 6 (set (reg/f:SI 141)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [5 p+0 S4 A64])) "timer.c":285:17 253 {*arm_movsi_insn}
     (nil))
(insn 61 60 62 6 (set (reg/f:SI 142)
        (mem/f:SI (reg/f:SI 141) [5 p_11->next+0 S4 A32])) "timer.c":285:17 253 {*arm_movsi_insn}
     (nil))
(insn 62 61 63 6 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [5 p+0 S4 A64])
        (reg/f:SI 142)) "timer.c":285:17 253 {*arm_movsi_insn}
     (nil))
;;  succ:       7 (FALLTHRU,DFS_BACK)

;; basic block 7, loop depth 1, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 [always]  (FALLTHRU)
;;              6 (FALLTHRU,DFS_BACK)
(code_label 63 62 64 7 54 (nil) [0 uses])
(note 64 63 66 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 66 64 67 7 (set (reg:SI 143)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [5 p+0 S4 A64])) "timer.c":280:18 253 {*arm_movsi_insn}
     (nil))
(insn 67 66 68 7 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 143)
            (const_int 0 [0]))) "timer.c":280:18 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 68 67 69 7 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 65)
            (pc))) "timer.c":280:18 273 {arm_cond_branch}
     (nil)
 -> 65)
;;  succ:       5
;;              8 (FALLTHRU)

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
;;              7 (FALLTHRU)
(code_label 69 68 70 8 56 (nil) [0 uses])
(note 70 69 71 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 8 (set (reg:SI 144)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [5 p+0 S4 A64])) "timer.c":287:14 253 {*arm_movsi_insn}
     (nil))
(insn 72 71 73 8 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 144)
            (const_int 0 [0]))) "timer.c":287:14 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 73 72 74 8 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 81)
            (pc))) "timer.c":287:14 273 {arm_cond_branch}
     (nil)
 -> 81)
;;  succ:       9 (FALLTHRU)
;;              10

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 (FALLTHRU)
(note 74 73 75 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 9 (set (reg/f:SI 145)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [5 p+0 S4 A64])) "timer.c":288:23 253 {*arm_movsi_insn}
     (nil))
(insn 76 75 77 9 (set (reg:SI 118 [ _6 ])
        (mem:SI (plus:SI (reg/f:SI 145)
                (const_int 4 [0x4])) [2 p_11->time+0 S4 A32])) "timer.c":288:23 253 {*arm_movsi_insn}
     (nil))
(insn 77 76 78 9 (set (reg:SI 146)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -20 [0xffffffffffffffec])) [2 time+0 S4 A32])) "timer.c":288:23 253 {*arm_movsi_insn}
     (nil))
(insn 78 77 79 9 (set (reg:SI 119 [ _7 ])
        (minus:SI (reg:SI 118 [ _6 ])
            (reg:SI 146))) "timer.c":288:23 45 {*arm_subsi3_insn}
     (nil))
(insn 79 78 80 9 (set (reg/f:SI 147)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [5 p+0 S4 A64])) "timer.c":288:23 253 {*arm_movsi_insn}
     (nil))
(insn 80 79 81 9 (set (mem:SI (plus:SI (reg/f:SI 147)
                (const_int 4 [0x4])) [2 p_11->time+0 S4 A32])
        (reg:SI 119 [ _7 ])) "timer.c":288:23 253 {*arm_movsi_insn}
     (nil))
;;  succ:       10 (FALLTHRU)

;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       8
;;              9 (FALLTHRU)
(code_label 81 80 82 10 58 (nil) [1 uses])
(note 82 81 83 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 10 (set (reg/f:SI 148)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 t+0 S4 A32])) "timer.c":290:19 253 {*arm_movsi_insn}
     (nil))
(insn 84 83 85 10 (set (reg:SI 149)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -20 [0xffffffffffffffec])) [2 time+0 S4 A32])) "timer.c":290:19 253 {*arm_movsi_insn}
     (nil))
(insn 85 84 86 10 (set (mem:SI (plus:SI (reg/f:SI 148)
                (const_int 4 [0x4])) [2 t_19->time+0 S4 A32])
        (reg:SI 149)) "timer.c":290:19 253 {*arm_movsi_insn}
     (nil))
(insn 86 85 87 10 (set (reg/f:SI 150)
        (symbol_ref:SI ("tq") [flags 0x2]  <var_decl 0x7f50606127e0 tq>)) "timer.c":291:16 253 {*arm_movsi_insn}
     (nil))
(insn 87 86 88 10 (set (reg/f:SI 120 [ tq.30_8 ])
        (mem/f/c:SI (reg/f:SI 150) [5 tq+0 S4 A32])) "timer.c":291:16 253 {*arm_movsi_insn}
     (nil))
(insn 88 87 89 10 (set (reg:SI 151)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [5 p+0 S4 A64])) "timer.c":291:14 253 {*arm_movsi_insn}
     (nil))
(insn 89 88 90 10 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 151)
            (reg/f:SI 120 [ tq.30_8 ]))) "timer.c":291:14 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 90 89 91 10 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 101)
            (pc))) "timer.c":291:14 273 {arm_cond_branch}
     (nil)
 -> 101)
;;  succ:       11 (FALLTHRU)
;;              12

;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       10 (FALLTHRU)
(note 91 90 92 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 93 11 (set (reg/f:SI 152)
        (symbol_ref:SI ("tq") [flags 0x2]  <var_decl 0x7f50606127e0 tq>)) "timer.c":292:23 253 {*arm_movsi_insn}
     (nil))
(insn 93 92 94 11 (set (reg/f:SI 121 [ tq.31_9 ])
        (mem/f/c:SI (reg/f:SI 152) [5 tq+0 S4 A32])) "timer.c":292:23 253 {*arm_movsi_insn}
     (nil))
(insn 94 93 95 11 (set (reg/f:SI 153)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 t+0 S4 A32])) "timer.c":292:23 253 {*arm_movsi_insn}
     (nil))
(insn 95 94 96 11 (set (mem/f:SI (reg/f:SI 153) [5 t_19->next+0 S4 A32])
        (reg/f:SI 121 [ tq.31_9 ])) "timer.c":292:23 253 {*arm_movsi_insn}
     (nil))
(insn 96 95 97 11 (set (reg/f:SI 154)
        (symbol_ref:SI ("tq") [flags 0x2]  <var_decl 0x7f50606127e0 tq>)) "timer.c":293:18 253 {*arm_movsi_insn}
     (nil))
(insn 97 96 98 11 (set (reg/f:SI 155)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 t+0 S4 A32])) "timer.c":293:18 253 {*arm_movsi_insn}
     (nil))
(insn 98 97 101 11 (set (mem/f/c:SI (reg/f:SI 154) [5 tq+0 S4 A32])
        (reg/f:SI 155)) "timer.c":293:18 253 {*arm_movsi_insn}
     (nil))
;;  succ:       13 [always]  (FALLTHRU)

;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       10
(code_label 101 98 102 12 59 (nil) [1 uses])
(note 102 101 103 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 104 12 (set (reg/f:SI 156)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 t+0 S4 A32])) "timer.c":296:25 253 {*arm_movsi_insn}
     (nil))
(insn 104 103 105 12 (set (reg/f:SI 157)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -16 [0xfffffffffffffff0])) [5 p+0 S4 A64])) "timer.c":296:25 253 {*arm_movsi_insn}
     (nil))
(insn 105 104 106 12 (set (mem/f:SI (reg/f:SI 156) [5 t_19->next+0 S4 A32])
        (reg/f:SI 157)) "timer.c":296:25 253 {*arm_movsi_insn}
     (nil))
(insn 106 105 107 12 (set (reg/f:SI 158)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [5 q+0 S4 A32])) "timer.c":297:25 253 {*arm_movsi_insn}
     (nil))
(insn 107 106 108 12 (set (reg/f:SI 159)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 t+0 S4 A32])) "timer.c":297:25 253 {*arm_movsi_insn}
     (nil))
(insn 108 107 109 12 (set (mem/f:SI (reg/f:SI 158) [5 q_12->next+0 S4 A32])
        (reg/f:SI 159)) "timer.c":297:25 253 {*arm_movsi_insn}
     (nil))
;;  succ:       13 (FALLTHRU)

;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 [always]  (FALLTHRU)
;;              11 [always]  (FALLTHRU)
;;              12 (FALLTHRU)
(code_label 109 108 110 13 53 (nil) [0 uses])
(note 110 109 111 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 112 13 (set (reg:SI 0 r0)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [2 ps+0 S4 A64])) "timer.c":302:5 253 {*arm_movsi_insn}
     (nil))
(call_insn 112 111 113 13 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("int_on") [flags 0x41]  <function_decl 0x7f5060622700 int_on>) [0 int_on S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":302:5 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(call_insn 113 112 116 13 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printTQ") [flags 0x3]  <function_decl 0x7f506060af00 printTQ>) [0 printTQ S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "timer.c":304:5 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 116 113 117 13 (clobber (reg/i:SI 0 r0)) "timer.c":308:1 -1
     (nil))
(insn 117 116 120 13 (clobber (reg:SI 122 [ <retval> ])) "timer.c":308:1 -1
     (nil))
(insn 120 117 115 13 (const_int 0 [0]) "timer.c":308:1 311 {nop}
     (nil))
(insn 115 120 118 13 (set (reg/i:SI 0 r0)
        (reg:SI 122 [ <retval> ])) "timer.c":308:1 253 {*arm_movsi_insn}
     (nil))
(insn 118 115 0 13 (use (reg/i:SI 0 r0)) "timer.c":308:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)

