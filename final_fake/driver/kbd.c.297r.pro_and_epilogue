
;; Function kbd_init (kbd_init, funcdef_no=0, decl_uid=4487, cgraph_uid=1, symbol_order=10)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 8 n_edges 9 count 9 (  1.1)
scanning new insn with uid = 96.
scanning new insn with uid = 97.
scanning new insn with uid = 98.
scanning new insn with uid = 99.
scanning new insn with uid = 90.
scanning new insn with uid = 91.
scanning new insn with uid = 92.
scanning new insn with uid = 93.
verify found no changes in insn with uid = 45.
verify found no changes in insn with uid = 64.
verify found no changes in insn with uid = 78.


try_optimize_cfg iteration 1

Merging block 3 into block 2...
changing bb of uid 87
  from 3 to 2
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns


kbd_init

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 11 [fp] 13 [sp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={9d,5u} r1={6d,2u} r2={16d,12u} r3={32d,29u} r11={3d,22u} r12={6d} r13={5d,21u} r14={4d,2u} r15={4d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={5d,2u} r101={3d} r102={1d,1u} r104={3d} r105={3d} r106={3d} 
;;    total ref usage 451{355d,96u,0e} in 79{76 regular + 3 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(note 3 1 90 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 90 3 91 2 (parallel [
            (set (mem/c:BLK (pre_modify:SI (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -8 [0xfffffffffffffff8]))) [5  A8])
                (unspec:BLK [
                        (reg/f:SI 11 fp)
                    ] UNSPEC_PUSH_MULT))
            (use (reg:SI 14 lr))
        ]) "kbd.c":56:1 -1
     (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                (set/f (reg/f:SI 13 sp)
                    (plus:SI (reg/f:SI 13 sp)
                        (const_int -8 [0xfffffffffffffff8])))
                (set/f (mem/c:SI (reg/f:SI 13 sp) [5  S4 A32])
                    (reg/f:SI 11 fp))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 4 [0x4])) [5  S4 A32])
                    (reg:SI 14 lr))
            ])
        (nil)))
(insn/f 91 90 92 2 (set (reg/f:SI 11 fp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 4 [0x4]))) "kbd.c":56:1 -1
     (nil))
(insn/f 92 91 93 2 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -8 [0xfffffffffffffff8]))) "kbd.c":56:1 -1
     (nil))
(insn 93 92 94 2 (set (mem:BLK (scratch) [0  A8])
        (unspec:BLK [
                (reg/f:SI 13 sp)
                (reg/f:SI 11 fp)
            ] UNSPEC_PRLG_STK)) "kbd.c":56:1 -1
     (nil))
(note 94 93 2 2 NOTE_INSN_PROLOGUE_END)
(note 2 94 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 3 r3 [126])
        (symbol_ref:SI ("keyset") [flags 0x2]  <var_decl 0x7fcdc0b1a870 keyset>)) "kbd.c":58:10 253 {*arm_movsi_insn}
     (nil))
(insn 6 5 7 2 (set (reg:SI 2 r2 [127])
        (const_int 1 [0x1])) "kbd.c":58:10 253 {*arm_movsi_insn}
     (nil))
(insn 7 6 8 2 (set (mem/v/c:SI (reg/f:SI 3 r3 [126]) [3 keyset+0 S4 A32])
        (reg:SI 2 r2 [127])) "kbd.c":58:10 253 {*arm_movsi_insn}
     (nil))
(insn 8 7 9 2 (set (reg/f:SI 3 r3 [128])
        (symbol_ref:SI ("kbd") [flags 0x2]  <var_decl 0x7fcdc0b1a5a0 kbd>)) "kbd.c":60:8 253 {*arm_movsi_insn}
     (nil))
(insn 9 8 10 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])
        (reg/f:SI 3 r3 [128])) "kbd.c":60:8 253 {*arm_movsi_insn}
     (nil))
(insn 10 9 11 2 (set (reg/f:SI 3 r3 [129])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":61:12 253 {*arm_movsi_insn}
     (nil))
(insn 11 10 12 2 (set (reg:SI 2 r2 [130])
        (const_int 268460032 [0x10006000])) "kbd.c":61:12 253 {*arm_movsi_insn}
     (nil))
(insn 12 11 13 2 (set (mem/v/f:SI (reg/f:SI 3 r3 [129]) [2 kp_16->base+0 S4 A32])
        (reg:SI 2 r2 [130])) "kbd.c":61:12 253 {*arm_movsi_insn}
     (nil))
(insn 13 12 14 2 (set (reg/f:SI 3 r3 [131])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":62:7 253 {*arm_movsi_insn}
     (nil))
(insn 14 13 15 2 (set (reg/f:SI 3 r3 [orig:113 _1 ] [113])
        (mem/v/f:SI (reg/f:SI 3 r3 [131]) [2 kp_16->base+0 S4 A32])) "kbd.c":62:7 253 {*arm_movsi_insn}
     (nil))
(insn 15 14 17 2 (set (reg:SI 2 r2 [132])
        (const_int 16 [0x10])) "kbd.c":62:23 253 {*arm_movsi_insn}
     (nil))
(insn 17 15 18 2 (set (mem:QI (reg/f:SI 3 r3 [orig:113 _1 ] [113]) [0 *_1+0 S1 A8])
        (reg:QI 2 r2 [133])) "kbd.c":62:23 263 {*arm_movqi_insn}
     (nil))
(insn 18 17 19 2 (set (reg/f:SI 3 r3 [134])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":63:7 253 {*arm_movsi_insn}
     (nil))
(insn 19 18 20 2 (set (reg/f:SI 3 r3 [orig:114 _2 ] [114])
        (mem/v/f:SI (reg/f:SI 3 r3 [134]) [2 kp_16->base+0 S4 A32])) "kbd.c":63:7 253 {*arm_movsi_insn}
     (nil))
(insn 20 19 21 2 (set (reg/f:SI 3 r3 [orig:115 _3 ] [115])
        (plus:SI (reg/f:SI 3 r3 [orig:114 _2 ] [114])
            (const_int 12 [0xc]))) "kbd.c":63:14 7 {*arm_addsi3}
     (nil))
(insn 21 20 23 2 (set (reg:SI 2 r2 [135])
        (const_int 8 [0x8])) "kbd.c":63:23 253 {*arm_movsi_insn}
     (nil))
(insn 23 21 24 2 (set (mem:QI (reg/f:SI 3 r3 [orig:115 _3 ] [115]) [0 *_3+0 S1 A8])
        (reg:QI 2 r2 [136])) "kbd.c":63:23 263 {*arm_movqi_insn}
     (nil))
(insn 24 23 25 2 (set (reg:SI 3 r3 [orig:116 _4 ] [116])
        (const_int 0 [0])) "kbd.c":64:23 253 {*arm_movsi_insn}
     (nil))
(insn 25 24 26 2 (set (reg/f:SI 2 r2 [137])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":64:23 253 {*arm_movsi_insn}
     (nil))
(insn 26 25 27 2 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [137])
                (const_int 136 [0x88])) [3 kp_16->tail+0 S4 A32])
        (reg:SI 3 r3 [orig:116 _4 ] [116])) "kbd.c":64:23 253 {*arm_movsi_insn}
     (nil))
(insn 27 26 28 2 (set (reg/f:SI 2 r2 [138])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":64:12 253 {*arm_movsi_insn}
     (nil))
(insn 28 27 29 2 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [138])
                (const_int 132 [0x84])) [3 kp_16->head+0 S4 A32])
        (reg:SI 3 r3 [orig:116 _4 ] [116])) "kbd.c":64:12 253 {*arm_movsi_insn}
     (nil))
(insn 29 28 30 2 (set (reg/f:SI 3 r3 [139])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":65:12 253 {*arm_movsi_insn}
     (nil))
(insn 30 29 31 2 (set (reg:SI 2 r2 [140])
        (const_int 0 [0])) "kbd.c":65:12 253 {*arm_movsi_insn}
     (nil))
(insn 31 30 32 2 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [139])
                (const_int 140 [0x8c])) [3 kp_16->data+0 S4 A32])
        (reg:SI 2 r2 [140])) "kbd.c":65:12 253 {*arm_movsi_insn}
     (nil))
(insn 32 31 33 2 (set (reg/f:SI 3 r3 [141])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":65:26 253 {*arm_movsi_insn}
     (nil))
(insn 33 32 34 2 (set (reg:SI 2 r2 [142])
        (const_int 128 [0x80])) "kbd.c":65:26 253 {*arm_movsi_insn}
     (nil))
(insn 34 33 35 2 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                (const_int 144 [0x90])) [3 kp_16->room+0 S4 A32])
        (reg:SI 2 r2 [142])) "kbd.c":65:26 253 {*arm_movsi_insn}
     (nil))
(insn 35 34 36 2 (set (reg/f:SI 3 r3 [143])
        (symbol_ref:SI ("shifted") [flags 0x2]  <var_decl 0x7fcdc0b1a630 shifted>)) "kbd.c":66:11 253 {*arm_movsi_insn}
     (nil))
(insn 36 35 37 2 (set (reg:SI 2 r2 [144])
        (const_int 0 [0])) "kbd.c":66:11 253 {*arm_movsi_insn}
     (nil))
(insn 37 36 38 2 (set (mem/c:SI (reg/f:SI 3 r3 [143]) [3 shifted+0 S4 A32])
        (reg:SI 2 r2 [144])) "kbd.c":66:11 253 {*arm_movsi_insn}
     (nil))
(insn 38 37 39 2 (set (reg/f:SI 3 r3 [145])
        (symbol_ref:SI ("release") [flags 0x2]  <var_decl 0x7fcdc0b1a6c0 release>)) "kbd.c":67:11 253 {*arm_movsi_insn}
     (nil))
(insn 39 38 40 2 (set (reg:SI 2 r2 [146])
        (const_int 0 [0])) "kbd.c":67:11 253 {*arm_movsi_insn}
     (nil))
(insn 40 39 41 2 (set (mem/c:SI (reg/f:SI 3 r3 [145]) [3 release+0 S4 A32])
        (reg:SI 2 r2 [146])) "kbd.c":67:11 253 {*arm_movsi_insn}
     (nil))
(insn 41 40 42 2 (set (reg/f:SI 3 r3 [147])
        (symbol_ref:SI ("control") [flags 0x2]  <var_decl 0x7fcdc0b1a750 control>)) "kbd.c":68:11 253 {*arm_movsi_insn}
     (nil))
(insn 42 41 43 2 (set (reg:SI 2 r2 [148])
        (const_int 0 [0])) "kbd.c":68:11 253 {*arm_movsi_insn}
     (nil))
(insn 43 42 44 2 (set (mem/c:SI (reg/f:SI 3 r3 [147]) [3 control+0 S4 A32])
        (reg:SI 2 r2 [148])) "kbd.c":68:11 253 {*arm_movsi_insn}
     (nil))
(insn 44 43 45 2 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x7fcdc0b61870 *.LC0>)) "kbd.c":70:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 45 44 87 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kprintf") [flags 0x41]  <function_decl 0x7fcdc0b13a00 kprintf>) [0 kprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "kbd.c":70:3 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 87 45 53 2 (const_int 0 [0]) "kbd.c":71:8 311 {nop}
     (nil))
;;  succ:       4 [always]  (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 2, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [always]  (FALLTHRU)
;;              4 (DFS_BACK)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(code_label 53 87 46 4 2 (nil) [1 uses])
(note 46 53 47 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 4 (set (reg/f:SI 3 r3 [149])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":71:15 253 {*arm_movsi_insn}
     (nil))
(insn 48 47 49 4 (set (reg/f:SI 3 r3 [orig:117 _5 ] [117])
        (mem/v/f:SI (reg/f:SI 3 r3 [149]) [2 kp_16->base+0 S4 A32])) "kbd.c":71:15 253 {*arm_movsi_insn}
     (nil))
(insn 49 48 50 4 (set (reg/f:SI 3 r3 [orig:118 _6 ] [118])
        (plus:SI (reg/f:SI 3 r3 [orig:117 _5 ] [117])
            (const_int 4 [0x4]))) "kbd.c":71:22 7 {*arm_addsi3}
     (nil))
(insn 50 49 52 4 (set (reg:SI 3 r3 [orig:119 _7 ] [119])
        (zero_extend:SI (mem:QI (reg/f:SI 3 r3 [orig:118 _6 ] [118]) [0 *_6+0 S1 A8]))) "kbd.c":71:11 175 {*arm_zero_extendqisi2}
     (nil))
(insn 52 50 54 4 (set (reg:SI 3 r3 [orig:121 _9 ] [121])
        (and:SI (reg:SI 3 r3 [orig:120 _8 ] [120])
            (const_int 16 [0x10]))) "kbd.c":71:31 90 {*arm_andsi3_insn}
     (nil))
(insn 54 52 55 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:121 _9 ] [121])
            (const_int 0 [0]))) "kbd.c":71:39 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 55 54 56 4 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 53)
            (pc))) "kbd.c":71:39 273 {arm_cond_branch}
     (nil)
 -> 53)
;;  succ:       4 (DFS_BACK)
;;              5 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(note 56 55 57 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 5 (set (reg/f:SI 3 r3 [150])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":72:15 253 {*arm_movsi_insn}
     (nil))
(insn 58 57 59 5 (set (reg/f:SI 3 r3 [orig:122 _10 ] [122])
        (mem/v/f:SI (reg/f:SI 3 r3 [150]) [2 kp_16->base+0 S4 A32])) "kbd.c":72:15 253 {*arm_movsi_insn}
     (nil))
(insn 59 58 60 5 (set (reg:QI 3 r3 [151])
        (mem:QI (plus:SI (reg/f:SI 3 r3 [orig:122 _10 ] [122])
                (const_int 8 [0x8])) [0 MEM[(char *)_10 + 8B]+0 S1 A8])) "kbd.c":72:9 263 {*arm_movqi_insn}
     (nil))
(insn 60 59 61 5 (set (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                (const_int -9 [0xfffffffffffffff7])) [0 scode+0 S1 A8])
        (reg:QI 3 r3 [151])) "kbd.c":72:9 263 {*arm_movqi_insn}
     (nil))
(insn 61 60 62 5 (set (reg:SI 3 r3 [orig:123 _11 ] [123])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -9 [0xfffffffffffffff7])) [0 scode+0 S1 A8]))) "kbd.c":73:3 175 {*arm_zero_extendqisi2}
     (nil))
(insn 62 61 63 5 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [orig:123 _11 ] [123])) "kbd.c":73:3 253 {*arm_movsi_insn}
     (nil))
(insn 63 62 64 5 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x7fcdc0b61900 *.LC1>)) "kbd.c":73:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 64 63 65 5 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kprintf") [flags 0x41]  <function_decl 0x7fcdc0b13a00 kprintf>) [0 kprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "kbd.c":73:3 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 65 64 66 5 (set (reg:SI 3 r3 [152])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -9 [0xfffffffffffffff7])) [0 scode+0 S1 A8]))) "kbd.c":74:6 175 {*arm_zero_extendqisi2}
     (nil))
(insn 66 65 67 5 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [152])
            (const_int 90 [0x5a]))) "kbd.c":74:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 67 66 68 5 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 72)
            (pc))) "kbd.c":74:6 273 {arm_cond_branch}
     (nil)
 -> 72)
;;  succ:       6 (FALLTHRU)
;;              7
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
(note 68 67 69 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 6 (set (reg/f:SI 3 r3 [153])
        (symbol_ref:SI ("keyset") [flags 0x2]  <var_decl 0x7fcdc0b1a870 keyset>)) "kbd.c":75:11 253 {*arm_movsi_insn}
     (nil))
(insn 70 69 71 6 (set (reg:SI 2 r2 [154])
        (const_int 2 [0x2])) "kbd.c":75:11 253 {*arm_movsi_insn}
     (nil))
(insn 71 70 72 6 (set (mem/v/c:SI (reg/f:SI 3 r3 [153]) [3 keyset+0 S4 A32])
        (reg:SI 2 r2 [154])) "kbd.c":75:11 253 {*arm_movsi_insn}
     (nil))
;;  succ:       7 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5
;;              6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(code_label 72 71 73 7 3 (nil) [1 uses])
(note 73 72 74 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 75 7 (set (reg/f:SI 3 r3 [155])
        (symbol_ref:SI ("keyset") [flags 0x2]  <var_decl 0x7fcdc0b1a870 keyset>)) "kbd.c":76:3 253 {*arm_movsi_insn}
     (nil))
(insn 75 74 76 7 (set (reg:SI 3 r3 [orig:124 keyset.0_12 ] [124])
        (mem/v/c:SI (reg/f:SI 3 r3 [155]) [3 keyset+0 S4 A32])) "kbd.c":76:3 253 {*arm_movsi_insn}
     (nil))
(insn 76 75 77 7 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [orig:124 keyset.0_12 ] [124])) "kbd.c":76:3 253 {*arm_movsi_insn}
     (nil))
(insn 77 76 78 7 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC2") [flags 0x2]  <var_decl 0x7fcdc0b61990 *.LC2>)) "kbd.c":76:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 78 77 81 7 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kprintf") [flags 0x41]  <function_decl 0x7fcdc0b13a00 kprintf>) [0 kprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "kbd.c":76:3 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 81 78 82 7 (clobber (reg/i:SI 0 r0)) "kbd.c":77:1 -1
     (nil))
(insn 82 81 85 7 (clobber (reg:SI 3 r3 [orig:125 <retval> ] [125])) "kbd.c":77:1 -1
     (nil))
(insn 85 82 80 7 (const_int 0 [0]) "kbd.c":77:1 311 {nop}
     (nil))
(insn 80 85 83 7 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:125 <retval> ] [125])) "kbd.c":77:1 253 {*arm_movsi_insn}
     (nil))
(insn 83 80 95 7 (use (reg/i:SI 0 r0)) "kbd.c":77:1 -1
     (nil))
(note 95 83 96 7 NOTE_INSN_EPILOGUE_BEG)
(insn 96 95 97 7 (unspec_volatile [
            (const_int 0 [0])
        ] VUNSPEC_BLOCKAGE) "kbd.c":77:1 -1
     (nil))
(insn/f 97 96 98 7 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 11 fp)
            (const_int -4 [0xfffffffffffffffc]))) "kbd.c":77:1 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 13 sp)
            (plus:SI (reg/f:SI 11 fp)
                (const_int -4 [0xfffffffffffffffc])))
        (nil)))
(insn 98 97 99 7 (unspec:SI [
            (reg/f:SI 13 sp)
        ] UNSPEC_REGISTER_USE) "kbd.c":77:1 -1
     (nil))
(jump_insn 99 98 100 7 (parallel [
            (return)
            (set/f (reg/f:SI 13 sp)
                (plus:SI (reg/f:SI 13 sp)
                    (const_int 8 [0x8])))
            (set/f (reg/f:SI 11 fp)
                (mem/c:SI (reg/f:SI 13 sp) [5  S4 A32]))
            (set/f (reg:SI 15 pc)
                (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                        (const_int 4 [0x4])) [5  S4 A32]))
        ]) "kbd.c":77:1 -1
     (expr_list:REG_CFA_RESTORE (reg/f:SI 11 fp)
        (nil))
 -> return)
;;  succ:       EXIT [always] 
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp]

(barrier 100 99 89)
(note 89 100 0 NOTE_INSN_DELETED)

;; Function doF1 (doF1, funcdef_no=1, decl_uid=4503, cgraph_uid=2, symbol_order=16)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
scanning new insn with uid = 23.
scanning new insn with uid = 19.
scanning new insn with uid = 20.
verify found no changes in insn with uid = 10.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns


doF1

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 11 [fp] 13 [sp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;;  ref usage 	r0={5d,3u} r1={3d,1u} r2={2d} r3={6d,4u} r11={2d,3u} r12={2d} r13={2d,6u} r14={2d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d,1u} r104={1d} r105={1d} r106={1d} 
;;    total ref usage 135{115d,20u,0e} in 14{13 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(note 3 1 19 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 19 3 20 2 (parallel [
            (set (mem/c:BLK (pre_modify:SI (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -8 [0xfffffffffffffff8]))) [5  A8])
                (unspec:BLK [
                        (reg/f:SI 11 fp)
                    ] UNSPEC_PUSH_MULT))
            (use (reg:SI 14 lr))
        ]) "kbd.c":104:1 -1
     (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                (set/f (reg/f:SI 13 sp)
                    (plus:SI (reg/f:SI 13 sp)
                        (const_int -8 [0xfffffffffffffff8])))
                (set/f (mem/c:SI (reg/f:SI 13 sp) [5  S4 A32])
                    (reg/f:SI 11 fp))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 4 [0x4])) [5  S4 A32])
                    (reg:SI 14 lr))
            ])
        (nil)))
(insn/f 20 19 21 2 (set (reg/f:SI 11 fp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 4 [0x4]))) "kbd.c":104:1 -1
     (nil))
(note 21 20 2 2 NOTE_INSN_PROLOGUE_END)
(note 2 21 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 3 r3 [116])
        (symbol_ref:SI ("running") [flags 0x40]  <var_decl 0x7fcdc17fe7e0 running>)) "kbd.c":105:33 253 {*arm_movsi_insn}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 3 r3 [orig:113 running.1_1 ] [113])
        (mem/f/c:SI (reg/f:SI 3 r3 [116]) [6 running+0 S4 A32])) "kbd.c":105:33 253 {*arm_movsi_insn}
     (nil))
(insn 7 6 8 2 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [orig:113 running.1_1 ] [113])
                (const_int 24 [0x18])) [3 running.1_1->pid+0 S4 A32])) "kbd.c":105:3 253 {*arm_movsi_insn}
     (nil))
(insn 8 7 9 2 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [orig:114 _2 ] [114])) "kbd.c":105:3 253 {*arm_movsi_insn}
     (nil))
(insn 9 8 10 2 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC3") [flags 0x2]  <var_decl 0x7fcdc0b61ab0 *.LC3>)) "kbd.c":105:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 10 9 13 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kprintf") [flags 0x41]  <function_decl 0x7fcdc0b13a00 kprintf>) [0 kprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "kbd.c":105:3 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 13 10 14 2 (clobber (reg/i:SI 0 r0)) "kbd.c":106:1 -1
     (nil))
(insn 14 13 17 2 (clobber (reg:SI 3 r3 [orig:115 <retval> ] [115])) "kbd.c":106:1 -1
     (nil))
(insn 17 14 12 2 (const_int 0 [0]) "kbd.c":106:1 311 {nop}
     (nil))
(insn 12 17 15 2 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:115 <retval> ] [115])) "kbd.c":106:1 253 {*arm_movsi_insn}
     (nil))
(insn 15 12 22 2 (use (reg/i:SI 0 r0)) "kbd.c":106:1 -1
     (nil))
(note 22 15 23 2 NOTE_INSN_EPILOGUE_BEG)
(jump_insn 23 22 24 2 (return) "kbd.c":106:1 -1
     (nil)
 -> return)
;;  succ:       EXIT [always] 
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp]

(barrier 24 23 18)
(note 18 24 0 NOTE_INSN_DELETED)

;; Function doF2 (doF2, funcdef_no=2, decl_uid=4506, cgraph_uid=3, symbol_order=17)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
scanning new insn with uid = 21.
scanning new insn with uid = 17.
scanning new insn with uid = 18.
verify found no changes in insn with uid = 8.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns


doF2

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 11 [fp] 13 [sp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  regs ever live 	 0 [r0] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;;  ref usage 	r0={5d,3u} r1={2d} r2={2d} r3={5d,3u} r11={2d,3u} r12={2d} r13={2d,6u} r14={2d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d,1u} r104={1d} r105={1d} r106={1d} 
;;    total ref usage 131{113d,18u,0e} in 12{11 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(note 3 1 17 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 17 3 18 2 (parallel [
            (set (mem/c:BLK (pre_modify:SI (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -8 [0xfffffffffffffff8]))) [5  A8])
                (unspec:BLK [
                        (reg/f:SI 11 fp)
                    ] UNSPEC_PUSH_MULT))
            (use (reg:SI 14 lr))
        ]) "kbd.c":108:1 -1
     (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                (set/f (reg/f:SI 13 sp)
                    (plus:SI (reg/f:SI 13 sp)
                        (const_int -8 [0xfffffffffffffff8])))
                (set/f (mem/c:SI (reg/f:SI 13 sp) [5  S4 A32])
                    (reg/f:SI 11 fp))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 4 [0x4])) [5  S4 A32])
                    (reg:SI 14 lr))
            ])
        (nil)))
(insn/f 18 17 19 2 (set (reg/f:SI 11 fp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 4 [0x4]))) "kbd.c":108:1 -1
     (nil))
(note 19 18 2 2 NOTE_INSN_PROLOGUE_END)
(note 2 19 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 3 r3 [115])
        (symbol_ref:SI ("readyQueue") [flags 0x40]  <var_decl 0x7fcdc17fe6c0 readyQueue>)) "kbd.c":109:5 253 {*arm_movsi_insn}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 3 r3 [orig:113 readyQueue.2_1 ] [113])
        (mem/f/c:SI (reg/f:SI 3 r3 [115]) [6 readyQueue+0 S4 A32])) "kbd.c":109:5 253 {*arm_movsi_insn}
     (nil))
(insn 7 6 8 2 (set (reg:SI 0 r0)
        (reg/f:SI 3 r3 [orig:113 readyQueue.2_1 ] [113])) "kbd.c":109:5 253 {*arm_movsi_insn}
     (nil))
(call_insn 8 7 11 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printQ") [flags 0x41]  <function_decl 0x7fcdc0b13200 printQ>) [0 printQ S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "kbd.c":109:5 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 11 8 12 2 (clobber (reg/i:SI 0 r0)) "kbd.c":110:1 -1
     (nil))
(insn 12 11 15 2 (clobber (reg:SI 3 r3 [orig:114 <retval> ] [114])) "kbd.c":110:1 -1
     (nil))
(insn 15 12 10 2 (const_int 0 [0]) "kbd.c":110:1 311 {nop}
     (nil))
(insn 10 15 13 2 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:114 <retval> ] [114])) "kbd.c":110:1 253 {*arm_movsi_insn}
     (nil))
(insn 13 10 20 2 (use (reg/i:SI 0 r0)) "kbd.c":110:1 -1
     (nil))
(note 20 13 21 2 NOTE_INSN_EPILOGUE_BEG)
(jump_insn 21 20 22 2 (return) "kbd.c":110:1 -1
     (nil)
 -> return)
;;  succ:       EXIT [always] 
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp]

(barrier 22 21 16)
(note 16 22 0 NOTE_INSN_DELETED)

;; Function doF3 (doF3, funcdef_no=3, decl_uid=4508, cgraph_uid=4, symbol_order=18)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
scanning new insn with uid = 21.
scanning new insn with uid = 17.
scanning new insn with uid = 18.
verify found no changes in insn with uid = 8.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns


doF3

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 11 [fp] 13 [sp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  regs ever live 	 0 [r0] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;;  ref usage 	r0={5d,3u} r1={2d} r2={2d} r3={5d,3u} r11={2d,3u} r12={2d} r13={2d,6u} r14={2d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d,1u} r104={1d} r105={1d} r106={1d} 
;;    total ref usage 131{113d,18u,0e} in 12{11 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(note 3 1 17 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 17 3 18 2 (parallel [
            (set (mem/c:BLK (pre_modify:SI (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -8 [0xfffffffffffffff8]))) [5  A8])
                (unspec:BLK [
                        (reg/f:SI 11 fp)
                    ] UNSPEC_PUSH_MULT))
            (use (reg:SI 14 lr))
        ]) "kbd.c":112:1 -1
     (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                (set/f (reg/f:SI 13 sp)
                    (plus:SI (reg/f:SI 13 sp)
                        (const_int -8 [0xfffffffffffffff8])))
                (set/f (mem/c:SI (reg/f:SI 13 sp) [5  S4 A32])
                    (reg/f:SI 11 fp))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 4 [0x4])) [5  S4 A32])
                    (reg:SI 14 lr))
            ])
        (nil)))
(insn/f 18 17 19 2 (set (reg/f:SI 11 fp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 4 [0x4]))) "kbd.c":112:1 -1
     (nil))
(note 19 18 2 2 NOTE_INSN_PROLOGUE_END)
(note 2 19 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 3 r3 [115])
        (symbol_ref:SI ("sleepList") [flags 0x40]  <var_decl 0x7fcdc17fe750 sleepList>)) "kbd.c":113:3 253 {*arm_movsi_insn}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 3 r3 [orig:113 sleepList.3_1 ] [113])
        (mem/f/c:SI (reg/f:SI 3 r3 [115]) [6 sleepList+0 S4 A32])) "kbd.c":113:3 253 {*arm_movsi_insn}
     (nil))
(insn 7 6 8 2 (set (reg:SI 0 r0)
        (reg/f:SI 3 r3 [orig:113 sleepList.3_1 ] [113])) "kbd.c":113:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 8 7 11 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printSleepList") [flags 0x41]  <function_decl 0x7fcdc0b13300 printSleepList>) [0 printSleepList S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "kbd.c":113:3 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 11 8 12 2 (clobber (reg/i:SI 0 r0)) "kbd.c":114:1 -1
     (nil))
(insn 12 11 15 2 (clobber (reg:SI 3 r3 [orig:114 <retval> ] [114])) "kbd.c":114:1 -1
     (nil))
(insn 15 12 10 2 (const_int 0 [0]) "kbd.c":114:1 311 {nop}
     (nil))
(insn 10 15 13 2 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:114 <retval> ] [114])) "kbd.c":114:1 253 {*arm_movsi_insn}
     (nil))
(insn 13 10 20 2 (use (reg/i:SI 0 r0)) "kbd.c":114:1 -1
     (nil))
(note 20 13 21 2 NOTE_INSN_EPILOGUE_BEG)
(jump_insn 21 20 22 2 (return) "kbd.c":114:1 -1
     (nil)
 -> return)
;;  succ:       EXIT [always] 
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp]

(barrier 22 21 16)
(note 16 22 0 NOTE_INSN_DELETED)

;; Function doF4 (doF4, funcdef_no=4, decl_uid=4510, cgraph_uid=5, symbol_order=19)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
scanning new insn with uid = 18.
scanning new insn with uid = 14.
scanning new insn with uid = 15.
verify found no changes in insn with uid = 5.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns


doF4

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 11 [fp] 13 [sp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  regs ever live 	 0 [r0] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;;  ref usage 	r0={4d,2u} r1={2d} r2={2d} r3={3d,1u} r11={2d,3u} r12={2d} r13={2d,6u} r14={2d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d,1u} r104={1d} r105={1d} r106={1d} 
;;    total ref usage 125{110d,15u,0e} in 9{8 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(note 3 1 14 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 14 3 15 2 (parallel [
            (set (mem/c:BLK (pre_modify:SI (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -8 [0xfffffffffffffff8]))) [5  A8])
                (unspec:BLK [
                        (reg/f:SI 11 fp)
                    ] UNSPEC_PUSH_MULT))
            (use (reg:SI 14 lr))
        ]) "kbd.c":116:1 -1
     (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                (set/f (reg/f:SI 13 sp)
                    (plus:SI (reg/f:SI 13 sp)
                        (const_int -8 [0xfffffffffffffff8])))
                (set/f (mem/c:SI (reg/f:SI 13 sp) [5  S4 A32])
                    (reg/f:SI 11 fp))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 4 [0x4])) [5  S4 A32])
                    (reg:SI 14 lr))
            ])
        (nil)))
(insn/f 15 14 16 2 (set (reg/f:SI 11 fp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 4 [0x4]))) "kbd.c":116:1 -1
     (nil))
(note 16 15 2 2 NOTE_INSN_PROLOGUE_END)
(note 2 16 5 2 NOTE_INSN_FUNCTION_BEG)
(call_insn 5 2 8 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kps") [flags 0x41]  <function_decl 0x7fcdc0b26500 kps>) [0 kps S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "kbd.c":117:3 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 8 5 9 2 (clobber (reg/i:SI 0 r0)) "kbd.c":118:1 -1
     (nil))
(insn 9 8 12 2 (clobber (reg:SI 3 r3 [orig:113 <retval> ] [113])) "kbd.c":118:1 -1
     (nil))
(insn 12 9 7 2 (const_int 0 [0]) "kbd.c":118:1 311 {nop}
     (nil))
(insn 7 12 10 2 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:113 <retval> ] [113])) "kbd.c":118:1 253 {*arm_movsi_insn}
     (nil))
(insn 10 7 17 2 (use (reg/i:SI 0 r0)) "kbd.c":118:1 -1
     (nil))
(note 17 10 18 2 NOTE_INSN_EPILOGUE_BEG)
(jump_insn 18 17 19 2 (return) "kbd.c":118:1 -1
     (nil)
 -> return)
;;  succ:       EXIT [always] 
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp]

(barrier 19 18 13)
(note 13 19 0 NOTE_INSN_DELETED)

;; Function kbd_handler1 (kbd_handler1, funcdef_no=5, decl_uid=4514, cgraph_uid=6, symbol_order=20)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 85 n_edges 129 count 90 (  1.1)
scanning new insn with uid = 665.
scanning new insn with uid = 666.
scanning new insn with uid = 667.
scanning new insn with uid = 668.
scanning new insn with uid = 659.
scanning new insn with uid = 660.
scanning new insn with uid = 661.
scanning new insn with uid = 662.
verify found no changes in insn with uid = 178.
verify found no changes in insn with uid = 307.
verify found no changes in insn with uid = 316.
verify found no changes in insn with uid = 325.
verify found no changes in insn with uid = 334.
verify found no changes in insn with uid = 457.
verify found no changes in insn with uid = 565.
verify found no changes in insn with uid = 576.


try_optimize_cfg iteration 1

Merging block 84 into block 83...
changing bb of uid 656
  from 84 to 83
changing bb of uid 664
  unscanned insn
changing bb of uid 665
  from 84 to 83
changing bb of uid 666
  from 84 to 83
changing bb of uid 667
  from 84 to 83
changing bb of uid 668
  from 84 to 83
Merged blocks 83 and 84.
Merged 83 and 84 without moving.


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns


kbd_handler1

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 11 [fp] 13 [sp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={15d,7u} r1={18d,9u} r2={56d,59u,12e} r3={194d,193u} r11={3d,170u} r12={16d} r13={5d,103u} r14={9d,2u} r15={9d} r16={8d} r17={8d} r18={8d} r19={8d} r20={8d} r21={8d} r22={8d} r23={8d} r24={8d} r25={8d} r26={8d} r27={8d} r28={8d} r29={8d} r30={8d} r31={8d} r32={8d} r33={8d} r34={8d} r35={8d} r36={8d} r37={8d} r38={8d} r39={8d} r40={8d} r41={8d} r42={8d} r43={8d} r44={8d} r45={8d} r46={8d} r47={8d} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} r53={8d} r54={8d} r55={8d} r56={8d} r57={8d} r58={8d} r59={8d} r60={8d} r61={8d} r62={8d} r63={8d} r64={8d} r65={8d} r66={8d} r67={8d} r68={8d} r69={8d} r70={8d} r71={8d} r72={8d} r73={8d} r74={8d} r75={8d} r76={8d} r77={8d} r78={8d} r79={8d} r80={8d} r81={8d} r82={8d} r83={8d} r84={8d} r85={8d} r86={8d} r87={8d} r88={8d} r89={8d} r90={8d} r91={8d} r92={8d} r93={8d} r94={8d} r95={8d} r96={8d} r97={8d} r98={8d} r99={8d} r100={56d,48u} r101={8d} r102={1d,1u} r104={8d} r105={8d} r106={8d} 
;;    total ref usage 1690{1086d,592u,12e} in 426{418 regular + 8 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(note 3 1 659 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 659 3 660 2 (parallel [
            (set (mem/c:BLK (pre_modify:SI (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -8 [0xfffffffffffffff8]))) [5  A8])
                (unspec:BLK [
                        (reg/f:SI 11 fp)
                    ] UNSPEC_PUSH_MULT))
            (use (reg:SI 14 lr))
        ]) "kbd.c":121:1 -1
     (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                (set/f (reg/f:SI 13 sp)
                    (plus:SI (reg/f:SI 13 sp)
                        (const_int -8 [0xfffffffffffffff8])))
                (set/f (mem/c:SI (reg/f:SI 13 sp) [5  S4 A32])
                    (reg/f:SI 11 fp))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 4 [0x4])) [5  S4 A32])
                    (reg:SI 14 lr))
            ])
        (nil)))
(insn/f 660 659 661 2 (set (reg/f:SI 11 fp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 4 [0x4]))) "kbd.c":121:1 -1
     (nil))
(insn/f 661 660 662 2 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -16 [0xfffffffffffffff0]))) "kbd.c":121:1 -1
     (nil))
(insn 662 661 663 2 (set (mem:BLK (scratch) [0  A8])
        (unspec:BLK [
                (reg/f:SI 13 sp)
                (reg/f:SI 11 fp)
            ] UNSPEC_PRLG_STK)) "kbd.c":121:1 -1
     (nil))
(note 663 662 2 2 NOTE_INSN_PROLOGUE_END)
(note 2 663 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 3 r3 [170])
        (symbol_ref:SI ("kbd") [flags 0x2]  <var_decl 0x7fcdc0b1a5a0 kbd>)) "kbd.c":124:8 253 {*arm_movsi_insn}
     (nil))
(insn 6 5 7 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])
        (reg/f:SI 3 r3 [170])) "kbd.c":124:8 253 {*arm_movsi_insn}
     (nil))
(insn 7 6 8 2 (set (reg/f:SI 3 r3 [171])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":126:14 253 {*arm_movsi_insn}
     (nil))
(insn 8 7 9 2 (set (reg/f:SI 3 r3 [orig:113 _1 ] [113])
        (mem/v/f:SI (reg/f:SI 3 r3 [171]) [2 kp_77->base+0 S4 A32])) "kbd.c":126:14 253 {*arm_movsi_insn}
     (nil))
(insn 9 8 10 2 (set (reg/f:SI 3 r3 [orig:114 _2 ] [114])
        (plus:SI (reg/f:SI 3 r3 [orig:113 _1 ] [113])
            (const_int 8 [0x8]))) "kbd.c":126:21 7 {*arm_addsi3}
     (nil))
(insn 10 9 11 2 (set (reg:QI 3 r3 [172])
        (mem:QI (reg/f:SI 3 r3 [orig:114 _2 ] [114]) [0 *_2+0 S1 A8])) "kbd.c":126:8 263 {*arm_movqi_insn}
     (nil))
(insn 11 10 12 2 (set (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                (const_int -13 [0xfffffffffffffff3])) [0 code+0 S1 A8])
        (reg:QI 3 r3 [172])) "kbd.c":126:8 263 {*arm_movqi_insn}
     (nil))
(insn 12 11 13 2 (set (reg:SI 3 r3 [173])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -13 [0xfffffffffffffff3])) [0 code+0 S1 A8]))) "kbd.c":135:6 175 {*arm_zero_extendqisi2}
     (nil))
(insn 13 12 14 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [173])
            (const_int 224 [0xe0]))) "kbd.c":135:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) "kbd.c":135:6 273 {arm_cond_branch}
     (nil)
 -> 21)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 3 (set (reg/f:SI 3 r3 [174])
        (symbol_ref:SI ("esc") [flags 0x2]  <var_decl 0x7fcdc0b1abd0 esc>)) "kbd.c":136:9 253 {*arm_movsi_insn}
     (nil))
(insn 17 16 18 3 (set (reg:SI 3 r3 [orig:115 esc.4_3 ] [115])
        (mem/c:SI (reg/f:SI 3 r3 [174]) [3 esc+0 S4 A32])) "kbd.c":136:9 253 {*arm_movsi_insn}
     (nil))
(insn 18 17 19 3 (set (reg:SI 3 r3 [orig:116 _4 ] [116])
        (plus:SI (reg:SI 3 r3 [orig:115 esc.4_3 ] [115])
            (const_int 1 [0x1]))) "kbd.c":136:9 7 {*arm_addsi3}
     (nil))
(insn 19 18 20 3 (set (reg/f:SI 2 r2 [175])
        (symbol_ref:SI ("esc") [flags 0x2]  <var_decl 0x7fcdc0b1abd0 esc>)) "kbd.c":136:9 253 {*arm_movsi_insn}
     (nil))
(insn 20 19 21 3 (set (mem/c:SI (reg/f:SI 2 r2 [175]) [3 esc+0 S4 A32])
        (reg:SI 3 r3 [orig:116 _4 ] [116])) "kbd.c":136:9 253 {*arm_movsi_insn}
     (nil))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(code_label 21 20 22 4 17 (nil) [1 uses])
(note 22 21 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 4 (set (reg/f:SI 3 r3 [176])
        (symbol_ref:SI ("esc") [flags 0x2]  <var_decl 0x7fcdc0b1abd0 esc>)) "kbd.c":138:7 253 {*arm_movsi_insn}
     (nil))
(insn 24 23 25 4 (set (reg:SI 3 r3 [orig:117 esc.5_5 ] [117])
        (mem/c:SI (reg/f:SI 3 r3 [176]) [3 esc+0 S4 A32])) "kbd.c":138:7 253 {*arm_movsi_insn}
     (nil))
(insn 25 24 26 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:117 esc.5_5 ] [117])
            (const_int 0 [0]))) "kbd.c":138:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 26 25 27 4 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) "kbd.c":138:6 273 {arm_cond_branch}
     (nil)
 -> 37)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(note 27 26 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 5 (set (reg/f:SI 3 r3 [177])
        (symbol_ref:SI ("esc") [flags 0x2]  <var_decl 0x7fcdc0b1abd0 esc>)) "kbd.c":138:18 253 {*arm_movsi_insn}
     (nil))
(insn 29 28 32 5 (set (reg:SI 3 r3 [orig:118 esc.6_6 ] [118])
        (mem/c:SI (reg/f:SI 3 r3 [177]) [3 esc+0 S4 A32])) "kbd.c":138:18 253 {*arm_movsi_insn}
     (nil))
(insn 32 29 33 5 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:118 esc.6_6 ] [118])
            (const_int 1 [0x1]))) "kbd.c":138:11 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 33 32 37 5 (set (pc)
        (if_then_else (le (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 623)
            (pc))) "kbd.c":138:11 273 {arm_cond_branch}
     (nil)
 -> 623)
;;  succ:       76
;;              6 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4
;;              5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(code_label 37 33 38 6 18 (nil) [1 uses])
(note 38 37 39 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 6 (set (reg/f:SI 3 r3 [178])
        (symbol_ref:SI ("esc") [flags 0x2]  <var_decl 0x7fcdc0b1abd0 esc>)) "kbd.c":141:11 253 {*arm_movsi_insn}
     (nil))
(insn 40 39 41 6 (set (reg:SI 3 r3 [orig:119 esc.7_7 ] [119])
        (mem/c:SI (reg/f:SI 3 r3 [178]) [3 esc+0 S4 A32])) "kbd.c":141:11 253 {*arm_movsi_insn}
     (nil))
(insn 41 40 42 6 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:119 esc.7_7 ] [119])
            (const_int 2 [0x2]))) "kbd.c":141:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 42 41 43 6 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 184)
            (pc))) "kbd.c":141:6 273 {arm_cond_branch}
     (nil)
 -> 184)
;;  succ:       7 (FALLTHRU)
;;              22
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(note 43 42 44 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 7 (set (reg:SI 3 r3 [179])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -13 [0xfffffffffffffff3])) [0 code+0 S1 A8]))) "kbd.c":142:8 175 {*arm_zero_extendqisi2}
     (nil))
(insn 45 44 46 7 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [179])
            (const_int 224 [0xe0]))) "kbd.c":142:8 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 46 45 51 7 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 628)
            (pc))) "kbd.c":142:8 273 {arm_cond_branch}
     (nil)
 -> 628)
;;  succ:       77
;;              8 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(note 51 46 52 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 8 (set (reg:QI 3 r3 [180])
        (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                (const_int -13 [0xfffffffffffffff3])) [0 code+0 S1 A8])) "kbd.c":147:11 263 {*arm_movqi_insn}
     (nil))
(insn 53 52 55 8 (set (reg:SI 3 r3 [181])
        (and:SI (reg:SI 3 r3 [180])
            (const_int 127 [0x7f]))) "kbd.c":147:11 90 {*arm_andsi3_insn}
     (nil))
(insn 55 53 56 8 (set (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                (const_int -13 [0xfffffffffffffff3])) [0 code+0 S1 A8])
        (reg:QI 3 r3 [182])) "kbd.c":147:11 263 {*arm_movqi_insn}
     (nil))
(insn 56 55 57 8 (set (reg:SI 3 r3 [183])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -13 [0xfffffffffffffff3])) [0 code+0 S1 A8]))) "kbd.c":149:9 175 {*arm_zero_extendqisi2}
     (nil))
(insn 57 56 58 8 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [183])
            (const_int 83 [0x53]))) "kbd.c":149:9 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 58 57 63 8 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 633)
            (pc))) "kbd.c":149:9 273 {arm_cond_branch}
     (nil)
 -> 633)
;;  succ:       78
;;              9 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(note 63 58 64 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 9 (set (reg:SI 3 r3 [184])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -13 [0xfffffffffffffff3])) [0 code+0 S1 A8]))) "kbd.c":155:9 175 {*arm_zero_extendqisi2}
     (nil))
(insn 65 64 66 9 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [184])
            (const_int 56 [0x38]))) "kbd.c":155:9 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 66 65 67 9 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 73)
            (pc))) "kbd.c":155:9 273 {arm_cond_branch}
     (nil)
 -> 73)
;;  succ:       10 (FALLTHRU)
;;              11
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
(note 67 66 68 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 69 10 (set (reg/f:SI 3 r3 [185])
        (symbol_ref:SI ("alt") [flags 0x2]  <var_decl 0x7fcdc0b1aab0 alt>)) "kbd.c":156:12 253 {*arm_movsi_insn}
     (nil))
(insn 69 68 70 10 (set (reg:SI 2 r2 [186])
        (const_int 0 [0])) "kbd.c":156:12 253 {*arm_movsi_insn}
     (nil))
(insn 70 69 590 10 (set (mem/c:SI (reg/f:SI 3 r3 [185]) [3 alt+0 S4 A32])
        (reg:SI 2 r2 [186])) "kbd.c":156:12 253 {*arm_movsi_insn}
     (nil))
(jump_insn 590 70 591 10 (set (pc)
        (label_ref 577)) "kbd.c":157:8 284 {*arm_jump}
     (nil)
 -> 577)
;;  succ:       83 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 591 590 73)
;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(code_label 73 591 74 11 23 (nil) [1 uses])
(note 74 73 75 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 11 (set (reg:SI 3 r3 [187])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -13 [0xfffffffffffffff3])) [0 code+0 S1 A8]))) "kbd.c":160:9 175 {*arm_zero_extendqisi2}
     (nil))
(insn 76 75 77 11 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [187])
            (const_int 29 [0x1d]))) "kbd.c":160:9 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 77 76 78 11 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 84)
            (pc))) "kbd.c":160:9 273 {arm_cond_branch}
     (nil)
 -> 84)
;;  succ:       12 (FALLTHRU)
;;              13
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
(note 78 77 79 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 12 (set (reg/f:SI 3 r3 [188])
        (symbol_ref:SI ("control") [flags 0x2]  <var_decl 0x7fcdc0b1a750 control>)) "kbd.c":161:16 253 {*arm_movsi_insn}
     (nil))
(insn 80 79 81 12 (set (reg:SI 2 r2 [189])
        (const_int 0 [0])) "kbd.c":161:16 253 {*arm_movsi_insn}
     (nil))
(insn 81 80 592 12 (set (mem/c:SI (reg/f:SI 3 r3 [188]) [3 control+0 S4 A32])
        (reg:SI 2 r2 [189])) "kbd.c":161:16 253 {*arm_movsi_insn}
     (nil))
(jump_insn 592 81 593 12 (set (pc)
        (label_ref 577)) "kbd.c":162:8 284 {*arm_jump}
     (nil)
 -> 577)
;;  succ:       83 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 593 592 84)
;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(code_label 84 593 85 13 24 (nil) [1 uses])
(note 85 84 86 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 87 13 (set (reg:SI 3 r3 [190])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -13 [0xfffffffffffffff3])) [0 code+0 S1 A8]))) "kbd.c":165:9 175 {*arm_zero_extendqisi2}
     (nil))
(insn 87 86 88 13 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [190])
            (const_int 72 [0x48]))) "kbd.c":165:9 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 88 87 89 13 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 93)
            (pc))) "kbd.c":165:9 273 {arm_cond_branch}
     (nil)
 -> 93)
;;  succ:       14 (FALLTHRU)
;;              15
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 14, loop depth 0, maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
(note 89 88 90 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 91 14 (set (reg/f:SI 3 r3 [191])
        (symbol_ref:SI ("escKey") [flags 0x2]  <var_decl 0x7fcdc0b1ad80 escKey>)) "kbd.c":166:15 253 {*arm_movsi_insn}
     (nil))
(insn 91 90 92 14 (set (reg:SI 2 r2 [192])
        (const_int 11 [0xb])) "kbd.c":166:15 253 {*arm_movsi_insn}
     (nil))
(insn 92 91 93 14 (set (mem/c:SI (reg/f:SI 3 r3 [191]) [3 escKey+0 S4 A32])
        (reg:SI 2 r2 [192])) "kbd.c":166:15 253 {*arm_movsi_insn}
     (nil))
;;  succ:       15 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 15, loop depth 0, maybe hot
;;  prev block 14, next block 16, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       13
;;              14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(code_label 93 92 94 15 25 (nil) [1 uses])
(note 94 93 95 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 15 (set (reg:SI 3 r3 [193])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -13 [0xfffffffffffffff3])) [0 code+0 S1 A8]))) "kbd.c":167:9 175 {*arm_zero_extendqisi2}
     (nil))
(insn 96 95 97 15 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [193])
            (const_int 80 [0x50]))) "kbd.c":167:9 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 97 96 98 15 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 102)
            (pc))) "kbd.c":167:9 273 {arm_cond_branch}
     (nil)
 -> 102)
;;  succ:       16 (FALLTHRU)
;;              17
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 16, loop depth 0, maybe hot
;;  prev block 15, next block 17, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       15 (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
(note 98 97 99 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 99 98 100 16 (set (reg/f:SI 3 r3 [194])
        (symbol_ref:SI ("escKey") [flags 0x2]  <var_decl 0x7fcdc0b1ad80 escKey>)) "kbd.c":168:15 253 {*arm_movsi_insn}
     (nil))
(insn 100 99 101 16 (set (reg:SI 2 r2 [195])
        (const_int 12 [0xc])) "kbd.c":168:15 253 {*arm_movsi_insn}
     (nil))
(insn 101 100 102 16 (set (mem/c:SI (reg/f:SI 3 r3 [194]) [3 escKey+0 S4 A32])
        (reg:SI 2 r2 [195])) "kbd.c":168:15 253 {*arm_movsi_insn}
     (nil))
;;  succ:       17 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 17, loop depth 0, maybe hot
;;  prev block 16, next block 18, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       15
;;              16 (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(code_label 102 101 103 17 26 (nil) [1 uses])
(note 103 102 104 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 104 103 105 17 (set (reg:SI 3 r3 [196])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -13 [0xfffffffffffffff3])) [0 code+0 S1 A8]))) "kbd.c":169:9 175 {*arm_zero_extendqisi2}
     (nil))
(insn 105 104 106 17 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [196])
            (const_int 75 [0x4b]))) "kbd.c":169:9 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 106 105 107 17 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 111)
            (pc))) "kbd.c":169:9 273 {arm_cond_branch}
     (nil)
 -> 111)
;;  succ:       18 (FALLTHRU)
;;              19
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 18, loop depth 0, maybe hot
;;  prev block 17, next block 19, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       17 (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
(note 107 106 108 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 108 107 109 18 (set (reg/f:SI 3 r3 [197])
        (symbol_ref:SI ("escKey") [flags 0x2]  <var_decl 0x7fcdc0b1ad80 escKey>)) "kbd.c":170:15 253 {*arm_movsi_insn}
     (nil))
(insn 109 108 110 18 (set (reg:SI 2 r2 [198])
        (const_int 13 [0xd])) "kbd.c":170:15 253 {*arm_movsi_insn}
     (nil))
(insn 110 109 111 18 (set (mem/c:SI (reg/f:SI 3 r3 [197]) [3 escKey+0 S4 A32])
        (reg:SI 2 r2 [198])) "kbd.c":170:15 253 {*arm_movsi_insn}
     (nil))
;;  succ:       19 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 19, loop depth 0, maybe hot
;;  prev block 18, next block 20, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       17
;;              18 (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(code_label 111 110 112 19 27 (nil) [1 uses])
(note 112 111 113 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 113 112 114 19 (set (reg:SI 3 r3 [199])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -13 [0xfffffffffffffff3])) [0 code+0 S1 A8]))) "kbd.c":171:9 175 {*arm_zero_extendqisi2}
     (nil))
(insn 114 113 115 19 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [199])
            (const_int 77 [0x4d]))) "kbd.c":171:9 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 115 114 116 19 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 120)
            (pc))) "kbd.c":171:9 273 {arm_cond_branch}
     (nil)
 -> 120)
;;  succ:       20 (FALLTHRU)
;;              21
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 20, loop depth 0, maybe hot
;;  prev block 19, next block 21, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       19 (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
(note 116 115 117 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 117 116 118 20 (set (reg/f:SI 3 r3 [200])
        (symbol_ref:SI ("escKey") [flags 0x2]  <var_decl 0x7fcdc0b1ad80 escKey>)) "kbd.c":172:15 253 {*arm_movsi_insn}
     (nil))
(insn 118 117 119 20 (set (reg:SI 2 r2 [201])
        (const_int 14 [0xe])) "kbd.c":172:15 253 {*arm_movsi_insn}
     (nil))
(insn 119 118 120 20 (set (mem/c:SI (reg/f:SI 3 r3 [200]) [3 escKey+0 S4 A32])
        (reg:SI 2 r2 [201])) "kbd.c":172:15 253 {*arm_movsi_insn}
     (nil))
;;  succ:       21 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 21, loop depth 0, maybe hot
;;  prev block 20, next block 22, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       19
;;              20 (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(code_label 120 119 121 21 28 (nil) [1 uses])
(note 121 120 122 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 122 121 123 21 (set (reg/f:SI 3 r3 [202])
        (symbol_ref:SI ("escKey") [flags 0x2]  <var_decl 0x7fcdc0b1ad80 escKey>)) "kbd.c":174:26 253 {*arm_movsi_insn}
     (nil))
(insn 123 122 124 21 (set (reg:SI 2 r2 [orig:120 escKey.8_8 ] [120])
        (mem/c:SI (reg/f:SI 3 r3 [202]) [3 escKey+0 S4 A32])) "kbd.c":174:26 253 {*arm_movsi_insn}
     (nil))
(insn 124 123 125 21 (set (reg/f:SI 3 r3 [203])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":174:16 253 {*arm_movsi_insn}
     (nil))
(insn 125 124 126 21 (set (reg:SI 3 r3 [orig:121 _9 ] [121])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [203])
                (const_int 132 [0x84])) [3 kp_77->head+0 S4 A32])) "kbd.c":174:16 253 {*arm_movsi_insn}
     (nil))
(insn 126 125 127 21 (set (reg:SI 0 r0 [orig:122 _11 ] [122])
        (plus:SI (reg:SI 3 r3 [orig:121 _9 ] [121])
            (const_int 1 [0x1]))) "kbd.c":174:22 7 {*arm_addsi3}
     (nil))
(insn 127 126 128 21 (set (reg/f:SI 1 r1 [204])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":174:22 253 {*arm_movsi_insn}
     (nil))
(insn 128 127 129 21 (set (mem/v:SI (plus:SI (reg/f:SI 1 r1 [204])
                (const_int 132 [0x84])) [3 kp_77->head+0 S4 A32])
        (reg:SI 0 r0 [orig:122 _11 ] [122])) "kbd.c":174:22 253 {*arm_movsi_insn}
     (nil))
(insn 129 128 130 21 (set (reg:SI 1 r1 [orig:123 _12 ] [123])
        (and:SI (reg:SI 2 r2 [orig:120 escKey.8_8 ] [120])
            (const_int 255 [0xff]))) "kbd.c":174:26 90 {*arm_andsi3_insn}
     (nil))
(insn 130 129 131 21 (set (reg/f:SI 2 r2 [205])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":174:26 253 {*arm_movsi_insn}
     (nil))
(insn 131 130 132 21 (set (reg/f:SI 3 r3 [206])
        (plus:SI (reg/f:SI 2 r2 [205])
            (reg:SI 3 r3 [orig:121 _9 ] [121]))) "kbd.c":174:26 7 {*arm_addsi3}
     (nil))
(insn 132 131 133 21 (set (reg:QI 2 r2 [207])
        (reg:QI 1 r1 [orig:123 _12 ] [123])) "kbd.c":174:26 263 {*arm_movqi_insn}
     (nil))
(insn 133 132 134 21 (set (mem/v:QI (plus:SI (reg/f:SI 3 r3 [206])
                (const_int 4 [0x4])) [0 kp_77->buf[_10]+0 S1 A8])
        (reg:QI 2 r2 [207])) "kbd.c":174:26 263 {*arm_movqi_insn}
     (nil))
(insn 134 133 135 21 (set (reg/f:SI 3 r3 [208])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":175:15 253 {*arm_movsi_insn}
     (nil))
(insn 135 134 136 21 (set (reg:SI 3 r3 [orig:124 _13 ] [124])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [208])
                (const_int 132 [0x84])) [3 kp_77->head+0 S4 A32])) "kbd.c":175:15 253 {*arm_movsi_insn}
     (nil))
(insn 136 135 137 21 (parallel [
            (set (reg:CC_NZ 100 cc)
                (compare:CC_NZ (minus:SI (const_int 0 [0])
                        (reg:SI 3 r3 [orig:124 _13 ] [124]))
                    (const_int 0 [0])))
            (set (reg:SI 2 r2 [209])
                (minus:SI (const_int 0 [0])
                    (reg:SI 3 r3 [orig:124 _13 ] [124])))
        ]) "kbd.c":175:15 46 {subsi3_compare0}
     (nil))
(insn 137 136 138 21 (set (reg:SI 3 r3 [orig:125 _14 ] [125])
        (and:SI (reg:SI 3 r3 [orig:124 _13 ] [124])
            (const_int 127 [0x7f]))) "kbd.c":175:15 90 {*arm_andsi3_insn}
     (nil))
(insn 138 137 139 21 (set (reg:SI 2 r2 [210])
        (and:SI (reg:SI 2 r2 [209])
            (const_int 127 [0x7f]))) "kbd.c":175:15 90 {*arm_andsi3_insn}
     (nil))
(insn 139 138 140 21 (set (reg:SI 3 r3 [orig:125 _14 ] [125])
        (if_then_else:SI (ge:SI (reg:CC_NZ 100 cc)
                (const_int 0 [0]))
            (neg:SI (reg:SI 2 r2 [210]))
            (reg:SI 3 r3 [orig:125 _14 ] [125]))) "kbd.c":175:15 371 {*if_neg_move}
     (nil))
(insn 140 139 141 21 (set (reg/f:SI 2 r2 [211])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":175:15 253 {*arm_movsi_insn}
     (nil))
(insn 141 140 142 21 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [211])
                (const_int 132 [0x84])) [3 kp_77->head+0 S4 A32])
        (reg:SI 3 r3 [orig:125 _14 ] [125])) "kbd.c":175:15 253 {*arm_movsi_insn}
     (nil))
(insn 142 141 143 21 (set (reg/f:SI 3 r3 [212])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":177:8 253 {*arm_movsi_insn}
     (nil))
(insn 143 142 144 21 (set (reg:SI 3 r3 [orig:126 _15 ] [126])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [212])
                (const_int 140 [0x8c])) [3 kp_77->data+0 S4 A32])) "kbd.c":177:8 253 {*arm_movsi_insn}
     (nil))
(insn 144 143 145 21 (set (reg:SI 2 r2 [orig:127 _16 ] [127])
        (plus:SI (reg:SI 3 r3 [orig:126 _15 ] [126])
            (const_int 1 [0x1]))) "kbd.c":177:14 7 {*arm_addsi3}
     (nil))
(insn 145 144 146 21 (set (reg/f:SI 3 r3 [213])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":177:14 253 {*arm_movsi_insn}
     (nil))
(insn 146 145 147 21 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [213])
                (const_int 140 [0x8c])) [3 kp_77->data+0 S4 A32])
        (reg:SI 2 r2 [orig:127 _16 ] [127])) "kbd.c":177:14 253 {*arm_movsi_insn}
     (nil))
(insn 147 146 148 21 (set (reg/f:SI 3 r3 [214])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":179:16 253 {*arm_movsi_insn}
     (nil))
(insn 148 147 149 21 (set (reg:SI 3 r3 [orig:128 _17 ] [128])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [214])
                (const_int 132 [0x84])) [3 kp_77->head+0 S4 A32])) "kbd.c":179:16 253 {*arm_movsi_insn}
     (nil))
(insn 149 148 150 21 (set (reg:SI 1 r1 [orig:129 _19 ] [129])
        (plus:SI (reg:SI 3 r3 [orig:128 _17 ] [128])
            (const_int 1 [0x1]))) "kbd.c":179:22 7 {*arm_addsi3}
     (nil))
(insn 150 149 151 21 (set (reg/f:SI 2 r2 [215])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":179:22 253 {*arm_movsi_insn}
     (nil))
(insn 151 150 152 21 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [215])
                (const_int 132 [0x84])) [3 kp_77->head+0 S4 A32])
        (reg:SI 1 r1 [orig:129 _19 ] [129])) "kbd.c":179:22 253 {*arm_movsi_insn}
     (nil))
(insn 152 151 153 21 (set (reg/f:SI 2 r2 [216])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":179:26 253 {*arm_movsi_insn}
     (nil))
(insn 153 152 154 21 (set (reg/f:SI 3 r3 [217])
        (plus:SI (reg/f:SI 2 r2 [216])
            (reg:SI 3 r3 [orig:128 _17 ] [128]))) "kbd.c":179:26 7 {*arm_addsi3}
     (nil))
(insn 154 153 156 21 (set (reg:SI 2 r2 [218])
        (const_int 10 [0xa])) "kbd.c":179:26 253 {*arm_movsi_insn}
     (nil))
(insn 156 154 157 21 (set (mem/v:QI (plus:SI (reg/f:SI 3 r3 [217])
                (const_int 4 [0x4])) [0 kp_77->buf[_18]+0 S1 A8])
        (reg:QI 2 r2 [219])) "kbd.c":179:26 263 {*arm_movqi_insn}
     (nil))
(insn 157 156 158 21 (set (reg/f:SI 3 r3 [220])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":180:15 253 {*arm_movsi_insn}
     (nil))
(insn 158 157 159 21 (set (reg:SI 3 r3 [orig:130 _20 ] [130])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [220])
                (const_int 132 [0x84])) [3 kp_77->head+0 S4 A32])) "kbd.c":180:15 253 {*arm_movsi_insn}
     (nil))
(insn 159 158 160 21 (parallel [
            (set (reg:CC_NZ 100 cc)
                (compare:CC_NZ (minus:SI (const_int 0 [0])
                        (reg:SI 3 r3 [orig:130 _20 ] [130]))
                    (const_int 0 [0])))
            (set (reg:SI 2 r2 [221])
                (minus:SI (const_int 0 [0])
                    (reg:SI 3 r3 [orig:130 _20 ] [130])))
        ]) "kbd.c":180:15 46 {subsi3_compare0}
     (nil))
(insn 160 159 161 21 (set (reg:SI 3 r3 [orig:131 _21 ] [131])
        (and:SI (reg:SI 3 r3 [orig:130 _20 ] [130])
            (const_int 127 [0x7f]))) "kbd.c":180:15 90 {*arm_andsi3_insn}
     (nil))
(insn 161 160 162 21 (set (reg:SI 2 r2 [222])
        (and:SI (reg:SI 2 r2 [221])
            (const_int 127 [0x7f]))) "kbd.c":180:15 90 {*arm_andsi3_insn}
     (nil))
(insn 162 161 163 21 (set (reg:SI 3 r3 [orig:131 _21 ] [131])
        (if_then_else:SI (ge:SI (reg:CC_NZ 100 cc)
                (const_int 0 [0]))
            (neg:SI (reg:SI 2 r2 [222]))
            (reg:SI 3 r3 [orig:131 _21 ] [131]))) "kbd.c":180:15 371 {*if_neg_move}
     (nil))
(insn 163 162 164 21 (set (reg/f:SI 2 r2 [223])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":180:15 253 {*arm_movsi_insn}
     (nil))
(insn 164 163 165 21 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [223])
                (const_int 132 [0x84])) [3 kp_77->head+0 S4 A32])
        (reg:SI 3 r3 [orig:131 _21 ] [131])) "kbd.c":180:15 253 {*arm_movsi_insn}
     (nil))
(insn 165 164 166 21 (set (reg/f:SI 3 r3 [224])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":181:8 253 {*arm_movsi_insn}
     (nil))
(insn 166 165 167 21 (set (reg:SI 3 r3 [orig:132 _22 ] [132])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [224])
                (const_int 140 [0x8c])) [3 kp_77->data+0 S4 A32])) "kbd.c":181:8 253 {*arm_movsi_insn}
     (nil))
(insn 167 166 168 21 (set (reg:SI 2 r2 [orig:133 _23 ] [133])
        (plus:SI (reg:SI 3 r3 [orig:132 _22 ] [132])
            (const_int 1 [0x1]))) "kbd.c":181:14 7 {*arm_addsi3}
     (nil))
(insn 168 167 169 21 (set (reg/f:SI 3 r3 [225])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":181:14 253 {*arm_movsi_insn}
     (nil))
(insn 169 168 170 21 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [225])
                (const_int 140 [0x8c])) [3 kp_77->data+0 S4 A32])
        (reg:SI 2 r2 [orig:133 _23 ] [133])) "kbd.c":181:14 253 {*arm_movsi_insn}
     (nil))
(insn 170 169 171 21 (set (reg/f:SI 3 r3 [226])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":181:20 253 {*arm_movsi_insn}
     (nil))
(insn 171 170 172 21 (set (reg:SI 3 r3 [orig:134 _24 ] [134])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [226])
                (const_int 144 [0x90])) [3 kp_77->room+0 S4 A32])) "kbd.c":181:20 253 {*arm_movsi_insn}
     (nil))
(insn 172 171 173 21 (set (reg:SI 2 r2 [orig:135 _25 ] [135])
        (plus:SI (reg:SI 3 r3 [orig:134 _24 ] [134])
            (const_int -1 [0xffffffffffffffff]))) "kbd.c":181:26 7 {*arm_addsi3}
     (nil))
(insn 173 172 174 21 (set (reg/f:SI 3 r3 [227])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":181:26 253 {*arm_movsi_insn}
     (nil))
(insn 174 173 175 21 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [227])
                (const_int 144 [0x90])) [3 kp_77->room+0 S4 A32])
        (reg:SI 2 r2 [orig:135 _25 ] [135])) "kbd.c":181:26 253 {*arm_movsi_insn}
     (nil))
(insn 175 174 176 21 (set (reg:SI 3 r3 [228])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":184:6 253 {*arm_movsi_insn}
     (nil))
(insn 176 175 177 21 (set (reg/f:SI 3 r3 [orig:136 _26 ] [136])
        (plus:SI (reg:SI 3 r3 [228])
            (const_int 140 [0x8c]))) "kbd.c":184:6 7 {*arm_addsi3}
     (nil))
(insn 177 176 178 21 (set (reg:SI 0 r0)
        (reg/f:SI 3 r3 [orig:136 _26 ] [136])) "kbd.c":184:6 253 {*arm_movsi_insn}
     (nil))
(call_insn 178 177 179 21 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kwakeup") [flags 0x41]  <function_decl 0x7fcdc0b26900 kwakeup>) [0 kwakeup S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "kbd.c":184:6 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 179 178 180 21 (set (reg/f:SI 3 r3 [229])
        (symbol_ref:SI ("esc") [flags 0x2]  <var_decl 0x7fcdc0b1abd0 esc>)) "kbd.c":186:10 253 {*arm_movsi_insn}
     (nil))
(insn 180 179 181 21 (set (reg:SI 2 r2 [230])
        (const_int 0 [0])) "kbd.c":186:10 253 {*arm_movsi_insn}
     (nil))
(insn 181 180 594 21 (set (mem/c:SI (reg/f:SI 3 r3 [229]) [3 esc+0 S4 A32])
        (reg:SI 2 r2 [230])) "kbd.c":186:10 253 {*arm_movsi_insn}
     (nil))
(jump_insn 594 181 595 21 (set (pc)
        (label_ref 577)) "kbd.c":187:6 284 {*arm_jump}
     (nil)
 -> 577)
;;  succ:       83 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 595 594 184)
;; basic block 22, loop depth 0, maybe hot
;;  prev block 21, next block 23, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(code_label 184 595 185 22 20 (nil) [1 uses])
(note 185 184 186 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 186 185 191 22 (set (reg:SI 3 r3 [orig:137 code.9_27 ] [137])
        (sign_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -13 [0xfffffffffffffff3])) [0 code+0 S1 A8]))) "kbd.c":190:7 183 {*arm_extendqisi}
     (nil))
(insn 191 186 192 22 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:137 code.9_27 ] [137])
            (const_int 0 [0]))) "kbd.c":190:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 192 191 193 22 (set (pc)
        (if_then_else (ge (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 232)
            (pc))) "kbd.c":190:6 273 {arm_cond_branch}
     (nil)
 -> 232)
;;  succ:       23 (FALLTHRU)
;;              30
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 23, loop depth 0, maybe hot
;;  prev block 22, next block 24, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       22 (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(note 193 192 194 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 194 193 195 23 (set (reg:QI 3 r3 [233])
        (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                (const_int -13 [0xfffffffffffffff3])) [0 code+0 S1 A8])) "kbd.c":192:10 263 {*arm_movqi_insn}
     (nil))
(insn 195 194 197 23 (set (reg:SI 3 r3 [234])
        (and:SI (reg:SI 3 r3 [233])
            (const_int 127 [0x7f]))) "kbd.c":192:10 90 {*arm_andsi3_insn}
     (nil))
(insn 197 195 198 23 (set (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                (const_int -13 [0xfffffffffffffff3])) [0 code+0 S1 A8])
        (reg:QI 3 r3 [235])) "kbd.c":192:10 263 {*arm_movqi_insn}
     (nil))
(insn 198 197 199 23 (set (reg:SI 3 r3 [236])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -13 [0xfffffffffffffff3])) [0 code+0 S1 A8]))) "kbd.c":193:8 175 {*arm_zero_extendqisi2}
     (nil))
(insn 199 198 200 23 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [236])
            (const_int 42 [0x2a]))) "kbd.c":193:8 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 200 199 201 23 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 205)
            (pc))) "kbd.c":193:8 273 {arm_cond_branch}
     (nil)
 -> 205)
;;  succ:       25
;;              24 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 24, loop depth 0, maybe hot
;;  prev block 23, next block 25, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       23 (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(note 201 200 202 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 202 201 203 24 (set (reg:SI 3 r3 [237])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -13 [0xfffffffffffffff3])) [0 code+0 S1 A8]))) "kbd.c":193:24 175 {*arm_zero_extendqisi2}
     (nil))
(insn 203 202 204 24 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [237])
            (const_int 54 [0x36]))) "kbd.c":193:24 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 204 203 205 24 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 210)
            (pc))) "kbd.c":193:24 273 {arm_cond_branch}
     (nil)
 -> 210)
;;  succ:       25 (FALLTHRU)
;;              26
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 25, loop depth 0, maybe hot
;;  prev block 24, next block 26, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       23
;;              24 (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
(code_label 205 204 206 25 30 (nil) [1 uses])
(note 206 205 207 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 207 206 208 25 (set (reg/f:SI 3 r3 [238])
        (symbol_ref:SI ("shift") [flags 0x2]  <var_decl 0x7fcdc0b1acf0 shift>)) "kbd.c":194:13 253 {*arm_movsi_insn}
     (nil))
(insn 208 207 209 25 (set (reg:SI 2 r2 [239])
        (const_int 0 [0])) "kbd.c":194:13 253 {*arm_movsi_insn}
     (nil))
(insn 209 208 210 25 (set (mem/c:SI (reg/f:SI 3 r3 [238]) [3 shift+0 S4 A32])
        (reg:SI 2 r2 [239])) "kbd.c":194:13 253 {*arm_movsi_insn}
     (nil))
;;  succ:       26 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 26, loop depth 0, maybe hot
;;  prev block 25, next block 27, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       24
;;              25 (FALLTHRU)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(code_label 210 209 211 26 31 (nil) [1 uses])
(note 211 210 212 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 212 211 213 26 (set (reg:SI 3 r3 [240])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -13 [0xfffffffffffffff3])) [0 code+0 S1 A8]))) "kbd.c":195:8 175 {*arm_zero_extendqisi2}
     (nil))
(insn 213 212 214 26 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [240])
            (const_int 29 [0x1d]))) "kbd.c":195:8 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 214 213 215 26 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 219)
            (pc))) "kbd.c":195:8 273 {arm_cond_branch}
     (nil)
 -> 219)
;;  succ:       27 (FALLTHRU)
;;              28
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 27, loop depth 0, maybe hot
;;  prev block 26, next block 28, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       26 (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
(note 215 214 216 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 216 215 217 27 (set (reg/f:SI 3 r3 [241])
        (symbol_ref:SI ("control") [flags 0x2]  <var_decl 0x7fcdc0b1a750 control>)) "kbd.c":196:15 253 {*arm_movsi_insn}
     (nil))
(insn 217 216 218 27 (set (reg:SI 2 r2 [242])
        (const_int 0 [0])) "kbd.c":196:15 253 {*arm_movsi_insn}
     (nil))
(insn 218 217 219 27 (set (mem/c:SI (reg/f:SI 3 r3 [241]) [3 control+0 S4 A32])
        (reg:SI 2 r2 [242])) "kbd.c":196:15 253 {*arm_movsi_insn}
     (nil))
;;  succ:       28 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 28, loop depth 0, maybe hot
;;  prev block 27, next block 29, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       26
;;              27 (FALLTHRU)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(code_label 219 218 220 28 32 (nil) [1 uses])
(note 220 219 221 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 221 220 222 28 (set (reg:SI 3 r3 [243])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -13 [0xfffffffffffffff3])) [0 code+0 S1 A8]))) "kbd.c":197:8 175 {*arm_zero_extendqisi2}
     (nil))
(insn 222 221 223 28 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [243])
            (const_int 56 [0x38]))) "kbd.c":197:8 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 223 222 224 28 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 638)
            (pc))) "kbd.c":197:8 273 {arm_cond_branch}
     (nil)
 -> 638)
;;  succ:       29 (FALLTHRU)
;;              79
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 29, loop depth 0, maybe hot
;;  prev block 28, next block 30, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       28 (FALLTHRU)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
(note 224 223 225 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 225 224 226 29 (set (reg/f:SI 3 r3 [244])
        (symbol_ref:SI ("alt") [flags 0x2]  <var_decl 0x7fcdc0b1aab0 alt>)) "kbd.c":198:11 253 {*arm_movsi_insn}
     (nil))
(insn 226 225 227 29 (set (reg:SI 2 r2 [245])
        (const_int 0 [0])) "kbd.c":198:11 253 {*arm_movsi_insn}
     (nil))
(insn 227 226 596 29 (set (mem/c:SI (reg/f:SI 3 r3 [244]) [3 alt+0 S4 A32])
        (reg:SI 2 r2 [245])) "kbd.c":198:11 253 {*arm_movsi_insn}
     (nil))
(jump_insn 596 227 597 29 (set (pc)
        (label_ref:SI 638)) "kbd.c":199:5 284 {*arm_jump}
     (nil)
 -> 638)
;;  succ:       79 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 597 596 232)
;; basic block 30, loop depth 0, maybe hot
;;  prev block 29, next block 31, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       22
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(code_label 232 597 233 30 29 (nil) [1 uses])
(note 233 232 234 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 234 233 235 30 (set (reg:SI 3 r3 [246])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -13 [0xfffffffffffffff3])) [0 code+0 S1 A8]))) "kbd.c":203:6 175 {*arm_zero_extendqisi2}
     (nil))
(insn 235 234 236 30 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [246])
            (const_int 42 [0x2a]))) "kbd.c":203:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 236 235 237 30 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 241)
            (pc))) "kbd.c":203:6 273 {arm_cond_branch}
     (nil)
 -> 241)
;;  succ:       32
;;              31 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 31, loop depth 0, maybe hot
;;  prev block 30, next block 32, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       30 (FALLTHRU)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(note 237 236 238 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 238 237 239 31 (set (reg:SI 3 r3 [247])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -13 [0xfffffffffffffff3])) [0 code+0 S1 A8]))) "kbd.c":203:22 175 {*arm_zero_extendqisi2}
     (nil))
(insn 239 238 240 31 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [247])
            (const_int 54 [0x36]))) "kbd.c":203:22 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 240 239 241 31 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 248)
            (pc))) "kbd.c":203:22 273 {arm_cond_branch}
     (nil)
 -> 248)
;;  succ:       32 (FALLTHRU)
;;              33
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 32, loop depth 0, maybe hot
;;  prev block 31, next block 33, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       30
;;              31 (FALLTHRU)
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
(code_label 241 240 242 32 34 (nil) [1 uses])
(note 242 241 243 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 243 242 244 32 (set (reg/f:SI 3 r3 [248])
        (symbol_ref:SI ("shift") [flags 0x2]  <var_decl 0x7fcdc0b1acf0 shift>)) "kbd.c":204:11 253 {*arm_movsi_insn}
     (nil))
(insn 244 243 245 32 (set (reg:SI 2 r2 [249])
        (const_int 1 [0x1])) "kbd.c":204:11 253 {*arm_movsi_insn}
     (nil))
(insn 245 244 598 32 (set (mem/c:SI (reg/f:SI 3 r3 [248]) [3 shift+0 S4 A32])
        (reg:SI 2 r2 [249])) "kbd.c":204:11 253 {*arm_movsi_insn}
     (nil))
(jump_insn 598 245 599 32 (set (pc)
        (label_ref 577)) "kbd.c":205:5 284 {*arm_jump}
     (nil)
 -> 577)
;;  succ:       83 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 599 598 248)
;; basic block 33, loop depth 0, maybe hot
;;  prev block 32, next block 34, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       31
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(code_label 248 599 249 33 35 (nil) [1 uses])
(note 249 248 250 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 250 249 251 33 (set (reg:SI 3 r3 [250])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -13 [0xfffffffffffffff3])) [0 code+0 S1 A8]))) "kbd.c":207:6 175 {*arm_zero_extendqisi2}
     (nil))
(insn 251 250 252 33 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [250])
            (const_int 56 [0x38]))) "kbd.c":207:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 252 251 253 33 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 259)
            (pc))) "kbd.c":207:6 273 {arm_cond_branch}
     (nil)
 -> 259)
;;  succ:       34 (FALLTHRU)
;;              35
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 34, loop depth 0, maybe hot
;;  prev block 33, next block 35, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       33 (FALLTHRU)
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
(note 253 252 254 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 254 253 255 34 (set (reg/f:SI 3 r3 [251])
        (symbol_ref:SI ("alt") [flags 0x2]  <var_decl 0x7fcdc0b1aab0 alt>)) "kbd.c":208:9 253 {*arm_movsi_insn}
     (nil))
(insn 255 254 256 34 (set (reg:SI 2 r2 [252])
        (const_int 1 [0x1])) "kbd.c":208:9 253 {*arm_movsi_insn}
     (nil))
(insn 256 255 600 34 (set (mem/c:SI (reg/f:SI 3 r3 [251]) [3 alt+0 S4 A32])
        (reg:SI 2 r2 [252])) "kbd.c":208:9 253 {*arm_movsi_insn}
     (nil))
(jump_insn 600 256 601 34 (set (pc)
        (label_ref 577)) "kbd.c":209:5 284 {*arm_jump}
     (nil)
 -> 577)
;;  succ:       83 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 601 600 259)
;; basic block 35, loop depth 0, maybe hot
;;  prev block 34, next block 36, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       33
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(code_label 259 601 260 35 36 (nil) [1 uses])
(note 260 259 261 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 261 260 262 35 (set (reg:SI 3 r3 [253])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -13 [0xfffffffffffffff3])) [0 code+0 S1 A8]))) "kbd.c":211:6 175 {*arm_zero_extendqisi2}
     (nil))
(insn 262 261 263 35 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [253])
            (const_int 29 [0x1d]))) "kbd.c":211:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 263 262 264 35 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 270)
            (pc))) "kbd.c":211:6 273 {arm_cond_branch}
     (nil)
 -> 270)
;;  succ:       36 (FALLTHRU)
;;              37
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 36, loop depth 0, maybe hot
;;  prev block 35, next block 37, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       35 (FALLTHRU)
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
(note 264 263 265 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 265 264 266 36 (set (reg/f:SI 3 r3 [254])
        (symbol_ref:SI ("control") [flags 0x2]  <var_decl 0x7fcdc0b1a750 control>)) "kbd.c":212:13 253 {*arm_movsi_insn}
     (nil))
(insn 266 265 267 36 (set (reg:SI 2 r2 [255])
        (const_int 1 [0x1])) "kbd.c":212:13 253 {*arm_movsi_insn}
     (nil))
(insn 267 266 602 36 (set (mem/c:SI (reg/f:SI 3 r3 [254]) [3 control+0 S4 A32])
        (reg:SI 2 r2 [255])) "kbd.c":212:13 253 {*arm_movsi_insn}
     (nil))
(jump_insn 602 267 603 36 (set (pc)
        (label_ref 577)) "kbd.c":213:5 284 {*arm_jump}
     (nil)
 -> 577)
;;  succ:       83 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 603 602 270)
;; basic block 37, loop depth 0, maybe hot
;;  prev block 36, next block 38, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       35
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(code_label 270 603 271 37 37 (nil) [1 uses])
(note 271 270 272 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 272 271 273 37 (set (reg:SI 3 r3 [256])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -13 [0xfffffffffffffff3])) [0 code+0 S1 A8]))) "kbd.c":216:6 175 {*arm_zero_extendqisi2}
     (nil))
(insn 273 272 274 37 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [256])
            (const_int 58 [0x3a]))) "kbd.c":216:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 274 273 275 37 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 283)
            (pc))) "kbd.c":216:6 273 {arm_cond_branch}
     (nil)
 -> 283)
;;  succ:       38 (FALLTHRU)
;;              39
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 38, loop depth 0, maybe hot
;;  prev block 37, next block 39, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       37 (FALLTHRU)
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
(note 275 274 276 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 276 275 277 38 (set (reg/f:SI 3 r3 [257])
        (symbol_ref:SI ("capslock") [flags 0x2]  <var_decl 0x7fcdc0b1ab40 capslock>)) "kbd.c":217:18 253 {*arm_movsi_insn}
     (nil))
(insn 277 276 278 38 (set (reg:SI 3 r3 [orig:138 capslock.10_28 ] [138])
        (mem/c:SI (reg/f:SI 3 r3 [257]) [3 capslock+0 S4 A32])) "kbd.c":217:18 253 {*arm_movsi_insn}
     (nil))
(insn 278 277 279 38 (set (reg:SI 3 r3 [orig:139 _29 ] [139])
        (minus:SI (const_int 1 [0x1])
            (reg:SI 3 r3 [orig:138 capslock.10_28 ] [138]))) "kbd.c":217:18 45 {*arm_subsi3_insn}
     (nil))
(insn 279 278 280 38 (set (reg/f:SI 2 r2 [258])
        (symbol_ref:SI ("capslock") [flags 0x2]  <var_decl 0x7fcdc0b1ab40 capslock>)) "kbd.c":217:14 253 {*arm_movsi_insn}
     (nil))
(insn 280 279 604 38 (set (mem/c:SI (reg/f:SI 2 r2 [258]) [3 capslock+0 S4 A32])
        (reg:SI 3 r3 [orig:139 _29 ] [139])) "kbd.c":217:14 253 {*arm_movsi_insn}
     (nil))
(jump_insn 604 280 605 38 (set (pc)
        (label_ref 577)) "kbd.c":218:5 284 {*arm_jump}
     (nil)
 -> 577)
;;  succ:       83 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 605 604 283)
;; basic block 39, loop depth 0, maybe hot
;;  prev block 38, next block 40, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       37
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(code_label 283 605 284 39 38 (nil) [1 uses])
(note 284 283 285 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 285 284 286 39 (set (reg/f:SI 3 r3 [259])
        (symbol_ref:SI ("control") [flags 0x2]  <var_decl 0x7fcdc0b1a750 control>)) "kbd.c":221:7 253 {*arm_movsi_insn}
     (nil))
(insn 286 285 287 39 (set (reg:SI 3 r3 [orig:140 control.11_30 ] [140])
        (mem/c:SI (reg/f:SI 3 r3 [259]) [3 control+0 S4 A32])) "kbd.c":221:7 253 {*arm_movsi_insn}
     (nil))
(insn 287 286 288 39 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:140 control.11_30 ] [140])
            (const_int 0 [0]))) "kbd.c":221:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 288 287 289 39 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 301)
            (pc))) "kbd.c":221:6 273 {arm_cond_branch}
     (nil)
 -> 301)
;;  succ:       40 (FALLTHRU)
;;              42
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 40, loop depth 0, maybe hot
;;  prev block 39, next block 41, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       39 (FALLTHRU)
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(note 289 288 290 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 290 289 291 40 (set (reg/f:SI 3 r3 [260])
        (symbol_ref:SI ("alt") [flags 0x2]  <var_decl 0x7fcdc0b1aab0 alt>)) "kbd.c":221:15 253 {*arm_movsi_insn}
     (nil))
(insn 291 290 292 40 (set (reg:SI 3 r3 [orig:141 alt.12_31 ] [141])
        (mem/c:SI (reg/f:SI 3 r3 [260]) [3 alt+0 S4 A32])) "kbd.c":221:15 253 {*arm_movsi_insn}
     (nil))
(insn 292 291 293 40 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:141 alt.12_31 ] [141])
            (const_int 0 [0]))) "kbd.c":221:15 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 293 292 294 40 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 301)
            (pc))) "kbd.c":221:15 273 {arm_cond_branch}
     (nil)
 -> 301)
;;  succ:       41 (FALLTHRU)
;;              42
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 41, loop depth 0, maybe hot
;;  prev block 40, next block 42, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       40 (FALLTHRU)
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(note 294 293 295 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 295 294 296 41 (set (reg:SI 3 r3 [261])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -13 [0xfffffffffffffff3])) [0 code+0 S1 A8]))) "kbd.c":221:22 175 {*arm_zero_extendqisi2}
     (nil))
(insn 296 295 297 41 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [261])
            (const_int 83 [0x53]))) "kbd.c":221:22 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 297 296 301 41 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 643)
            (pc))) "kbd.c":221:22 273 {arm_cond_branch}
     (nil)
 -> 643)
;;  succ:       80
;;              42 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 42, loop depth 0, maybe hot
;;  prev block 41, next block 43, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       39
;;              40
;;              41 (FALLTHRU)
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(code_label 301 297 302 42 39 (nil) [2 uses])
(note 302 301 303 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 303 302 304 42 (set (reg:SI 3 r3 [262])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -13 [0xfffffffffffffff3])) [0 code+0 S1 A8]))) "kbd.c":226:6 175 {*arm_zero_extendqisi2}
     (nil))
(insn 304 303 305 42 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [262])
            (const_int 59 [0x3b]))) "kbd.c":226:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 305 304 306 42 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 310)
            (pc))) "kbd.c":226:6 273 {arm_cond_branch}
     (nil)
 -> 310)
;;  succ:       43 (FALLTHRU)
;;              44
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 43, loop depth 0, maybe hot
;;  prev block 42, next block 44, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       42 (FALLTHRU)
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(note 306 305 307 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(call_insn 307 306 606 43 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("doF1") [flags 0x3]  <function_decl 0x7fcdc0b13c00 doF1>) [0 doF1 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "kbd.c":227:6 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(jump_insn 606 307 607 43 (set (pc)
        (label_ref 577)) "kbd.c":227:14 284 {*arm_jump}
     (nil)
 -> 577)
;;  succ:       83 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 607 606 310)
;; basic block 44, loop depth 0, maybe hot
;;  prev block 43, next block 45, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       42
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(code_label 310 607 311 44 40 (nil) [1 uses])
(note 311 310 312 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 312 311 313 44 (set (reg:SI 3 r3 [263])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -13 [0xfffffffffffffff3])) [0 code+0 S1 A8]))) "kbd.c":229:6 175 {*arm_zero_extendqisi2}
     (nil))
(insn 313 312 314 44 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [263])
            (const_int 60 [0x3c]))) "kbd.c":229:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 314 313 315 44 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 319)
            (pc))) "kbd.c":229:6 273 {arm_cond_branch}
     (nil)
 -> 319)
;;  succ:       45 (FALLTHRU)
;;              46
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 45, loop depth 0, maybe hot
;;  prev block 44, next block 46, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       44 (FALLTHRU)
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(note 315 314 316 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(call_insn 316 315 608 45 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("doF2") [flags 0x3]  <function_decl 0x7fcdc0b13f00 doF2>) [0 doF2 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "kbd.c":230:6 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(jump_insn 608 316 609 45 (set (pc)
        (label_ref 577)) "kbd.c":230:14 284 {*arm_jump}
     (nil)
 -> 577)
;;  succ:       83 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 609 608 319)
;; basic block 46, loop depth 0, maybe hot
;;  prev block 45, next block 47, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       44
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(code_label 319 609 320 46 41 (nil) [1 uses])
(note 320 319 321 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 321 320 322 46 (set (reg:SI 3 r3 [264])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -13 [0xfffffffffffffff3])) [0 code+0 S1 A8]))) "kbd.c":232:6 175 {*arm_zero_extendqisi2}
     (nil))
(insn 322 321 323 46 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [264])
            (const_int 61 [0x3d]))) "kbd.c":232:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 323 322 324 46 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 328)
            (pc))) "kbd.c":232:6 273 {arm_cond_branch}
     (nil)
 -> 328)
;;  succ:       47 (FALLTHRU)
;;              48
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 47, loop depth 0, maybe hot
;;  prev block 46, next block 48, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       46 (FALLTHRU)
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(note 324 323 325 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(call_insn 325 324 610 47 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("doF3") [flags 0x3]  <function_decl 0x7fcdc0b26100 doF3>) [0 doF3 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "kbd.c":233:6 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(jump_insn 610 325 611 47 (set (pc)
        (label_ref 577)) "kbd.c":233:14 284 {*arm_jump}
     (nil)
 -> 577)
;;  succ:       83 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 611 610 328)
;; basic block 48, loop depth 0, maybe hot
;;  prev block 47, next block 49, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       46
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(code_label 328 611 329 48 42 (nil) [1 uses])
(note 329 328 330 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 330 329 331 48 (set (reg:SI 3 r3 [265])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -13 [0xfffffffffffffff3])) [0 code+0 S1 A8]))) "kbd.c":235:6 175 {*arm_zero_extendqisi2}
     (nil))
(insn 331 330 332 48 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [265])
            (const_int 62 [0x3e]))) "kbd.c":235:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 332 331 333 48 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 337)
            (pc))) "kbd.c":235:6 273 {arm_cond_branch}
     (nil)
 -> 337)
;;  succ:       49 (FALLTHRU)
;;              50
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 49, loop depth 0, maybe hot
;;  prev block 48, next block 50, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       48 (FALLTHRU)
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(note 333 332 334 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(call_insn 334 333 612 49 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("doF4") [flags 0x3]  <function_decl 0x7fcdc0b26300 doF4>) [0 doF4 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "kbd.c":236:6 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(jump_insn 612 334 613 49 (set (pc)
        (label_ref 577)) "kbd.c":236:14 284 {*arm_jump}
     (nil)
 -> 577)
;;  succ:       83 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 613 612 337)
;; basic block 50, loop depth 0, maybe hot
;;  prev block 49, next block 51, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       48
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(code_label 337 613 338 50 43 (nil) [1 uses])
(note 338 337 339 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 339 338 340 50 (set (reg/f:SI 3 r3 [266])
        (symbol_ref:SI ("shift") [flags 0x2]  <var_decl 0x7fcdc0b1acf0 shift>)) "kbd.c":239:14 253 {*arm_movsi_insn}
     (nil))
(insn 340 339 341 50 (set (reg:SI 3 r3 [orig:142 shift.14_32 ] [142])
        (mem/c:SI (reg/f:SI 3 r3 [266]) [3 shift+0 S4 A32])) "kbd.c":239:14 253 {*arm_movsi_insn}
     (nil))
(insn 341 340 342 50 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:142 shift.14_32 ] [142])
            (const_int 0 [0]))) "kbd.c":239:5 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 342 341 343 50 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 349)
            (pc))) "kbd.c":239:5 273 {arm_cond_branch}
     (nil)
 -> 349)
;;  succ:       51 (FALLTHRU)
;;              52
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 51, loop depth 0, maybe hot
;;  prev block 50, next block 52, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       50 (FALLTHRU)
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
(note 343 342 344 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 344 343 345 51 (set (reg:SI 3 r3 [orig:143 _33 ] [143])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -13 [0xfffffffffffffff3])) [0 code+0 S1 A8]))) "kbd.c":239:18 175 {*arm_zero_extendqisi2}
     (nil))
(insn 345 344 346 51 (set (reg/f:SI 2 r2 [267])
        (symbol_ref:SI ("sh") [flags 0x2]  <var_decl 0x7fcdc0b1a090 sh>)) "kbd.c":239:5 253 {*arm_movsi_insn}
     (nil))
(insn 346 345 614 51 (set (reg:SI 3 r3 [orig:169 iftmp.13_64 ] [169])
        (zero_extend:SI (mem:QI (plus:SI (reg/f:SI 2 r2 [267])
                    (reg:SI 3 r3 [orig:143 _33 ] [143])) [0 sh[_33]+0 S1 A8]))) "kbd.c":239:5 175 {*arm_zero_extendqisi2}
     (nil))
(jump_insn 614 346 615 51 (set (pc)
        (label_ref 354)) 284 {*arm_jump}
     (nil)
 -> 354)
;;  succ:       53 [always] 
;; lr  out 	 3 [r3] 11 [fp] 13 [sp] 102 [sfp]

(barrier 615 614 349)
;; basic block 52, loop depth 0, maybe hot
;;  prev block 51, next block 53, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       50
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
(code_label 349 615 350 52 44 (nil) [1 uses])
(note 350 349 351 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 351 350 352 52 (set (reg:SI 3 r3 [orig:144 _34 ] [144])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -13 [0xfffffffffffffff3])) [0 code+0 S1 A8]))) "kbd.c":239:31 175 {*arm_zero_extendqisi2}
     (nil))
(insn 352 351 353 52 (set (reg/f:SI 2 r2 [268])
        (symbol_ref:SI ("unsh") [flags 0x2]  <var_decl 0x7fcdc0b165a0 unsh>)) "kbd.c":239:5 253 {*arm_movsi_insn}
     (nil))
(insn 353 352 354 52 (set (reg:SI 3 r3 [orig:169 iftmp.13_64 ] [169])
        (zero_extend:SI (mem:QI (plus:SI (reg/f:SI 2 r2 [268])
                    (reg:SI 3 r3 [orig:144 _34 ] [144])) [0 unsh[_34]+0 S1 A8]))) "kbd.c":239:5 175 {*arm_zero_extendqisi2}
     (nil))
;;  succ:       53 (FALLTHRU)
;; lr  out 	 3 [r3] 11 [fp] 13 [sp] 102 [sfp]

;; basic block 53, loop depth 0, maybe hot
;;  prev block 52, next block 54, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       52 (FALLTHRU)
;;              51 [always] 
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 3 [r3] 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 3 [r3] 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(code_label 354 353 355 53 45 (nil) [1 uses])
(note 355 354 357 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 357 355 358 53 (set (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                (const_int -14 [0xfffffffffffffff2])) [0 c+0 S1 A16])
        (reg:QI 3 r3 [269])) "kbd.c":239:5 263 {*arm_movqi_insn}
     (nil))
(insn 358 357 359 53 (set (reg/f:SI 3 r3 [270])
        (symbol_ref:SI ("capslock") [flags 0x2]  <var_decl 0x7fcdc0b1ab40 capslock>)) "kbd.c":241:7 253 {*arm_movsi_insn}
     (nil))
(insn 359 358 360 53 (set (reg:SI 3 r3 [orig:145 capslock.15_35 ] [145])
        (mem/c:SI (reg/f:SI 3 r3 [270]) [3 capslock+0 S4 A32])) "kbd.c":241:7 253 {*arm_movsi_insn}
     (nil))
(insn 360 359 361 53 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:145 capslock.15_35 ] [145])
            (const_int 0 [0]))) "kbd.c":241:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 361 360 362 53 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 407)
            (pc))) "kbd.c":241:6 273 {arm_cond_branch}
     (nil)
 -> 407)
;;  succ:       54 (FALLTHRU)
;;              60
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 54, loop depth 0, maybe hot
;;  prev block 53, next block 55, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       53 (FALLTHRU)
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(note 362 361 367 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 367 362 368 54 (set (reg:SI 3 r3 [273])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -14 [0xfffffffffffffff2])) [0 c+0 S1 A16]))) "kbd.c":242:8 175 {*arm_zero_extendqisi2}
     (nil))
(insn 368 367 369 54 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [273])
            (const_int 64 [0x40]))) "kbd.c":242:8 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 369 368 370 54 (set (pc)
        (if_then_else (leu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 385)
            (pc))) "kbd.c":242:8 273 {arm_cond_branch}
     (nil)
 -> 385)
;;  succ:       55 (FALLTHRU)
;;              57
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 55, loop depth 0, maybe hot
;;  prev block 54, next block 56, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       54 (FALLTHRU)
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(note 370 369 375 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 375 370 376 55 (set (reg:SI 3 r3 [276])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -14 [0xfffffffffffffff2])) [0 c+0 S1 A16]))) "kbd.c":242:18 175 {*arm_zero_extendqisi2}
     (nil))
(insn 376 375 377 55 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [276])
            (const_int 90 [0x5a]))) "kbd.c":242:18 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 377 376 378 55 (set (pc)
        (if_then_else (gtu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 385)
            (pc))) "kbd.c":242:18 273 {arm_cond_branch}
     (nil)
 -> 385)
;;  succ:       56 (FALLTHRU)
;;              57
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 56, loop depth 0, maybe hot
;;  prev block 55, next block 57, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       55 (FALLTHRU)
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3]
(note 378 377 379 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 379 378 380 56 (set (reg:QI 3 r3 [277])
        (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                (const_int -14 [0xfffffffffffffff2])) [0 c+0 S1 A16])) "kbd.c":243:4 263 {*arm_movqi_insn}
     (nil))
(insn 380 379 382 56 (set (reg:SI 3 r3 [278])
        (plus:SI (reg:SI 3 r3 [277])
            (const_int 32 [0x20]))) "kbd.c":243:4 7 {*arm_addsi3}
     (nil))
(insn 382 380 616 56 (set (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                (const_int -14 [0xfffffffffffffff2])) [0 c+0 S1 A16])
        (reg:QI 3 r3 [279])) "kbd.c":243:4 263 {*arm_movqi_insn}
     (nil))
(jump_insn 616 382 617 56 (set (pc)
        (label_ref 407)) "kbd.c":243:4 284 {*arm_jump}
     (nil)
 -> 407)
;;  succ:       60 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 617 616 385)
;; basic block 57, loop depth 0, maybe hot
;;  prev block 56, next block 58, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       54
;;              55
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(code_label 385 617 386 57 47 (nil) [2 uses])
(note 386 385 391 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 391 386 392 57 (set (reg:SI 3 r3 [282])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -14 [0xfffffffffffffff2])) [0 c+0 S1 A16]))) "kbd.c":244:13 175 {*arm_zero_extendqisi2}
     (nil))
(insn 392 391 393 57 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [282])
            (const_int 96 [0x60]))) "kbd.c":244:13 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 393 392 394 57 (set (pc)
        (if_then_else (leu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 407)
            (pc))) "kbd.c":244:13 273 {arm_cond_branch}
     (nil)
 -> 407)
;;  succ:       58 (FALLTHRU)
;;              60
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 58, loop depth 0, maybe hot
;;  prev block 57, next block 59, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       57 (FALLTHRU)
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(note 394 393 399 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 399 394 400 58 (set (reg:SI 3 r3 [285])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -14 [0xfffffffffffffff2])) [0 c+0 S1 A16]))) "kbd.c":244:23 175 {*arm_zero_extendqisi2}
     (nil))
(insn 400 399 401 58 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [285])
            (const_int 122 [0x7a]))) "kbd.c":244:23 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 401 400 402 58 (set (pc)
        (if_then_else (gtu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 407)
            (pc))) "kbd.c":244:23 273 {arm_cond_branch}
     (nil)
 -> 407)
;;  succ:       59 (FALLTHRU)
;;              60
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 59, loop depth 0, maybe hot
;;  prev block 58, next block 60, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       58 (FALLTHRU)
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3]
(note 402 401 403 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 403 402 404 59 (set (reg:QI 3 r3 [286])
        (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                (const_int -14 [0xfffffffffffffff2])) [0 c+0 S1 A16])) "kbd.c":245:4 263 {*arm_movqi_insn}
     (nil))
(insn 404 403 406 59 (set (reg:SI 3 r3 [287])
        (plus:SI (reg:SI 3 r3 [286])
            (const_int -32 [0xffffffffffffffe0]))) "kbd.c":245:4 7 {*arm_addsi3}
     (nil))
(insn 406 404 407 59 (set (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                (const_int -14 [0xfffffffffffffff2])) [0 c+0 S1 A16])
        (reg:QI 3 r3 [288])) "kbd.c":245:4 263 {*arm_movqi_insn}
     (nil))
;;  succ:       60 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 60, loop depth 0, maybe hot
;;  prev block 59, next block 61, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       53
;;              59 (FALLTHRU)
;;              57
;;              58
;;              56 [always] 
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(code_label 407 406 408 60 46 (nil) [4 uses])
(note 408 407 409 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 409 408 410 60 (set (reg/f:SI 3 r3 [289])
        (symbol_ref:SI ("control") [flags 0x2]  <var_decl 0x7fcdc0b1a750 control>)) "kbd.c":248:7 253 {*arm_movsi_insn}
     (nil))
(insn 410 409 411 60 (set (reg:SI 3 r3 [orig:146 control.16_36 ] [146])
        (mem/c:SI (reg/f:SI 3 r3 [289]) [3 control+0 S4 A32])) "kbd.c":248:7 253 {*arm_movsi_insn}
     (nil))
(insn 411 410 412 60 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:146 control.16_36 ] [146])
            (const_int 0 [0]))) "kbd.c":248:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 412 411 413 60 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 510)
            (pc))) "kbd.c":248:6 273 {arm_cond_branch}
     (nil)
 -> 510)
;;  succ:       61 (FALLTHRU)
;;              69
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 61, loop depth 0, maybe hot
;;  prev block 60, next block 62, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       60 (FALLTHRU)
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(note 413 412 414 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 414 413 415 61 (set (reg:SI 3 r3 [290])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -14 [0xfffffffffffffff2])) [0 c+0 S1 A16]))) "kbd.c":248:15 175 {*arm_zero_extendqisi2}
     (nil))
(insn 415 414 416 61 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [290])
            (const_int 99 [0x63]))) "kbd.c":248:15 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 416 415 417 61 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 510)
            (pc))) "kbd.c":248:15 273 {arm_cond_branch}
     (nil)
 -> 510)
;;  succ:       62 (FALLTHRU)
;;              69
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 62, loop depth 0, maybe hot
;;  prev block 61, next block 63, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       61 (FALLTHRU)
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3]
(note 417 416 418 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 418 417 419 62 (set (reg:SI 3 r3 [291])
        (const_int 1 [0x1])) "kbd.c":250:11 253 {*arm_movsi_insn}
     (nil))
(insn 419 418 618 62 (set (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A64])
        (reg:SI 3 r3 [291])) "kbd.c":250:11 253 {*arm_movsi_insn}
     (nil))
(jump_insn 618 419 619 62 (set (pc)
        (label_ref 498)) "kbd.c":250:5 284 {*arm_jump}
     (nil)
 -> 498)
;;  succ:       67 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 619 618 500)
;; basic block 63, loop depth 0, maybe hot
;;  prev block 62, next block 64, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       67
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3] 100 [cc]
(code_label 500 619 422 63 51 (nil) [1 uses])
(note 422 500 423 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 423 422 424 63 (set (reg/f:SI 1 r1 [292])
        (symbol_ref:SI ("proc") [flags 0x40]  <var_decl 0x7fcdc17fe5a0 proc>)) "kbd.c":251:18 253 {*arm_movsi_insn}
     (nil))
(insn 424 423 425 63 (set (reg:SI 2 r2 [293])
        (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A64])) "kbd.c":251:18 253 {*arm_movsi_insn}
     (nil))
(insn 425 424 426 63 (set (reg:SI 3 r3 [294])
        (reg:SI 2 r2 [293])) "kbd.c":251:18 253 {*arm_movsi_insn}
     (nil))
(insn 426 425 427 63 (set (reg:SI 3 r3 [294])
        (ashift:SI (reg:SI 3 r3 [294])
            (const_int 6 [0x6]))) "kbd.c":251:18 147 {*arm_shiftsi3}
     (nil))
(insn 427 426 428 63 (set (reg:SI 3 r3 [294])
        (plus:SI (reg:SI 3 r3 [294])
            (reg:SI 2 r2 [293]))) "kbd.c":251:18 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 2 r2 [293])
            (const_int 65 [0x41]))
        (nil)))
(insn 428 427 429 63 (set (reg:SI 3 r3 [294])
        (ashift:SI (reg:SI 3 r3 [294])
            (const_int 1 [0x1]))) "kbd.c":251:18 147 {*arm_shiftsi3}
     (nil))
(insn 429 428 430 63 (set (reg:SI 3 r3 [294])
        (plus:SI (reg:SI 3 r3 [294])
            (reg:SI 2 r2 [293]))) "kbd.c":251:18 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 2 r2 [293])
            (const_int 131 [0x83]))
        (nil)))
(insn 430 429 431 63 (set (reg:SI 3 r3 [294])
        (ashift:SI (reg:SI 3 r3 [294])
            (const_int 3 [0x3]))) "kbd.c":251:18 147 {*arm_shiftsi3}
     (nil))
(insn 431 430 432 63 (set (reg:SI 3 r3 [294])
        (minus:SI (reg:SI 3 r3 [294])
            (reg:SI 2 r2 [293]))) "kbd.c":251:18 45 {*arm_subsi3_insn}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 2 r2 [293])
            (const_int 1047 [0x417]))
        (nil)))
(insn 432 431 434 63 (set (reg:SI 3 r3 [295])
        (ashift:SI (reg:SI 3 r3 [294])
            (const_int 2 [0x2]))) "kbd.c":251:18 147 {*arm_shiftsi3}
     (nil))
(insn 434 432 435 63 (set (reg:SI 3 r3 [296])
        (plus:SI (reg/f:SI 1 r1 [292])
            (reg:SI 3 r3 [294]))) "kbd.c":251:18 7 {*arm_addsi3}
     (nil))
(insn 435 434 436 63 (set (reg/f:SI 3 r3 [297])
        (plus:SI (reg:SI 3 r3 [296])
            (const_int 28 [0x1c]))) "kbd.c":251:18 7 {*arm_addsi3}
     (nil))
(insn 436 435 437 63 (set (reg:SI 3 r3 [orig:147 _37 ] [147])
        (mem:SI (reg/f:SI 3 r3 [297]) [3 proc[i_63].status+0 S4 A32])) "kbd.c":251:18 253 {*arm_movsi_insn}
     (nil))
(insn 437 436 438 63 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:147 _37 ] [147])
            (const_int 0 [0]))) "kbd.c":251:10 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 438 437 439 63 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 493)
            (pc))) "kbd.c":251:10 273 {arm_cond_branch}
     (nil)
 -> 493)
;;  succ:       64 (FALLTHRU)
;;              66
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 64, loop depth 0, maybe hot
;;  prev block 63, next block 65, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       63 (FALLTHRU)
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(note 439 438 440 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 440 439 441 64 (set (reg/f:SI 1 r1 [298])
        (symbol_ref:SI ("proc") [flags 0x40]  <var_decl 0x7fcdc17fe5a0 proc>)) "kbd.c":251:51 253 {*arm_movsi_insn}
     (nil))
(insn 441 440 442 64 (set (reg:SI 2 r2 [299])
        (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A64])) "kbd.c":251:51 253 {*arm_movsi_insn}
     (nil))
(insn 442 441 443 64 (set (reg:SI 3 r3 [300])
        (reg:SI 2 r2 [299])) "kbd.c":251:51 253 {*arm_movsi_insn}
     (nil))
(insn 443 442 444 64 (set (reg:SI 3 r3 [300])
        (ashift:SI (reg:SI 3 r3 [300])
            (const_int 6 [0x6]))) "kbd.c":251:51 147 {*arm_shiftsi3}
     (nil))
(insn 444 443 445 64 (set (reg:SI 3 r3 [300])
        (plus:SI (reg:SI 3 r3 [300])
            (reg:SI 2 r2 [299]))) "kbd.c":251:51 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 2 r2 [299])
            (const_int 65 [0x41]))
        (nil)))
(insn 445 444 446 64 (set (reg:SI 3 r3 [300])
        (ashift:SI (reg:SI 3 r3 [300])
            (const_int 1 [0x1]))) "kbd.c":251:51 147 {*arm_shiftsi3}
     (nil))
(insn 446 445 447 64 (set (reg:SI 3 r3 [300])
        (plus:SI (reg:SI 3 r3 [300])
            (reg:SI 2 r2 [299]))) "kbd.c":251:51 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 2 r2 [299])
            (const_int 131 [0x83]))
        (nil)))
(insn 447 446 448 64 (set (reg:SI 3 r3 [300])
        (ashift:SI (reg:SI 3 r3 [300])
            (const_int 3 [0x3]))) "kbd.c":251:51 147 {*arm_shiftsi3}
     (nil))
(insn 448 447 449 64 (set (reg:SI 3 r3 [300])
        (minus:SI (reg:SI 3 r3 [300])
            (reg:SI 2 r2 [299]))) "kbd.c":251:51 45 {*arm_subsi3_insn}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 2 r2 [299])
            (const_int 1047 [0x417]))
        (nil)))
(insn 449 448 451 64 (set (reg:SI 3 r3 [301])
        (ashift:SI (reg:SI 3 r3 [300])
            (const_int 2 [0x2]))) "kbd.c":251:51 147 {*arm_shiftsi3}
     (nil))
(insn 451 449 452 64 (set (reg:SI 3 r3 [302])
        (plus:SI (reg/f:SI 1 r1 [298])
            (reg:SI 3 r3 [300]))) "kbd.c":251:51 7 {*arm_addsi3}
     (nil))
(insn 452 451 453 64 (set (reg/f:SI 3 r3 [303])
        (plus:SI (reg:SI 3 r3 [302])
            (const_int 84 [0x54]))) "kbd.c":251:51 7 {*arm_addsi3}
     (nil))
(insn 453 452 454 64 (set (reg/f:SI 3 r3 [orig:148 _38 ] [148])
        (mem/f:SI (reg/f:SI 3 r3 [303]) [9 proc[i_63].res+0 S4 A32])) "kbd.c":251:51 253 {*arm_movsi_insn}
     (nil))
(insn 454 453 455 64 (set (reg/f:SI 3 r3 [orig:149 _39 ] [149])
        (plus:SI (reg/f:SI 3 r3 [orig:148 _38 ] [148])
            (const_int 60 [0x3c]))) "kbd.c":251:55 7 {*arm_addsi3}
     (nil))
(insn 455 454 456 64 (set (reg:SI 1 r1)
        (symbol_ref/f:SI ("*.LC4") [flags 0x2]  <var_decl 0x7fcdc0b61c60 *.LC4>)) "kbd.c":251:37 253 {*arm_movsi_insn}
     (nil))
(insn 456 455 457 64 (set (reg:SI 0 r0)
        (reg/f:SI 3 r3 [orig:149 _39 ] [149])) "kbd.c":251:37 253 {*arm_movsi_insn}
     (nil))
(call_insn/i 457 456 458 64 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41]  <function_decl 0x7fcdc0d93700 strcmp>) [0 __builtin_strcmp S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "kbd.c":251:37 291 {*call_value_symbol}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 458 457 459 64 (set (reg:SI 3 r3 [orig:150 _40 ] [150])
        (reg:SI 0 r0)) "kbd.c":251:37 253 {*arm_movsi_insn}
     (nil))
(insn 459 458 460 64 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:150 _40 ] [150])
            (const_int 0 [0]))) "kbd.c":251:34 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 460 459 461 64 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 493)
            (pc))) "kbd.c":251:34 273 {arm_cond_branch}
     (nil)
 -> 493)
;;  succ:       65 (FALLTHRU)
;;              66
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 65, loop depth 0, maybe hot
;;  prev block 64, next block 66, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       64 (FALLTHRU)
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
(note 461 460 462 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 462 461 463 65 (set (reg/f:SI 1 r1 [304])
        (symbol_ref:SI ("proc") [flags 0x40]  <var_decl 0x7fcdc17fe5a0 proc>)) "kbd.c":252:9 253 {*arm_movsi_insn}
     (nil))
(insn 463 462 464 65 (set (reg:SI 2 r2 [305])
        (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A64])) "kbd.c":252:9 253 {*arm_movsi_insn}
     (nil))
(insn 464 463 465 65 (set (reg:SI 3 r3 [306])
        (reg:SI 2 r2 [305])) "kbd.c":252:9 253 {*arm_movsi_insn}
     (nil))
(insn 465 464 466 65 (set (reg:SI 3 r3 [306])
        (ashift:SI (reg:SI 3 r3 [306])
            (const_int 6 [0x6]))) "kbd.c":252:9 147 {*arm_shiftsi3}
     (nil))
(insn 466 465 467 65 (set (reg:SI 3 r3 [306])
        (plus:SI (reg:SI 3 r3 [306])
            (reg:SI 2 r2 [305]))) "kbd.c":252:9 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 2 r2 [305])
            (const_int 65 [0x41]))
        (nil)))
(insn 467 466 468 65 (set (reg:SI 3 r3 [306])
        (ashift:SI (reg:SI 3 r3 [306])
            (const_int 1 [0x1]))) "kbd.c":252:9 147 {*arm_shiftsi3}
     (nil))
(insn 468 467 469 65 (set (reg:SI 3 r3 [306])
        (plus:SI (reg:SI 3 r3 [306])
            (reg:SI 2 r2 [305]))) "kbd.c":252:9 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 2 r2 [305])
            (const_int 131 [0x83]))
        (nil)))
(insn 469 468 470 65 (set (reg:SI 3 r3 [306])
        (ashift:SI (reg:SI 3 r3 [306])
            (const_int 3 [0x3]))) "kbd.c":252:9 147 {*arm_shiftsi3}
     (nil))
(insn 470 469 471 65 (set (reg:SI 3 r3 [306])
        (minus:SI (reg:SI 3 r3 [306])
            (reg:SI 2 r2 [305]))) "kbd.c":252:9 45 {*arm_subsi3_insn}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 2 r2 [305])
            (const_int 1047 [0x417]))
        (nil)))
(insn 471 470 473 65 (set (reg:SI 3 r3 [307])
        (ashift:SI (reg:SI 3 r3 [306])
            (const_int 2 [0x2]))) "kbd.c":252:9 147 {*arm_shiftsi3}
     (nil))
(insn 473 471 474 65 (set (reg:SI 3 r3 [308])
        (plus:SI (reg/f:SI 1 r1 [304])
            (reg:SI 3 r3 [306]))) "kbd.c":252:9 7 {*arm_addsi3}
     (nil))
(insn 474 473 475 65 (set (reg/f:SI 3 r3 [309])
        (plus:SI (reg:SI 3 r3 [308])
            (const_int 84 [0x54]))) "kbd.c":252:9 7 {*arm_addsi3}
     (nil))
(insn 475 474 476 65 (set (reg/f:SI 3 r3 [orig:151 _41 ] [151])
        (mem/f:SI (reg/f:SI 3 r3 [309]) [9 proc[i_63].res+0 S4 A32])) "kbd.c":252:9 253 {*arm_movsi_insn}
     (nil))
(insn 476 475 477 65 (set (reg:SI 1 r1 [orig:152 _42 ] [152])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [orig:151 _41 ] [151])
                (const_int 92 [0x5c])) [3 _41->signal+0 S4 A32])) "kbd.c":252:22 253 {*arm_movsi_insn}
     (nil))
(insn 477 476 478 65 (set (reg/f:SI 0 r0 [310])
        (symbol_ref:SI ("proc") [flags 0x40]  <var_decl 0x7fcdc17fe5a0 proc>)) "kbd.c":252:9 253 {*arm_movsi_insn}
     (nil))
(insn 478 477 479 65 (set (reg:SI 2 r2 [311])
        (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A64])) "kbd.c":252:9 253 {*arm_movsi_insn}
     (nil))
(insn 479 478 480 65 (set (reg:SI 3 r3 [312])
        (reg:SI 2 r2 [311])) "kbd.c":252:9 253 {*arm_movsi_insn}
     (nil))
(insn 480 479 481 65 (set (reg:SI 3 r3 [312])
        (ashift:SI (reg:SI 3 r3 [312])
            (const_int 6 [0x6]))) "kbd.c":252:9 147 {*arm_shiftsi3}
     (nil))
(insn 481 480 482 65 (set (reg:SI 3 r3 [312])
        (plus:SI (reg:SI 3 r3 [312])
            (reg:SI 2 r2 [311]))) "kbd.c":252:9 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 2 r2 [311])
            (const_int 65 [0x41]))
        (nil)))
(insn 482 481 483 65 (set (reg:SI 3 r3 [312])
        (ashift:SI (reg:SI 3 r3 [312])
            (const_int 1 [0x1]))) "kbd.c":252:9 147 {*arm_shiftsi3}
     (nil))
(insn 483 482 484 65 (set (reg:SI 3 r3 [312])
        (plus:SI (reg:SI 3 r3 [312])
            (reg:SI 2 r2 [311]))) "kbd.c":252:9 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 2 r2 [311])
            (const_int 131 [0x83]))
        (nil)))
(insn 484 483 485 65 (set (reg:SI 3 r3 [312])
        (ashift:SI (reg:SI 3 r3 [312])
            (const_int 3 [0x3]))) "kbd.c":252:9 147 {*arm_shiftsi3}
     (nil))
(insn 485 484 486 65 (set (reg:SI 3 r3 [312])
        (minus:SI (reg:SI 3 r3 [312])
            (reg:SI 2 r2 [311]))) "kbd.c":252:9 45 {*arm_subsi3_insn}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 2 r2 [311])
            (const_int 1047 [0x417]))
        (nil)))
(insn 486 485 488 65 (set (reg:SI 3 r3 [313])
        (ashift:SI (reg:SI 3 r3 [312])
            (const_int 2 [0x2]))) "kbd.c":252:9 147 {*arm_shiftsi3}
     (nil))
(insn 488 486 489 65 (set (reg:SI 3 r3 [314])
        (plus:SI (reg/f:SI 0 r0 [310])
            (reg:SI 3 r3 [312]))) "kbd.c":252:9 7 {*arm_addsi3}
     (nil))
(insn 489 488 490 65 (set (reg/f:SI 3 r3 [315])
        (plus:SI (reg:SI 3 r3 [314])
            (const_int 84 [0x54]))) "kbd.c":252:9 7 {*arm_addsi3}
     (nil))
(insn 490 489 491 65 (set (reg/f:SI 3 r3 [orig:153 _43 ] [153])
        (mem/f:SI (reg/f:SI 3 r3 [315]) [9 proc[i_63].res+0 S4 A32])) "kbd.c":252:9 253 {*arm_movsi_insn}
     (nil))
(insn 491 490 492 65 (set (reg:SI 2 r2 [orig:154 _44 ] [154])
        (ior:SI (reg:SI 1 r1 [orig:152 _42 ] [152])
            (const_int 4 [0x4]))) "kbd.c":252:22 106 {*iorsi3_insn}
     (nil))
(insn 492 491 493 65 (set (mem:SI (plus:SI (reg/f:SI 3 r3 [orig:153 _43 ] [153])
                (const_int 92 [0x5c])) [3 _43->signal+0 S4 A32])
        (reg:SI 2 r2 [orig:154 _44 ] [154])) "kbd.c":252:22 253 {*arm_movsi_insn}
     (nil))
;;  succ:       66 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 66, loop depth 0, maybe hot
;;  prev block 65, next block 67, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       63
;;              64
;;              65 (FALLTHRU)
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3]
(code_label 493 492 494 66 50 (nil) [2 uses])
(note 494 493 495 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 495 494 496 66 (set (reg:SI 3 r3 [317])
        (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A64])) "kbd.c":250:25 253 {*arm_movsi_insn}
     (nil))
(insn 496 495 497 66 (set (reg:SI 3 r3 [316])
        (plus:SI (reg:SI 3 r3 [317])
            (const_int 1 [0x1]))) "kbd.c":250:25 7 {*arm_addsi3}
     (nil))
(insn 497 496 498 66 (set (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A64])
        (reg:SI 3 r3 [316])) "kbd.c":250:25 253 {*arm_movsi_insn}
     (nil))
;;  succ:       67 (FALLTHRU,DFS_BACK)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 67, loop depth 0, maybe hot
;;  prev block 66, next block 68, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       66 (FALLTHRU,DFS_BACK)
;;              62 [always] 
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(code_label 498 497 499 67 49 (nil) [1 uses])
(note 499 498 503 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 503 499 504 67 (set (reg:SI 3 r3 [318])
        (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A64])) "kbd.c":250:16 253 {*arm_movsi_insn}
     (nil))
(insn 504 503 505 67 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [318])
            (const_int 63 [0x3f]))) "kbd.c":250:16 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 505 504 506 67 (set (pc)
        (if_then_else (le (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 500)
            (pc))) "kbd.c":250:16 273 {arm_cond_branch}
     (nil)
 -> 500)
;;  succ:       63
;;              68 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 68, loop depth 0, maybe hot
;;  prev block 67, next block 69, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       67 (FALLTHRU)
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3]
(note 506 505 507 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 507 506 509 68 (set (reg:SI 3 r3 [319])
        (const_int 10 [0xa])) "kbd.c":255:7 253 {*arm_movsi_insn}
     (nil))
(insn 509 507 510 68 (set (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                (const_int -14 [0xfffffffffffffff2])) [0 c+0 S1 A16])
        (reg:QI 3 r3 [320])) "kbd.c":255:7 263 {*arm_movqi_insn}
     (nil))
;;  succ:       69 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 69, loop depth 0, maybe hot
;;  prev block 68, next block 70, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       60
;;              61
;;              68 (FALLTHRU)
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(code_label 510 509 511 69 48 (nil) [2 uses])
(note 511 510 512 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 512 511 513 69 (set (reg/f:SI 3 r3 [321])
        (symbol_ref:SI ("control") [flags 0x2]  <var_decl 0x7fcdc0b1a750 control>)) "kbd.c":258:7 253 {*arm_movsi_insn}
     (nil))
(insn 513 512 514 69 (set (reg:SI 3 r3 [orig:155 control.17_45 ] [155])
        (mem/c:SI (reg/f:SI 3 r3 [321]) [3 control+0 S4 A32])) "kbd.c":258:7 253 {*arm_movsi_insn}
     (nil))
(insn 514 513 515 69 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:155 control.17_45 ] [155])
            (const_int 0 [0]))) "kbd.c":258:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 515 514 516 69 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 529)
            (pc))) "kbd.c":258:6 273 {arm_cond_branch}
     (nil)
 -> 529)
;;  succ:       70 (FALLTHRU)
;;              73
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 70, loop depth 0, maybe hot
;;  prev block 69, next block 71, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       69 (FALLTHRU)
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(note 516 515 517 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 517 516 518 70 (set (reg:SI 3 r3 [322])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -14 [0xfffffffffffffff2])) [0 c+0 S1 A16]))) "kbd.c":258:15 175 {*arm_zero_extendqisi2}
     (nil))
(insn 518 517 519 70 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [322])
            (const_int 100 [0x64]))) "kbd.c":258:15 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 519 518 520 70 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 524)
            (pc))) "kbd.c":258:15 273 {arm_cond_branch}
     (nil)
 -> 524)
;;  succ:       72
;;              71 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 71, loop depth 0, maybe hot
;;  prev block 70, next block 72, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       70 (FALLTHRU)
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(note 520 519 521 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 521 520 522 71 (set (reg:SI 3 r3 [323])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -14 [0xfffffffffffffff2])) [0 c+0 S1 A16]))) "kbd.c":258:25 175 {*arm_zero_extendqisi2}
     (nil))
(insn 522 521 523 71 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [323])
            (const_int 68 [0x44]))) "kbd.c":258:25 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 523 522 524 71 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 529)
            (pc))) "kbd.c":258:25 273 {arm_cond_branch}
     (nil)
 -> 529)
;;  succ:       72 (FALLTHRU)
;;              73
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 72, loop depth 0, maybe hot
;;  prev block 71, next block 73, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       70
;;              71 (FALLTHRU)
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3]
(code_label 524 523 525 72 53 (nil) [1 uses])
(note 525 524 526 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 526 525 528 72 (set (reg:SI 3 r3 [324])
        (const_int 4 [0x4])) "kbd.c":259:7 253 {*arm_movsi_insn}
     (nil))
(insn 528 526 529 72 (set (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                (const_int -14 [0xfffffffffffffff2])) [0 c+0 S1 A16])
        (reg:QI 3 r3 [325])) "kbd.c":259:7 263 {*arm_movqi_insn}
     (nil))
;;  succ:       73 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 73, loop depth 0, maybe hot
;;  prev block 72, next block 74, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       69
;;              71
;;              72 (FALLTHRU)
;; bb 73 artificial_defs: { }
;; bb 73 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(code_label 529 528 530 73 52 (nil) [2 uses])
(note 530 529 531 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 531 530 532 73 (set (reg/f:SI 3 r3 [326])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":264:9 253 {*arm_movsi_insn}
     (nil))
(insn 532 531 533 73 (set (reg:SI 3 r3 [orig:156 _46 ] [156])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [326])
                (const_int 140 [0x8c])) [3 kp_77->data+0 S4 A32])) "kbd.c":264:9 253 {*arm_movsi_insn}
     (nil))
(insn 533 532 534 73 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:156 _46 ] [156])
            (const_int 128 [0x80]))) "kbd.c":264:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 534 533 539 73 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 648)
            (pc))) "kbd.c":264:6 273 {arm_cond_branch}
     (nil)
 -> 648)
;;  succ:       81
;;              74 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 74, loop depth 0, maybe hot
;;  prev block 73, next block 75, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       73 (FALLTHRU)
;; bb 74 artificial_defs: { }
;; bb 74 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(note 539 534 540 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 540 539 541 74 (set (reg/f:SI 3 r3 [327])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":267:13 253 {*arm_movsi_insn}
     (nil))
(insn 541 540 542 74 (set (reg:SI 3 r3 [orig:157 _47 ] [157])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [327])
                (const_int 132 [0x84])) [3 kp_77->head+0 S4 A32])) "kbd.c":267:13 253 {*arm_movsi_insn}
     (nil))
(insn 542 541 543 74 (set (reg:SI 1 r1 [orig:158 _49 ] [158])
        (plus:SI (reg:SI 3 r3 [orig:157 _47 ] [157])
            (const_int 1 [0x1]))) "kbd.c":267:19 7 {*arm_addsi3}
     (nil))
(insn 543 542 544 74 (set (reg/f:SI 2 r2 [328])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":267:19 253 {*arm_movsi_insn}
     (nil))
(insn 544 543 545 74 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [328])
                (const_int 132 [0x84])) [3 kp_77->head+0 S4 A32])
        (reg:SI 1 r1 [orig:158 _49 ] [158])) "kbd.c":267:19 253 {*arm_movsi_insn}
     (nil))
(insn 545 544 546 74 (set (reg/f:SI 2 r2 [329])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":267:23 253 {*arm_movsi_insn}
     (nil))
(insn 546 545 547 74 (set (reg/f:SI 3 r3 [330])
        (plus:SI (reg/f:SI 2 r2 [329])
            (reg:SI 3 r3 [orig:157 _47 ] [157]))) "kbd.c":267:23 7 {*arm_addsi3}
     (nil))
(insn 547 546 548 74 (set (reg:QI 2 r2 [331])
        (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                (const_int -14 [0xfffffffffffffff2])) [0 c+0 S1 A16])) "kbd.c":267:23 263 {*arm_movqi_insn}
     (nil))
(insn 548 547 549 74 (set (mem/v:QI (plus:SI (reg/f:SI 3 r3 [330])
                (const_int 4 [0x4])) [0 kp_77->buf[_48]+0 S1 A8])
        (reg:QI 2 r2 [331])) "kbd.c":267:23 263 {*arm_movqi_insn}
     (nil))
(insn 549 548 550 74 (set (reg/f:SI 3 r3 [332])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":268:12 253 {*arm_movsi_insn}
     (nil))
(insn 550 549 551 74 (set (reg:SI 3 r3 [orig:159 _50 ] [159])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [332])
                (const_int 132 [0x84])) [3 kp_77->head+0 S4 A32])) "kbd.c":268:12 253 {*arm_movsi_insn}
     (nil))
(insn 551 550 552 74 (parallel [
            (set (reg:CC_NZ 100 cc)
                (compare:CC_NZ (minus:SI (const_int 0 [0])
                        (reg:SI 3 r3 [orig:159 _50 ] [159]))
                    (const_int 0 [0])))
            (set (reg:SI 2 r2 [333])
                (minus:SI (const_int 0 [0])
                    (reg:SI 3 r3 [orig:159 _50 ] [159])))
        ]) "kbd.c":268:12 46 {subsi3_compare0}
     (nil))
(insn 552 551 553 74 (set (reg:SI 3 r3 [orig:160 _51 ] [160])
        (and:SI (reg:SI 3 r3 [orig:159 _50 ] [159])
            (const_int 127 [0x7f]))) "kbd.c":268:12 90 {*arm_andsi3_insn}
     (nil))
(insn 553 552 554 74 (set (reg:SI 2 r2 [334])
        (and:SI (reg:SI 2 r2 [333])
            (const_int 127 [0x7f]))) "kbd.c":268:12 90 {*arm_andsi3_insn}
     (nil))
(insn 554 553 555 74 (set (reg:SI 3 r3 [orig:160 _51 ] [160])
        (if_then_else:SI (ge:SI (reg:CC_NZ 100 cc)
                (const_int 0 [0]))
            (neg:SI (reg:SI 2 r2 [334]))
            (reg:SI 3 r3 [orig:160 _51 ] [160]))) "kbd.c":268:12 371 {*if_neg_move}
     (nil))
(insn 555 554 556 74 (set (reg/f:SI 2 r2 [335])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":268:12 253 {*arm_movsi_insn}
     (nil))
(insn 556 555 557 74 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [335])
                (const_int 132 [0x84])) [3 kp_77->head+0 S4 A32])
        (reg:SI 3 r3 [orig:160 _51 ] [160])) "kbd.c":268:12 253 {*arm_movsi_insn}
     (nil))
(insn 557 556 558 74 (set (reg/f:SI 3 r3 [336])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":270:5 253 {*arm_movsi_insn}
     (nil))
(insn 558 557 559 74 (set (reg:SI 3 r3 [orig:161 _52 ] [161])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [336])
                (const_int 140 [0x8c])) [3 kp_77->data+0 S4 A32])) "kbd.c":270:5 253 {*arm_movsi_insn}
     (nil))
(insn 559 558 560 74 (set (reg:SI 2 r2 [orig:162 _53 ] [162])
        (plus:SI (reg:SI 3 r3 [orig:161 _52 ] [161])
            (const_int 1 [0x1]))) "kbd.c":270:11 7 {*arm_addsi3}
     (nil))
(insn 560 559 561 74 (set (reg/f:SI 3 r3 [337])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":270:11 253 {*arm_movsi_insn}
     (nil))
(insn 561 560 562 74 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [337])
                (const_int 140 [0x8c])) [3 kp_77->data+0 S4 A32])
        (reg:SI 2 r2 [orig:162 _53 ] [162])) "kbd.c":270:11 253 {*arm_movsi_insn}
     (nil))
(insn 562 561 563 74 (set (reg:SI 3 r3 [338])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":271:3 253 {*arm_movsi_insn}
     (nil))
(insn 563 562 564 74 (set (reg/f:SI 3 r3 [orig:163 _54 ] [163])
        (plus:SI (reg:SI 3 r3 [338])
            (const_int 140 [0x8c]))) "kbd.c":271:3 7 {*arm_addsi3}
     (nil))
(insn 564 563 565 74 (set (reg:SI 0 r0)
        (reg/f:SI 3 r3 [orig:163 _54 ] [163])) "kbd.c":271:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 565 564 566 74 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kwakeup") [flags 0x41]  <function_decl 0x7fcdc0b26900 kwakeup>) [0 kwakeup S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "kbd.c":271:3 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 566 565 567 74 (set (reg:SI 3 r3 [339])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -14 [0xfffffffffffffff2])) [0 c+0 S1 A16]))) "kbd.c":273:6 175 {*arm_zero_extendqisi2}
     (nil))
(insn 567 566 568 74 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [339])
            (const_int 13 [0xd]))) "kbd.c":273:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 568 567 569 74 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 653)
            (pc))) "kbd.c":273:6 273 {arm_cond_branch}
     (nil)
 -> 653)
;;  succ:       75 (FALLTHRU)
;;              82
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 75, loop depth 0, maybe hot
;;  prev block 74, next block 76, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       74 (FALLTHRU)
;; bb 75 artificial_defs: { }
;; bb 75 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(note 569 568 570 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 570 569 571 75 (set (reg/f:SI 3 r3 [340])
        (symbol_ref:SI ("kline") [flags 0x2]  <var_decl 0x7fcdc0b1a7e0 kline>)) "kbd.c":274:10 253 {*arm_movsi_insn}
     (nil))
(insn 571 570 572 75 (set (reg:SI 3 r3 [orig:164 kline.18_55 ] [164])
        (mem/v/c:SI (reg/f:SI 3 r3 [340]) [3 kline+0 S4 A32])) "kbd.c":274:10 253 {*arm_movsi_insn}
     (nil))
(insn 572 571 573 75 (set (reg:SI 3 r3 [orig:165 _56 ] [165])
        (plus:SI (reg:SI 3 r3 [orig:164 kline.18_55 ] [164])
            (const_int 1 [0x1]))) "kbd.c":274:10 7 {*arm_addsi3}
     (nil))
(insn 573 572 574 75 (set (reg/f:SI 2 r2 [341])
        (symbol_ref:SI ("kline") [flags 0x2]  <var_decl 0x7fcdc0b1a7e0 kline>)) "kbd.c":274:10 253 {*arm_movsi_insn}
     (nil))
(insn 574 573 575 75 (set (mem/v/c:SI (reg/f:SI 2 r2 [341]) [3 kline+0 S4 A32])
        (reg:SI 3 r3 [orig:165 _56 ] [165])) "kbd.c":274:10 253 {*arm_movsi_insn}
     (nil))
(insn 575 574 576 75 (set (reg:SI 0 r0)
        (symbol_ref:SI ("kline") [flags 0x2]  <var_decl 0x7fcdc0b1a7e0 kline>)) "kbd.c":275:5 253 {*arm_movsi_insn}
     (nil))
(call_insn 576 575 620 75 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kwakeup") [flags 0x41]  <function_decl 0x7fcdc0b26900 kwakeup>) [0 kwakeup S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "kbd.c":275:5 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(jump_insn 620 576 621 75 (set (pc)
        (label_ref 577)) 284 {*arm_jump}
     (nil)
 -> 577)
;;  succ:       83
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 621 620 623)
;; basic block 76, loop depth 0, maybe hot
;;  prev block 75, next block 77, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5
;; bb 76 artificial_defs: { }
;; bb 76 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	
(code_label 623 621 622 76 55 (nil) [1 uses])
(note 622 623 624 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 624 622 625 76 (const_int 0 [0]) "kbd.c":139:5 311 {nop}
     (nil))
(jump_insn 625 624 626 76 (set (pc)
        (label_ref 577)) 284 {*arm_jump}
     (nil)
 -> 577)
;;  succ:       83 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 626 625 628)
;; basic block 77, loop depth 0, maybe hot
;;  prev block 76, next block 78, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7
;; bb 77 artificial_defs: { }
;; bb 77 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	
(code_label 628 626 627 77 56 (nil) [1 uses])
(note 627 628 629 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 629 627 630 77 (const_int 0 [0]) "kbd.c":143:8 311 {nop}
     (nil))
(jump_insn 630 629 631 77 (set (pc)
        (label_ref 577)) 284 {*arm_jump}
     (nil)
 -> 577)
;;  succ:       83 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 631 630 633)
;; basic block 78, loop depth 0, maybe hot
;;  prev block 77, next block 79, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8
;; bb 78 artificial_defs: { }
;; bb 78 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	
(code_label 633 631 632 78 57 (nil) [1 uses])
(note 632 633 634 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 634 632 635 78 (const_int 0 [0]) "kbd.c":152:8 311 {nop}
     (nil))
(jump_insn 635 634 636 78 (set (pc)
        (label_ref 577)) 284 {*arm_jump}
     (nil)
 -> 577)
;;  succ:       83 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 636 635 638)
;; basic block 79, loop depth 0, maybe hot
;;  prev block 78, next block 80, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       28
;;              29 [always] 
;; bb 79 artificial_defs: { }
;; bb 79 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	
(code_label 638 636 637 79 58 (nil) [2 uses])
(note 637 638 639 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 639 637 640 79 (const_int 0 [0]) "kbd.c":199:5 311 {nop}
     (nil))
(jump_insn 640 639 641 79 (set (pc)
        (label_ref 577)) 284 {*arm_jump}
     (nil)
 -> 577)
;;  succ:       83 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 641 640 643)
;; basic block 80, loop depth 0, maybe hot
;;  prev block 79, next block 81, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       41
;; bb 80 artificial_defs: { }
;; bb 80 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	
(code_label 643 641 642 80 59 (nil) [1 uses])
(note 642 643 644 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 644 642 645 80 (const_int 0 [0]) "kbd.c":223:7 311 {nop}
     (nil))
(jump_insn 645 644 646 80 (set (pc)
        (label_ref 577)) 284 {*arm_jump}
     (nil)
 -> 577)
;;  succ:       83 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 646 645 648)
;; basic block 81, loop depth 0, maybe hot
;;  prev block 80, next block 82, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       73
;; bb 81 artificial_defs: { }
;; bb 81 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	
(code_label 648 646 647 81 60 (nil) [1 uses])
(note 647 648 649 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 649 647 650 81 (const_int 0 [0]) "kbd.c":265:6 311 {nop}
     (nil))
(jump_insn 650 649 651 81 (set (pc)
        (label_ref 577)) 284 {*arm_jump}
     (nil)
 -> 577)
;;  succ:       83 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 651 650 653)
;; basic block 82, loop depth 0, maybe hot
;;  prev block 81, next block 83, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       74
;; bb 82 artificial_defs: { }
;; bb 82 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	
(code_label 653 651 652 82 61 (nil) [1 uses])
(note 652 653 654 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 654 652 577 82 (const_int 0 [0]) "kbd.c":277:2 311 {nop}
     (nil))
;;  succ:       83 [always]  (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 83, loop depth 0, maybe hot
;;  prev block 82, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       75
;;              76 [always] 
;;              77 [always] 
;;              49 [always] 
;;              10 [always] 
;;              12 [always] 
;;              21 [always] 
;;              78 [always] 
;;              32 [always] 
;;              34 [always] 
;;              36 [always] 
;;              79 [always] 
;;              38 [always] 
;;              43 [always] 
;;              45 [always] 
;;              47 [always] 
;;              80 [always] 
;;              82 [always]  (FALLTHRU)
;;              81 [always] 
;; bb 83 artificial_defs: { }
;; bb 83 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
(code_label 577 654 578 83 19 ("out") [18 uses])
(note 578 577 579 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 579 578 580 83 (set (reg/f:SI 3 r3 [342])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":278:7 253 {*arm_movsi_insn}
     (nil))
(insn 580 579 581 83 (set (reg/f:SI 3 r3 [orig:166 _57 ] [166])
        (mem/v/f:SI (reg/f:SI 3 r3 [342]) [2 kp_77->base+0 S4 A32])) "kbd.c":278:7 253 {*arm_movsi_insn}
     (nil))
(insn 581 580 582 83 (set (reg/f:SI 3 r3 [orig:167 _58 ] [167])
        (plus:SI (reg/f:SI 3 r3 [orig:166 _57 ] [166])
            (const_int 4 [0x4]))) "kbd.c":278:14 7 {*arm_addsi3}
     (nil))
(insn 582 581 584 83 (set (reg:SI 2 r2 [343])
        (const_int -1 [0xffffffffffffffff])) "kbd.c":278:23 253 {*arm_movsi_insn}
     (nil))
(insn 584 582 585 83 (set (mem:QI (reg/f:SI 3 r3 [orig:167 _58 ] [167]) [0 *_58+0 S1 A8])
        (reg:QI 2 r2 [344])) "kbd.c":278:23 263 {*arm_movqi_insn}
     (nil))
(insn 585 584 586 83 (set (reg/f:SI 3 r3 [orig:168 _59 ] [168])
        (const_int 269746224 [0x10140030])) "kbd.c":279:3 253 {*arm_movsi_insn}
     (nil))
(insn 586 585 587 83 (set (reg:SI 2 r2 [345])
        (const_int 255 [0xff])) "kbd.c":279:13 253 {*arm_movsi_insn}
     (nil))
(insn 587 586 656 83 (set (mem/v:SI (reg/f:SI 3 r3 [orig:168 _59 ] [168]) [3 *_59+0 S4 A32])
        (reg:SI 2 r2 [345])) "kbd.c":279:13 253 {*arm_movsi_insn}
     (nil))
(insn 656 587 664 83 (const_int 0 [0]) "kbd.c":281:1 311 {nop}
     (nil))
(note 664 656 665 83 NOTE_INSN_EPILOGUE_BEG)
(insn 665 664 666 83 (unspec_volatile [
            (const_int 0 [0])
        ] VUNSPEC_BLOCKAGE) "kbd.c":281:1 -1
     (nil))
(insn/f 666 665 667 83 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 11 fp)
            (const_int -4 [0xfffffffffffffffc]))) "kbd.c":281:1 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 13 sp)
            (plus:SI (reg/f:SI 11 fp)
                (const_int -4 [0xfffffffffffffffc])))
        (nil)))
(insn 667 666 668 83 (unspec:SI [
            (reg/f:SI 13 sp)
        ] UNSPEC_REGISTER_USE) "kbd.c":281:1 -1
     (nil))
(jump_insn 668 667 669 83 (parallel [
            (return)
            (set/f (reg/f:SI 13 sp)
                (plus:SI (reg/f:SI 13 sp)
                    (const_int 8 [0x8])))
            (set/f (reg/f:SI 11 fp)
                (mem/c:SI (reg/f:SI 13 sp) [5  S4 A32]))
            (set/f (reg:SI 15 pc)
                (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                        (const_int 4 [0x4])) [5  S4 A32]))
        ]) "kbd.c":281:1 -1
     (expr_list:REG_CFA_RESTORE (reg/f:SI 11 fp)
        (nil))
 -> return)
;;  succ:       EXIT [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 669 668 658)
(note 658 669 0 NOTE_INSN_DELETED)

;; Function kbd_handler2 (kbd_handler2, funcdef_no=6, decl_uid=4529, cgraph_uid=7, symbol_order=21)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 40 n_edges 61 count 45 (  1.1)
scanning new insn with uid = 354.
scanning new insn with uid = 355.
scanning new insn with uid = 356.
scanning new insn with uid = 357.
scanning new insn with uid = 348.
scanning new insn with uid = 349.
scanning new insn with uid = 350.
scanning new insn with uid = 351.
verify found no changes in insn with uid = 146.
verify found no changes in insn with uid = 186.
verify found no changes in insn with uid = 237.
verify found no changes in insn with uid = 261.
verify found no changes in insn with uid = 282.
verify found no changes in insn with uid = 315.
verify found no changes in insn with uid = 326.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns


kbd_handler2

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 11 [fp] 13 [sp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={16d,9u} r1={17d,9u} r2={36d,40u,12e} r3={131d,126u} r11={3d,84u} r12={14d} r13={5d,58u} r14={8d,2u} r15={8d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={7d} r38={7d} r39={7d} r40={7d} r41={7d} r42={7d} r43={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r76={7d} r77={7d} r78={7d} r79={7d} r80={7d} r81={7d} r82={7d} r83={7d} r84={7d} r85={7d} r86={7d} r87={7d} r88={7d} r89={7d} r90={7d} r91={7d} r92={7d} r93={7d} r94={7d} r95={7d} r96={7d} r97={7d} r98={7d} r99={7d} r100={30d,23u} r101={7d} r102={1d,1u} r104={7d} r105={7d} r106={7d} 
;;    total ref usage 1249{885d,352u,12e} in 263{256 regular + 7 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(note 3 1 348 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 348 3 349 2 (parallel [
            (set (mem/c:BLK (pre_modify:SI (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -8 [0xfffffffffffffff8]))) [5  A8])
                (unspec:BLK [
                        (reg/f:SI 11 fp)
                    ] UNSPEC_PUSH_MULT))
            (use (reg:SI 14 lr))
        ]) "kbd.c":318:1 -1
     (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                (set/f (reg/f:SI 13 sp)
                    (plus:SI (reg/f:SI 13 sp)
                        (const_int -8 [0xfffffffffffffff8])))
                (set/f (mem/c:SI (reg/f:SI 13 sp) [5  S4 A32])
                    (reg/f:SI 11 fp))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 4 [0x4])) [5  S4 A32])
                    (reg:SI 14 lr))
            ])
        (nil)))
(insn/f 349 348 350 2 (set (reg/f:SI 11 fp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 4 [0x4]))) "kbd.c":318:1 -1
     (nil))
(insn/f 350 349 351 2 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -16 [0xfffffffffffffff0]))) "kbd.c":318:1 -1
     (nil))
(insn 351 350 352 2 (set (mem:BLK (scratch) [0  A8])
        (unspec:BLK [
                (reg/f:SI 13 sp)
                (reg/f:SI 11 fp)
            ] UNSPEC_PRLG_STK)) "kbd.c":318:1 -1
     (nil))
(note 352 351 2 2 NOTE_INSN_PROLOGUE_END)
(note 2 352 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 3 r3 [148])
        (symbol_ref:SI ("kbd") [flags 0x2]  <var_decl 0x7fcdc0b1a5a0 kbd>)) "kbd.c":321:8 253 {*arm_movsi_insn}
     (nil))
(insn 6 5 7 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])
        (reg/f:SI 3 r3 [148])) "kbd.c":321:8 253 {*arm_movsi_insn}
     (nil))
(insn 7 6 8 2 (set (reg/f:SI 3 r3 [149])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":323:15 253 {*arm_movsi_insn}
     (nil))
(insn 8 7 9 2 (set (reg/f:SI 3 r3 [orig:113 _1 ] [113])
        (mem/v/f:SI (reg/f:SI 3 r3 [149]) [2 kp_48->base+0 S4 A32])) "kbd.c":323:15 253 {*arm_movsi_insn}
     (nil))
(insn 9 8 10 2 (set (reg/f:SI 3 r3 [orig:114 _2 ] [114])
        (plus:SI (reg/f:SI 3 r3 [orig:113 _1 ] [113])
            (const_int 8 [0x8]))) "kbd.c":323:22 7 {*arm_addsi3}
     (nil))
(insn 10 9 11 2 (set (reg:QI 3 r3 [150])
        (mem:QI (reg/f:SI 3 r3 [orig:114 _2 ] [114]) [0 *_2+0 S1 A8])) "kbd.c":323:9 263 {*arm_movqi_insn}
     (nil))
(insn 11 10 12 2 (set (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                (const_int -13 [0xfffffffffffffff3])) [0 scode+0 S1 A8])
        (reg:QI 3 r3 [150])) "kbd.c":323:9 263 {*arm_movqi_insn}
     (nil))
(insn 12 11 13 2 (set (reg:SI 3 r3 [151])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -13 [0xfffffffffffffff3])) [0 scode+0 S1 A8]))) "kbd.c":326:6 175 {*arm_zero_extendqisi2}
     (nil))
(insn 13 12 14 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [151])
            (const_int 240 [0xf0]))) "kbd.c":326:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) "kbd.c":326:6 273 {arm_cond_branch}
     (nil)
 -> 21)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 3 (set (reg/f:SI 3 r3 [152])
        (symbol_ref:SI ("release") [flags 0x2]  <var_decl 0x7fcdc0b1a6c0 release>)) "kbd.c":327:13 253 {*arm_movsi_insn}
     (nil))
(insn 17 16 18 3 (set (reg:SI 2 r2 [153])
        (const_int 1 [0x1])) "kbd.c":327:13 253 {*arm_movsi_insn}
     (nil))
(insn 18 17 331 3 (set (mem/c:SI (reg/f:SI 3 r3 [152]) [3 release+0 S4 A32])
        (reg:SI 2 r2 [153])) "kbd.c":327:13 253 {*arm_movsi_insn}
     (nil))
(jump_insn 331 18 332 3 (set (pc)
        (label_ref 329)) "kbd.c":328:5 284 {*arm_jump}
     (nil)
 -> 329)
;;  succ:       39 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 332 331 21)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(code_label 21 332 22 4 65 (nil) [1 uses])
(note 22 21 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 4 (set (reg/f:SI 3 r3 [154])
        (symbol_ref:SI ("release") [flags 0x2]  <var_decl 0x7fcdc0b1a6c0 release>)) "kbd.c":331:7 253 {*arm_movsi_insn}
     (nil))
(insn 24 23 25 4 (set (reg:SI 3 r3 [orig:115 release.19_3 ] [115])
        (mem/c:SI (reg/f:SI 3 r3 [154]) [3 release+0 S4 A32])) "kbd.c":331:7 253 {*arm_movsi_insn}
     (nil))
(insn 25 24 26 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:115 release.19_3 ] [115])
            (const_int 0 [0]))) "kbd.c":331:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 26 25 27 4 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) "kbd.c":331:6 273 {arm_cond_branch}
     (nil)
 -> 37)
;;  succ:       5 (FALLTHRU)
;;              7
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(note 27 26 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 5 (set (reg:SI 3 r3 [155])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -13 [0xfffffffffffffff3])) [0 scode+0 S1 A8]))) "kbd.c":331:15 175 {*arm_zero_extendqisi2}
     (nil))
(insn 29 28 30 5 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [155])
            (const_int 18 [0x12]))) "kbd.c":331:15 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 30 29 31 5 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) "kbd.c":331:15 273 {arm_cond_branch}
     (nil)
 -> 37)
;;  succ:       6 (FALLTHRU)
;;              7
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
(note 31 30 32 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 6 (set (reg/f:SI 3 r3 [156])
        (symbol_ref:SI ("release") [flags 0x2]  <var_decl 0x7fcdc0b1a6c0 release>)) "kbd.c":332:13 253 {*arm_movsi_insn}
     (nil))
(insn 33 32 34 6 (set (reg:SI 2 r2 [157])
        (const_int 0 [0])) "kbd.c":332:13 253 {*arm_movsi_insn}
     (nil))
(insn 34 33 333 6 (set (mem/c:SI (reg/f:SI 3 r3 [156]) [3 release+0 S4 A32])
        (reg:SI 2 r2 [157])) "kbd.c":332:13 253 {*arm_movsi_insn}
     (nil))
(jump_insn 333 34 334 6 (set (pc)
        (label_ref 329)) "kbd.c":333:5 284 {*arm_jump}
     (nil)
 -> 329)
;;  succ:       39 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 334 333 37)
;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4
;;              5
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(code_label 37 334 38 7 67 (nil) [2 uses])
(note 38 37 39 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 7 (set (reg/f:SI 3 r3 [158])
        (symbol_ref:SI ("release") [flags 0x2]  <var_decl 0x7fcdc0b1a6c0 release>)) "kbd.c":336:7 253 {*arm_movsi_insn}
     (nil))
(insn 40 39 41 7 (set (reg:SI 3 r3 [orig:116 release.20_4 ] [116])
        (mem/c:SI (reg/f:SI 3 r3 [158]) [3 release+0 S4 A32])) "kbd.c":336:7 253 {*arm_movsi_insn}
     (nil))
(insn 41 40 42 7 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:116 release.20_4 ] [116])
            (const_int 0 [0]))) "kbd.c":336:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 42 41 43 7 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) "kbd.c":336:6 273 {arm_cond_branch}
     (nil)
 -> 56)
;;  succ:       8 (FALLTHRU)
;;              10
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(note 43 42 44 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 8 (set (reg:SI 3 r3 [159])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -13 [0xfffffffffffffff3])) [0 scode+0 S1 A8]))) "kbd.c":336:15 175 {*arm_zero_extendqisi2}
     (nil))
(insn 45 44 46 8 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [159])
            (const_int 18 [0x12]))) "kbd.c":336:15 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 46 45 47 8 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) "kbd.c":336:15 273 {arm_cond_branch}
     (nil)
 -> 56)
;;  succ:       9 (FALLTHRU)
;;              10
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
(note 47 46 48 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 9 (set (reg/f:SI 3 r3 [160])
        (symbol_ref:SI ("release") [flags 0x2]  <var_decl 0x7fcdc0b1a6c0 release>)) "kbd.c":337:13 253 {*arm_movsi_insn}
     (nil))
(insn 49 48 50 9 (set (reg:SI 2 r2 [161])
        (const_int 0 [0])) "kbd.c":337:13 253 {*arm_movsi_insn}
     (nil))
(insn 50 49 51 9 (set (mem/c:SI (reg/f:SI 3 r3 [160]) [3 release+0 S4 A32])
        (reg:SI 2 r2 [161])) "kbd.c":337:13 253 {*arm_movsi_insn}
     (nil))
(insn 51 50 52 9 (set (reg/f:SI 3 r3 [162])
        (symbol_ref:SI ("shifted") [flags 0x2]  <var_decl 0x7fcdc0b1a630 shifted>)) "kbd.c":338:13 253 {*arm_movsi_insn}
     (nil))
(insn 52 51 53 9 (set (reg:SI 2 r2 [163])
        (const_int 0 [0])) "kbd.c":338:13 253 {*arm_movsi_insn}
     (nil))
(insn 53 52 335 9 (set (mem/c:SI (reg/f:SI 3 r3 [162]) [3 shifted+0 S4 A32])
        (reg:SI 2 r2 [163])) "kbd.c":338:13 253 {*arm_movsi_insn}
     (nil))
(jump_insn 335 53 336 9 (set (pc)
        (label_ref 329)) "kbd.c":339:5 284 {*arm_jump}
     (nil)
 -> 329)
;;  succ:       39 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 336 335 56)
;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7
;;              8
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(code_label 56 336 57 10 68 (nil) [2 uses])
(note 57 56 58 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 10 (set (reg/f:SI 3 r3 [164])
        (symbol_ref:SI ("release") [flags 0x2]  <var_decl 0x7fcdc0b1a6c0 release>)) "kbd.c":342:7 253 {*arm_movsi_insn}
     (nil))
(insn 59 58 60 10 (set (reg:SI 3 r3 [orig:117 release.21_5 ] [117])
        (mem/c:SI (reg/f:SI 3 r3 [164]) [3 release+0 S4 A32])) "kbd.c":342:7 253 {*arm_movsi_insn}
     (nil))
(insn 60 59 61 10 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:117 release.21_5 ] [117])
            (const_int 0 [0]))) "kbd.c":342:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 61 60 62 10 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 75)
            (pc))) "kbd.c":342:6 273 {arm_cond_branch}
     (nil)
 -> 75)
;;  succ:       11 (FALLTHRU)
;;              13
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(note 62 61 63 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 11 (set (reg:SI 3 r3 [165])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -13 [0xfffffffffffffff3])) [0 scode+0 S1 A8]))) "kbd.c":342:16 175 {*arm_zero_extendqisi2}
     (nil))
(insn 64 63 65 11 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [165])
            (const_int 18 [0x12]))) "kbd.c":342:16 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 65 64 66 11 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 75)
            (pc))) "kbd.c":342:16 273 {arm_cond_branch}
     (nil)
 -> 75)
;;  succ:       12 (FALLTHRU)
;;              13
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
(note 66 65 67 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 12 (set (reg/f:SI 3 r3 [166])
        (symbol_ref:SI ("release") [flags 0x2]  <var_decl 0x7fcdc0b1a6c0 release>)) "kbd.c":343:13 253 {*arm_movsi_insn}
     (nil))
(insn 68 67 69 12 (set (reg:SI 2 r2 [167])
        (const_int 0 [0])) "kbd.c":343:13 253 {*arm_movsi_insn}
     (nil))
(insn 69 68 70 12 (set (mem/c:SI (reg/f:SI 3 r3 [166]) [3 release+0 S4 A32])
        (reg:SI 2 r2 [167])) "kbd.c":343:13 253 {*arm_movsi_insn}
     (nil))
(insn 70 69 71 12 (set (reg/f:SI 3 r3 [168])
        (symbol_ref:SI ("shifted") [flags 0x2]  <var_decl 0x7fcdc0b1a630 shifted>)) "kbd.c":344:13 253 {*arm_movsi_insn}
     (nil))
(insn 71 70 72 12 (set (reg:SI 2 r2 [169])
        (const_int 1 [0x1])) "kbd.c":344:13 253 {*arm_movsi_insn}
     (nil))
(insn 72 71 337 12 (set (mem/c:SI (reg/f:SI 3 r3 [168]) [3 shifted+0 S4 A32])
        (reg:SI 2 r2 [169])) "kbd.c":344:13 253 {*arm_movsi_insn}
     (nil))
(jump_insn 337 72 338 12 (set (pc)
        (label_ref 329)) "kbd.c":345:5 284 {*arm_jump}
     (nil)
 -> 329)
;;  succ:       39 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 338 337 75)
;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       10
;;              11
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(code_label 75 338 76 13 69 (nil) [2 uses])
(note 76 75 77 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 13 (set (reg/f:SI 3 r3 [170])
        (symbol_ref:SI ("release") [flags 0x2]  <var_decl 0x7fcdc0b1a6c0 release>)) "kbd.c":348:7 253 {*arm_movsi_insn}
     (nil))
(insn 78 77 79 13 (set (reg:SI 3 r3 [orig:118 release.22_6 ] [118])
        (mem/c:SI (reg/f:SI 3 r3 [170]) [3 release+0 S4 A32])) "kbd.c":348:7 253 {*arm_movsi_insn}
     (nil))
(insn 79 78 80 13 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:118 release.22_6 ] [118])
            (const_int 0 [0]))) "kbd.c":348:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 80 79 81 13 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) "kbd.c":348:6 273 {arm_cond_branch}
     (nil)
 -> 94)
;;  succ:       14 (FALLTHRU)
;;              16
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 14, loop depth 0, maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(note 81 80 82 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 14 (set (reg:SI 3 r3 [171])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -13 [0xfffffffffffffff3])) [0 scode+0 S1 A8]))) "kbd.c":348:16 175 {*arm_zero_extendqisi2}
     (nil))
(insn 83 82 84 14 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [171])
            (const_int 20 [0x14]))) "kbd.c":348:16 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 84 83 85 14 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) "kbd.c":348:16 273 {arm_cond_branch}
     (nil)
 -> 94)
;;  succ:       15 (FALLTHRU)
;;              16
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 15, loop depth 0, maybe hot
;;  prev block 14, next block 16, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
(note 85 84 86 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 87 15 (set (reg/f:SI 3 r3 [172])
        (symbol_ref:SI ("release") [flags 0x2]  <var_decl 0x7fcdc0b1a6c0 release>)) "kbd.c":349:13 253 {*arm_movsi_insn}
     (nil))
(insn 87 86 88 15 (set (reg:SI 2 r2 [173])
        (const_int 0 [0])) "kbd.c":349:13 253 {*arm_movsi_insn}
     (nil))
(insn 88 87 89 15 (set (mem/c:SI (reg/f:SI 3 r3 [172]) [3 release+0 S4 A32])
        (reg:SI 2 r2 [173])) "kbd.c":349:13 253 {*arm_movsi_insn}
     (nil))
(insn 89 88 90 15 (set (reg/f:SI 3 r3 [174])
        (symbol_ref:SI ("control") [flags 0x2]  <var_decl 0x7fcdc0b1a750 control>)) "kbd.c":350:13 253 {*arm_movsi_insn}
     (nil))
(insn 90 89 91 15 (set (reg:SI 2 r2 [175])
        (const_int 1 [0x1])) "kbd.c":350:13 253 {*arm_movsi_insn}
     (nil))
(insn 91 90 339 15 (set (mem/c:SI (reg/f:SI 3 r3 [174]) [3 control+0 S4 A32])
        (reg:SI 2 r2 [175])) "kbd.c":350:13 253 {*arm_movsi_insn}
     (nil))
(jump_insn 339 91 340 15 (set (pc)
        (label_ref 329)) "kbd.c":351:5 284 {*arm_jump}
     (nil)
 -> 329)
;;  succ:       39 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 340 339 94)
;; basic block 16, loop depth 0, maybe hot
;;  prev block 15, next block 17, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       13
;;              14
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(code_label 94 340 95 16 70 (nil) [2 uses])
(note 95 94 96 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 97 16 (set (reg/f:SI 3 r3 [176])
        (symbol_ref:SI ("release") [flags 0x2]  <var_decl 0x7fcdc0b1a6c0 release>)) "kbd.c":354:7 253 {*arm_movsi_insn}
     (nil))
(insn 97 96 98 16 (set (reg:SI 3 r3 [orig:119 release.23_7 ] [119])
        (mem/c:SI (reg/f:SI 3 r3 [176]) [3 release+0 S4 A32])) "kbd.c":354:7 253 {*arm_movsi_insn}
     (nil))
(insn 98 97 99 16 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:119 release.23_7 ] [119])
            (const_int 0 [0]))) "kbd.c":354:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 99 98 100 16 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 113)
            (pc))) "kbd.c":354:6 273 {arm_cond_branch}
     (nil)
 -> 113)
;;  succ:       17 (FALLTHRU)
;;              19
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 17, loop depth 0, maybe hot
;;  prev block 16, next block 18, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       16 (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(note 100 99 101 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 101 100 102 17 (set (reg:SI 3 r3 [177])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -13 [0xfffffffffffffff3])) [0 scode+0 S1 A8]))) "kbd.c":354:15 175 {*arm_zero_extendqisi2}
     (nil))
(insn 102 101 103 17 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [177])
            (const_int 20 [0x14]))) "kbd.c":354:15 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 103 102 104 17 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 113)
            (pc))) "kbd.c":354:15 273 {arm_cond_branch}
     (nil)
 -> 113)
;;  succ:       18 (FALLTHRU)
;;              19
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 18, loop depth 0, maybe hot
;;  prev block 17, next block 19, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       17 (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
(note 104 103 105 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 105 104 106 18 (set (reg/f:SI 3 r3 [178])
        (symbol_ref:SI ("release") [flags 0x2]  <var_decl 0x7fcdc0b1a6c0 release>)) "kbd.c":355:13 253 {*arm_movsi_insn}
     (nil))
(insn 106 105 107 18 (set (reg:SI 2 r2 [179])
        (const_int 0 [0])) "kbd.c":355:13 253 {*arm_movsi_insn}
     (nil))
(insn 107 106 108 18 (set (mem/c:SI (reg/f:SI 3 r3 [178]) [3 release+0 S4 A32])
        (reg:SI 2 r2 [179])) "kbd.c":355:13 253 {*arm_movsi_insn}
     (nil))
(insn 108 107 109 18 (set (reg/f:SI 3 r3 [180])
        (symbol_ref:SI ("control") [flags 0x2]  <var_decl 0x7fcdc0b1a750 control>)) "kbd.c":356:13 253 {*arm_movsi_insn}
     (nil))
(insn 109 108 110 18 (set (reg:SI 2 r2 [181])
        (const_int 0 [0])) "kbd.c":356:13 253 {*arm_movsi_insn}
     (nil))
(insn 110 109 341 18 (set (mem/c:SI (reg/f:SI 3 r3 [180]) [3 control+0 S4 A32])
        (reg:SI 2 r2 [181])) "kbd.c":356:13 253 {*arm_movsi_insn}
     (nil))
(jump_insn 341 110 342 18 (set (pc)
        (label_ref 329)) "kbd.c":357:5 284 {*arm_jump}
     (nil)
 -> 329)
;;  succ:       39 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 342 341 113)
;; basic block 19, loop depth 0, maybe hot
;;  prev block 18, next block 20, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       16
;;              17
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(code_label 113 342 114 19 71 (nil) [2 uses])
(note 114 113 115 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 115 114 116 19 (set (reg/f:SI 3 r3 [182])
        (symbol_ref:SI ("shifted") [flags 0x2]  <var_decl 0x7fcdc0b1a630 shifted>)) "kbd.c":360:7 253 {*arm_movsi_insn}
     (nil))
(insn 116 115 117 19 (set (reg:SI 3 r3 [orig:120 shifted.24_8 ] [120])
        (mem/c:SI (reg/f:SI 3 r3 [182]) [3 shifted+0 S4 A32])) "kbd.c":360:7 253 {*arm_movsi_insn}
     (nil))
(insn 117 116 118 19 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:120 shifted.24_8 ] [120])
            (const_int 0 [0]))) "kbd.c":360:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 118 117 119 19 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 126)
            (pc))) "kbd.c":360:6 273 {arm_cond_branch}
     (nil)
 -> 126)
;;  succ:       20 (FALLTHRU)
;;              21
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 20, loop depth 0, maybe hot
;;  prev block 19, next block 21, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       19 (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
(note 119 118 120 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 120 119 121 20 (set (reg:SI 3 r3 [orig:121 _9 ] [121])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -13 [0xfffffffffffffff3])) [0 scode+0 S1 A8]))) "kbd.c":361:14 175 {*arm_zero_extendqisi2}
     (nil))
(insn 121 120 122 20 (set (reg/f:SI 2 r2 [183])
        (symbol_ref:SI ("ltab") [flags 0x2]  <var_decl 0x7fcdc0b1a1b0 ltab>)) "kbd.c":361:8 253 {*arm_movsi_insn}
     (nil))
(insn 122 121 123 20 (set (reg:QI 3 r3 [184])
        (mem:QI (plus:SI (reg/f:SI 2 r2 [183])
                (reg:SI 3 r3 [orig:121 _9 ] [121])) [0 ltab[_9]+0 S1 A8])) "kbd.c":361:8 263 {*arm_movqi_insn}
     (nil))
(insn 123 122 343 20 (set (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                (const_int -14 [0xfffffffffffffff2])) [0 c+0 S1 A16])
        (reg:QI 3 r3 [184])) "kbd.c":361:8 263 {*arm_movqi_insn}
     (nil))
(jump_insn 343 123 344 20 (set (pc)
        (label_ref 132)) 284 {*arm_jump}
     (nil)
 -> 132)
;;  succ:       22 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 344 343 126)
;; basic block 21, loop depth 0, maybe hot
;;  prev block 20, next block 22, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       19
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
(code_label 126 344 127 21 72 (nil) [1 uses])
(note 127 126 128 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 128 127 129 21 (set (reg:SI 3 r3 [orig:122 _10 ] [122])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -13 [0xfffffffffffffff3])) [0 scode+0 S1 A8]))) "kbd.c":363:14 175 {*arm_zero_extendqisi2}
     (nil))
(insn 129 128 130 21 (set (reg/f:SI 2 r2 [185])
        (symbol_ref:SI ("utab") [flags 0x2]  <var_decl 0x7fcdc0b1a360 utab>)) "kbd.c":363:8 253 {*arm_movsi_insn}
     (nil))
(insn 130 129 131 21 (set (reg:QI 3 r3 [186])
        (mem:QI (plus:SI (reg/f:SI 2 r2 [185])
                (reg:SI 3 r3 [orig:122 _10 ] [122])) [0 utab[_10]+0 S1 A8])) "kbd.c":363:8 263 {*arm_movqi_insn}
     (nil))
(insn 131 130 132 21 (set (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                (const_int -14 [0xfffffffffffffff2])) [0 c+0 S1 A16])
        (reg:QI 3 r3 [186])) "kbd.c":363:8 263 {*arm_movqi_insn}
     (nil))
;;  succ:       22 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 22, loop depth 0, maybe hot
;;  prev block 21, next block 23, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       21 (FALLTHRU)
;;              20 [always] 
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(code_label 132 131 133 22 73 (nil) [1 uses])
(note 133 132 134 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 134 133 135 22 (set (reg/f:SI 3 r3 [187])
        (symbol_ref:SI ("control") [flags 0x2]  <var_decl 0x7fcdc0b1a750 control>)) "kbd.c":366:7 253 {*arm_movsi_insn}
     (nil))
(insn 135 134 136 22 (set (reg:SI 3 r3 [orig:123 control.25_11 ] [123])
        (mem/c:SI (reg/f:SI 3 r3 [187]) [3 control+0 S4 A32])) "kbd.c":366:7 253 {*arm_movsi_insn}
     (nil))
(insn 136 135 137 22 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:123 control.25_11 ] [123])
            (const_int 0 [0]))) "kbd.c":366:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 137 136 138 22 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 244)
            (pc))) "kbd.c":366:6 273 {arm_cond_branch}
     (nil)
 -> 244)
;;  succ:       23 (FALLTHRU)
;;              31
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 23, loop depth 0, maybe hot
;;  prev block 22, next block 24, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       22 (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(note 138 137 139 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 139 138 140 23 (set (reg:SI 3 r3 [188])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -13 [0xfffffffffffffff3])) [0 scode+0 S1 A8]))) "kbd.c":366:15 175 {*arm_zero_extendqisi2}
     (nil))
(insn 140 139 141 23 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [188])
            (const_int 33 [0x21]))) "kbd.c":366:15 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 141 140 142 23 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 244)
            (pc))) "kbd.c":366:15 273 {arm_cond_branch}
     (nil)
 -> 244)
;;  succ:       24 (FALLTHRU)
;;              31
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 24, loop depth 0, maybe hot
;;  prev block 23, next block 25, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       23 (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(note 142 141 143 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 143 142 144 24 (set (reg:SI 3 r3 [orig:124 _12 ] [124])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -13 [0xfffffffffffffff3])) [0 scode+0 S1 A8]))) "kbd.c":368:5 175 {*arm_zero_extendqisi2}
     (nil))
(insn 144 143 145 24 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [orig:124 _12 ] [124])) "kbd.c":368:5 253 {*arm_movsi_insn}
     (nil))
(insn 145 144 146 24 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC5") [flags 0x2]  <var_decl 0x7fcdc0b61cf0 *.LC5>)) "kbd.c":368:5 253 {*arm_movsi_insn}
     (nil))
(call_insn 146 145 147 24 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kprintf") [flags 0x41]  <function_decl 0x7fcdc0b13a00 kprintf>) [0 kprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "kbd.c":368:5 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 147 146 148 24 (set (reg:SI 3 r3 [189])
        (const_int 1 [0x1])) "kbd.c":369:11 253 {*arm_movsi_insn}
     (nil))
(insn 148 147 345 24 (set (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A64])
        (reg:SI 3 r3 [189])) "kbd.c":369:11 253 {*arm_movsi_insn}
     (nil))
(jump_insn 345 148 346 24 (set (pc)
        (label_ref 227)) "kbd.c":369:5 284 {*arm_jump}
     (nil)
 -> 227)
;;  succ:       29 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 346 345 229)
;; basic block 25, loop depth 0, maybe hot
;;  prev block 24, next block 26, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       29
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3] 100 [cc]
(code_label 229 346 151 25 77 (nil) [1 uses])
(note 151 229 152 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 152 151 153 25 (set (reg/f:SI 1 r1 [190])
        (symbol_ref:SI ("proc") [flags 0x40]  <var_decl 0x7fcdc17fe5a0 proc>)) "kbd.c":370:18 253 {*arm_movsi_insn}
     (nil))
(insn 153 152 154 25 (set (reg:SI 2 r2 [191])
        (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A64])) "kbd.c":370:18 253 {*arm_movsi_insn}
     (nil))
(insn 154 153 155 25 (set (reg:SI 3 r3 [192])
        (reg:SI 2 r2 [191])) "kbd.c":370:18 253 {*arm_movsi_insn}
     (nil))
(insn 155 154 156 25 (set (reg:SI 3 r3 [192])
        (ashift:SI (reg:SI 3 r3 [192])
            (const_int 6 [0x6]))) "kbd.c":370:18 147 {*arm_shiftsi3}
     (nil))
(insn 156 155 157 25 (set (reg:SI 3 r3 [192])
        (plus:SI (reg:SI 3 r3 [192])
            (reg:SI 2 r2 [191]))) "kbd.c":370:18 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 2 r2 [191])
            (const_int 65 [0x41]))
        (nil)))
(insn 157 156 158 25 (set (reg:SI 3 r3 [192])
        (ashift:SI (reg:SI 3 r3 [192])
            (const_int 1 [0x1]))) "kbd.c":370:18 147 {*arm_shiftsi3}
     (nil))
(insn 158 157 159 25 (set (reg:SI 3 r3 [192])
        (plus:SI (reg:SI 3 r3 [192])
            (reg:SI 2 r2 [191]))) "kbd.c":370:18 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 2 r2 [191])
            (const_int 131 [0x83]))
        (nil)))
(insn 159 158 160 25 (set (reg:SI 3 r3 [192])
        (ashift:SI (reg:SI 3 r3 [192])
            (const_int 3 [0x3]))) "kbd.c":370:18 147 {*arm_shiftsi3}
     (nil))
(insn 160 159 161 25 (set (reg:SI 3 r3 [192])
        (minus:SI (reg:SI 3 r3 [192])
            (reg:SI 2 r2 [191]))) "kbd.c":370:18 45 {*arm_subsi3_insn}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 2 r2 [191])
            (const_int 1047 [0x417]))
        (nil)))
(insn 161 160 163 25 (set (reg:SI 3 r3 [193])
        (ashift:SI (reg:SI 3 r3 [192])
            (const_int 2 [0x2]))) "kbd.c":370:18 147 {*arm_shiftsi3}
     (nil))
(insn 163 161 164 25 (set (reg:SI 3 r3 [194])
        (plus:SI (reg/f:SI 1 r1 [190])
            (reg:SI 3 r3 [192]))) "kbd.c":370:18 7 {*arm_addsi3}
     (nil))
(insn 164 163 165 25 (set (reg/f:SI 3 r3 [195])
        (plus:SI (reg:SI 3 r3 [194])
            (const_int 28 [0x1c]))) "kbd.c":370:18 7 {*arm_addsi3}
     (nil))
(insn 165 164 166 25 (set (reg:SI 3 r3 [orig:125 _13 ] [125])
        (mem:SI (reg/f:SI 3 r3 [195]) [3 proc[i_41].status+0 S4 A32])) "kbd.c":370:18 253 {*arm_movsi_insn}
     (nil))
(insn 166 165 167 25 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:125 _13 ] [125])
            (const_int 0 [0]))) "kbd.c":370:10 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 167 166 168 25 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 222)
            (pc))) "kbd.c":370:10 273 {arm_cond_branch}
     (nil)
 -> 222)
;;  succ:       26 (FALLTHRU)
;;              28
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 26, loop depth 0, maybe hot
;;  prev block 25, next block 27, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       25 (FALLTHRU)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(note 168 167 169 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 169 168 170 26 (set (reg/f:SI 1 r1 [196])
        (symbol_ref:SI ("proc") [flags 0x40]  <var_decl 0x7fcdc17fe5a0 proc>)) "kbd.c":370:51 253 {*arm_movsi_insn}
     (nil))
(insn 170 169 171 26 (set (reg:SI 2 r2 [197])
        (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A64])) "kbd.c":370:51 253 {*arm_movsi_insn}
     (nil))
(insn 171 170 172 26 (set (reg:SI 3 r3 [198])
        (reg:SI 2 r2 [197])) "kbd.c":370:51 253 {*arm_movsi_insn}
     (nil))
(insn 172 171 173 26 (set (reg:SI 3 r3 [198])
        (ashift:SI (reg:SI 3 r3 [198])
            (const_int 6 [0x6]))) "kbd.c":370:51 147 {*arm_shiftsi3}
     (nil))
(insn 173 172 174 26 (set (reg:SI 3 r3 [198])
        (plus:SI (reg:SI 3 r3 [198])
            (reg:SI 2 r2 [197]))) "kbd.c":370:51 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 2 r2 [197])
            (const_int 65 [0x41]))
        (nil)))
(insn 174 173 175 26 (set (reg:SI 3 r3 [198])
        (ashift:SI (reg:SI 3 r3 [198])
            (const_int 1 [0x1]))) "kbd.c":370:51 147 {*arm_shiftsi3}
     (nil))
(insn 175 174 176 26 (set (reg:SI 3 r3 [198])
        (plus:SI (reg:SI 3 r3 [198])
            (reg:SI 2 r2 [197]))) "kbd.c":370:51 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 2 r2 [197])
            (const_int 131 [0x83]))
        (nil)))
(insn 176 175 177 26 (set (reg:SI 3 r3 [198])
        (ashift:SI (reg:SI 3 r3 [198])
            (const_int 3 [0x3]))) "kbd.c":370:51 147 {*arm_shiftsi3}
     (nil))
(insn 177 176 178 26 (set (reg:SI 3 r3 [198])
        (minus:SI (reg:SI 3 r3 [198])
            (reg:SI 2 r2 [197]))) "kbd.c":370:51 45 {*arm_subsi3_insn}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 2 r2 [197])
            (const_int 1047 [0x417]))
        (nil)))
(insn 178 177 180 26 (set (reg:SI 3 r3 [199])
        (ashift:SI (reg:SI 3 r3 [198])
            (const_int 2 [0x2]))) "kbd.c":370:51 147 {*arm_shiftsi3}
     (nil))
(insn 180 178 181 26 (set (reg:SI 3 r3 [200])
        (plus:SI (reg/f:SI 1 r1 [196])
            (reg:SI 3 r3 [198]))) "kbd.c":370:51 7 {*arm_addsi3}
     (nil))
(insn 181 180 182 26 (set (reg/f:SI 3 r3 [201])
        (plus:SI (reg:SI 3 r3 [200])
            (const_int 84 [0x54]))) "kbd.c":370:51 7 {*arm_addsi3}
     (nil))
(insn 182 181 183 26 (set (reg/f:SI 3 r3 [orig:126 _14 ] [126])
        (mem/f:SI (reg/f:SI 3 r3 [201]) [9 proc[i_41].res+0 S4 A32])) "kbd.c":370:51 253 {*arm_movsi_insn}
     (nil))
(insn 183 182 184 26 (set (reg/f:SI 3 r3 [orig:127 _15 ] [127])
        (plus:SI (reg/f:SI 3 r3 [orig:126 _14 ] [126])
            (const_int 60 [0x3c]))) "kbd.c":370:55 7 {*arm_addsi3}
     (nil))
(insn 184 183 185 26 (set (reg:SI 1 r1)
        (symbol_ref/f:SI ("*.LC4") [flags 0x2]  <var_decl 0x7fcdc0b61c60 *.LC4>)) "kbd.c":370:37 253 {*arm_movsi_insn}
     (nil))
(insn 185 184 186 26 (set (reg:SI 0 r0)
        (reg/f:SI 3 r3 [orig:127 _15 ] [127])) "kbd.c":370:37 253 {*arm_movsi_insn}
     (nil))
(call_insn/i 186 185 187 26 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41]  <function_decl 0x7fcdc0d93700 strcmp>) [0 __builtin_strcmp S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "kbd.c":370:37 291 {*call_value_symbol}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 187 186 188 26 (set (reg:SI 3 r3 [orig:128 _16 ] [128])
        (reg:SI 0 r0)) "kbd.c":370:37 253 {*arm_movsi_insn}
     (nil))
(insn 188 187 189 26 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:128 _16 ] [128])
            (const_int 0 [0]))) "kbd.c":370:34 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 189 188 190 26 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 222)
            (pc))) "kbd.c":370:34 273 {arm_cond_branch}
     (nil)
 -> 222)
;;  succ:       27 (FALLTHRU)
;;              28
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 27, loop depth 0, maybe hot
;;  prev block 26, next block 28, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       26 (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
(note 190 189 191 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 191 190 192 27 (set (reg/f:SI 1 r1 [202])
        (symbol_ref:SI ("proc") [flags 0x40]  <var_decl 0x7fcdc17fe5a0 proc>)) "kbd.c":371:9 253 {*arm_movsi_insn}
     (nil))
(insn 192 191 193 27 (set (reg:SI 2 r2 [203])
        (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A64])) "kbd.c":371:9 253 {*arm_movsi_insn}
     (nil))
(insn 193 192 194 27 (set (reg:SI 3 r3 [204])
        (reg:SI 2 r2 [203])) "kbd.c":371:9 253 {*arm_movsi_insn}
     (nil))
(insn 194 193 195 27 (set (reg:SI 3 r3 [204])
        (ashift:SI (reg:SI 3 r3 [204])
            (const_int 6 [0x6]))) "kbd.c":371:9 147 {*arm_shiftsi3}
     (nil))
(insn 195 194 196 27 (set (reg:SI 3 r3 [204])
        (plus:SI (reg:SI 3 r3 [204])
            (reg:SI 2 r2 [203]))) "kbd.c":371:9 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 2 r2 [203])
            (const_int 65 [0x41]))
        (nil)))
(insn 196 195 197 27 (set (reg:SI 3 r3 [204])
        (ashift:SI (reg:SI 3 r3 [204])
            (const_int 1 [0x1]))) "kbd.c":371:9 147 {*arm_shiftsi3}
     (nil))
(insn 197 196 198 27 (set (reg:SI 3 r3 [204])
        (plus:SI (reg:SI 3 r3 [204])
            (reg:SI 2 r2 [203]))) "kbd.c":371:9 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 2 r2 [203])
            (const_int 131 [0x83]))
        (nil)))
(insn 198 197 199 27 (set (reg:SI 3 r3 [204])
        (ashift:SI (reg:SI 3 r3 [204])
            (const_int 3 [0x3]))) "kbd.c":371:9 147 {*arm_shiftsi3}
     (nil))
(insn 199 198 200 27 (set (reg:SI 3 r3 [204])
        (minus:SI (reg:SI 3 r3 [204])
            (reg:SI 2 r2 [203]))) "kbd.c":371:9 45 {*arm_subsi3_insn}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 2 r2 [203])
            (const_int 1047 [0x417]))
        (nil)))
(insn 200 199 202 27 (set (reg:SI 3 r3 [205])
        (ashift:SI (reg:SI 3 r3 [204])
            (const_int 2 [0x2]))) "kbd.c":371:9 147 {*arm_shiftsi3}
     (nil))
(insn 202 200 203 27 (set (reg:SI 3 r3 [206])
        (plus:SI (reg/f:SI 1 r1 [202])
            (reg:SI 3 r3 [204]))) "kbd.c":371:9 7 {*arm_addsi3}
     (nil))
(insn 203 202 204 27 (set (reg/f:SI 3 r3 [207])
        (plus:SI (reg:SI 3 r3 [206])
            (const_int 84 [0x54]))) "kbd.c":371:9 7 {*arm_addsi3}
     (nil))
(insn 204 203 205 27 (set (reg/f:SI 3 r3 [orig:129 _17 ] [129])
        (mem/f:SI (reg/f:SI 3 r3 [207]) [9 proc[i_41].res+0 S4 A32])) "kbd.c":371:9 253 {*arm_movsi_insn}
     (nil))
(insn 205 204 206 27 (set (reg:SI 1 r1 [orig:130 _18 ] [130])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [orig:129 _17 ] [129])
                (const_int 92 [0x5c])) [3 _17->signal+0 S4 A32])) "kbd.c":371:22 253 {*arm_movsi_insn}
     (nil))
(insn 206 205 207 27 (set (reg/f:SI 0 r0 [208])
        (symbol_ref:SI ("proc") [flags 0x40]  <var_decl 0x7fcdc17fe5a0 proc>)) "kbd.c":371:9 253 {*arm_movsi_insn}
     (nil))
(insn 207 206 208 27 (set (reg:SI 2 r2 [209])
        (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A64])) "kbd.c":371:9 253 {*arm_movsi_insn}
     (nil))
(insn 208 207 209 27 (set (reg:SI 3 r3 [210])
        (reg:SI 2 r2 [209])) "kbd.c":371:9 253 {*arm_movsi_insn}
     (nil))
(insn 209 208 210 27 (set (reg:SI 3 r3 [210])
        (ashift:SI (reg:SI 3 r3 [210])
            (const_int 6 [0x6]))) "kbd.c":371:9 147 {*arm_shiftsi3}
     (nil))
(insn 210 209 211 27 (set (reg:SI 3 r3 [210])
        (plus:SI (reg:SI 3 r3 [210])
            (reg:SI 2 r2 [209]))) "kbd.c":371:9 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 2 r2 [209])
            (const_int 65 [0x41]))
        (nil)))
(insn 211 210 212 27 (set (reg:SI 3 r3 [210])
        (ashift:SI (reg:SI 3 r3 [210])
            (const_int 1 [0x1]))) "kbd.c":371:9 147 {*arm_shiftsi3}
     (nil))
(insn 212 211 213 27 (set (reg:SI 3 r3 [210])
        (plus:SI (reg:SI 3 r3 [210])
            (reg:SI 2 r2 [209]))) "kbd.c":371:9 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 2 r2 [209])
            (const_int 131 [0x83]))
        (nil)))
(insn 213 212 214 27 (set (reg:SI 3 r3 [210])
        (ashift:SI (reg:SI 3 r3 [210])
            (const_int 3 [0x3]))) "kbd.c":371:9 147 {*arm_shiftsi3}
     (nil))
(insn 214 213 215 27 (set (reg:SI 3 r3 [210])
        (minus:SI (reg:SI 3 r3 [210])
            (reg:SI 2 r2 [209]))) "kbd.c":371:9 45 {*arm_subsi3_insn}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 2 r2 [209])
            (const_int 1047 [0x417]))
        (nil)))
(insn 215 214 217 27 (set (reg:SI 3 r3 [211])
        (ashift:SI (reg:SI 3 r3 [210])
            (const_int 2 [0x2]))) "kbd.c":371:9 147 {*arm_shiftsi3}
     (nil))
(insn 217 215 218 27 (set (reg:SI 3 r3 [212])
        (plus:SI (reg/f:SI 0 r0 [208])
            (reg:SI 3 r3 [210]))) "kbd.c":371:9 7 {*arm_addsi3}
     (nil))
(insn 218 217 219 27 (set (reg/f:SI 3 r3 [213])
        (plus:SI (reg:SI 3 r3 [212])
            (const_int 84 [0x54]))) "kbd.c":371:9 7 {*arm_addsi3}
     (nil))
(insn 219 218 220 27 (set (reg/f:SI 3 r3 [orig:131 _19 ] [131])
        (mem/f:SI (reg/f:SI 3 r3 [213]) [9 proc[i_41].res+0 S4 A32])) "kbd.c":371:9 253 {*arm_movsi_insn}
     (nil))
(insn 220 219 221 27 (set (reg:SI 2 r2 [orig:132 _20 ] [132])
        (ior:SI (reg:SI 1 r1 [orig:130 _18 ] [130])
            (const_int 4 [0x4]))) "kbd.c":371:22 106 {*iorsi3_insn}
     (nil))
(insn 221 220 222 27 (set (mem:SI (plus:SI (reg/f:SI 3 r3 [orig:131 _19 ] [131])
                (const_int 92 [0x5c])) [3 _19->signal+0 S4 A32])
        (reg:SI 2 r2 [orig:132 _20 ] [132])) "kbd.c":371:22 253 {*arm_movsi_insn}
     (nil))
;;  succ:       28 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 28, loop depth 0, maybe hot
;;  prev block 27, next block 29, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       25
;;              26
;;              27 (FALLTHRU)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3]
(code_label 222 221 223 28 76 (nil) [2 uses])
(note 223 222 224 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 224 223 225 28 (set (reg:SI 3 r3 [215])
        (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A64])) "kbd.c":369:25 253 {*arm_movsi_insn}
     (nil))
(insn 225 224 226 28 (set (reg:SI 3 r3 [214])
        (plus:SI (reg:SI 3 r3 [215])
            (const_int 1 [0x1]))) "kbd.c":369:25 7 {*arm_addsi3}
     (nil))
(insn 226 225 227 28 (set (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A64])
        (reg:SI 3 r3 [214])) "kbd.c":369:25 253 {*arm_movsi_insn}
     (nil))
;;  succ:       29 (FALLTHRU,DFS_BACK)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 29, loop depth 0, maybe hot
;;  prev block 28, next block 30, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       28 (FALLTHRU,DFS_BACK)
;;              24 [always] 
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(code_label 227 226 228 29 75 (nil) [1 uses])
(note 228 227 232 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 232 228 233 29 (set (reg:SI 3 r3 [216])
        (mem/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A64])) "kbd.c":369:16 253 {*arm_movsi_insn}
     (nil))
(insn 233 232 234 29 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [216])
            (const_int 63 [0x3f]))) "kbd.c":369:16 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 234 233 235 29 (set (pc)
        (if_then_else (le (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 229)
            (pc))) "kbd.c":369:16 273 {arm_cond_branch}
     (nil)
 -> 229)
;;  succ:       25
;;              30 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 30, loop depth 0, maybe hot
;;  prev block 29, next block 31, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       29 (FALLTHRU)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(note 235 234 236 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 236 235 237 30 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC6") [flags 0x2]  <var_decl 0x7fcdc0b61d80 *.LC6>)) "kbd.c":374:5 253 {*arm_movsi_insn}
     (nil))
(call_insn 237 236 238 30 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kprintf") [flags 0x41]  <function_decl 0x7fcdc0b13a00 kprintf>) [0 kprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "kbd.c":374:5 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 238 237 240 30 (set (reg:SI 3 r3 [217])
        (const_int 13 [0xd])) "kbd.c":375:7 253 {*arm_movsi_insn}
     (nil))
(insn 240 238 241 30 (set (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                (const_int -14 [0xfffffffffffffff2])) [0 c+0 S1 A16])
        (reg:QI 3 r3 [218])) "kbd.c":375:7 263 {*arm_movqi_insn}
     (nil))
(insn 241 240 242 30 (set (reg/f:SI 3 r3 [219])
        (symbol_ref:SI ("control") [flags 0x2]  <var_decl 0x7fcdc0b1a750 control>)) "kbd.c":377:13 253 {*arm_movsi_insn}
     (nil))
(insn 242 241 243 30 (set (reg:SI 2 r2 [220])
        (const_int 0 [0])) "kbd.c":377:13 253 {*arm_movsi_insn}
     (nil))
(insn 243 242 244 30 (set (mem/c:SI (reg/f:SI 3 r3 [219]) [3 control+0 S4 A32])
        (reg:SI 2 r2 [220])) "kbd.c":377:13 253 {*arm_movsi_insn}
     (nil))
;;  succ:       31 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 31, loop depth 0, maybe hot
;;  prev block 30, next block 32, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       22
;;              23
;;              30 (FALLTHRU)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(code_label 244 243 245 31 74 (nil) [2 uses])
(note 245 244 246 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 246 245 247 31 (set (reg/f:SI 3 r3 [221])
        (symbol_ref:SI ("control") [flags 0x2]  <var_decl 0x7fcdc0b1a750 control>)) "kbd.c":380:7 253 {*arm_movsi_insn}
     (nil))
(insn 247 246 248 31 (set (reg:SI 3 r3 [orig:133 control.26_21 ] [133])
        (mem/c:SI (reg/f:SI 3 r3 [221]) [3 control+0 S4 A32])) "kbd.c":380:7 253 {*arm_movsi_insn}
     (nil))
(insn 248 247 249 31 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:133 control.26_21 ] [133])
            (const_int 0 [0]))) "kbd.c":380:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 249 248 250 31 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 265)
            (pc))) "kbd.c":380:6 273 {arm_cond_branch}
     (nil)
 -> 265)
;;  succ:       32 (FALLTHRU)
;;              34
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 32, loop depth 0, maybe hot
;;  prev block 31, next block 33, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       31 (FALLTHRU)
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(note 250 249 251 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 251 250 252 32 (set (reg:SI 3 r3 [222])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -13 [0xfffffffffffffff3])) [0 scode+0 S1 A8]))) "kbd.c":380:15 175 {*arm_zero_extendqisi2}
     (nil))
(insn 252 251 253 32 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [222])
            (const_int 35 [0x23]))) "kbd.c":380:15 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 253 252 254 32 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 265)
            (pc))) "kbd.c":380:15 273 {arm_cond_branch}
     (nil)
 -> 265)
;;  succ:       33 (FALLTHRU)
;;              34
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 33, loop depth 0, maybe hot
;;  prev block 32, next block 34, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       32 (FALLTHRU)
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(note 254 253 255 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 255 254 257 33 (set (reg:SI 3 r3 [223])
        (const_int 4 [0x4])) "kbd.c":381:7 253 {*arm_movsi_insn}
     (nil))
(insn 257 255 258 33 (set (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                (const_int -14 [0xfffffffffffffff2])) [0 c+0 S1 A16])
        (reg:QI 3 r3 [224])) "kbd.c":381:7 263 {*arm_movqi_insn}
     (nil))
(insn 258 257 259 33 (set (reg:SI 3 r3 [orig:134 _22 ] [134])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -14 [0xfffffffffffffff2])) [0 c+0 S1 A16]))) "kbd.c":382:5 175 {*arm_zero_extendqisi2}
     (nil))
(insn 259 258 260 33 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [orig:134 _22 ] [134])) "kbd.c":382:5 253 {*arm_movsi_insn}
     (nil))
(insn 260 259 261 33 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC7") [flags 0x2]  <var_decl 0x7fcdc0b61e10 *.LC7>)) "kbd.c":382:5 253 {*arm_movsi_insn}
     (nil))
(call_insn 261 260 262 33 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kprintf") [flags 0x41]  <function_decl 0x7fcdc0b13a00 kprintf>) [0 kprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "kbd.c":382:5 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 262 261 263 33 (set (reg/f:SI 3 r3 [225])
        (symbol_ref:SI ("control") [flags 0x2]  <var_decl 0x7fcdc0b1a750 control>)) "kbd.c":383:13 253 {*arm_movsi_insn}
     (nil))
(insn 263 262 264 33 (set (reg:SI 2 r2 [226])
        (const_int 0 [0])) "kbd.c":383:13 253 {*arm_movsi_insn}
     (nil))
(insn 264 263 265 33 (set (mem/c:SI (reg/f:SI 3 r3 [225]) [3 control+0 S4 A32])
        (reg:SI 2 r2 [226])) "kbd.c":383:13 253 {*arm_movsi_insn}
     (nil))
;;  succ:       34 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 34, loop depth 0, maybe hot
;;  prev block 33, next block 35, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       31
;;              32
;;              33 (FALLTHRU)
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(code_label 265 264 266 34 78 (nil) [2 uses])
(note 266 265 267 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 267 266 268 34 (set (reg/f:SI 3 r3 [227])
        (symbol_ref:SI ("control") [flags 0x2]  <var_decl 0x7fcdc0b1a750 control>)) "kbd.c":386:7 253 {*arm_movsi_insn}
     (nil))
(insn 268 267 269 34 (set (reg:SI 3 r3 [orig:135 control.27_23 ] [135])
        (mem/c:SI (reg/f:SI 3 r3 [227]) [3 control+0 S4 A32])) "kbd.c":386:7 253 {*arm_movsi_insn}
     (nil))
(insn 269 268 270 34 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:135 control.27_23 ] [135])
            (const_int 0 [0]))) "kbd.c":386:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 270 269 271 34 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 283)
            (pc))) "kbd.c":386:6 273 {arm_cond_branch}
     (nil)
 -> 283)
;;  succ:       35 (FALLTHRU)
;;              37
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 35, loop depth 0, maybe hot
;;  prev block 34, next block 36, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       34 (FALLTHRU)
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(note 271 270 272 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 272 271 273 35 (set (reg:SI 3 r3 [228])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -13 [0xfffffffffffffff3])) [0 scode+0 S1 A8]))) "kbd.c":386:15 175 {*arm_zero_extendqisi2}
     (nil))
(insn 273 272 274 35 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [228])
            (const_int 35 [0x23]))) "kbd.c":386:15 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 274 273 275 35 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 283)
            (pc))) "kbd.c":386:15 273 {arm_cond_branch}
     (nil)
 -> 283)
;;  succ:       36 (FALLTHRU)
;;              37
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 36, loop depth 0, maybe hot
;;  prev block 35, next block 37, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       35 (FALLTHRU)
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(note 275 274 276 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 276 275 278 36 (set (reg:SI 3 r3 [229])
        (const_int 4 [0x4])) "kbd.c":387:7 253 {*arm_movsi_insn}
     (nil))
(insn 278 276 279 36 (set (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                (const_int -14 [0xfffffffffffffff2])) [0 c+0 S1 A16])
        (reg:QI 3 r3 [230])) "kbd.c":387:7 263 {*arm_movqi_insn}
     (nil))
(insn 279 278 280 36 (set (reg:SI 3 r3 [orig:136 _24 ] [136])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -14 [0xfffffffffffffff2])) [0 c+0 S1 A16]))) "kbd.c":388:5 175 {*arm_zero_extendqisi2}
     (nil))
(insn 280 279 281 36 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [orig:136 _24 ] [136])) "kbd.c":388:5 253 {*arm_movsi_insn}
     (nil))
(insn 281 280 282 36 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC7") [flags 0x2]  <var_decl 0x7fcdc0b61e10 *.LC7>)) "kbd.c":388:5 253 {*arm_movsi_insn}
     (nil))
(call_insn 282 281 283 36 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kprintf") [flags 0x41]  <function_decl 0x7fcdc0b13a00 kprintf>) [0 kprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "kbd.c":388:5 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
;;  succ:       37 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 37, loop depth 0, maybe hot
;;  prev block 36, next block 38, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       34
;;              35
;;              36 (FALLTHRU)
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(code_label 283 282 284 37 79 (nil) [2 uses])
(note 284 283 285 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 285 284 286 37 (set (reg/f:SI 3 r3 [231])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":391:13 253 {*arm_movsi_insn}
     (nil))
(insn 286 285 287 37 (set (reg:SI 3 r3 [orig:137 _25 ] [137])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [231])
                (const_int 132 [0x84])) [3 kp_48->head+0 S4 A32])) "kbd.c":391:13 253 {*arm_movsi_insn}
     (nil))
(insn 287 286 288 37 (set (reg:SI 1 r1 [orig:138 _27 ] [138])
        (plus:SI (reg:SI 3 r3 [orig:137 _25 ] [137])
            (const_int 1 [0x1]))) "kbd.c":391:19 7 {*arm_addsi3}
     (nil))
(insn 288 287 289 37 (set (reg/f:SI 2 r2 [232])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":391:19 253 {*arm_movsi_insn}
     (nil))
(insn 289 288 290 37 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [232])
                (const_int 132 [0x84])) [3 kp_48->head+0 S4 A32])
        (reg:SI 1 r1 [orig:138 _27 ] [138])) "kbd.c":391:19 253 {*arm_movsi_insn}
     (nil))
(insn 290 289 291 37 (set (reg/f:SI 2 r2 [233])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":391:23 253 {*arm_movsi_insn}
     (nil))
(insn 291 290 292 37 (set (reg/f:SI 3 r3 [234])
        (plus:SI (reg/f:SI 2 r2 [233])
            (reg:SI 3 r3 [orig:137 _25 ] [137]))) "kbd.c":391:23 7 {*arm_addsi3}
     (nil))
(insn 292 291 293 37 (set (reg:QI 2 r2 [235])
        (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                (const_int -14 [0xfffffffffffffff2])) [0 c+0 S1 A16])) "kbd.c":391:23 263 {*arm_movqi_insn}
     (nil))
(insn 293 292 294 37 (set (mem/v:QI (plus:SI (reg/f:SI 3 r3 [234])
                (const_int 4 [0x4])) [0 kp_48->buf[_26]+0 S1 A8])
        (reg:QI 2 r2 [235])) "kbd.c":391:23 263 {*arm_movqi_insn}
     (nil))
(insn 294 293 295 37 (set (reg/f:SI 3 r3 [236])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":392:12 253 {*arm_movsi_insn}
     (nil))
(insn 295 294 296 37 (set (reg:SI 3 r3 [orig:139 _28 ] [139])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [236])
                (const_int 132 [0x84])) [3 kp_48->head+0 S4 A32])) "kbd.c":392:12 253 {*arm_movsi_insn}
     (nil))
(insn 296 295 297 37 (parallel [
            (set (reg:CC_NZ 100 cc)
                (compare:CC_NZ (minus:SI (const_int 0 [0])
                        (reg:SI 3 r3 [orig:139 _28 ] [139]))
                    (const_int 0 [0])))
            (set (reg:SI 2 r2 [237])
                (minus:SI (const_int 0 [0])
                    (reg:SI 3 r3 [orig:139 _28 ] [139])))
        ]) "kbd.c":392:12 46 {subsi3_compare0}
     (nil))
(insn 297 296 298 37 (set (reg:SI 3 r3 [orig:140 _29 ] [140])
        (and:SI (reg:SI 3 r3 [orig:139 _28 ] [139])
            (const_int 127 [0x7f]))) "kbd.c":392:12 90 {*arm_andsi3_insn}
     (nil))
(insn 298 297 299 37 (set (reg:SI 2 r2 [238])
        (and:SI (reg:SI 2 r2 [237])
            (const_int 127 [0x7f]))) "kbd.c":392:12 90 {*arm_andsi3_insn}
     (nil))
(insn 299 298 300 37 (set (reg:SI 3 r3 [orig:140 _29 ] [140])
        (if_then_else:SI (ge:SI (reg:CC_NZ 100 cc)
                (const_int 0 [0]))
            (neg:SI (reg:SI 2 r2 [238]))
            (reg:SI 3 r3 [orig:140 _29 ] [140]))) "kbd.c":392:12 371 {*if_neg_move}
     (nil))
(insn 300 299 301 37 (set (reg/f:SI 2 r2 [239])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":392:12 253 {*arm_movsi_insn}
     (nil))
(insn 301 300 302 37 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [239])
                (const_int 132 [0x84])) [3 kp_48->head+0 S4 A32])
        (reg:SI 3 r3 [orig:140 _29 ] [140])) "kbd.c":392:12 253 {*arm_movsi_insn}
     (nil))
(insn 302 301 303 37 (set (reg/f:SI 3 r3 [240])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":393:5 253 {*arm_movsi_insn}
     (nil))
(insn 303 302 304 37 (set (reg:SI 3 r3 [orig:141 _30 ] [141])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [240])
                (const_int 140 [0x8c])) [3 kp_48->data+0 S4 A32])) "kbd.c":393:5 253 {*arm_movsi_insn}
     (nil))
(insn 304 303 305 37 (set (reg:SI 2 r2 [orig:142 _31 ] [142])
        (plus:SI (reg:SI 3 r3 [orig:141 _30 ] [141])
            (const_int 1 [0x1]))) "kbd.c":393:11 7 {*arm_addsi3}
     (nil))
(insn 305 304 306 37 (set (reg/f:SI 3 r3 [241])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":393:11 253 {*arm_movsi_insn}
     (nil))
(insn 306 305 307 37 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [241])
                (const_int 140 [0x8c])) [3 kp_48->data+0 S4 A32])
        (reg:SI 2 r2 [orig:142 _31 ] [142])) "kbd.c":393:11 253 {*arm_movsi_insn}
     (nil))
(insn 307 306 308 37 (set (reg/f:SI 3 r3 [242])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":393:17 253 {*arm_movsi_insn}
     (nil))
(insn 308 307 309 37 (set (reg:SI 3 r3 [orig:143 _32 ] [143])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [242])
                (const_int 144 [0x90])) [3 kp_48->room+0 S4 A32])) "kbd.c":393:17 253 {*arm_movsi_insn}
     (nil))
(insn 309 308 310 37 (set (reg:SI 2 r2 [orig:144 _33 ] [144])
        (plus:SI (reg:SI 3 r3 [orig:143 _32 ] [143])
            (const_int -1 [0xffffffffffffffff]))) "kbd.c":393:23 7 {*arm_addsi3}
     (nil))
(insn 310 309 311 37 (set (reg/f:SI 3 r3 [243])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":393:23 253 {*arm_movsi_insn}
     (nil))
(insn 311 310 312 37 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [243])
                (const_int 144 [0x90])) [3 kp_48->room+0 S4 A32])
        (reg:SI 2 r2 [orig:144 _33 ] [144])) "kbd.c":393:23 253 {*arm_movsi_insn}
     (nil))
(insn 312 311 313 37 (set (reg:SI 3 r3 [244])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":394:3 253 {*arm_movsi_insn}
     (nil))
(insn 313 312 314 37 (set (reg/f:SI 3 r3 [orig:145 _34 ] [145])
        (plus:SI (reg:SI 3 r3 [244])
            (const_int 140 [0x8c]))) "kbd.c":394:3 7 {*arm_addsi3}
     (nil))
(insn 314 313 315 37 (set (reg:SI 0 r0)
        (reg/f:SI 3 r3 [orig:145 _34 ] [145])) "kbd.c":394:3 253 {*arm_movsi_insn}
     (nil))
(call_insn 315 314 316 37 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kwakeup") [flags 0x41]  <function_decl 0x7fcdc0b26900 kwakeup>) [0 kwakeup S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "kbd.c":394:3 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 316 315 317 37 (set (reg:SI 3 r3 [245])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -14 [0xfffffffffffffff2])) [0 c+0 S1 A16]))) "kbd.c":396:6 175 {*arm_zero_extendqisi2}
     (nil))
(insn 317 316 318 37 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [245])
            (const_int 13 [0xd]))) "kbd.c":396:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 318 317 319 37 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 329)
            (pc))) "kbd.c":396:6 273 {arm_cond_branch}
     (nil)
 -> 329)
;;  succ:       38 (FALLTHRU)
;;              39
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 38, loop depth 0, maybe hot
;;  prev block 37, next block 39, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       37 (FALLTHRU)
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(note 319 318 320 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 320 319 321 38 (set (reg/f:SI 3 r3 [246])
        (symbol_ref:SI ("kline") [flags 0x2]  <var_decl 0x7fcdc0b1a7e0 kline>)) "kbd.c":397:10 253 {*arm_movsi_insn}
     (nil))
(insn 321 320 322 38 (set (reg:SI 3 r3 [orig:146 kline.28_35 ] [146])
        (mem/v/c:SI (reg/f:SI 3 r3 [246]) [3 kline+0 S4 A32])) "kbd.c":397:10 253 {*arm_movsi_insn}
     (nil))
(insn 322 321 323 38 (set (reg:SI 3 r3 [orig:147 _36 ] [147])
        (plus:SI (reg:SI 3 r3 [orig:146 kline.28_35 ] [146])
            (const_int 1 [0x1]))) "kbd.c":397:10 7 {*arm_addsi3}
     (nil))
(insn 323 322 324 38 (set (reg/f:SI 2 r2 [247])
        (symbol_ref:SI ("kline") [flags 0x2]  <var_decl 0x7fcdc0b1a7e0 kline>)) "kbd.c":397:10 253 {*arm_movsi_insn}
     (nil))
(insn 324 323 325 38 (set (mem/v/c:SI (reg/f:SI 2 r2 [247]) [3 kline+0 S4 A32])
        (reg:SI 3 r3 [orig:147 _36 ] [147])) "kbd.c":397:10 253 {*arm_movsi_insn}
     (nil))
(insn 325 324 326 38 (set (reg:SI 0 r0)
        (symbol_ref:SI ("kline") [flags 0x2]  <var_decl 0x7fcdc0b1a7e0 kline>)) "kbd.c":398:5 253 {*arm_movsi_insn}
     (nil))
(call_insn 326 325 329 38 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kwakeup") [flags 0x41]  <function_decl 0x7fcdc0b26900 kwakeup>) [0 kwakeup S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "kbd.c":398:5 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
;;  succ:       39 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 39, loop depth 0, maybe hot
;;  prev block 38, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       38 (FALLTHRU)
;;              37
;;              3 [always] 
;;              6 [always] 
;;              9 [always] 
;;              12 [always] 
;;              15 [always] 
;;              18 [always] 
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	
(code_label 329 326 330 39 64 (nil) [7 uses])
(note 330 329 353 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(note 353 330 354 39 NOTE_INSN_EPILOGUE_BEG)
(insn 354 353 355 39 (unspec_volatile [
            (const_int 0 [0])
        ] VUNSPEC_BLOCKAGE) "kbd.c":400:1 -1
     (nil))
(insn/f 355 354 356 39 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 11 fp)
            (const_int -4 [0xfffffffffffffffc]))) "kbd.c":400:1 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 13 sp)
            (plus:SI (reg/f:SI 11 fp)
                (const_int -4 [0xfffffffffffffffc])))
        (nil)))
(insn 356 355 357 39 (unspec:SI [
            (reg/f:SI 13 sp)
        ] UNSPEC_REGISTER_USE) "kbd.c":400:1 -1
     (nil))
(jump_insn 357 356 358 39 (parallel [
            (return)
            (set/f (reg/f:SI 13 sp)
                (plus:SI (reg/f:SI 13 sp)
                    (const_int 8 [0x8])))
            (set/f (reg/f:SI 11 fp)
                (mem/c:SI (reg/f:SI 13 sp) [5  S4 A32]))
            (set/f (reg:SI 15 pc)
                (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                        (const_int 4 [0x4])) [5  S4 A32]))
        ]) "kbd.c":400:1 -1
     (expr_list:REG_CFA_RESTORE (reg/f:SI 11 fp)
        (nil))
 -> return)
;;  succ:       EXIT [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 358 357 347)
(note 347 358 0 NOTE_INSN_DELETED)

;; Function kbd_handler (kbd_handler, funcdef_no=7, decl_uid=4544, cgraph_uid=8, symbol_order=22)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 7 n_edges 7 count 7 (    1)
scanning new insn with uid = 30.
scanning new insn with uid = 26.
scanning new insn with uid = 27.
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 15.


try_optimize_cfg iteration 1

Merging block 6 into block 5...
changing bb of uid 29
  unscanned insn
changing bb of uid 30
  from 6 to 5
Merged blocks 5 and 6.
Merged 5 and 6 without moving.


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns


kbd_handler

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 11 [fp] 13 [sp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  regs ever live 	 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r3={5d,2u} r11={2d,6u} r12={4d} r13={2d,10u} r14={3d,2u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={3d,1u} r101={2d} r102={1d,1u} r104={2d} r105={2d} r106={2d} 
;;    total ref usage 229{207d,22u,0e} in 11{9 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(note 3 1 26 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 26 3 27 2 (parallel [
            (set (mem/c:BLK (pre_modify:SI (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -8 [0xfffffffffffffff8]))) [5  A8])
                (unspec:BLK [
                        (reg/f:SI 11 fp)
                    ] UNSPEC_PUSH_MULT))
            (use (reg:SI 14 lr))
        ]) "kbd.c":403:1 -1
     (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                (set/f (reg/f:SI 13 sp)
                    (plus:SI (reg/f:SI 13 sp)
                        (const_int -8 [0xfffffffffffffff8])))
                (set/f (mem/c:SI (reg/f:SI 13 sp) [5  S4 A32])
                    (reg/f:SI 11 fp))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 4 [0x4])) [5  S4 A32])
                    (reg:SI 14 lr))
            ])
        (nil)))
(insn/f 27 26 28 2 (set (reg/f:SI 11 fp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 4 [0x4]))) "kbd.c":403:1 -1
     (nil))
(note 28 27 2 2 NOTE_INSN_PROLOGUE_END)
(note 2 28 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 3 r3 [114])
        (symbol_ref:SI ("keyset") [flags 0x2]  <var_decl 0x7fcdc0b1a870 keyset>)) "kbd.c":404:14 253 {*arm_movsi_insn}
     (nil))
(insn 6 5 7 2 (set (reg:SI 3 r3 [orig:113 keyset.29_1 ] [113])
        (mem/v/c:SI (reg/f:SI 3 r3 [114]) [3 keyset+0 S4 A32])) "kbd.c":404:14 253 {*arm_movsi_insn}
     (nil))
(insn 7 6 8 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:113 keyset.29_1 ] [113])
            (const_int 1 [0x1]))) "kbd.c":404:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 13)
            (pc))) "kbd.c":404:6 273 {arm_cond_branch}
     (nil)
 -> 13)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 10 9 20 3 (parallel [
            (call (mem:SI (symbol_ref:SI ("kbd_handler1") [flags 0x3]  <function_decl 0x7fcdc0b26700 kbd_handler1>) [0 kbd_handler1 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "kbd.c":405:5 290 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(jump_insn 20 10 21 3 (set (pc)
        (label_ref:SI 24)) "kbd.c":408:1 284 {*arm_jump}
     (nil)
 -> 24)
;;  succ:       5 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 21 20 13)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(code_label 13 21 14 4 83 (nil) [1 uses])
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(call_insn 15 14 24 4 (parallel [
            (call (mem:SI (symbol_ref:SI ("kbd_handler2") [flags 0x3]  <function_decl 0x7fcdc0b26d00 kbd_handler2>) [0 kbd_handler2 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "kbd.c":407:5 290 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              3 [always] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	
(code_label 24 15 22 5 85 (nil) [1 uses])
(note 22 24 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 29 5 (const_int 0 [0]) "kbd.c":408:1 311 {nop}
     (nil))
(note 29 23 30 5 NOTE_INSN_EPILOGUE_BEG)
(jump_insn 30 29 31 5 (return) "kbd.c":408:1 -1
     (nil)
 -> return)
;;  succ:       EXIT [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 31 30 25)
(note 25 31 0 NOTE_INSN_DELETED)

;; Function kgetc (kgetc, funcdef_no=8, decl_uid=4546, cgraph_uid=9, symbol_order=23)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 6 n_edges 6 count 8 (  1.3)
scanning new insn with uid = 72.
scanning new insn with uid = 73.
scanning new insn with uid = 74.
scanning new insn with uid = 75.
scanning new insn with uid = 66.
scanning new insn with uid = 67.
scanning new insn with uid = 68.
scanning new insn with uid = 69.
verify found no changes in insn with uid = 7.
verify found no changes in insn with uid = 11.
verify found no changes in insn with uid = 15.
verify found no changes in insn with uid = 16.
verify found no changes in insn with uid = 52.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns


kgetc

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 11 [fp] 13 [sp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={8d,3u} r1={7d,1u} r2={13d,7u} r3={26d,23u} r11={3d,22u} r12={10d} r13={5d,22u} r14={6d,2u} r15={6d} r16={5d} r17={5d} r18={5d} r19={5d} r20={5d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r40={5d} r41={5d} r42={5d} r43={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r77={5d} r78={5d} r79={5d} r80={5d} r81={5d} r82={5d} r83={5d} r84={5d} r85={5d} r86={5d} r87={5d} r88={5d} r89={5d} r90={5d} r91={5d} r92={5d} r93={5d} r94={5d} r95={5d} r96={5d} r97={5d} r98={5d} r99={5d} r100={7d,2u} r101={5d} r102={1d,1u} r104={5d} r105={5d} r106={5d} 
;;    total ref usage 615{532d,83u,0e} in 53{48 regular + 5 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(note 3 1 66 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 66 3 67 2 (parallel [
            (set (mem/c:BLK (pre_modify:SI (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -8 [0xfffffffffffffff8]))) [5  A8])
                (unspec:BLK [
                        (reg/f:SI 11 fp)
                    ] UNSPEC_PUSH_MULT))
            (use (reg:SI 14 lr))
        ]) "kbd.c":412:1 -1
     (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                (set/f (reg/f:SI 13 sp)
                    (plus:SI (reg/f:SI 13 sp)
                        (const_int -8 [0xfffffffffffffff8])))
                (set/f (mem/c:SI (reg/f:SI 13 sp) [5  S4 A32])
                    (reg/f:SI 11 fp))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 4 [0x4])) [5  S4 A32])
                    (reg:SI 14 lr))
            ])
        (nil)))
(insn/f 67 66 68 2 (set (reg/f:SI 11 fp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 4 [0x4]))) "kbd.c":412:1 -1
     (nil))
(insn/f 68 67 69 2 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -8 [0xfffffffffffffff8]))) "kbd.c":412:1 -1
     (nil))
(insn 69 68 70 2 (set (mem:BLK (scratch) [0  A8])
        (unspec:BLK [
                (reg/f:SI 13 sp)
                (reg/f:SI 11 fp)
            ] UNSPEC_PRLG_STK)) "kbd.c":412:1 -1
     (nil))
(note 70 69 2 2 NOTE_INSN_PROLOGUE_END)
(note 2 70 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 3 r3 [125])
        (symbol_ref:SI ("kbd") [flags 0x2]  <var_decl 0x7fcdc0b1a5a0 kbd>)) "kbd.c":414:8 253 {*arm_movsi_insn}
     (nil))
(insn 6 5 7 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])
        (reg/f:SI 3 r3 [125])) "kbd.c":414:8 253 {*arm_movsi_insn}
     (nil))
(call_insn 7 6 63 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("lock") [flags 0x41]  <function_decl 0x7fcdc0b31800 lock>) [0 lock S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "kbd.c":416:3 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(jump_insn 63 7 64 2 (set (pc)
        (label_ref 17)) "kbd.c":418:8 284 {*arm_jump}
     (nil)
 -> 17)
;;  succ:       4 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 64 63 21)
;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(code_label 21 64 10 3 90 (nil) [1 uses])
(note 10 21 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 11 10 12 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("unlock") [flags 0x41]  <function_decl 0x7fcdc0b31900 unlock>) [0 unlock S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "kbd.c":419:5 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 12 11 13 3 (set (reg:SI 3 r3 [126])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":420:5 253 {*arm_movsi_insn}
     (nil))
(insn 13 12 14 3 (set (reg/f:SI 3 r3 [orig:113 _1 ] [113])
        (plus:SI (reg:SI 3 r3 [126])
            (const_int 140 [0x8c]))) "kbd.c":420:5 7 {*arm_addsi3}
     (nil))
(insn 14 13 15 3 (set (reg:SI 0 r0)
        (reg/f:SI 3 r3 [orig:113 _1 ] [113])) "kbd.c":420:5 253 {*arm_movsi_insn}
     (nil))
(call_insn 15 14 16 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("ksleep") [flags 0x41]  <function_decl 0x7fcdc0b31a00 ksleep>) [0 ksleep S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "kbd.c":420:5 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(call_insn 16 15 17 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("lock") [flags 0x41]  <function_decl 0x7fcdc0b31800 lock>) [0 lock S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "kbd.c":421:5 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
;;  succ:       4 (FALLTHRU,DFS_BACK)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU,DFS_BACK)
;;              2 [always] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(code_label 17 16 18 4 89 (nil) [1 uses])
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (set (reg/f:SI 3 r3 [127])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":418:11 253 {*arm_movsi_insn}
     (nil))
(insn 20 19 22 4 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [127])
                (const_int 140 [0x8c])) [3 kp_13->data+0 S4 A32])) "kbd.c":418:11 253 {*arm_movsi_insn}
     (nil))
(insn 22 20 23 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:114 _2 ] [114])
            (const_int 0 [0]))) "kbd.c":418:18 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 23 22 24 4 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) "kbd.c":418:18 273 {arm_cond_branch}
     (nil)
 -> 21)
;;  succ:       3
;;              5 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 5 (set (reg/f:SI 3 r3 [128])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":424:17 253 {*arm_movsi_insn}
     (nil))
(insn 26 25 27 5 (set (reg:SI 3 r3 [orig:115 _3 ] [115])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [128])
                (const_int 136 [0x88])) [3 kp_13->tail+0 S4 A32])) "kbd.c":424:17 253 {*arm_movsi_insn}
     (nil))
(insn 27 26 28 5 (set (reg:SI 1 r1 [orig:116 _5 ] [116])
        (plus:SI (reg:SI 3 r3 [orig:115 _3 ] [115])
            (const_int 1 [0x1]))) "kbd.c":424:23 7 {*arm_addsi3}
     (nil))
(insn 28 27 29 5 (set (reg/f:SI 2 r2 [129])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":424:23 253 {*arm_movsi_insn}
     (nil))
(insn 29 28 30 5 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [129])
                (const_int 136 [0x88])) [3 kp_13->tail+0 S4 A32])
        (reg:SI 1 r1 [orig:116 _5 ] [116])) "kbd.c":424:23 253 {*arm_movsi_insn}
     (nil))
(insn 30 29 31 5 (set (reg/f:SI 2 r2 [130])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":424:5 253 {*arm_movsi_insn}
     (nil))
(insn 31 30 32 5 (set (reg/f:SI 3 r3 [131])
        (plus:SI (reg/f:SI 2 r2 [130])
            (reg:SI 3 r3 [orig:115 _3 ] [115]))) "kbd.c":424:5 7 {*arm_addsi3}
     (nil))
(insn 32 31 33 5 (set (reg:QI 3 r3 [132])
        (mem/v:QI (plus:SI (reg/f:SI 3 r3 [131])
                (const_int 4 [0x4])) [0 kp_13->buf[_4]+0 S1 A8])) "kbd.c":424:5 263 {*arm_movqi_insn}
     (nil))
(insn 33 32 34 5 (set (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                (const_int -9 [0xfffffffffffffff7])) [0 c+0 S1 A8])
        (reg:QI 3 r3 [132])) "kbd.c":424:5 263 {*arm_movqi_insn}
     (nil))
(insn 34 33 35 5 (set (reg/f:SI 3 r3 [133])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":425:12 253 {*arm_movsi_insn}
     (nil))
(insn 35 34 36 5 (set (reg:SI 3 r3 [orig:117 _6 ] [117])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [133])
                (const_int 136 [0x88])) [3 kp_13->tail+0 S4 A32])) "kbd.c":425:12 253 {*arm_movsi_insn}
     (nil))
(insn 36 35 37 5 (parallel [
            (set (reg:CC_NZ 100 cc)
                (compare:CC_NZ (minus:SI (const_int 0 [0])
                        (reg:SI 3 r3 [orig:117 _6 ] [117]))
                    (const_int 0 [0])))
            (set (reg:SI 2 r2 [134])
                (minus:SI (const_int 0 [0])
                    (reg:SI 3 r3 [orig:117 _6 ] [117])))
        ]) "kbd.c":425:12 46 {subsi3_compare0}
     (nil))
(insn 37 36 38 5 (set (reg:SI 3 r3 [orig:118 _7 ] [118])
        (and:SI (reg:SI 3 r3 [orig:117 _6 ] [117])
            (const_int 127 [0x7f]))) "kbd.c":425:12 90 {*arm_andsi3_insn}
     (nil))
(insn 38 37 39 5 (set (reg:SI 2 r2 [135])
        (and:SI (reg:SI 2 r2 [134])
            (const_int 127 [0x7f]))) "kbd.c":425:12 90 {*arm_andsi3_insn}
     (nil))
(insn 39 38 40 5 (set (reg:SI 3 r3 [orig:118 _7 ] [118])
        (if_then_else:SI (ge:SI (reg:CC_NZ 100 cc)
                (const_int 0 [0]))
            (neg:SI (reg:SI 2 r2 [135]))
            (reg:SI 3 r3 [orig:118 _7 ] [118]))) "kbd.c":425:12 371 {*if_neg_move}
     (nil))
(insn 40 39 41 5 (set (reg/f:SI 2 r2 [136])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":425:12 253 {*arm_movsi_insn}
     (nil))
(insn 41 40 42 5 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [136])
                (const_int 136 [0x88])) [3 kp_13->tail+0 S4 A32])
        (reg:SI 3 r3 [orig:118 _7 ] [118])) "kbd.c":425:12 253 {*arm_movsi_insn}
     (nil))
(insn 42 41 43 5 (set (reg/f:SI 3 r3 [137])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":426:5 253 {*arm_movsi_insn}
     (nil))
(insn 43 42 44 5 (set (reg:SI 3 r3 [orig:119 _8 ] [119])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [137])
                (const_int 140 [0x8c])) [3 kp_13->data+0 S4 A32])) "kbd.c":426:5 253 {*arm_movsi_insn}
     (nil))
(insn 44 43 45 5 (set (reg:SI 2 r2 [orig:120 _9 ] [120])
        (plus:SI (reg:SI 3 r3 [orig:119 _8 ] [119])
            (const_int -1 [0xffffffffffffffff]))) "kbd.c":426:11 7 {*arm_addsi3}
     (nil))
(insn 45 44 46 5 (set (reg/f:SI 3 r3 [138])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":426:11 253 {*arm_movsi_insn}
     (nil))
(insn 46 45 47 5 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [138])
                (const_int 140 [0x8c])) [3 kp_13->data+0 S4 A32])
        (reg:SI 2 r2 [orig:120 _9 ] [120])) "kbd.c":426:11 253 {*arm_movsi_insn}
     (nil))
(insn 47 46 48 5 (set (reg/f:SI 3 r3 [139])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":426:17 253 {*arm_movsi_insn}
     (nil))
(insn 48 47 49 5 (set (reg:SI 3 r3 [orig:121 _10 ] [121])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [139])
                (const_int 144 [0x90])) [3 kp_13->room+0 S4 A32])) "kbd.c":426:17 253 {*arm_movsi_insn}
     (nil))
(insn 49 48 50 5 (set (reg:SI 2 r2 [orig:122 _11 ] [122])
        (plus:SI (reg:SI 3 r3 [orig:121 _10 ] [121])
            (const_int 1 [0x1]))) "kbd.c":426:23 7 {*arm_addsi3}
     (nil))
(insn 50 49 51 5 (set (reg/f:SI 3 r3 [140])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":426:23 253 {*arm_movsi_insn}
     (nil))
(insn 51 50 52 5 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [140])
                (const_int 144 [0x90])) [3 kp_13->room+0 S4 A32])
        (reg:SI 2 r2 [orig:122 _11 ] [122])) "kbd.c":426:23 253 {*arm_movsi_insn}
     (nil))
(call_insn 52 51 53 5 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("unlock") [flags 0x41]  <function_decl 0x7fcdc0b31900 unlock>) [0 unlock S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "kbd.c":427:3 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 53 52 60 5 (set (reg:SI 3 r3 [orig:123 _22 ] [123])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -9 [0xfffffffffffffff7])) [0 c+0 S1 A8]))) "kbd.c":428:10 175 {*arm_zero_extendqisi2}
     (nil))
(insn 60 53 61 5 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:124 <retval> ] [124])) "kbd.c":429:1 253 {*arm_movsi_insn}
     (nil))
(insn 61 60 71 5 (use (reg/i:SI 0 r0)) "kbd.c":429:1 -1
     (nil))
(note 71 61 72 5 NOTE_INSN_EPILOGUE_BEG)
(insn 72 71 73 5 (unspec_volatile [
            (const_int 0 [0])
        ] VUNSPEC_BLOCKAGE) "kbd.c":429:1 -1
     (nil))
(insn/f 73 72 74 5 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 11 fp)
            (const_int -4 [0xfffffffffffffffc]))) "kbd.c":429:1 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 13 sp)
            (plus:SI (reg/f:SI 11 fp)
                (const_int -4 [0xfffffffffffffffc])))
        (nil)))
(insn 74 73 75 5 (unspec:SI [
            (reg/f:SI 13 sp)
        ] UNSPEC_REGISTER_USE) "kbd.c":429:1 -1
     (nil))
(jump_insn 75 74 76 5 (parallel [
            (return)
            (set/f (reg/f:SI 13 sp)
                (plus:SI (reg/f:SI 13 sp)
                    (const_int 8 [0x8])))
            (set/f (reg/f:SI 11 fp)
                (mem/c:SI (reg/f:SI 13 sp) [5  S4 A32]))
            (set/f (reg:SI 15 pc)
                (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                        (const_int 4 [0x4])) [5  S4 A32]))
        ]) "kbd.c":429:1 -1
     (expr_list:REG_CFA_RESTORE (reg/f:SI 11 fp)
        (nil))
 -> return)
;;  succ:       EXIT [always] 
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp]

(barrier 76 75 65)
(note 65 76 0 NOTE_INSN_DELETED)

;; Function kgets (kgets, funcdef_no=9, decl_uid=4561, cgraph_uid=10, symbol_order=24)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 8 n_edges 9 count 12 (  1.5)
scanning new insn with uid = 64.
scanning new insn with uid = 65.
scanning new insn with uid = 66.
scanning new insn with uid = 67.
scanning new insn with uid = 58.
scanning new insn with uid = 59.
scanning new insn with uid = 60.
scanning new insn with uid = 61.
verify found no changes in insn with uid = 27.
verify found no changes in insn with uid = 41.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns


kgets

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 11 [fp] 13 [sp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  regs ever live 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={5d,6u} r1={3d} r2={6d,3u} r3={11d,9u} r11={3d,21u} r12={4d} r13={5d,21u} r14={3d,2u} r15={3d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={4d,2u} r101={2d} r102={1d,1u} r104={2d} r105={2d} r106={2d} 
;;    total ref usage 289{224d,65u,0e} in 36{34 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp]
;; lr  def 	
(note 4 1 58 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 58 4 59 2 (parallel [
            (set (mem/c:BLK (pre_modify:SI (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -8 [0xfffffffffffffff8]))) [5  A8])
                (unspec:BLK [
                        (reg/f:SI 11 fp)
                    ] UNSPEC_PUSH_MULT))
            (use (reg:SI 14 lr))
        ]) "kbd.c":432:1 -1
     (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                (set/f (reg/f:SI 13 sp)
                    (plus:SI (reg/f:SI 13 sp)
                        (const_int -8 [0xfffffffffffffff8])))
                (set/f (mem/c:SI (reg/f:SI 13 sp) [5  S4 A32])
                    (reg/f:SI 11 fp))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 4 [0x4])) [5  S4 A32])
                    (reg:SI 14 lr))
            ])
        (nil)))
(insn/f 59 58 60 2 (set (reg/f:SI 11 fp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 4 [0x4]))) "kbd.c":432:1 -1
     (nil))
(insn/f 60 59 61 2 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -16 [0xfffffffffffffff0]))) "kbd.c":432:1 -1
     (nil))
(insn 61 60 62 2 (set (mem:BLK (scratch) [0  A8])
        (unspec:BLK [
                (reg/f:SI 13 sp)
                (reg/f:SI 11 fp)
            ] UNSPEC_PRLG_STK)) "kbd.c":432:1 -1
     (nil))
(note 62 61 2 2 NOTE_INSN_PROLOGUE_END)
(insn 2 62 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [2 s+0 S4 A32])
        (reg:SI 0 r0 [ s ])) "kbd.c":432:1 253 {*arm_movsi_insn}
     (nil))
(note 3 2 53 2 NOTE_INSN_FUNCTION_BEG)
(jump_insn 53 3 54 2 (set (pc)
        (label_ref 25)) "kbd.c":434:8 284 {*arm_jump}
     (nil)
 -> 25)
;;  succ:       6 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 54 53 31)
;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(code_label 31 54 8 3 97 (nil) [1 uses])
(note 8 31 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 3 (set (reg:SI 3 r3 [118])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -5 [0xfffffffffffffffb])) [0 c+0 S1 A8]))) "kbd.c":435:8 175 {*arm_zero_extendqisi2}
     (nil))
(insn 10 9 11 3 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [118])
            (const_int 8 [0x8]))) "kbd.c":435:8 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 11 10 12 3 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 18)
            (pc))) "kbd.c":435:8 273 {arm_cond_branch}
     (nil)
 -> 18)
;;  succ:       4 (FALLTHRU)
;;              5
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3]
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg:SI 3 r3 [120])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [2 s+0 S4 A32])) "kbd.c":436:8 253 {*arm_movsi_insn}
     (nil))
(insn 14 13 15 4 (set (reg:SI 3 r3 [119])
        (plus:SI (reg:SI 3 r3 [120])
            (const_int -1 [0xffffffffffffffff]))) "kbd.c":436:8 7 {*arm_addsi3}
     (nil))
(insn 15 14 55 4 (set (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [2 s+0 S4 A32])
        (reg:SI 3 r3 [119])) "kbd.c":436:8 253 {*arm_movsi_insn}
     (nil))
(jump_insn 55 15 56 4 (set (pc)
        (label_ref 25)) "kbd.c":437:7 284 {*arm_jump}
     (nil)
 -> 25)
;;  succ:       6 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 56 55 18)
;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
(code_label 18 56 19 5 96 (nil) [1 uses])
(note 19 18 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 5 (set (reg/f:SI 3 r3 [orig:113 s.30_1 ] [113])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [2 s+0 S4 A32])) "kbd.c":439:7 253 {*arm_movsi_insn}
     (nil))
(insn 21 20 22 5 (set (reg:SI 2 r2 [121])
        (plus:SI (reg/f:SI 3 r3 [orig:113 s.30_1 ] [113])
            (const_int 1 [0x1]))) "kbd.c":439:7 7 {*arm_addsi3}
     (nil))
(insn 22 21 23 5 (set (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [2 s+0 S4 A32])
        (reg:SI 2 r2 [121])) "kbd.c":439:7 253 {*arm_movsi_insn}
     (nil))
(insn 23 22 24 5 (set (reg:QI 2 r2 [122])
        (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                (const_int -5 [0xfffffffffffffffb])) [0 c+0 S1 A8])) "kbd.c":439:10 263 {*arm_movqi_insn}
     (nil))
(insn 24 23 25 5 (set (mem:QI (reg/f:SI 3 r3 [orig:113 s.30_1 ] [113]) [0 *s.30_1+0 S1 A8])
        (reg:QI 2 r2 [122])) "kbd.c":439:10 263 {*arm_movqi_insn}
     (nil))
;;  succ:       6 (FALLTHRU,DFS_BACK)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU,DFS_BACK)
;;              2 [always] 
;;              4 [always] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(code_label 25 24 26 6 95 (nil) [2 uses])
(note 26 25 27 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(call_insn 27 26 28 6 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kgetc") [flags 0x3]  <function_decl 0x7fcdc0b31600 kgetc>) [0 kgetc S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "kbd.c":434:15 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 28 27 30 6 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (reg:SI 0 r0)) "kbd.c":434:15 253 {*arm_movsi_insn}
     (nil))
(insn 30 28 32 6 (set (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                (const_int -5 [0xfffffffffffffffb])) [0 c+0 S1 A8])
        (reg:QI 3 r3 [123])) "kbd.c":434:13 263 {*arm_movqi_insn}
     (nil))
(insn 32 30 33 6 (set (reg:SI 3 r3 [124])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -5 [0xfffffffffffffffb])) [0 c+0 S1 A8]))) "kbd.c":434:24 175 {*arm_zero_extendqisi2}
     (nil))
(insn 33 32 34 6 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [124])
            (const_int 13 [0xd]))) "kbd.c":434:24 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 34 33 35 6 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) "kbd.c":434:24 273 {arm_cond_branch}
     (nil)
 -> 31)
;;  succ:       3
;;              7 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(note 35 34 36 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 7 (set (reg/f:SI 3 r3 [125])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [2 s+0 S4 A32])) "kbd.c":441:6 253 {*arm_movsi_insn}
     (nil))
(insn 37 36 39 7 (set (reg:SI 2 r2 [126])
        (const_int 0 [0])) "kbd.c":441:6 253 {*arm_movsi_insn}
     (nil))
(insn 39 37 40 7 (set (mem:QI (reg/f:SI 3 r3 [125]) [0 *s_4+0 S1 A8])
        (reg:QI 2 r2 [127])) "kbd.c":441:6 263 {*arm_movqi_insn}
     (nil))
(insn 40 39 41 7 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [2 s+0 S4 A32])) "kbd.c":442:10 253 {*arm_movsi_insn}
     (nil))
(call_insn/i 41 40 42 7 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strlen") [flags 0x41]  <function_decl 0x7fcdc0d96100 strlen>) [0 __builtin_strlen S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "kbd.c":442:10 291 {*call_value_symbol}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 42 41 50 7 (set (reg:SI 3 r3 [orig:115 _3 ] [115])
        (reg:SI 0 r0)) "kbd.c":442:10 253 {*arm_movsi_insn}
     (nil))
(insn 50 42 51 7 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:117 <retval> ] [117])) "kbd.c":443:1 253 {*arm_movsi_insn}
     (nil))
(insn 51 50 63 7 (use (reg/i:SI 0 r0)) "kbd.c":443:1 -1
     (nil))
(note 63 51 64 7 NOTE_INSN_EPILOGUE_BEG)
(insn 64 63 65 7 (unspec_volatile [
            (const_int 0 [0])
        ] VUNSPEC_BLOCKAGE) "kbd.c":443:1 -1
     (nil))
(insn/f 65 64 66 7 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 11 fp)
            (const_int -4 [0xfffffffffffffffc]))) "kbd.c":443:1 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 13 sp)
            (plus:SI (reg/f:SI 11 fp)
                (const_int -4 [0xfffffffffffffffc])))
        (nil)))
(insn 66 65 67 7 (unspec:SI [
            (reg/f:SI 13 sp)
        ] UNSPEC_REGISTER_USE) "kbd.c":443:1 -1
     (nil))
(jump_insn 67 66 68 7 (parallel [
            (return)
            (set/f (reg/f:SI 13 sp)
                (plus:SI (reg/f:SI 13 sp)
                    (const_int 8 [0x8])))
            (set/f (reg/f:SI 11 fp)
                (mem/c:SI (reg/f:SI 13 sp) [5  S4 A32]))
            (set/f (reg:SI 15 pc)
                (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                        (const_int 4 [0x4])) [5  S4 A32]))
        ]) "kbd.c":443:1 -1
     (expr_list:REG_CFA_RESTORE (reg/f:SI 11 fp)
        (nil))
 -> return)
;;  succ:       EXIT [always] 
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp]

(barrier 68 67 57)
(note 57 68 0 NOTE_INSN_DELETED)

;; Function mgetc (mgetc, funcdef_no=10, decl_uid=4568, cgraph_uid=11, symbol_order=25)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 6 n_edges 6 count 7 (  1.2)
scanning new insn with uid = 63.
scanning new insn with uid = 64.
scanning new insn with uid = 65.
scanning new insn with uid = 66.
scanning new insn with uid = 57.
scanning new insn with uid = 58.
scanning new insn with uid = 59.
scanning new insn with uid = 60.
verify found no changes in insn with uid = 7.
verify found no changes in insn with uid = 15.
verify found no changes in insn with uid = 43.


try_optimize_cfg iteration 1

Merging block 3 into block 2...
changing bb of uid 55
  from 3 to 2
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns


mgetc

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 11 [fp] 13 [sp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={5d,2u} r1={5d,1u} r2={11d,7u} r3={22d,21u} r11={3d,20u} r12={6d} r13={5d,19u} r14={4d,2u} r15={4d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={5d,2u} r101={3d} r102={1d,1u} r104={3d} r105={3d} r106={3d} 
;;    total ref usage 410{335d,75u,0e} in 48{45 regular + 3 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(note 3 1 57 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 57 3 58 2 (parallel [
            (set (mem/c:BLK (pre_modify:SI (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -8 [0xfffffffffffffff8]))) [5  A8])
                (unspec:BLK [
                        (reg/f:SI 11 fp)
                    ] UNSPEC_PUSH_MULT))
            (use (reg:SI 14 lr))
        ]) "kbd.c":462:1 -1
     (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                (set/f (reg/f:SI 13 sp)
                    (plus:SI (reg/f:SI 13 sp)
                        (const_int -8 [0xfffffffffffffff8])))
                (set/f (mem/c:SI (reg/f:SI 13 sp) [5  S4 A32])
                    (reg/f:SI 11 fp))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 4 [0x4])) [5  S4 A32])
                    (reg:SI 14 lr))
            ])
        (nil)))
(insn/f 58 57 59 2 (set (reg/f:SI 11 fp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 4 [0x4]))) "kbd.c":462:1 -1
     (nil))
(insn/f 59 58 60 2 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -8 [0xfffffffffffffff8]))) "kbd.c":462:1 -1
     (nil))
(insn 60 59 61 2 (set (mem:BLK (scratch) [0  A8])
        (unspec:BLK [
                (reg/f:SI 13 sp)
                (reg/f:SI 11 fp)
            ] UNSPEC_PRLG_STK)) "kbd.c":462:1 -1
     (nil))
(note 61 60 2 2 NOTE_INSN_PROLOGUE_END)
(note 2 61 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 3 r3 [124])
        (symbol_ref:SI ("kbd") [flags 0x2]  <var_decl 0x7fcdc0b1a5a0 kbd>)) "kbd.c":464:8 253 {*arm_movsi_insn}
     (nil))
(insn 6 5 7 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])
        (reg/f:SI 3 r3 [124])) "kbd.c":464:8 253 {*arm_movsi_insn}
     (nil))
(call_insn 7 6 55 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("unlock") [flags 0x41]  <function_decl 0x7fcdc0b31900 unlock>) [0 unlock S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "kbd.c":466:3 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 55 7 11 2 (const_int 0 [0]) "kbd.c":467:8 311 {nop}
     (nil))
;;  succ:       4 [always]  (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 2, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [always]  (FALLTHRU)
;;              4 (DFS_BACK)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(code_label 11 55 8 4 100 (nil) [1 uses])
(note 8 11 9 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 4 (set (reg/f:SI 3 r3 [125])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":467:11 253 {*arm_movsi_insn}
     (nil))
(insn 10 9 12 4 (set (reg:SI 3 r3 [orig:113 _1 ] [113])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [125])
                (const_int 140 [0x8c])) [3 kp_11->data+0 S4 A32])) "kbd.c":467:11 253 {*arm_movsi_insn}
     (nil))
(insn 12 10 13 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:113 _1 ] [113])
            (const_int 0 [0]))) "kbd.c":467:18 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 13 12 14 4 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 11)
            (pc))) "kbd.c":467:18 273 {arm_cond_branch}
     (nil)
 -> 11)
;;  succ:       4 (DFS_BACK)
;;              5 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(note 14 13 15 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(call_insn 15 14 16 5 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("lock") [flags 0x41]  <function_decl 0x7fcdc0b31800 lock>) [0 lock S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "kbd.c":469:3 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 16 15 17 5 (set (reg/f:SI 3 r3 [126])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":470:17 253 {*arm_movsi_insn}
     (nil))
(insn 17 16 18 5 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [126])
                (const_int 136 [0x88])) [3 kp_11->tail+0 S4 A32])) "kbd.c":470:17 253 {*arm_movsi_insn}
     (nil))
(insn 18 17 19 5 (set (reg:SI 1 r1 [orig:115 _4 ] [115])
        (plus:SI (reg:SI 3 r3 [orig:114 _2 ] [114])
            (const_int 1 [0x1]))) "kbd.c":470:23 7 {*arm_addsi3}
     (nil))
(insn 19 18 20 5 (set (reg/f:SI 2 r2 [127])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":470:23 253 {*arm_movsi_insn}
     (nil))
(insn 20 19 21 5 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [127])
                (const_int 136 [0x88])) [3 kp_11->tail+0 S4 A32])
        (reg:SI 1 r1 [orig:115 _4 ] [115])) "kbd.c":470:23 253 {*arm_movsi_insn}
     (nil))
(insn 21 20 22 5 (set (reg/f:SI 2 r2 [128])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":470:5 253 {*arm_movsi_insn}
     (nil))
(insn 22 21 23 5 (set (reg/f:SI 3 r3 [129])
        (plus:SI (reg/f:SI 2 r2 [128])
            (reg:SI 3 r3 [orig:114 _2 ] [114]))) "kbd.c":470:5 7 {*arm_addsi3}
     (nil))
(insn 23 22 24 5 (set (reg:QI 3 r3 [130])
        (mem/v:QI (plus:SI (reg/f:SI 3 r3 [129])
                (const_int 4 [0x4])) [0 kp_11->buf[_3]+0 S1 A8])) "kbd.c":470:5 263 {*arm_movqi_insn}
     (nil))
(insn 24 23 25 5 (set (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                (const_int -9 [0xfffffffffffffff7])) [0 c+0 S1 A8])
        (reg:QI 3 r3 [130])) "kbd.c":470:5 263 {*arm_movqi_insn}
     (nil))
(insn 25 24 26 5 (set (reg/f:SI 3 r3 [131])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":471:12 253 {*arm_movsi_insn}
     (nil))
(insn 26 25 27 5 (set (reg:SI 3 r3 [orig:116 _5 ] [116])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [131])
                (const_int 136 [0x88])) [3 kp_11->tail+0 S4 A32])) "kbd.c":471:12 253 {*arm_movsi_insn}
     (nil))
(insn 27 26 28 5 (parallel [
            (set (reg:CC_NZ 100 cc)
                (compare:CC_NZ (minus:SI (const_int 0 [0])
                        (reg:SI 3 r3 [orig:116 _5 ] [116]))
                    (const_int 0 [0])))
            (set (reg:SI 2 r2 [132])
                (minus:SI (const_int 0 [0])
                    (reg:SI 3 r3 [orig:116 _5 ] [116])))
        ]) "kbd.c":471:12 46 {subsi3_compare0}
     (nil))
(insn 28 27 29 5 (set (reg:SI 3 r3 [orig:117 _6 ] [117])
        (and:SI (reg:SI 3 r3 [orig:116 _5 ] [116])
            (const_int 127 [0x7f]))) "kbd.c":471:12 90 {*arm_andsi3_insn}
     (nil))
(insn 29 28 30 5 (set (reg:SI 2 r2 [133])
        (and:SI (reg:SI 2 r2 [132])
            (const_int 127 [0x7f]))) "kbd.c":471:12 90 {*arm_andsi3_insn}
     (nil))
(insn 30 29 31 5 (set (reg:SI 3 r3 [orig:117 _6 ] [117])
        (if_then_else:SI (ge:SI (reg:CC_NZ 100 cc)
                (const_int 0 [0]))
            (neg:SI (reg:SI 2 r2 [133]))
            (reg:SI 3 r3 [orig:117 _6 ] [117]))) "kbd.c":471:12 371 {*if_neg_move}
     (nil))
(insn 31 30 32 5 (set (reg/f:SI 2 r2 [134])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":471:12 253 {*arm_movsi_insn}
     (nil))
(insn 32 31 33 5 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [134])
                (const_int 136 [0x88])) [3 kp_11->tail+0 S4 A32])
        (reg:SI 3 r3 [orig:117 _6 ] [117])) "kbd.c":471:12 253 {*arm_movsi_insn}
     (nil))
(insn 33 32 34 5 (set (reg/f:SI 3 r3 [135])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":472:5 253 {*arm_movsi_insn}
     (nil))
(insn 34 33 35 5 (set (reg:SI 3 r3 [orig:118 _7 ] [118])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [135])
                (const_int 140 [0x8c])) [3 kp_11->data+0 S4 A32])) "kbd.c":472:5 253 {*arm_movsi_insn}
     (nil))
(insn 35 34 36 5 (set (reg:SI 2 r2 [orig:119 _8 ] [119])
        (plus:SI (reg:SI 3 r3 [orig:118 _7 ] [118])
            (const_int -1 [0xffffffffffffffff]))) "kbd.c":472:11 7 {*arm_addsi3}
     (nil))
(insn 36 35 37 5 (set (reg/f:SI 3 r3 [136])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":472:11 253 {*arm_movsi_insn}
     (nil))
(insn 37 36 38 5 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [136])
                (const_int 140 [0x8c])) [3 kp_11->data+0 S4 A32])
        (reg:SI 2 r2 [orig:119 _8 ] [119])) "kbd.c":472:11 253 {*arm_movsi_insn}
     (nil))
(insn 38 37 39 5 (set (reg/f:SI 3 r3 [137])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":472:17 253 {*arm_movsi_insn}
     (nil))
(insn 39 38 40 5 (set (reg:SI 3 r3 [orig:120 _9 ] [120])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [137])
                (const_int 144 [0x90])) [3 kp_11->room+0 S4 A32])) "kbd.c":472:17 253 {*arm_movsi_insn}
     (nil))
(insn 40 39 41 5 (set (reg:SI 2 r2 [orig:121 _10 ] [121])
        (plus:SI (reg:SI 3 r3 [orig:120 _9 ] [120])
            (const_int 1 [0x1]))) "kbd.c":472:23 7 {*arm_addsi3}
     (nil))
(insn 41 40 42 5 (set (reg/f:SI 3 r3 [138])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":472:23 253 {*arm_movsi_insn}
     (nil))
(insn 42 41 43 5 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [138])
                (const_int 144 [0x90])) [3 kp_11->room+0 S4 A32])
        (reg:SI 2 r2 [orig:121 _10 ] [121])) "kbd.c":472:23 253 {*arm_movsi_insn}
     (nil))
(call_insn 43 42 44 5 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("unlock") [flags 0x41]  <function_decl 0x7fcdc0b31900 unlock>) [0 unlock S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "kbd.c":473:3 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 44 43 51 5 (set (reg:SI 3 r3 [orig:122 _21 ] [122])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -9 [0xfffffffffffffff7])) [0 c+0 S1 A8]))) "kbd.c":474:10 175 {*arm_zero_extendqisi2}
     (nil))
(insn 51 44 52 5 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:123 <retval> ] [123])) "kbd.c":475:1 253 {*arm_movsi_insn}
     (nil))
(insn 52 51 62 5 (use (reg/i:SI 0 r0)) "kbd.c":475:1 -1
     (nil))
(note 62 52 63 5 NOTE_INSN_EPILOGUE_BEG)
(insn 63 62 64 5 (unspec_volatile [
            (const_int 0 [0])
        ] VUNSPEC_BLOCKAGE) "kbd.c":475:1 -1
     (nil))
(insn/f 64 63 65 5 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 11 fp)
            (const_int -4 [0xfffffffffffffffc]))) "kbd.c":475:1 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 13 sp)
            (plus:SI (reg/f:SI 11 fp)
                (const_int -4 [0xfffffffffffffffc])))
        (nil)))
(insn 65 64 66 5 (unspec:SI [
            (reg/f:SI 13 sp)
        ] UNSPEC_REGISTER_USE) "kbd.c":475:1 -1
     (nil))
(jump_insn 66 65 67 5 (parallel [
            (return)
            (set/f (reg/f:SI 13 sp)
                (plus:SI (reg/f:SI 13 sp)
                    (const_int 8 [0x8])))
            (set/f (reg/f:SI 11 fp)
                (mem/c:SI (reg/f:SI 13 sp) [5  S4 A32]))
            (set/f (reg:SI 15 pc)
                (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                        (const_int 4 [0x4])) [5  S4 A32]))
        ]) "kbd.c":475:1 -1
     (expr_list:REG_CFA_RESTORE (reg/f:SI 11 fp)
        (nil))
 -> return)
;;  succ:       EXIT [always] 
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp]

(barrier 67 66 56)
(note 56 67 0 NOTE_INSN_DELETED)

;; Function kgetline (kgetline, funcdef_no=11, decl_uid=4578, cgraph_uid=12, symbol_order=26)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 10 n_edges 11 count 14 (  1.4)
scanning new insn with uid = 101.
scanning new insn with uid = 102.
scanning new insn with uid = 103.
scanning new insn with uid = 104.
scanning new insn with uid = 95.
scanning new insn with uid = 96.
scanning new insn with uid = 97.
scanning new insn with uid = 98.
verify found no changes in insn with uid = 12.
verify found no changes in insn with uid = 21.
verify found no changes in insn with uid = 78.


try_optimize_cfg iteration 1

Forwarding edge 6->7 to 6 failed.
Merging block 9 into block 8...
changing bb of uid 68
  from 9 to 8
changing bb of uid 69
  from 9 to 8
changing bb of uid 70
  from 9 to 8
changing bb of uid 72
  from 9 to 8
changing bb of uid 73
  from 9 to 8
changing bb of uid 74
  from 9 to 8
changing bb of uid 75
  from 9 to 8
changing bb of uid 76
  from 9 to 8
changing bb of uid 77
  from 9 to 8
changing bb of uid 78
  from 9 to 8
changing bb of uid 81
  from 9 to 8
changing bb of uid 82
  from 9 to 8
changing bb of uid 85
  from 9 to 8
changing bb of uid 80
  from 9 to 8
changing bb of uid 83
  from 9 to 8
changing bb of uid 100
  unscanned insn
changing bb of uid 101
  from 9 to 8
changing bb of uid 102
  from 9 to 8
changing bb of uid 103
  from 9 to 8
changing bb of uid 104
  from 9 to 8
Merged blocks 8 and 9.
Merged 8 and 9 without moving.


try_optimize_cfg iteration 2

Forwarding edge 6->7 to 6 failed.


try_optimize_cfg iteration 1

Forwarding edge 6->7 to 6 failed.
starting the processing of deferred insns
ending the processing of deferred insns


kgetline

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 11 [fp] 13 [sp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={7d,4u} r1={5d,1u} r2={15d,11u} r3={29d,29u} r11={3d,28u} r12={6d} r13={5d,23u} r14={4d,2u} r15={4d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={6d,3u} r101={3d} r102={1d,1u} r104={3d} r105={3d} r106={3d} 
;;    total ref usage 451{349d,102u,0e} in 71{68 regular + 3 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp]
;; lr  def 	 3 [r3]
(note 4 1 95 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 95 4 96 2 (parallel [
            (set (mem/c:BLK (pre_modify:SI (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -8 [0xfffffffffffffff8]))) [5  A8])
                (unspec:BLK [
                        (reg/f:SI 11 fp)
                    ] UNSPEC_PUSH_MULT))
            (use (reg:SI 14 lr))
        ]) "kbd.c":478:1 -1
     (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                (set/f (reg/f:SI 13 sp)
                    (plus:SI (reg/f:SI 13 sp)
                        (const_int -8 [0xfffffffffffffff8])))
                (set/f (mem/c:SI (reg/f:SI 13 sp) [5  S4 A32])
                    (reg/f:SI 11 fp))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 4 [0x4])) [5  S4 A32])
                    (reg:SI 14 lr))
            ])
        (nil)))
(insn/f 96 95 97 2 (set (reg/f:SI 11 fp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 4 [0x4]))) "kbd.c":478:1 -1
     (nil))
(insn/f 97 96 98 2 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -16 [0xfffffffffffffff0]))) "kbd.c":478:1 -1
     (nil))
(insn 98 97 99 2 (set (mem:BLK (scratch) [0  A8])
        (unspec:BLK [
                (reg/f:SI 13 sp)
                (reg/f:SI 11 fp)
            ] UNSPEC_PRLG_STK)) "kbd.c":478:1 -1
     (nil))
(note 99 98 2 2 NOTE_INSN_PROLOGUE_END)
(insn 2 99 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [2 s+0 S4 A32])
        (reg:SI 0 r0 [ s ])) "kbd.c":478:1 253 {*arm_movsi_insn}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:SI 3 r3 [127])
        (symbol_ref:SI ("kbd") [flags 0x2]  <var_decl 0x7fcdc0b1a5a0 kbd>)) "kbd.c":480:8 253 {*arm_movsi_insn}
     (nil))
(insn 7 6 86 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])
        (reg/f:SI 3 r3 [127])) "kbd.c":480:8 253 {*arm_movsi_insn}
     (nil))
(jump_insn 86 7 87 2 (set (pc)
        (label_ref 13)) "kbd.c":482:9 284 {*arm_jump}
     (nil)
 -> 13)
;;  succ:       4 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 87 86 17)
;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(code_label 17 87 10 3 106 (nil) [1 uses])
(note 10 17 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg:SI 0 r0)
        (symbol_ref:SI ("kline") [flags 0x2]  <var_decl 0x7fcdc0b1a7e0 kline>)) "kbd.c":483:5 253 {*arm_movsi_insn}
     (nil))
(call_insn 12 11 13 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("ksleep") [flags 0x41]  <function_decl 0x7fcdc0b31a00 ksleep>) [0 ksleep S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "kbd.c":483:5 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
;;  succ:       4 (FALLTHRU,DFS_BACK)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU,DFS_BACK)
;;              2 [always] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 100 [cc]
(code_label 13 12 14 4 105 (nil) [1 uses])
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (set (reg/f:SI 3 r3 [128])
        (symbol_ref:SI ("kline") [flags 0x2]  <var_decl 0x7fcdc0b1a7e0 kline>)) "kbd.c":482:15 253 {*arm_movsi_insn}
     (nil))
(insn 16 15 18 4 (set (reg:SI 3 r3 [orig:113 kline.31_1 ] [113])
        (mem/v/c:SI (reg/f:SI 3 r3 [128]) [3 kline+0 S4 A32])) "kbd.c":482:15 253 {*arm_movsi_insn}
     (nil))
(insn 18 16 19 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:113 kline.31_1 ] [113])
            (const_int 0 [0]))) "kbd.c":482:15 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 19 18 20 4 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) "kbd.c":482:15 273 {arm_cond_branch}
     (nil)
 -> 17)
;;  succ:       3
;;              5 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(note 20 19 21 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(call_insn 21 20 63 5 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("lock") [flags 0x41]  <function_decl 0x7fcdc0b31800 lock>) [0 lock S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "kbd.c":486:3 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
;;  succ:       6 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;;              7 [always] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3] 100 [cc]
(code_label 63 21 22 6 109 (nil) [1 uses])
(note 22 63 23 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 6 (set (reg/f:SI 3 r3 [129])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":488:21 253 {*arm_movsi_insn}
     (nil))
(insn 24 23 25 6 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [129])
                (const_int 136 [0x88])) [3 kp_18->tail+0 S4 A32])) "kbd.c":488:21 253 {*arm_movsi_insn}
     (nil))
(insn 25 24 26 6 (set (reg:SI 1 r1 [orig:115 _4 ] [115])
        (plus:SI (reg:SI 3 r3 [orig:114 _2 ] [114])
            (const_int 1 [0x1]))) "kbd.c":488:27 7 {*arm_addsi3}
     (nil))
(insn 26 25 27 6 (set (reg/f:SI 2 r2 [130])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":488:27 253 {*arm_movsi_insn}
     (nil))
(insn 27 26 28 6 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [130])
                (const_int 136 [0x88])) [3 kp_18->tail+0 S4 A32])
        (reg:SI 1 r1 [orig:115 _4 ] [115])) "kbd.c":488:27 253 {*arm_movsi_insn}
     (nil))
(insn 28 27 29 6 (set (reg/f:SI 2 r2 [131])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":488:9 253 {*arm_movsi_insn}
     (nil))
(insn 29 28 30 6 (set (reg/f:SI 3 r3 [132])
        (plus:SI (reg/f:SI 2 r2 [131])
            (reg:SI 3 r3 [orig:114 _2 ] [114]))) "kbd.c":488:9 7 {*arm_addsi3}
     (nil))
(insn 30 29 31 6 (set (reg:QI 3 r3 [133])
        (mem/v:QI (plus:SI (reg/f:SI 3 r3 [132])
                (const_int 4 [0x4])) [0 kp_18->buf[_3]+0 S1 A8])) "kbd.c":488:9 263 {*arm_movqi_insn}
     (nil))
(insn 31 30 32 6 (set (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                (const_int -9 [0xfffffffffffffff7])) [0 c+0 S1 A8])
        (reg:QI 3 r3 [133])) "kbd.c":488:9 263 {*arm_movqi_insn}
     (nil))
(insn 32 31 33 6 (set (reg/f:SI 3 r3 [orig:116 s.32_5 ] [116])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [2 s+0 S4 A32])) "kbd.c":489:9 253 {*arm_movsi_insn}
     (nil))
(insn 33 32 34 6 (set (reg:SI 2 r2 [134])
        (plus:SI (reg/f:SI 3 r3 [orig:116 s.32_5 ] [116])
            (const_int 1 [0x1]))) "kbd.c":489:9 7 {*arm_addsi3}
     (nil))
(insn 34 33 35 6 (set (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [2 s+0 S4 A32])
        (reg:SI 2 r2 [134])) "kbd.c":489:9 253 {*arm_movsi_insn}
     (nil))
(insn 35 34 36 6 (set (reg:QI 2 r2 [135])
        (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                (const_int -9 [0xfffffffffffffff7])) [0 c+0 S1 A8])) "kbd.c":489:12 263 {*arm_movqi_insn}
     (nil))
(insn 36 35 37 6 (set (mem:QI (reg/f:SI 3 r3 [orig:116 s.32_5 ] [116]) [0 *s.32_5+0 S1 A8])
        (reg:QI 2 r2 [135])) "kbd.c":489:12 263 {*arm_movqi_insn}
     (nil))
(insn 37 36 38 6 (set (reg/f:SI 3 r3 [136])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":490:16 253 {*arm_movsi_insn}
     (nil))
(insn 38 37 39 6 (set (reg:SI 3 r3 [orig:117 _6 ] [117])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [136])
                (const_int 136 [0x88])) [3 kp_18->tail+0 S4 A32])) "kbd.c":490:16 253 {*arm_movsi_insn}
     (nil))
(insn 39 38 40 6 (parallel [
            (set (reg:CC_NZ 100 cc)
                (compare:CC_NZ (minus:SI (const_int 0 [0])
                        (reg:SI 3 r3 [orig:117 _6 ] [117]))
                    (const_int 0 [0])))
            (set (reg:SI 2 r2 [137])
                (minus:SI (const_int 0 [0])
                    (reg:SI 3 r3 [orig:117 _6 ] [117])))
        ]) "kbd.c":490:16 46 {subsi3_compare0}
     (nil))
(insn 40 39 41 6 (set (reg:SI 3 r3 [orig:118 _7 ] [118])
        (and:SI (reg:SI 3 r3 [orig:117 _6 ] [117])
            (const_int 127 [0x7f]))) "kbd.c":490:16 90 {*arm_andsi3_insn}
     (nil))
(insn 41 40 42 6 (set (reg:SI 2 r2 [138])
        (and:SI (reg:SI 2 r2 [137])
            (const_int 127 [0x7f]))) "kbd.c":490:16 90 {*arm_andsi3_insn}
     (nil))
(insn 42 41 43 6 (set (reg:SI 3 r3 [orig:118 _7 ] [118])
        (if_then_else:SI (ge:SI (reg:CC_NZ 100 cc)
                (const_int 0 [0]))
            (neg:SI (reg:SI 2 r2 [138]))
            (reg:SI 3 r3 [orig:118 _7 ] [118]))) "kbd.c":490:16 371 {*if_neg_move}
     (nil))
(insn 43 42 44 6 (set (reg/f:SI 2 r2 [139])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":490:16 253 {*arm_movsi_insn}
     (nil))
(insn 44 43 45 6 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [139])
                (const_int 136 [0x88])) [3 kp_18->tail+0 S4 A32])
        (reg:SI 3 r3 [orig:118 _7 ] [118])) "kbd.c":490:16 253 {*arm_movsi_insn}
     (nil))
(insn 45 44 46 6 (set (reg/f:SI 3 r3 [140])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":491:9 253 {*arm_movsi_insn}
     (nil))
(insn 46 45 47 6 (set (reg:SI 3 r3 [orig:119 _8 ] [119])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [140])
                (const_int 140 [0x8c])) [3 kp_18->data+0 S4 A32])) "kbd.c":491:9 253 {*arm_movsi_insn}
     (nil))
(insn 47 46 48 6 (set (reg:SI 2 r2 [orig:120 _9 ] [120])
        (plus:SI (reg:SI 3 r3 [orig:119 _8 ] [119])
            (const_int -1 [0xffffffffffffffff]))) "kbd.c":491:15 7 {*arm_addsi3}
     (nil))
(insn 48 47 49 6 (set (reg/f:SI 3 r3 [141])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":491:15 253 {*arm_movsi_insn}
     (nil))
(insn 49 48 50 6 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                (const_int 140 [0x8c])) [3 kp_18->data+0 S4 A32])
        (reg:SI 2 r2 [orig:120 _9 ] [120])) "kbd.c":491:15 253 {*arm_movsi_insn}
     (nil))
(insn 50 49 51 6 (set (reg/f:SI 3 r3 [142])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":491:21 253 {*arm_movsi_insn}
     (nil))
(insn 51 50 52 6 (set (reg:SI 3 r3 [orig:121 _10 ] [121])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [142])
                (const_int 144 [0x90])) [3 kp_18->room+0 S4 A32])) "kbd.c":491:21 253 {*arm_movsi_insn}
     (nil))
(insn 52 51 53 6 (set (reg:SI 2 r2 [orig:122 _11 ] [122])
        (plus:SI (reg:SI 3 r3 [orig:121 _10 ] [121])
            (const_int 1 [0x1]))) "kbd.c":491:27 7 {*arm_addsi3}
     (nil))
(insn 53 52 54 6 (set (reg/f:SI 3 r3 [143])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -8 [0xfffffffffffffff8])) [4 kp+0 S4 A32])) "kbd.c":491:27 253 {*arm_movsi_insn}
     (nil))
(insn 54 53 55 6 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [143])
                (const_int 144 [0x90])) [3 kp_18->room+0 S4 A32])
        (reg:SI 2 r2 [orig:122 _11 ] [122])) "kbd.c":491:27 253 {*arm_movsi_insn}
     (nil))
(insn 55 54 56 6 (set (reg:SI 3 r3 [144])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 11 fp)
                    (const_int -9 [0xfffffffffffffff7])) [0 c+0 S1 A8]))) "kbd.c":492:10 175 {*arm_zero_extendqisi2}
     (nil))
(insn 56 55 57 6 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [144])
            (const_int 13 [0xd]))) "kbd.c":492:10 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 57 56 62 6 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 92)
            (pc))) "kbd.c":492:10 273 {arm_cond_branch}
     (nil)
 -> 92)
;;  succ:       8
;;              7 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	
(note 62 57 89 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(jump_insn 89 62 90 7 (set (pc)
        (label_ref 63)) "kbd.c":488:9 284 {*arm_jump}
     (nil)
 -> 63)
;;  succ:       6 [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 90 89 92)
;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	
(code_label 92 90 91 8 111 (nil) [1 uses])
(note 91 92 93 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 93 91 68 8 (const_int 0 [0]) "kbd.c":493:2 311 {nop}
     (nil))
(insn 68 93 69 8 (set (reg:SI 3 r3 [145])
        (mem/f/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [2 s+0 S4 A32])) "kbd.c":495:6 253 {*arm_movsi_insn}
     (nil))
(insn 69 68 70 8 (set (reg/f:SI 3 r3 [orig:123 _12 ] [123])
        (plus:SI (reg:SI 3 r3 [145])
            (const_int -1 [0xffffffffffffffff]))) "kbd.c":495:6 7 {*arm_addsi3}
     (nil))
(insn 70 69 72 8 (set (reg:SI 2 r2 [146])
        (const_int 0 [0])) "kbd.c":495:10 253 {*arm_movsi_insn}
     (nil))
(insn 72 70 73 8 (set (mem:QI (reg/f:SI 3 r3 [orig:123 _12 ] [123]) [0 *_12+0 S1 A8])
        (reg:QI 2 r2 [147])) "kbd.c":495:10 263 {*arm_movqi_insn}
     (nil))
(insn 73 72 74 8 (set (reg/f:SI 3 r3 [148])
        (symbol_ref:SI ("kline") [flags 0x2]  <var_decl 0x7fcdc0b1a7e0 kline>)) "kbd.c":496:8 253 {*arm_movsi_insn}
     (nil))
(insn 74 73 75 8 (set (reg:SI 3 r3 [orig:124 kline.33_13 ] [124])
        (mem/v/c:SI (reg/f:SI 3 r3 [148]) [3 kline+0 S4 A32])) "kbd.c":496:8 253 {*arm_movsi_insn}
     (nil))
(insn 75 74 76 8 (set (reg:SI 3 r3 [orig:125 _14 ] [125])
        (plus:SI (reg:SI 3 r3 [orig:124 kline.33_13 ] [124])
            (const_int -1 [0xffffffffffffffff]))) "kbd.c":496:8 7 {*arm_addsi3}
     (nil))
(insn 76 75 77 8 (set (reg/f:SI 2 r2 [149])
        (symbol_ref:SI ("kline") [flags 0x2]  <var_decl 0x7fcdc0b1a7e0 kline>)) "kbd.c":496:8 253 {*arm_movsi_insn}
     (nil))
(insn 77 76 78 8 (set (mem/v/c:SI (reg/f:SI 2 r2 [149]) [3 kline+0 S4 A32])
        (reg:SI 3 r3 [orig:125 _14 ] [125])) "kbd.c":496:8 253 {*arm_movsi_insn}
     (nil))
(call_insn 78 77 81 8 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("unlock") [flags 0x41]  <function_decl 0x7fcdc0b31900 unlock>) [0 unlock S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "kbd.c":497:3 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 81 78 82 8 (clobber (reg/i:SI 0 r0)) "kbd.c":498:1 -1
     (nil))
(insn 82 81 85 8 (clobber (reg:SI 3 r3 [orig:126 <retval> ] [126])) "kbd.c":498:1 -1
     (nil))
(insn 85 82 80 8 (const_int 0 [0]) "kbd.c":498:1 311 {nop}
     (nil))
(insn 80 85 83 8 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:126 <retval> ] [126])) "kbd.c":498:1 253 {*arm_movsi_insn}
     (nil))
(insn 83 80 100 8 (use (reg/i:SI 0 r0)) "kbd.c":498:1 -1
     (nil))
(note 100 83 101 8 NOTE_INSN_EPILOGUE_BEG)
(insn 101 100 102 8 (unspec_volatile [
            (const_int 0 [0])
        ] VUNSPEC_BLOCKAGE) "kbd.c":498:1 -1
     (nil))
(insn/f 102 101 103 8 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 11 fp)
            (const_int -4 [0xfffffffffffffffc]))) "kbd.c":498:1 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 13 sp)
            (plus:SI (reg/f:SI 11 fp)
                (const_int -4 [0xfffffffffffffffc])))
        (nil)))
(insn 103 102 104 8 (unspec:SI [
            (reg/f:SI 13 sp)
        ] UNSPEC_REGISTER_USE) "kbd.c":498:1 -1
     (nil))
(jump_insn 104 103 105 8 (parallel [
            (return)
            (set/f (reg/f:SI 13 sp)
                (plus:SI (reg/f:SI 13 sp)
                    (const_int 8 [0x8])))
            (set/f (reg/f:SI 11 fp)
                (mem/c:SI (reg/f:SI 13 sp) [5  S4 A32]))
            (set/f (reg:SI 15 pc)
                (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                        (const_int 4 [0x4])) [5  S4 A32]))
        ]) "kbd.c":498:1 -1
     (expr_list:REG_CFA_RESTORE (reg/f:SI 11 fp)
        (nil))
 -> return)
;;  succ:       EXIT [always] 
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp]

(barrier 105 104 94)
(note 94 105 0 NOTE_INSN_DELETED)
