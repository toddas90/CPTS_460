
;; Function P (P, funcdef_no=0, decl_uid=4476, cgraph_uid=1, symbol_order=0)

void P (struct semaphore * s)
{
  int ps;
  int _1;
  int _2;
  int _3;
  struct PROC * running.0_4;
  struct PROC * running.1_5;
  struct proc * * _6;
  struct PROC * running.2_7;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  ps_11 = int_off ();
  _1 = s_12(D)->value;
  _2 = _1 + -1;
  s_12(D)->value = _2;
  _3 = s_12(D)->value;
  if (_3 < 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  running.0_4 = running;
  running.0_4->status = 3;
  running.1_5 = running;
  running.1_5->sem = s_12(D);
  _6 = &s_12(D)->queue;
  running.2_7 = running;
  enqueue (_6, running.2_7);
  tswitch ();
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  int_on (ps_11);
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (running.0_4 - 4 )
Partition 5 (running.1_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (running.2_7 - 7 )
Partition 11 (ps_11 - 11 )
Partition 12 (s_12(D) - 12 )


Coalescible Partition map 

Partition 0, base 0 (s_12(D) - 12 )


Partition map 

Partition 0 (s_12(D) - 12 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (s_12(D) - 12 )

After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (running.0_4 - 4 )
Partition 4 (running.1_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (running.2_7 - 7 )
Partition 7 (ps_11 - 11 )
Partition 8 (s_12(D) - 12 )

void P (struct semaphore * s)
{
  int ps;
  int _1;
  int _2;
  int _3;
  struct PROC * running.0_4;
  struct PROC * running.1_5;
  struct proc * * _6;
  struct PROC * running.2_7;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  ps_11 = int_off ();
  _1 = s_12(D)->value;
  _2 = _1 + -1;
  s_12(D)->value = _2;
  _3 = s_12(D)->value;
  if (_3 < 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  running.0_4 = running;
  running.0_4->status = 3;
  running.1_5 = running;
  running.1_5->sem = s_12(D);
  _6 = &s_12(D)->queue;
  running.2_7 = running;
  enqueue (_6, running.2_7);
  tswitch ();
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  int_on (ps_11);
  return;
;;    succ:       EXIT

}


Partition 0: size 4 align 4
	ps_11

;; Generating RTL for gimple basic block 2

;; ps_11 = int_off ();

(call_insn 6 5 7 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("int_off") [flags 0x41]  <function_decl 0x7fc2bd161900 int_off>) [0 int_off S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "pv.c":28:8 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))

(insn 7 6 0 (set (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 ps+0 S4 A32])
        (reg:SI 0 r0)) "pv.c":28:8 -1
     (nil))

;; _1 = s_12(D)->value;

(insn 8 7 9 (set (reg/f:SI 120)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 s+0 S4 A32])) "pv.c":30:5 -1
     (nil))

(insn 9 8 0 (set (reg:SI 113 [ _1 ])
        (mem:SI (reg/f:SI 120) [1 s_12(D)->value+0 S4 A32])) "pv.c":30:5 -1
     (nil))

;; _2 = _1 + -1;

(insn 10 9 0 (set (reg:SI 114 [ _2 ])
        (plus:SI (reg:SI 113 [ _1 ])
            (const_int -1 [0xffffffffffffffff]))) "pv.c":30:12 -1
     (nil))

;; s_12(D)->value = _2;

(insn 11 10 12 (set (reg/f:SI 121)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 s+0 S4 A32])) "pv.c":30:12 -1
     (nil))

(insn 12 11 0 (set (mem:SI (reg/f:SI 121) [1 s_12(D)->value+0 S4 A32])
        (reg:SI 114 [ _2 ])) "pv.c":30:12 -1
     (nil))

;; _3 = s_12(D)->value;

(insn 13 12 14 (set (reg/f:SI 122)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 s+0 S4 A32])) "pv.c":31:9 -1
     (nil))

(insn 14 13 0 (set (reg:SI 115 [ _3 ])
        (mem:SI (reg/f:SI 122) [1 s_12(D)->value+0 S4 A32])) "pv.c":31:9 -1
     (nil))

;; if (_3 < 0)

(insn 17 14 18 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 115 [ _3 ])
            (const_int 0 [0]))) "pv.c":31:7 -1
     (nil))

(jump_insn 18 17 0 (set (pc)
        (if_then_else (ge (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "pv.c":31:7 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; running.0_4 = running;

(insn 20 19 21 (set (reg/f:SI 123)
        (symbol_ref:SI ("running") [flags 0x40]  <var_decl 0x7fc2bde4c7e0 running>)) "pv.c":33:14 -1
     (nil))

(insn 21 20 0 (set (reg/f:SI 116 [ running.0_4 ])
        (mem/f/c:SI (reg/f:SI 123) [4 running+0 S4 A32])) "pv.c":33:14 -1
     (nil))

;; running.0_4->status = 3;

(insn 22 21 23 (set (reg:SI 124)
        (const_int 3 [0x3])) "pv.c":33:22 -1
     (nil))

(insn 23 22 0 (set (mem:SI (plus:SI (reg/f:SI 116 [ running.0_4 ])
                (const_int 28 [0x1c])) [1 running.0_4->status+0 S4 A32])
        (reg:SI 124)) "pv.c":33:22 -1
     (nil))

;; running.1_5 = running;

(insn 24 23 25 (set (reg/f:SI 125)
        (symbol_ref:SI ("running") [flags 0x40]  <var_decl 0x7fc2bde4c7e0 running>)) "pv.c":34:14 -1
     (nil))

(insn 25 24 0 (set (reg/f:SI 117 [ running.1_5 ])
        (mem/f/c:SI (reg/f:SI 125) [4 running+0 S4 A32])) "pv.c":34:14 -1
     (nil))

;; running.1_5->sem = s_12(D);

(insn 26 25 27 (set (reg/f:SI 126)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 s+0 S4 A32])) "pv.c":34:20 -1
     (nil))

(insn 27 26 0 (set (mem/f:SI (plus:SI (reg/f:SI 117 [ running.1_5 ])
                (const_int 88 [0x58])) [2 running.1_5->sem+0 S4 A32])
        (reg/f:SI 126)) "pv.c":34:20 -1
     (nil))

;; _6 = &s_12(D)->queue;

(insn 28 27 29 (set (reg:SI 127)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 s+0 S4 A32])) "pv.c":35:7 -1
     (nil))

(insn 29 28 0 (set (reg/f:SI 118 [ _6 ])
        (plus:SI (reg:SI 127)
            (const_int 4 [0x4]))) "pv.c":35:7 -1
     (nil))

;; running.2_7 = running;

(insn 30 29 31 (set (reg/f:SI 128)
        (symbol_ref:SI ("running") [flags 0x40]  <var_decl 0x7fc2bde4c7e0 running>)) "pv.c":35:7 -1
     (nil))

(insn 31 30 0 (set (reg/f:SI 119 [ running.2_7 ])
        (mem/f/c:SI (reg/f:SI 128) [4 running+0 S4 A32])) "pv.c":35:7 -1
     (nil))

;; enqueue (_6, running.2_7);

(insn 32 31 33 (set (reg:SI 1 r1)
        (reg/f:SI 119 [ running.2_7 ])) "pv.c":35:7 -1
     (nil))

(insn 33 32 34 (set (reg:SI 0 r0)
        (reg/f:SI 118 [ _6 ])) "pv.c":35:7 -1
     (nil))

(call_insn 34 33 0 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("enqueue") [flags 0x41]  <function_decl 0x7fc2bd161000 enqueue>) [0 enqueue S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "pv.c":35:7 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))

;; tswitch ();

(call_insn 35 34 0 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("tswitch") [flags 0x41]  <function_decl 0x7fc2bd161a00 tswitch>) [0 tswitch S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "pv.c":36:7 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))

;; Generating RTL for gimple basic block 4

;; 

(code_label 36 35 37 2 (nil) [0 uses])

(note 37 36 0 NOTE_INSN_BASIC_BLOCK)

;; int_on (ps_11);

(insn 38 37 39 (set (reg:SI 0 r0)
        (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 ps+0 S4 A32])) "pv.c":38:4 -1
     (nil))

(call_insn 39 38 0 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("int_on") [flags 0x41]  <function_decl 0x7fc2bd161c00 int_on>) [0 int_on S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "pv.c":38:4 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 s+0 S4 A32])
        (reg:SI 0 r0 [ s ])) "pv.c":25:1 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(call_insn 6 3 7 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("int_off") [flags 0x41]  <function_decl 0x7fc2bd161900 int_off>) [0 int_off S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "pv.c":28:8 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 7 6 8 2 (set (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 ps+0 S4 A32])
        (reg:SI 0 r0)) "pv.c":28:8 -1
     (nil))
(insn 8 7 9 2 (set (reg/f:SI 120)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 s+0 S4 A32])) "pv.c":30:5 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 113 [ _1 ])
        (mem:SI (reg/f:SI 120) [1 s_12(D)->value+0 S4 A32])) "pv.c":30:5 -1
     (nil))
(insn 10 9 11 2 (set (reg:SI 114 [ _2 ])
        (plus:SI (reg:SI 113 [ _1 ])
            (const_int -1 [0xffffffffffffffff]))) "pv.c":30:12 -1
     (nil))
(insn 11 10 12 2 (set (reg/f:SI 121)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 s+0 S4 A32])) "pv.c":30:12 -1
     (nil))
(insn 12 11 13 2 (set (mem:SI (reg/f:SI 121) [1 s_12(D)->value+0 S4 A32])
        (reg:SI 114 [ _2 ])) "pv.c":30:12 -1
     (nil))
(insn 13 12 14 2 (set (reg/f:SI 122)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 s+0 S4 A32])) "pv.c":31:9 -1
     (nil))
(insn 14 13 17 2 (set (reg:SI 115 [ _3 ])
        (mem:SI (reg/f:SI 122) [1 s_12(D)->value+0 S4 A32])) "pv.c":31:9 -1
     (nil))
(insn 17 14 18 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 115 [ _3 ])
            (const_int 0 [0]))) "pv.c":31:7 -1
     (nil))
(jump_insn 18 17 19 2 (set (pc)
        (if_then_else (ge (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) "pv.c":31:7 -1
     (nil)
 -> 36)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 4 (set (reg/f:SI 123)
        (symbol_ref:SI ("running") [flags 0x40]  <var_decl 0x7fc2bde4c7e0 running>)) "pv.c":33:14 -1
     (nil))
(insn 21 20 22 4 (set (reg/f:SI 116 [ running.0_4 ])
        (mem/f/c:SI (reg/f:SI 123) [4 running+0 S4 A32])) "pv.c":33:14 -1
     (nil))
(insn 22 21 23 4 (set (reg:SI 124)
        (const_int 3 [0x3])) "pv.c":33:22 -1
     (nil))
(insn 23 22 24 4 (set (mem:SI (plus:SI (reg/f:SI 116 [ running.0_4 ])
                (const_int 28 [0x1c])) [1 running.0_4->status+0 S4 A32])
        (reg:SI 124)) "pv.c":33:22 -1
     (nil))
(insn 24 23 25 4 (set (reg/f:SI 125)
        (symbol_ref:SI ("running") [flags 0x40]  <var_decl 0x7fc2bde4c7e0 running>)) "pv.c":34:14 -1
     (nil))
(insn 25 24 26 4 (set (reg/f:SI 117 [ running.1_5 ])
        (mem/f/c:SI (reg/f:SI 125) [4 running+0 S4 A32])) "pv.c":34:14 -1
     (nil))
(insn 26 25 27 4 (set (reg/f:SI 126)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 s+0 S4 A32])) "pv.c":34:20 -1
     (nil))
(insn 27 26 28 4 (set (mem/f:SI (plus:SI (reg/f:SI 117 [ running.1_5 ])
                (const_int 88 [0x58])) [2 running.1_5->sem+0 S4 A32])
        (reg/f:SI 126)) "pv.c":34:20 -1
     (nil))
(insn 28 27 29 4 (set (reg:SI 127)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 s+0 S4 A32])) "pv.c":35:7 -1
     (nil))
(insn 29 28 30 4 (set (reg/f:SI 118 [ _6 ])
        (plus:SI (reg:SI 127)
            (const_int 4 [0x4]))) "pv.c":35:7 -1
     (nil))
(insn 30 29 31 4 (set (reg/f:SI 128)
        (symbol_ref:SI ("running") [flags 0x40]  <var_decl 0x7fc2bde4c7e0 running>)) "pv.c":35:7 -1
     (nil))
(insn 31 30 32 4 (set (reg/f:SI 119 [ running.2_7 ])
        (mem/f/c:SI (reg/f:SI 128) [4 running+0 S4 A32])) "pv.c":35:7 -1
     (nil))
(insn 32 31 33 4 (set (reg:SI 1 r1)
        (reg/f:SI 119 [ running.2_7 ])) "pv.c":35:7 -1
     (nil))
(insn 33 32 34 4 (set (reg:SI 0 r0)
        (reg/f:SI 118 [ _6 ])) "pv.c":35:7 -1
     (nil))
(call_insn 34 33 35 4 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("enqueue") [flags 0x41]  <function_decl 0x7fc2bd161000 enqueue>) [0 enqueue S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "pv.c":35:7 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(call_insn 35 34 36 4 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("tswitch") [flags 0x41]  <function_decl 0x7fc2bd161a00 tswitch>) [0 tswitch S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "pv.c":36:7 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
;;  succ:       5 (FALLTHRU)

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              4 (FALLTHRU)
(code_label 36 35 37 5 2 (nil) [1 uses])
(note 37 36 38 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 5 (set (reg:SI 0 r0)
        (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 ps+0 S4 A32])) "pv.c":38:4 -1
     (nil))
(call_insn 39 38 0 5 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("int_on") [flags 0x41]  <function_decl 0x7fc2bd161c00 int_on>) [0 int_on S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "pv.c":38:4 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function V (V, funcdef_no=1, decl_uid=4486, cgraph_uid=2, symbol_order=1)

void V (struct semaphore * s)
{
  int ps;
  struct PROC * p;
  int _1;
  int _2;
  int _3;
  struct proc * * _4;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  ps_8 = int_off ();
  _1 = s_9(D)->value;
  _2 = _1 + 1;
  s_9(D)->value = _2;
  _3 = s_9(D)->value;
  if (_3 <= 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  _4 = &s_9(D)->queue;
  p_12 = dequeue (_4);
  p_12->status = 1;
  enqueue (&readyQueue, p_12);
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  int_on (ps_8);
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 8 (ps_8 - 8 )
Partition 9 (s_9(D) - 9 )
Partition 12 (p_12 - 12 )


Coalescible Partition map 

Partition 0, base 0 (s_9(D) - 9 )


Partition map 

Partition 0 (s_9(D) - 9 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (s_9(D) - 9 )

After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (ps_8 - 8 )
Partition 5 (s_9(D) - 9 )
Partition 6 (p_12 - 12 )

void V (struct semaphore * s)
{
  int ps;
  struct PROC * p;
  int _1;
  int _2;
  int _3;
  struct proc * * _4;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  ps_8 = int_off ();
  _1 = s_9(D)->value;
  _2 = _1 + 1;
  s_9(D)->value = _2;
  _3 = s_9(D)->value;
  if (_3 <= 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  _4 = &s_9(D)->queue;
  p_12 = dequeue (_4);
  p_12->status = 1;
  enqueue (&readyQueue, p_12);
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  int_on (ps_8);
  return;
;;    succ:       EXIT

}


Partition 1: size 4 align 4
	p_12
Partition 0: size 4 align 4
	ps_8

;; Generating RTL for gimple basic block 2

;; ps_8 = int_off ();

(call_insn 6 5 7 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("int_off") [flags 0x41]  <function_decl 0x7fc2bd161900 int_off>) [0 int_off S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "pv.c":45:8 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))

(insn 7 6 0 (set (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 ps+0 S4 A64])
        (reg:SI 0 r0)) "pv.c":45:8 -1
     (nil))

;; _1 = s_9(D)->value;

(insn 8 7 9 (set (reg/f:SI 117)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 s+0 S4 A32])) "pv.c":46:6 -1
     (nil))

(insn 9 8 0 (set (reg:SI 113 [ _1 ])
        (mem:SI (reg/f:SI 117) [1 s_9(D)->value+0 S4 A32])) "pv.c":46:6 -1
     (nil))

;; _2 = _1 + 1;

(insn 10 9 0 (set (reg:SI 114 [ _2 ])
        (plus:SI (reg:SI 113 [ _1 ])
            (const_int 1 [0x1]))) "pv.c":46:13 -1
     (nil))

;; s_9(D)->value = _2;

(insn 11 10 12 (set (reg/f:SI 118)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 s+0 S4 A32])) "pv.c":46:13 -1
     (nil))

(insn 12 11 0 (set (mem:SI (reg/f:SI 118) [1 s_9(D)->value+0 S4 A32])
        (reg:SI 114 [ _2 ])) "pv.c":46:13 -1
     (nil))

;; _3 = s_9(D)->value;

(insn 13 12 14 (set (reg/f:SI 119)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 s+0 S4 A32])) "pv.c":47:10 -1
     (nil))

(insn 14 13 0 (set (reg:SI 115 [ _3 ])
        (mem:SI (reg/f:SI 119) [1 s_9(D)->value+0 S4 A32])) "pv.c":47:10 -1
     (nil))

;; if (_3 <= 0)

(insn 17 14 18 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 115 [ _3 ])
            (const_int 0 [0]))) "pv.c":47:8 -1
     (nil))

(jump_insn 18 17 0 (set (pc)
        (if_then_else (gt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "pv.c":47:8 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _4 = &s_9(D)->queue;

(insn 20 19 21 (set (reg:SI 120)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 s+0 S4 A32])) "pv.c":48:13 -1
     (nil))

(insn 21 20 0 (set (reg/f:SI 116 [ _4 ])
        (plus:SI (reg:SI 120)
            (const_int 4 [0x4]))) "pv.c":48:13 -1
     (nil))

;; p_12 = dequeue (_4);

(insn 22 21 23 (set (reg:SI 0 r0)
        (reg/f:SI 116 [ _4 ])) "pv.c":48:13 -1
     (nil))

(call_insn 23 22 24 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("dequeue") [flags 0x41]  <function_decl 0x7fc2bd161100 dequeue>) [0 dequeue S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "pv.c":48:13 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))

(insn 24 23 0 (set (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [4 p+0 S4 A32])
        (reg:SI 0 r0)) "pv.c":48:13 -1
     (nil))

;; p_12->status = 1;

(insn 25 24 26 (set (reg/f:SI 121)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [4 p+0 S4 A32])) "pv.c":49:19 -1
     (nil))

(insn 26 25 27 (set (reg:SI 122)
        (const_int 1 [0x1])) "pv.c":49:19 -1
     (nil))

(insn 27 26 0 (set (mem:SI (plus:SI (reg/f:SI 121)
                (const_int 28 [0x1c])) [1 p_12->status+0 S4 A32])
        (reg:SI 122)) "pv.c":49:19 -1
     (nil))

;; enqueue (&readyQueue, p_12);

(insn 28 27 29 (set (reg:SI 1 r1)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [4 p+0 S4 A32])) "pv.c":50:9 -1
     (nil))

(insn 29 28 30 (set (reg:SI 0 r0)
        (symbol_ref:SI ("readyQueue") [flags 0x40]  <var_decl 0x7fc2bde4c6c0 readyQueue>)) "pv.c":50:9 -1
     (nil))

(call_insn 30 29 0 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("enqueue") [flags 0x41]  <function_decl 0x7fc2bd161000 enqueue>) [0 enqueue S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "pv.c":50:9 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))

;; Generating RTL for gimple basic block 4

;; 

(code_label 31 30 32 6 (nil) [0 uses])

(note 32 31 0 NOTE_INSN_BASIC_BLOCK)

;; int_on (ps_8);

(insn 33 32 34 (set (reg:SI 0 r0)
        (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 ps+0 S4 A64])) "pv.c":53:5 -1
     (nil))

(call_insn 34 33 0 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("int_on") [flags 0x41]  <function_decl 0x7fc2bd161c00 int_on>) [0 int_on S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "pv.c":53:5 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 s+0 S4 A32])
        (reg:SI 0 r0 [ s ])) "pv.c":42:1 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(call_insn 6 3 7 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("int_off") [flags 0x41]  <function_decl 0x7fc2bd161900 int_off>) [0 int_off S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "pv.c":45:8 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 7 6 8 2 (set (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 ps+0 S4 A64])
        (reg:SI 0 r0)) "pv.c":45:8 -1
     (nil))
(insn 8 7 9 2 (set (reg/f:SI 117)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 s+0 S4 A32])) "pv.c":46:6 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 113 [ _1 ])
        (mem:SI (reg/f:SI 117) [1 s_9(D)->value+0 S4 A32])) "pv.c":46:6 -1
     (nil))
(insn 10 9 11 2 (set (reg:SI 114 [ _2 ])
        (plus:SI (reg:SI 113 [ _1 ])
            (const_int 1 [0x1]))) "pv.c":46:13 -1
     (nil))
(insn 11 10 12 2 (set (reg/f:SI 118)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 s+0 S4 A32])) "pv.c":46:13 -1
     (nil))
(insn 12 11 13 2 (set (mem:SI (reg/f:SI 118) [1 s_9(D)->value+0 S4 A32])
        (reg:SI 114 [ _2 ])) "pv.c":46:13 -1
     (nil))
(insn 13 12 14 2 (set (reg/f:SI 119)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 s+0 S4 A32])) "pv.c":47:10 -1
     (nil))
(insn 14 13 17 2 (set (reg:SI 115 [ _3 ])
        (mem:SI (reg/f:SI 119) [1 s_9(D)->value+0 S4 A32])) "pv.c":47:10 -1
     (nil))
(insn 17 14 18 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 115 [ _3 ])
            (const_int 0 [0]))) "pv.c":47:8 -1
     (nil))
(jump_insn 18 17 19 2 (set (pc)
        (if_then_else (gt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) "pv.c":47:8 -1
     (nil)
 -> 31)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 4 (set (reg:SI 120)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 s+0 S4 A32])) "pv.c":48:13 -1
     (nil))
(insn 21 20 22 4 (set (reg/f:SI 116 [ _4 ])
        (plus:SI (reg:SI 120)
            (const_int 4 [0x4]))) "pv.c":48:13 -1
     (nil))
(insn 22 21 23 4 (set (reg:SI 0 r0)
        (reg/f:SI 116 [ _4 ])) "pv.c":48:13 -1
     (nil))
(call_insn 23 22 24 4 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("dequeue") [flags 0x41]  <function_decl 0x7fc2bd161100 dequeue>) [0 dequeue S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "pv.c":48:13 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 24 23 25 4 (set (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [4 p+0 S4 A32])
        (reg:SI 0 r0)) "pv.c":48:13 -1
     (nil))
(insn 25 24 26 4 (set (reg/f:SI 121)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [4 p+0 S4 A32])) "pv.c":49:19 -1
     (nil))
(insn 26 25 27 4 (set (reg:SI 122)
        (const_int 1 [0x1])) "pv.c":49:19 -1
     (nil))
(insn 27 26 28 4 (set (mem:SI (plus:SI (reg/f:SI 121)
                (const_int 28 [0x1c])) [1 p_12->status+0 S4 A32])
        (reg:SI 122)) "pv.c":49:19 -1
     (nil))
(insn 28 27 29 4 (set (reg:SI 1 r1)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [4 p+0 S4 A32])) "pv.c":50:9 -1
     (nil))
(insn 29 28 30 4 (set (reg:SI 0 r0)
        (symbol_ref:SI ("readyQueue") [flags 0x40]  <var_decl 0x7fc2bde4c6c0 readyQueue>)) "pv.c":50:9 -1
     (nil))
(call_insn 30 29 31 4 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("enqueue") [flags 0x41]  <function_decl 0x7fc2bd161000 enqueue>) [0 enqueue S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "pv.c":50:9 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
;;  succ:       5 (FALLTHRU)

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              4 (FALLTHRU)
(code_label 31 30 32 5 6 (nil) [1 uses])
(note 32 31 33 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 5 (set (reg:SI 0 r0)
        (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 ps+0 S4 A64])) "pv.c":53:5 -1
     (nil))
(call_insn 34 33 0 5 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("int_on") [flags 0x41]  <function_decl 0x7fc2bd161c00 int_on>) [0 int_on S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "pv.c":53:5 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function wV (wV, funcdef_no=2, decl_uid=4493, cgraph_uid=3, symbol_order=2)

int wV (struct PROC * p)
{
  struct semaphore * s;
  int ps;
  struct PROC * r;
  struct PROC * q;
  struct proc * _1;
  struct proc * _2;
  struct proc * _3;
  int _4;
  int _5;
  int _6;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  s_12 = p_11(D)->sem;
  ps_14 = int_off ();
  _1 = s_12->queue;
  if (p_11(D) == _1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  _2 = p_11(D)->next;
  s_12->queue = _2;
  goto <bb 9>; [INV]
;;    succ:       9

;;   basic block 4, loop depth 0
;;    pred:       2
  r_15 = s_12->queue;
  q_16 = r_15->next;
  goto <bb 8>; [INV]
;;    succ:       8

;;   basic block 5, loop depth 1
;;    pred:       8
  if (p_11(D) == q_7)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]
;;    succ:       6
;;                7

;;   basic block 6, loop depth 0
;;    pred:       5
  _3 = q_7->next;
  r_8->next = _3;
  goto <bb 9>; [INV]
;;    succ:       9

;;   basic block 7, loop depth 1
;;    pred:       5
  r_17 = q_7;
  q_18 = q_7->next;
;;    succ:       8

;;   basic block 8, loop depth 1
;;    pred:       4
;;                7
  # q_7 = PHI <q_16(4), q_18(7)>
  # r_8 = PHI <r_15(4), r_17(7)>
  if (q_7 != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 9>; [INV]
;;    succ:       5
;;                9

;;   basic block 9, loop depth 0
;;    pred:       3
;;                6
;;                8
  _4 = s_12->value;
  _5 = _4 + 1;
  s_12->value = _5;
  p_11(D)->status = 1;
  p_11(D)->sem = 0B;
  enqueue (&readyQueue, p_11(D));
  _6 = p_11(D)->pid;
  kprintf ("unblocked %d\n", _6);
  int_on (ps_14);
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (q_7 - 7 )
Partition 8 (r_8 - 8 )
Partition 11 (p_11(D) - 11 )
Partition 12 (s_12 - 12 )
Partition 14 (ps_14 - 14 )
Partition 15 (r_15 - 15 )
Partition 16 (q_16 - 16 )
Partition 17 (r_17 - 17 )
Partition 18 (q_18 - 18 )
Partition 27 (_27(D) - 27 )


Coalescible Partition map 

Partition 0, base 0 (q_7 - 7 16 18 )
Partition 1, base 1 (r_8 - 8 15 17 )
Partition 2, base 2 (p_11(D) - 11 )
Partition 7, base 3 (_27(D) - 27 )


Partition map 

Partition 0 (q_7 - 7 )
Partition 1 (r_8 - 8 )
Partition 2 (p_11(D) - 11 )
Partition 3 (r_15 - 15 )
Partition 4 (q_16 - 16 )
Partition 5 (r_17 - 17 )
Partition 6 (q_18 - 18 )
Partition 7 (_27(D) - 27 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646, 0) q_7 <-> q_16
(2147483646, 0) q_7 <-> q_18
(2147483646, 0) r_8 <-> r_15
(2147483646, 0) r_8 <-> r_17

Partition map 

Partition 0 (q_7 - 7 )
Partition 1 (r_8 - 8 )
Partition 2 (p_11(D) - 11 )
Partition 3 (r_15 - 15 )
Partition 4 (q_16 - 16 )
Partition 5 (r_17 - 17 )
Partition 6 (q_18 - 18 )
Partition 7 (_27(D) - 27 )

Coalesce list: (7)q_7 & (16)q_16 [map: 0, 4] : Success -> 0
Coalesce list: (7)q_7 & (18)q_18 [map: 0, 6] : Success -> 0
Coalesce list: (8)r_8 & (15)r_15 [map: 1, 3] : Success -> 1
Coalesce list: (8)r_8 & (17)r_17 [map: 1, 5] : Success -> 1
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (q_7 - 7 16 18 )
Partition 7 (r_8 - 8 15 17 )
Partition 8 (p_11(D) - 11 )
Partition 9 (s_12 - 12 )
Partition 10 (ps_14 - 14 )
Partition 11 (_27(D) - 27 )

int wV (struct PROC * p)
{
  struct semaphore * s;
  int ps;
  struct PROC * r;
  struct PROC * q;
  struct proc * _1;
  struct proc * _2;
  struct proc * _3;
  int _4;
  int _5;
  int _6;
  int _27(D);

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  s_12 = p_11(D)->sem;
  ps_14 = int_off ();
  _1 = s_12->queue;
  if (p_11(D) == _1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  _2 = p_11(D)->next;
  s_12->queue = _2;
  goto <bb 9>; [INV]
;;    succ:       9

;;   basic block 4, loop depth 0
;;    pred:       2
  r_15 = s_12->queue;
  q_16 = r_15->next;
  goto <bb 8>; [INV]
;;    succ:       8

;;   basic block 5, loop depth 1
;;    pred:       8
  if (p_11(D) == q_7)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]
;;    succ:       6
;;                7

;;   basic block 6, loop depth 0
;;    pred:       5
  _3 = q_7->next;
  r_8->next = _3;
  goto <bb 9>; [INV]
;;    succ:       9

;;   basic block 7, loop depth 1
;;    pred:       5
  r_17 = q_7;
  q_18 = q_7->next;
;;    succ:       8

;;   basic block 8, loop depth 1
;;    pred:       4
;;                7
  # q_7 = PHI <q_16(4), q_18(7)>
  # r_8 = PHI <r_15(4), r_17(7)>
  if (q_7 != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 9>; [INV]
;;    succ:       5
;;                9

;;   basic block 9, loop depth 0
;;    pred:       3
;;                6
;;                8
  _4 = s_12->value;
  _5 = _4 + 1;
  s_12->value = _5;
  p_11(D)->status = 1;
  p_11(D)->sem = 0B;
  enqueue (&readyQueue, p_11(D));
  _6 = p_11(D)->pid;
  kprintf ("unblocked %d\n", _6);
  int_on (ps_14);
  return;
;;    succ:       EXIT

}


Partition 3: size 4 align 4
	ps_14
Partition 2: size 4 align 4
	s_12
Partition 1: size 4 align 4
	r_8
Partition 0: size 4 align 4
	q_7

;; Generating RTL for gimple basic block 2

;; s_12 = p_11(D)->sem;

(insn 6 5 7 (set (reg/f:SI 120)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [4 p+0 S4 A32])) "pv.c":60:21 -1
     (nil))

(insn 7 6 8 (set (reg/f:SI 121)
        (mem/f:SI (plus:SI (reg/f:SI 120)
                (const_int 88 [0x58])) [2 p_11(D)->sem+0 S4 A32])) "pv.c":60:21 -1
     (nil))

(insn 8 7 0 (set (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [2 s+0 S4 A64])
        (reg/f:SI 121)) "pv.c":60:21 -1
     (nil))

;; ps_14 = int_off ();

(call_insn 9 8 10 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("int_off") [flags 0x41]  <function_decl 0x7fc2bd161900 int_off>) [0 int_off S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "pv.c":62:8 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))

(insn 10 9 0 (set (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 ps+0 S4 A32])
        (reg:SI 0 r0)) "pv.c":62:8 -1
     (nil))

;; _1 = s_12->queue;

(insn 11 10 12 (set (reg/f:SI 122)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [2 s+0 S4 A64])) "pv.c":71:15 -1
     (nil))

(insn 12 11 0 (set (reg/f:SI 113 [ _1 ])
        (mem/f:SI (plus:SI (reg/f:SI 122)
                (const_int 4 [0x4])) [4 s_12->queue+0 S4 A32])) "pv.c":71:15 -1
     (nil))

;; if (p_11(D) == _1)

(insn 13 12 14 (set (reg:SI 123)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [4 p+0 S4 A32])) "pv.c":71:8 -1
     (nil))

(insn 14 13 15 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 123)
            (reg/f:SI 113 [ _1 ]))) "pv.c":71:8 -1
     (nil))

(jump_insn 15 14 0 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "pv.c":71:8 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _2 = p_11(D)->next;

(insn 17 16 18 (set (reg/f:SI 124)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [4 p+0 S4 A32])) "pv.c":72:20 -1
     (nil))

(insn 18 17 0 (set (reg/f:SI 114 [ _2 ])
        (mem/f:SI (reg/f:SI 124) [4 p_11(D)->next+0 S4 A32])) "pv.c":72:20 -1
     (nil))

;; s_12->queue = _2;

(insn 19 18 20 (set (reg/f:SI 125)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [2 s+0 S4 A64])) "pv.c":72:17 -1
     (nil))

(insn 20 19 0 (set (mem/f:SI (plus:SI (reg/f:SI 125)
                (const_int 4 [0x4])) [4 s_12->queue+0 S4 A32])
        (reg/f:SI 114 [ _2 ])) "pv.c":72:17 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 23 22 24 10 (nil) [0 uses])

(note 24 23 0 NOTE_INSN_BASIC_BLOCK)

;; r_15 = s_12->queue;

(insn 25 24 26 (set (reg/f:SI 126)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [2 s+0 S4 A64])) "pv.c":75:9 -1
     (nil))

(insn 26 25 27 (set (reg/f:SI 127)
        (mem/f:SI (plus:SI (reg/f:SI 126)
                (const_int 4 [0x4])) [4 s_12->queue+0 S4 A32])) "pv.c":75:9 -1
     (nil))

(insn 27 26 0 (set (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [4 r+0 S4 A32])
        (reg/f:SI 127)) "pv.c":75:9 -1
     (nil))

;; q_16 = r_15->next;

(insn 28 27 29 (set (reg/f:SI 128)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [4 r+0 S4 A32])) "pv.c":76:9 -1
     (nil))

(insn 29 28 30 (set (reg/f:SI 129)
        (mem/f:SI (reg/f:SI 128) [4 r_15->next+0 S4 A32])) "pv.c":76:9 -1
     (nil))

(insn 30 29 0 (set (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [4 q+0 S4 A64])
        (reg/f:SI 129)) "pv.c":76:9 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; if (p_11(D) == q_7)

(insn 34 33 35 (set (reg:SI 130)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [4 p+0 S4 A32])) "pv.c":78:12 -1
     (nil))

(insn 35 34 36 (set (reg:SI 131)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [4 q+0 S4 A64])) "pv.c":78:12 -1
     (nil))

(insn 36 35 37 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 130)
            (reg:SI 131))) "pv.c":78:12 -1
     (nil))

(jump_insn 37 36 0 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "pv.c":78:12 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; _3 = q_7->next;

(insn 39 38 40 (set (reg/f:SI 132)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [4 q+0 S4 A64])) "pv.c":79:15 -1
     (nil))

(insn 40 39 0 (set (reg/f:SI 115 [ _3 ])
        (mem/f:SI (reg/f:SI 132) [4 q_7->next+0 S4 A32])) "pv.c":79:15 -1
     (nil))

;; r_8->next = _3;

(insn 41 40 42 (set (reg/f:SI 133)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [4 r+0 S4 A32])) "pv.c":79:12 -1
     (nil))

(insn 42 41 0 (set (mem/f:SI (reg/f:SI 133) [4 r_8->next+0 S4 A32])
        (reg/f:SI 115 [ _3 ])) "pv.c":79:12 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; 

(code_label 45 44 46 13 (nil) [0 uses])

(note 46 45 0 NOTE_INSN_BASIC_BLOCK)

;; r_17 = q_7;

(insn 47 46 48 (set (reg/f:SI 134)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [4 q+0 S4 A64])) "pv.c":82:11 -1
     (nil))

(insn 48 47 0 (set (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [4 r+0 S4 A32])
        (reg/f:SI 134)) "pv.c":82:11 -1
     (nil))

;; q_18 = q_7->next;

(insn 49 48 50 (set (reg/f:SI 135)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [4 q+0 S4 A64])) "pv.c":83:11 -1
     (nil))

(insn 50 49 51 (set (reg/f:SI 136)
        (mem/f:SI (reg/f:SI 135) [4 q_7->next+0 S4 A32])) "pv.c":83:11 -1
     (nil))

(insn 51 50 0 (set (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [4 q+0 S4 A64])
        (reg/f:SI 136)) "pv.c":83:11 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; 

(code_label 52 51 53 12 (nil) [0 uses])

(note 53 52 0 NOTE_INSN_BASIC_BLOCK)

;; if (q_7 != 0B)

(insn 55 53 56 (set (reg:SI 137)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [4 q+0 S4 A64])) "pv.c":77:13 -1
     (nil))

(insn 56 55 57 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 137)
            (const_int 0 [0]))) "pv.c":77:13 -1
     (nil))

(jump_insn 57 56 0 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 54)
            (pc))) "pv.c":77:13 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; 

(code_label 58 57 59 11 (nil) [0 uses])

(note 59 58 0 NOTE_INSN_BASIC_BLOCK)

;; _4 = s_12->value;

(insn 60 59 61 (set (reg/f:SI 138)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [2 s+0 S4 A64])) "pv.c":86:6 -1
     (nil))

(insn 61 60 0 (set (reg:SI 116 [ _4 ])
        (mem:SI (reg/f:SI 138) [1 s_12->value+0 S4 A32])) "pv.c":86:6 -1
     (nil))

;; _5 = _4 + 1;

(insn 62 61 0 (set (reg:SI 117 [ _5 ])
        (plus:SI (reg:SI 116 [ _4 ])
            (const_int 1 [0x1]))) "pv.c":86:13 -1
     (nil))

;; s_12->value = _5;

(insn 63 62 64 (set (reg/f:SI 139)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [2 s+0 S4 A64])) "pv.c":86:13 -1
     (nil))

(insn 64 63 0 (set (mem:SI (reg/f:SI 139) [1 s_12->value+0 S4 A32])
        (reg:SI 117 [ _5 ])) "pv.c":86:13 -1
     (nil))

;; p_11(D)->status = 1;

(insn 65 64 66 (set (reg/f:SI 140)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [4 p+0 S4 A32])) "pv.c":87:15 -1
     (nil))

(insn 66 65 67 (set (reg:SI 141)
        (const_int 1 [0x1])) "pv.c":87:15 -1
     (nil))

(insn 67 66 0 (set (mem:SI (plus:SI (reg/f:SI 140)
                (const_int 28 [0x1c])) [1 p_11(D)->status+0 S4 A32])
        (reg:SI 141)) "pv.c":87:15 -1
     (nil))

;; p_11(D)->sem = 0B;

(insn 68 67 69 (set (reg/f:SI 142)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [4 p+0 S4 A32])) "pv.c":87:31 -1
     (nil))

(insn 69 68 70 (set (reg:SI 143)
        (const_int 0 [0])) "pv.c":87:31 -1
     (nil))

(insn 70 69 0 (set (mem/f:SI (plus:SI (reg/f:SI 142)
                (const_int 88 [0x58])) [2 p_11(D)->sem+0 S4 A32])
        (reg:SI 143)) "pv.c":87:31 -1
     (nil))

;; enqueue (&readyQueue, p_11(D));

(insn 71 70 72 (set (reg:SI 1 r1)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [4 p+0 S4 A32])) "pv.c":88:5 -1
     (nil))

(insn 72 71 73 (set (reg:SI 0 r0)
        (symbol_ref:SI ("readyQueue") [flags 0x40]  <var_decl 0x7fc2bde4c6c0 readyQueue>)) "pv.c":88:5 -1
     (nil))

(call_insn 73 72 0 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("enqueue") [flags 0x41]  <function_decl 0x7fc2bd161000 enqueue>) [0 enqueue S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "pv.c":88:5 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))

;; _6 = p_11(D)->pid;

(insn 74 73 75 (set (reg/f:SI 144)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [4 p+0 S4 A32])) "pv.c":89:5 -1
     (nil))

(insn 75 74 0 (set (reg:SI 118 [ _6 ])
        (mem:SI (plus:SI (reg/f:SI 144)
                (const_int 24 [0x18])) [1 p_11(D)->pid+0 S4 A32])) "pv.c":89:5 -1
     (nil))

;; kprintf ("unblocked %d\n", _6);

(insn 76 75 77 (set (reg:SI 1 r1)
        (reg:SI 118 [ _6 ])) "pv.c":89:5 -1
     (nil))

(insn 77 76 78 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x7fc2bd168c60 *.LC0>)) "pv.c":89:5 -1
     (nil))

(call_insn 78 77 0 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kprintf") [flags 0x41]  <function_decl 0x7fc2bd16d500 kprintf>) [0 kprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "pv.c":89:5 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))

;; int_on (ps_14);

(insn 79 78 80 (set (reg:SI 0 r0)
        (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 ps+0 S4 A32])) "pv.c":90:3 -1
     (nil))

(call_insn 80 79 0 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("int_on") [flags 0x41]  <function_decl 0x7fc2bd161c00 int_on>) [0 int_on S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "pv.c":90:3 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 11 into block 10...
Merged blocks 10 and 11.
Merged 10 and 11 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [4 p+0 S4 A32])
        (reg:SI 0 r0 [ p ])) "pv.c":57:1 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:SI 120)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [4 p+0 S4 A32])) "pv.c":60:21 -1
     (nil))
(insn 7 6 8 2 (set (reg/f:SI 121)
        (mem/f:SI (plus:SI (reg/f:SI 120)
                (const_int 88 [0x58])) [2 p_11(D)->sem+0 S4 A32])) "pv.c":60:21 -1
     (nil))
(insn 8 7 9 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [2 s+0 S4 A64])
        (reg/f:SI 121)) "pv.c":60:21 -1
     (nil))
(call_insn 9 8 10 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("int_off") [flags 0x41]  <function_decl 0x7fc2bd161900 int_off>) [0 int_off S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "pv.c":62:8 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 10 9 11 2 (set (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 ps+0 S4 A32])
        (reg:SI 0 r0)) "pv.c":62:8 -1
     (nil))
(insn 11 10 12 2 (set (reg/f:SI 122)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [2 s+0 S4 A64])) "pv.c":71:15 -1
     (nil))
(insn 12 11 13 2 (set (reg/f:SI 113 [ _1 ])
        (mem/f:SI (plus:SI (reg/f:SI 122)
                (const_int 4 [0x4])) [4 s_12->queue+0 S4 A32])) "pv.c":71:15 -1
     (nil))
(insn 13 12 14 2 (set (reg:SI 123)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [4 p+0 S4 A32])) "pv.c":71:8 -1
     (nil))
(insn 14 13 15 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 123)
            (reg/f:SI 113 [ _1 ]))) "pv.c":71:8 -1
     (nil))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) "pv.c":71:8 -1
     (nil)
 -> 23)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (reg/f:SI 124)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [4 p+0 S4 A32])) "pv.c":72:20 -1
     (nil))
(insn 18 17 19 4 (set (reg/f:SI 114 [ _2 ])
        (mem/f:SI (reg/f:SI 124) [4 p_11(D)->next+0 S4 A32])) "pv.c":72:20 -1
     (nil))
(insn 19 18 20 4 (set (reg/f:SI 125)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [2 s+0 S4 A64])) "pv.c":72:17 -1
     (nil))
(insn 20 19 21 4 (set (mem/f:SI (plus:SI (reg/f:SI 125)
                (const_int 4 [0x4])) [4 s_12->queue+0 S4 A32])
        (reg/f:SI 114 [ _2 ])) "pv.c":72:17 -1
     (nil))
(jump_insn 21 20 22 4 (set (pc)
        (label_ref 58)) -1
     (nil)
 -> 58)
;;  succ:       10

(barrier 22 21 23)
;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
(code_label 23 22 24 5 10 (nil) [1 uses])
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 5 (set (reg/f:SI 126)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [2 s+0 S4 A64])) "pv.c":75:9 -1
     (nil))
(insn 26 25 27 5 (set (reg/f:SI 127)
        (mem/f:SI (plus:SI (reg/f:SI 126)
                (const_int 4 [0x4])) [4 s_12->queue+0 S4 A32])) "pv.c":75:9 -1
     (nil))
(insn 27 26 28 5 (set (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [4 r+0 S4 A32])
        (reg/f:SI 127)) "pv.c":75:9 -1
     (nil))
(insn 28 27 29 5 (set (reg/f:SI 128)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [4 r+0 S4 A32])) "pv.c":76:9 -1
     (nil))
(insn 29 28 30 5 (set (reg/f:SI 129)
        (mem/f:SI (reg/f:SI 128) [4 r_15->next+0 S4 A32])) "pv.c":76:9 -1
     (nil))
(insn 30 29 31 5 (set (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [4 q+0 S4 A64])
        (reg/f:SI 129)) "pv.c":76:9 -1
     (nil))
(jump_insn 31 30 32 5 (set (pc)
        (label_ref 52)) "pv.c":77:12 -1
     (nil)
 -> 52)
;;  succ:       9

(barrier 32 31 54)
;; basic block 6, loop depth 1, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       9
(code_label 54 32 33 6 14 (nil) [1 uses])
(note 33 54 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 6 (set (reg:SI 130)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [4 p+0 S4 A32])) "pv.c":78:12 -1
     (nil))
(insn 35 34 36 6 (set (reg:SI 131)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [4 q+0 S4 A64])) "pv.c":78:12 -1
     (nil))
(insn 36 35 37 6 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 130)
            (reg:SI 131))) "pv.c":78:12 -1
     (nil))
(jump_insn 37 36 38 6 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 45)
            (pc))) "pv.c":78:12 -1
     (nil)
 -> 45)
;;  succ:       7 (FALLTHRU)
;;              8

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 (FALLTHRU)
(note 38 37 39 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 7 (set (reg/f:SI 132)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [4 q+0 S4 A64])) "pv.c":79:15 -1
     (nil))
(insn 40 39 41 7 (set (reg/f:SI 115 [ _3 ])
        (mem/f:SI (reg/f:SI 132) [4 q_7->next+0 S4 A32])) "pv.c":79:15 -1
     (nil))
(insn 41 40 42 7 (set (reg/f:SI 133)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [4 r+0 S4 A32])) "pv.c":79:12 -1
     (nil))
(insn 42 41 43 7 (set (mem/f:SI (reg/f:SI 133) [4 r_8->next+0 S4 A32])
        (reg/f:SI 115 [ _3 ])) "pv.c":79:12 -1
     (nil))
(jump_insn 43 42 44 7 (set (pc)
        (label_ref 58)) "pv.c":80:11 -1
     (nil)
 -> 58)
;;  succ:       10

(barrier 44 43 45)
;; basic block 8, loop depth 1, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       6
(code_label 45 44 46 8 13 (nil) [1 uses])
(note 46 45 47 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 8 (set (reg/f:SI 134)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [4 q+0 S4 A64])) "pv.c":82:11 -1
     (nil))
(insn 48 47 49 8 (set (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [4 r+0 S4 A32])
        (reg/f:SI 134)) "pv.c":82:11 -1
     (nil))
(insn 49 48 50 8 (set (reg/f:SI 135)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [4 q+0 S4 A64])) "pv.c":83:11 -1
     (nil))
(insn 50 49 51 8 (set (reg/f:SI 136)
        (mem/f:SI (reg/f:SI 135) [4 q_7->next+0 S4 A32])) "pv.c":83:11 -1
     (nil))
(insn 51 50 52 8 (set (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [4 q+0 S4 A64])
        (reg/f:SI 136)) "pv.c":83:11 -1
     (nil))
;;  succ:       9 (FALLTHRU,DFS_BACK)

;; basic block 9, loop depth 1, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
;;              8 (FALLTHRU,DFS_BACK)
(code_label 52 51 53 9 12 (nil) [1 uses])
(note 53 52 55 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 55 53 56 9 (set (reg:SI 137)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [4 q+0 S4 A64])) "pv.c":77:13 -1
     (nil))
(insn 56 55 57 9 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 137)
            (const_int 0 [0]))) "pv.c":77:13 -1
     (nil))
(jump_insn 57 56 58 9 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 54)
            (pc))) "pv.c":77:13 -1
     (nil)
 -> 54)
;;  succ:       6
;;              10 (FALLTHRU)

;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;;              7
;;              9 (FALLTHRU)
(code_label 58 57 59 10 11 (nil) [2 uses])
(note 59 58 60 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 10 (set (reg/f:SI 138)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [2 s+0 S4 A64])) "pv.c":86:6 -1
     (nil))
(insn 61 60 62 10 (set (reg:SI 116 [ _4 ])
        (mem:SI (reg/f:SI 138) [1 s_12->value+0 S4 A32])) "pv.c":86:6 -1
     (nil))
(insn 62 61 63 10 (set (reg:SI 117 [ _5 ])
        (plus:SI (reg:SI 116 [ _4 ])
            (const_int 1 [0x1]))) "pv.c":86:13 -1
     (nil))
(insn 63 62 64 10 (set (reg/f:SI 139)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [2 s+0 S4 A64])) "pv.c":86:13 -1
     (nil))
(insn 64 63 65 10 (set (mem:SI (reg/f:SI 139) [1 s_12->value+0 S4 A32])
        (reg:SI 117 [ _5 ])) "pv.c":86:13 -1
     (nil))
(insn 65 64 66 10 (set (reg/f:SI 140)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [4 p+0 S4 A32])) "pv.c":87:15 -1
     (nil))
(insn 66 65 67 10 (set (reg:SI 141)
        (const_int 1 [0x1])) "pv.c":87:15 -1
     (nil))
(insn 67 66 68 10 (set (mem:SI (plus:SI (reg/f:SI 140)
                (const_int 28 [0x1c])) [1 p_11(D)->status+0 S4 A32])
        (reg:SI 141)) "pv.c":87:15 -1
     (nil))
(insn 68 67 69 10 (set (reg/f:SI 142)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [4 p+0 S4 A32])) "pv.c":87:31 -1
     (nil))
(insn 69 68 70 10 (set (reg:SI 143)
        (const_int 0 [0])) "pv.c":87:31 -1
     (nil))
(insn 70 69 71 10 (set (mem/f:SI (plus:SI (reg/f:SI 142)
                (const_int 88 [0x58])) [2 p_11(D)->sem+0 S4 A32])
        (reg:SI 143)) "pv.c":87:31 -1
     (nil))
(insn 71 70 72 10 (set (reg:SI 1 r1)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [4 p+0 S4 A32])) "pv.c":88:5 -1
     (nil))
(insn 72 71 73 10 (set (reg:SI 0 r0)
        (symbol_ref:SI ("readyQueue") [flags 0x40]  <var_decl 0x7fc2bde4c6c0 readyQueue>)) "pv.c":88:5 -1
     (nil))
(call_insn 73 72 74 10 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("enqueue") [flags 0x41]  <function_decl 0x7fc2bd161000 enqueue>) [0 enqueue S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "pv.c":88:5 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 74 73 75 10 (set (reg/f:SI 144)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [4 p+0 S4 A32])) "pv.c":89:5 -1
     (nil))
(insn 75 74 76 10 (set (reg:SI 118 [ _6 ])
        (mem:SI (plus:SI (reg/f:SI 144)
                (const_int 24 [0x18])) [1 p_11(D)->pid+0 S4 A32])) "pv.c":89:5 -1
     (nil))
(insn 76 75 77 10 (set (reg:SI 1 r1)
        (reg:SI 118 [ _6 ])) "pv.c":89:5 -1
     (nil))
(insn 77 76 78 10 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x7fc2bd168c60 *.LC0>)) "pv.c":89:5 -1
     (nil))
(call_insn 78 77 79 10 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kprintf") [flags 0x41]  <function_decl 0x7fc2bd16d500 kprintf>) [0 kprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "pv.c":89:5 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 79 78 80 10 (set (reg:SI 0 r0)
        (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 ps+0 S4 A32])) "pv.c":90:3 -1
     (nil))
(call_insn 80 79 83 10 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("int_on") [flags 0x41]  <function_decl 0x7fc2bd161c00 int_on>) [0 int_on S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "pv.c":90:3 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 83 80 84 10 (clobber (reg/i:SI 0 r0)) "pv.c":91:1 -1
     (nil))
(insn 84 83 87 10 (clobber (reg:SI 119 [ <retval> ])) "pv.c":91:1 -1
     (nil))
(insn 87 84 82 10 (const_int 0 [0]) "pv.c":91:1 -1
     (nil))
(insn 82 87 85 10 (set (reg/i:SI 0 r0)
        (reg:SI 119 [ <retval> ])) "pv.c":91:1 -1
     (nil))
(insn 85 82 0 10 (use (reg/i:SI 0 r0)) "pv.c":91:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)

