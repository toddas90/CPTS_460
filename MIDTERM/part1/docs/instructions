                CS460 Takehome Midterm Exam
                    
                     DUE: 2-18-2022
                       DEMO to TA 
             Turn in a ZIP file of your code

1. READ Process Management PDF
		
   Processes begins from P0, which kfork a P1, switch to run P1, which may
   kfork other procs. The processes form a family tree, which looks like this:
		
		P0
		|
		P1   (never let P1 exit)
		|
     ------------------------
         P2     P3    P4		
                |
	     --------
	     P5   P6

BASE CODE: samples/MIDTERM/midterm1.tgz
           It supports kfork, switch, (simple) exit

(1). Modify kfork() to implement process family tree as a BINARY tree by using
     the child, sibling, parent pointers.
     When a process runs, show its pid, ppid and child list.

(2). Implement ksleep()/kwakeup() as in Chapter 5.6.1

(3). Modify kexit(int exitCode) as in Section 2 of the PDF file
		
(3). Implement pid = kwait(int *status) as in Section 4 of the PDF file

For testing: ADD a wait command for ANY process to wait for a ZOMBIE child.

